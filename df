[1mdiff --git a/Makefile b/Makefile[m
[1mindex 732e32f..d1e9917 100644[m
[1m--- a/Makefile[m
[1m+++ b/Makefile[m
[36m@@ -29,6 +29,7 @@[m [mOBJS = \[m
 	vectors.o\[m
 	vm.o\[m
 [m
[32m+[m
 # Cross-compiling (e.g., on Mac OS X)[m
 # TOOLPREFIX = i386-jos-elf[m
 [m
[36m@@ -173,8 +174,12 @@[m [mUPROGS=\[m
 	_usertests\[m
 	_wc\[m
 	_zombie\[m
[32m+[m	[32m_set\[m
[32m+[m	[32m_tee\[m
[32m+[m	[32m_T3\[m
 	_my_test\[m
 [m
[32m+[m
 fs.img: mkfs README $(UPROGS)[m
 	./mkfs fs.img README $(UPROGS)[m
 [m
[36m@@ -245,8 +250,12 @@[m [mEXTRA=\[m
 	ln.c ls.c mkdir.c rm.c stressfs.c usertests.c wc.c zombie.c\[m
 	_my_test.c\[m
 	printf.c umalloc.c\[m
[32m+[m	[32mset.c\[m
[32m+[m[32m        tee.c\[m
[32m+[m	[32mT3.c\[m
 	README dot-bochsrc *.pl toc.* runoff runoff1 runoff.list\[m
 	.gdbinit.tmpl gdbutil\[m
[32m+[m[41m	[m
 [m
 dist:[m
 	rm -rf dist[m
[1mdiff --git a/T3.asm b/T3.asm[m
[1mnew file mode 100644[m
[1mindex 0000000..521dcb4[m
[1m--- /dev/null[m
[1m+++ b/T3.asm[m
[36m@@ -0,0 +1,2760 @@[m
[32m+[m
[32m+[m[32m_T3:     file format elf32-i386[m
[32m+[m
[32m+[m
[32m+[m[32mDisassembly of section .text:[m
[32m+[m
[32m+[m[32m00000000 <main>:[m
[32m+[m
[32m+[m
[32m+[m[32m//producer process:[m
[32m+[m[32mint[m
[32m+[m[32mmain(int argc, char *argv[])[m
[32m+[m[32m{[m
[32m+[m[32m   0:	8d 4c 24 04          	lea    0x4(%esp),%ecx[m
[32m+[m[32m   4:	83 e4 f0             	and    $0xfffffff0,%esp[m
[32m+[m[32m   7:	ff 71 fc             	pushl  -0x4(%ecx)[m
[32m+[m[32m   a:	55                   	push   %ebp[m
[32m+[m[32m   b:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m   d:	57                   	push   %edi[m
[32m+[m[32m   e:	56                   	push   %esi[m
[32m+[m[32m   f:	53                   	push   %ebx[m
[32m+[m[32m  10:	51                   	push   %ecx[m
[32m+[m[32m  11:	83 ec 28             	sub    $0x28,%esp[m
[32m+[m[32m  14:	8b 41 04             	mov    0x4(%ecx),%eax[m
[32m+[m[32m char* fileName=argv[1];[m
[32m+[m[32m //printf(1,"numToAdd %s\n", argv[2]);[m
[32m+[m[32m int numToAdd=ourAtoi(argv[2]);[m
[32m+[m[32m  17:	8b 50 08             	mov    0x8(%eax),%edx[m
[32m+[m
[32m+[m[32m//producer process:[m
[32m+[m[32mint[m
[32m+[m[32mmain(int argc, char *argv[])[m
[32m+[m[32m{[m
[32m+[m[32m char* fileName=argv[1];[m
[32m+[m[32m  1a:	8b 70 04             	mov    0x4(%eax),%esi[m
[32m+[m[32m    int res = 0;  // Initialize result[m
[32m+[m[32m    int sign = 1;  // Initialize sign as positive[m
[32m+[m[32m    int i = 0;  // Initialize index of first digit[m
[32m+[m[41m      [m
[32m+[m[32m    // If number is negative, then update sign[m
[32m+[m[32m    if (str[0] == '-')[m
[32m+[m[32m  1d:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m  1f:	80 3a 2d             	cmpb   $0x2d,(%edx)[m
[32m+[m[32m  22:	0f 94 c0             	sete   %al[m
[32m+[m[32m  25:	0f 95 c3             	setne  %bl[m
[32m+[m[32m  28:	89 c1                	mov    %eax,%ecx[m
[32m+[m[32m        sign = -1;[m[41m  [m
[32m+[m[32m        i++;  // Also update index of first digit[m
[32m+[m[32m    }[m
[32m+[m[41m      [m
[32m+[m[32m    // Iterate through all digits and update the result[m
[32m+[m[32m    for (; str[i] != '\0'; ++i)[m
[32m+[m[32m  2a:	0f be 04 02          	movsbl (%edx,%eax,1),%eax[m
[32m+[m[32m    int res = 0;  // Initialize result[m
[32m+[m[32m    int sign = 1;  // Initialize sign as positive[m
[32m+[m[32m    int i = 0;  // Initialize index of first digit[m
[32m+[m[41m      [m
[32m+[m[32m    // If number is negative, then update sign[m
[32m+[m[32m    if (str[0] == '-')[m
[32m+[m[32m  2e:	0f b6 db             	movzbl %bl,%ebx[m
[32m+[m[32m  31:	8d 5c 1b ff          	lea    -0x1(%ebx,%ebx,1),%ebx[m
[32m+[m[32m        sign = -1;[m[41m  [m
[32m+[m[32m        i++;  // Also update index of first digit[m
[32m+[m[32m    }[m
[32m+[m[41m      [m
[32m+[m[32m    // Iterate through all digits and update the result[m
[32m+[m[32m    for (; str[i] != '\0'; ++i)[m
[32m+[m[32m  35:	84 c0                	test   %al,%al[m
[32m+[m[32m  37:	0f 84 ee 00 00 00    	je     12b <main+0x12b>[m
[32m+[m[32m  3d:	01 d1                	add    %edx,%ecx[m
[32m+[m[32m  3f:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m  41:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m        res = res*10 + str[i] - '0';[m
[32m+[m[32m  48:	8d 14 92             	lea    (%edx,%edx,4),%edx[m
[32m+[m[32m  4b:	83 c1 01             	add    $0x1,%ecx[m
[32m+[m[32m  4e:	8d 54 50 d0          	lea    -0x30(%eax,%edx,2),%edx[m
[32m+[m[32m        sign = -1;[m[41m  [m
[32m+[m[32m        i++;  // Also update index of first digit[m
[32m+[m[32m    }[m
[32m+[m[41m      [m
[32m+[m[32m    // Iterate through all digits and update the result[m
[32m+[m[32m    for (; str[i] != '\0'; ++i)[m
[32m+[m[32m  52:	0f be 01             	movsbl (%ecx),%eax[m
[32m+[m[32m  55:	84 c0                	test   %al,%al[m
[32m+[m[32m  57:	75 ef                	jne    48 <main+0x48>[m
[32m+[m[32m int numToAdd=ourAtoi(argv[2]);[m
[32m+[m[32m char copyResToOrgFile='\0';//[15];[m[41m	[m
[32m+[m
[32m+[m
[32m+[m[32m //printf(0," open file= %s\n", fileName);[m
[32m+[m[32m int textFileDesc = open (fileName, O_RDWR);[m
[32m+[m[32m  59:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32mmain(int argc, char *argv[])[m
[32m+[m[32m{[m
[32m+[m[32m char* fileName=argv[1];[m
[32m+[m[32m //printf(1,"numToAdd %s\n", argv[2]);[m
[32m+[m[32m int numToAdd=ourAtoi(argv[2]);[m
[32m+[m[32m char copyResToOrgFile='\0';//[15];[m[41m	[m
[32m+[m[32m  5c:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)[m
[32m+[m
[32m+[m
[32m+[m[32m //printf(0," open file= %s\n", fileName);[m
[32m+[m[32m int textFileDesc = open (fileName, O_RDWR);[m
[32m+[m[32m  60:	6a 02                	push   $0x2[m
[32m+[m[32m  62:	56                   	push   %esi[m
[32m+[m[32m    // Iterate through all digits and update the result[m
[32m+[m[32m    for (; str[i] != '\0'; ++i)[m
[32m+[m[32m        res = res*10 + str[i] - '0';[m
[32m+[m[41m    [m
[32m+[m[32m    // Return result with sign[m
[32m+[m[32m    return sign*res;[m
[32m+[m[32m  63:	0f af da             	imul   %edx,%ebx[m
[32m+[m[32m int numToAdd=ourAtoi(argv[2]);[m
[32m+[m[32m char copyResToOrgFile='\0';//[15];[m[41m	[m
[32m+[m
[32m+[m
[32m+[m[32m //printf(0," open file= %s\n", fileName);[m
[32m+[m[32m int textFileDesc = open (fileName, O_RDWR);[m
[32m+[m[32m  66:	e8 57 08 00 00       	call   8c2 <open>[m
[32m+[m[32m  6b:	89 c7                	mov    %eax,%edi[m
[32m+[m[32m //temp file to write to the result + non-number chars[m[41m      [m
[32m+[m[32m int tempF = open ("tempFile",O_CREATE | O_RDWR);[m[41m  [m
[32m+[m[32m  6d:	58                   	pop    %eax[m
[32m+[m[32m  6e:	5a                   	pop    %edx[m
[32m+[m[32m  6f:	68 02 02 00 00       	push   $0x202[m
[32m+[m[32m  74:	68 f0 0c 00 00       	push   $0xcf0[m
[32m+[m[32m  79:	e8 44 08 00 00       	call   8c2 <open>[m
[32m+[m
[32m+[m[32m Task3Action(numToAdd,textFileDesc,tempF);[m
[32m+[m[32m  7e:	83 c4 0c             	add    $0xc,%esp[m
[32m+[m[32m  81:	89 45 d4             	mov    %eax,-0x2c(%ebp)[m
[32m+[m[32m  84:	50                   	push   %eax[m
[32m+[m[32m  85:	57                   	push   %edi[m
[32m+[m[32m  86:	53                   	push   %ebx[m
[32m+[m[32m  87:	e8 64 03 00 00       	call   3f0 <Task3Action>[m
[32m+[m[32m printf(1,"modifing the given %s file...\n",fileName);[m
[32m+[m[32m  8c:	83 c4 0c             	add    $0xc,%esp[m
[32m+[m[32m  8f:	56                   	push   %esi[m
[32m+[m[32m  90:	68 fc 0c 00 00       	push   $0xcfc[m
[32m+[m[32m  95:	6a 01                	push   $0x1[m
[32m+[m[32m  97:	e8 34 09 00 00       	call   9d0 <printf>[m
[32m+[m
[32m+[m[32m close(textFileDesc);[m
[32m+[m[32m  9c:	89 3c 24             	mov    %edi,(%esp)[m
[32m+[m[32m  9f:	e8 06 08 00 00       	call   8aa <close>[m
[32m+[m[32m textFileDesc = open (fileName,O_CREATE | O_RDWR);[m[41m  [m
[32m+[m[32m  a4:	59                   	pop    %ecx[m
[32m+[m[32m  a5:	5b                   	pop    %ebx[m
[32m+[m[32m  a6:	68 02 02 00 00       	push   $0x202[m
[32m+[m[32m  ab:	56                   	push   %esi[m
[32m+[m[32m  ac:	8d 5d e7             	lea    -0x19(%ebp),%ebx[m
[32m+[m[32m  af:	e8 0e 08 00 00       	call   8c2 <open>[m
[32m+[m[32m close(tempF);[m
[32m+[m[32m  b4:	8b 55 d4             	mov    -0x2c(%ebp),%edx[m
[32m+[m
[32m+[m[32m Task3Action(numToAdd,textFileDesc,tempF);[m
[32m+[m[32m printf(1,"modifing the given %s file...\n",fileName);[m
[32m+[m
[32m+[m[32m close(textFileDesc);[m
[32m+[m[32m textFileDesc = open (fileName,O_CREATE | O_RDWR);[m[41m  [m
[32m+[m[32m  b7:	89 c7                	mov    %eax,%edi[m
[32m+[m[32m close(tempF);[m
[32m+[m[32m  b9:	89 14 24             	mov    %edx,(%esp)[m
[32m+[m[32m  bc:	e8 e9 07 00 00       	call   8aa <close>[m
[32m+[m[32m tempF = open ("tempFile",O_CREATE | O_RDWR);[m[41m  [m
[32m+[m[32m  c1:	5e                   	pop    %esi[m
[32m+[m[32m  c2:	58                   	pop    %eax[m
[32m+[m[32m  c3:	68 02 02 00 00       	push   $0x202[m
[32m+[m[32m  c8:	68 f0 0c 00 00       	push   $0xcf0[m
[32m+[m[32m  cd:	e8 f0 07 00 00       	call   8c2 <open>[m
[32m+[m
[32m+[m
[32m+[m[32m  while ((read(tempF, &copyResToOrgFile, 1)) != 0){[m
[32m+[m[32m  d2:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m printf(1,"modifing the given %s file...\n",fileName);[m
[32m+[m
[32m+[m[32m close(textFileDesc);[m
[32m+[m[32m textFileDesc = open (fileName,O_CREATE | O_RDWR);[m[41m  [m
[32m+[m[32m close(tempF);[m
[32m+[m[32m tempF = open ("tempFile",O_CREATE | O_RDWR);[m[41m  [m
[32m+[m[32m  d5:	89 c6                	mov    %eax,%esi[m
[32m+[m
[32m+[m
[32m+[m[32m  while ((read(tempF, &copyResToOrgFile, 1)) != 0){[m
[32m+[m[32m  d7:	eb 16                	jmp    ef <main+0xef>[m
[32m+[m[32m  d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m     write(textFileDesc, &copyResToOrgFile, 1);[m
[32m+[m[32m  e0:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m  e3:	6a 01                	push   $0x1[m
[32m+[m[32m  e5:	53                   	push   %ebx[m
[32m+[m[32m  e6:	57                   	push   %edi[m
[32m+[m[32m  e7:	e8 b6 07 00 00       	call   8a2 <write>[m
[32m+[m[32m  ec:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m textFileDesc = open (fileName,O_CREATE | O_RDWR);[m[41m  [m
[32m+[m[32m close(tempF);[m
[32m+[m[32m tempF = open ("tempFile",O_CREATE | O_RDWR);[m[41m  [m
[32m+[m
[32m+[m
[32m+[m[32m  while ((read(tempF, &copyResToOrgFile, 1)) != 0){[m
[32m+[m[32m  ef:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m  f2:	6a 01                	push   $0x1[m
[32m+[m[32m  f4:	53                   	push   %ebx[m
[32m+[m[32m  f5:	56                   	push   %esi[m
[32m+[m[32m  f6:	e8 9f 07 00 00       	call   89a <read>[m
[32m+[m[32m  fb:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m  fe:	85 c0                	test   %eax,%eax[m
[32m+[m[32m 100:	75 de                	jne    e0 <main+0xe0>[m
[32m+[m[32m     write(textFileDesc, &copyResToOrgFile, 1);[m
[32m+[m[32m  }[m[41m	[m
[32m+[m
[32m+[m[32munlink("tempFile");  //deleting the temp file after copping it to the ogiven file[m
[32m+[m[32m 102:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m 105:	68 f0 0c 00 00       	push   $0xcf0[m
[32m+[m[32m 10a:	e8 c3 07 00 00       	call   8d2 <unlink>[m
[32m+[m
[32m+[m[32mclose(tempF);[m
[32m+[m[32m 10f:	89 34 24             	mov    %esi,(%esp)[m
[32m+[m[32m 112:	e8 93 07 00 00       	call   8aa <close>[m
[32m+[m[32mclose(textFileDesc);[m
[32m+[m[32m 117:	89 3c 24             	mov    %edi,(%esp)[m
[32m+[m[32m 11a:	e8 8b 07 00 00       	call   8aa <close>[m
[32m+[m[32m exit(0);[m
[32m+[m[32m 11f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)[m
[32m+[m[32m 126:	e8 57 07 00 00       	call   882 <exit>[m
[32m+[m[32m        sign = -1;[m[41m  [m
[32m+[m[32m        i++;  // Also update index of first digit[m
[32m+[m[32m    }[m
[32m+[m[41m      [m
[32m+[m[32m    // Iterate through all digits and update the result[m
[32m+[m[32m    for (; str[i] != '\0'; ++i)[m
[32m+[m[32m 12b:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m 12d:	e9 27 ff ff ff       	jmp    59 <main+0x59>[m
[32m+[m[32m 132:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 134:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 136:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 138:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 13a:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 13c:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 13e:	66 90                	xchg   %ax,%ax[m
[32m+[m
[32m+[m[32m00000140 <itoa.part.0>:[m
[32m+[m[32m    ArratToClean[i]='\0';[m
[32m+[m[32m }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Implementation of itoa() - convert int to String[m[41m [m
[32m+[m[32mchar* itoa(int num, char* str, int base)[m
[32m+[m[32m 140:	55                   	push   %ebp[m
[32m+[m[32m 141:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 143:	57                   	push   %edi[m
[32m+[m[32m 144:	56                   	push   %esi[m
[32m+[m[32m 145:	53                   	push   %ebx[m
[32m+[m[32m 146:	89 d3                	mov    %edx,%ebx[m
[32m+[m[32m        return str;[m
[32m+[m[32m    }[m
[32m+[m[41m [m
[32m+[m[32m    // In standard itoa(), negative numbers are handled only with[m[41m [m
[32m+[m[32m    // base 10. Otherwise numbers are considered unsigned.[m
[32m+[m[32m    if (num < 0 && base == 10)[m
[32m+[m[32m 148:	89 c2                	mov    %eax,%edx[m
[32m+[m[32m 14a:	c1 ea 1f             	shr    $0x1f,%edx[m
[32m+[m[32m    ArratToClean[i]='\0';[m
[32m+[m[32m }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Implementation of itoa() - convert int to String[m[41m [m
[32m+[m[32mchar* itoa(int num, char* str, int base)[m
[32m+[m[32m 14d:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m        return str;[m
[32m+[m[32m    }[m
[32m+[m[41m [m
[32m+[m[32m    // In standard itoa(), negative numbers are handled only with[m[41m [m
[32m+[m[32m    // base 10. Otherwise numbers are considered unsigned.[m
[32m+[m[32m    if (num < 0 && base == 10)[m
[32m+[m[32m 150:	84 d2                	test   %dl,%dl[m
[32m+[m[32m    ArratToClean[i]='\0';[m
[32m+[m[32m }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Implementation of itoa() - convert int to String[m[41m [m
[32m+[m[32mchar* itoa(int num, char* str, int base)[m
[32m+[m[32m 152:	89 4d ec             	mov    %ecx,-0x14(%ebp)[m
[32m+[m[32m        return str;[m
[32m+[m[32m    }[m
[32m+[m[41m [m
[32m+[m[32m    // In standard itoa(), negative numbers are handled only with[m[41m [m
[32m+[m[32m    // base 10. Otherwise numbers are considered unsigned.[m
[32m+[m[32m    if (num < 0 && base == 10)[m
[32m+[m[32m 155:	0f 84 8d 00 00 00    	je     1e8 <itoa.part.0+0xa8>[m
[32m+[m[32m 15b:	83 f9 0a             	cmp    $0xa,%ecx[m
[32m+[m[32m 15e:	0f 85 84 00 00 00    	jne    1e8 <itoa.part.0+0xa8>[m
[32m+[m[32m    {[m
[32m+[m[32m        isNegative = 1; //true[m
[32m+[m[32m        num = -num;[m
[32m+[m[32m 164:	f7 d8                	neg    %eax[m
[32m+[m[41m [m
[32m+[m[32m    // In standard itoa(), negative numbers are handled only with[m[41m [m
[32m+[m[32m    // base 10. Otherwise numbers are considered unsigned.[m
[32m+[m[32m    if (num < 0 && base == 10)[m
[32m+[m[32m    {[m
[32m+[m[32m        isNegative = 1; //true[m
[32m+[m[32m 166:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)[m
[32m+[m
[32m+[m[32m// Implementation of itoa() - convert int to String[m[41m [m
[32m+[m[32mchar* itoa(int num, char* str, int base)[m
[32m+[m[32m{[m
[32m+[m[32m    int i = 0;[m
[32m+[m[32m    int isNegative = 0;  //false[m
[32m+[m[32m 16d:	31 ff                	xor    %edi,%edi[m
[32m+[m[32m 16f:	89 5d f0             	mov    %ebx,-0x10(%ebp)[m
[32m+[m[32m 172:	89 fb                	mov    %edi,%ebx[m
[32m+[m[32m 174:	eb 0c                	jmp    182 <itoa.part.0+0x42>[m
[32m+[m[32m 176:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m 179:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[41m [m
[32m+[m[32m    // Process individual digits[m
[32m+[m[32m    while (num != 0)[m
[32m+[m[32m    {[m
[32m+[m[32m        int rem = num % base;[m
[32m+[m[32m        str[i++] = (rem > 9)? (rem-10) + 'a' : rem + '0';[m
[32m+[m[32m 180:	89 fb                	mov    %edi,%ebx[m
[32m+[m[32m    }[m
[32m+[m[41m [m
[32m+[m[32m    // Process individual digits[m
[32m+[m[32m    while (num != 0)[m
[32m+[m[32m    {[m
[32m+[m[32m        int rem = num % base;[m
[32m+[m[32m 182:	99                   	cltd[m[41m   [m
[32m+[m[32m        str[i++] = (rem > 9)? (rem-10) + 'a' : rem + '0';[m
[32m+[m[32m 183:	8d 7b 01             	lea    0x1(%ebx),%edi[m
[32m+[m[32m    }[m
[32m+[m[41m [m
[32m+[m[32m    // Process individual digits[m
[32m+[m[32m    while (num != 0)[m
[32m+[m[32m    {[m
[32m+[m[32m        int rem = num % base;[m
[32m+[m[32m 186:	f7 7d ec             	idivl  -0x14(%ebp)[m
[32m+[m[32m        str[i++] = (rem > 9)? (rem-10) + 'a' : rem + '0';[m
[32m+[m[32m 189:	8d 72 57             	lea    0x57(%edx),%esi[m
[32m+[m[32m 18c:	8d 4a 30             	lea    0x30(%edx),%ecx[m
[32m+[m[32m 18f:	83 fa 0a             	cmp    $0xa,%edx[m
[32m+[m[32m 192:	0f 4d ce             	cmovge %esi,%ecx[m
[32m+[m[32m 195:	8b 75 f0             	mov    -0x10(%ebp),%esi[m
[32m+[m[32m        isNegative = 1; //true[m
[32m+[m[32m        num = -num;[m
[32m+[m[32m    }[m
[32m+[m[41m [m
[32m+[m[32m    // Process individual digits[m
[32m+[m[32m    while (num != 0)[m
[32m+[m[32m 198:	85 c0                	test   %eax,%eax[m
[32m+[m[32m    {[m
[32m+[m[32m        int rem = num % base;[m
[32m+[m[32m        str[i++] = (rem > 9)? (rem-10) + 'a' : rem + '0';[m
[32m+[m[32m 19a:	88 4c 3e ff          	mov    %cl,-0x1(%esi,%edi,1)[m
[32m+[m[32m        isNegative = 1; //true[m
[32m+[m[32m        num = -num;[m
[32m+[m[32m    }[m
[32m+[m[41m [m
[32m+[m[32m    // Process individual digits[m
[32m+[m[32m    while (num != 0)[m
[32m+[m[32m 19e:	75 e0                	jne    180 <itoa.part.0+0x40>[m
[32m+[m[32m        str[i++] = (rem > 9)? (rem-10) + 'a' : rem + '0';[m
[32m+[m[32m        num = num/base;[m
[32m+[m[32m    }[m
[32m+[m[41m [m
[32m+[m[32m    // If number is negative, append '-'[m
[32m+[m[32m    if (isNegative)[m
[32m+[m[32m 1a0:	8b 55 e8             	mov    -0x18(%ebp),%edx[m
[32m+[m[32m 1a3:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m 1a5:	89 f3                	mov    %esi,%ebx[m
[32m+[m[32m 1a7:	85 d2                	test   %edx,%edx[m
[32m+[m[32m 1a9:	74 55                	je     200 <itoa.part.0+0xc0>[m
[32m+[m[32m 1ab:	89 c2                	mov    %eax,%edx[m
[32m+[m[32m        str[i++] = '-';[m
[32m+[m[32m 1ad:	c6 04 3e 2d          	movb   $0x2d,(%esi,%edi,1)[m
[32m+[m[32m 1b1:	89 f8                	mov    %edi,%eax[m
[32m+[m[32m 1b3:	83 c2 02             	add    $0x2,%edx[m
[32m+[m[41m [m
[32m+[m[32m    str[i] = '\0'; // Append string terminator[m
[32m+[m[32m 1b6:	c6 04 13 00          	movb   $0x0,(%ebx,%edx,1)[m
[32m+[m[32m//revers string[m[41m [m
[32m+[m[32mvoid my_reverse(char str[], int len)[m
[32m+[m[32m{[m
[32m+[m[32m    int start, end;[m
[32m+[m[32m    char temp;[m
[32m+[m[32m    for(start=0, end=len-1; start < end; start++, end--) {[m
[32m+[m[32m 1ba:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m 1bc:	85 c0                	test   %eax,%eax[m
[32m+[m[32m 1be:	74 1a                	je     1da <itoa.part.0+0x9a>[m
[32m+[m[32m        temp = *(str+start);[m
[32m+[m[32m 1c0:	0f b6 3c 13          	movzbl (%ebx,%edx,1),%edi[m
[32m+[m[32m        *(str+start) = *(str+end);[m
[32m+[m[32m 1c4:	0f b6 0c 03          	movzbl (%ebx,%eax,1),%ecx[m
[32m+[m[32m 1c8:	88 0c 13             	mov    %cl,(%ebx,%edx,1)[m
[32m+[m[32m        *(str+end) = temp;[m
[32m+[m[32m 1cb:	89 f9                	mov    %edi,%ecx[m
[32m+[m[32m//revers string[m[41m [m
[32m+[m[32mvoid my_reverse(char str[], int len)[m
[32m+[m[32m{[m
[32m+[m[32m    int start, end;[m
[32m+[m[32m    char temp;[m
[32m+[m[32m    for(start=0, end=len-1; start < end; start++, end--) {[m
[32m+[m[32m 1cd:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m        temp = *(str+start);[m
[32m+[m[32m        *(str+start) = *(str+end);[m
[32m+[m[32m        *(str+end) = temp;[m
[32m+[m[32m 1d0:	88 0c 03             	mov    %cl,(%ebx,%eax,1)[m
[32m+[m[32m//revers string[m[41m [m
[32m+[m[32mvoid my_reverse(char str[], int len)[m
[32m+[m[32m{[m
[32m+[m[32m    int start, end;[m
[32m+[m[32m    char temp;[m
[32m+[m[32m    for(start=0, end=len-1; start < end; start++, end--) {[m
[32m+[m[32m 1d3:	83 e8 01             	sub    $0x1,%eax[m
[32m+[m[32m 1d6:	39 c2                	cmp    %eax,%edx[m
[32m+[m[32m 1d8:	7c e6                	jl     1c0 <itoa.part.0+0x80>[m
[32m+[m[41m [m
[32m+[m[32m    // Reverse the string[m
[32m+[m[32m    my_reverse(str, i);[m
[32m+[m[41m [m
[32m+[m[32m    return str;[m
[32m+[m[32m}[m
[32m+[m[32m 1da:	83 c4 0c             	add    $0xc,%esp[m
[32m+[m[32m 1dd:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m 1df:	5b                   	pop    %ebx[m
[32m+[m[32m 1e0:	5e                   	pop    %esi[m
[32m+[m[32m 1e1:	5f                   	pop    %edi[m
[32m+[m[32m 1e2:	5d                   	pop    %ebp[m
[32m+[m[32m 1e3:	c3                   	ret[m[41m    [m
[32m+[m[32m 1e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m        isNegative = 1; //true[m
[32m+[m[32m        num = -num;[m
[32m+[m[32m    }[m
[32m+[m[41m [m
[32m+[m[32m    // Process individual digits[m
[32m+[m[32m    while (num != 0)[m
[32m+[m[32m 1e8:	85 c0                	test   %eax,%eax[m
[32m+[m
[32m+[m[32m// Implementation of itoa() - convert int to String[m[41m [m
[32m+[m[32mchar* itoa(int num, char* str, int base)[m
[32m+[m[32m{[m
[32m+[m[32m    int i = 0;[m
[32m+[m[32m    int isNegative = 0;  //false[m
[32m+[m[32m 1ea:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)[m
[32m+[m[32m        isNegative = 1; //true[m
[32m+[m[32m        num = -num;[m
[32m+[m[32m    }[m
[32m+[m[41m [m
[32m+[m[32m    // Process individual digits[m
[32m+[m[32m    while (num != 0)[m
[32m+[m[32m 1f1:	0f 85 76 ff ff ff    	jne    16d <itoa.part.0+0x2d>[m
[32m+[m[41m [m
[32m+[m[32m    // If number is negative, append '-'[m
[32m+[m[32m    if (isNegative)[m
[32m+[m[32m        str[i++] = '-';[m
[32m+[m[41m [m
[32m+[m[32m    str[i] = '\0'; // Append string terminator[m
[32m+[m[32m 1f7:	c6 03 00             	movb   $0x0,(%ebx)[m
[32m+[m[32m 1fa:	eb de                	jmp    1da <itoa.part.0+0x9a>[m
[32m+[m[32m 1fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m        str[i++] = (rem > 9)? (rem-10) + 'a' : rem + '0';[m
[32m+[m[32m        num = num/base;[m
[32m+[m[32m    }[m
[32m+[m[41m [m
[32m+[m[32m    // If number is negative, append '-'[m
[32m+[m[32m    if (isNegative)[m
[32m+[m[32m 200:	89 fa                	mov    %edi,%edx[m
[32m+[m[32m 202:	eb b2                	jmp    1b6 <itoa.part.0+0x76>[m
[32m+[m[32m 204:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m 20a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi[m
[32m+[m
[32m+[m[32m00000210 <ourAtoi>:[m
[32m+[m[32m#include "user.h"[m
[32m+[m[32m#include "fcntl.h"[m
[32m+[m
[32m+[m[32m// our own atoi() function - convert string to int[m
[32m+[m[32mint ourAtoi(char *str)[m
[32m+[m[32m{[m
[32m+[m[32m 210:	55                   	push   %ebp[m
[32m+[m[32m    int res = 0;  // Initialize result[m
[32m+[m[32m    int sign = 1;  // Initialize sign as positive[m
[32m+[m[32m    int i = 0;  // Initialize index of first digit[m
[32m+[m[41m      [m
[32m+[m[32m    // If number is negative, then update sign[m
[32m+[m[32m    if (str[0] == '-')[m
[32m+[m[32m 211:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m#include "user.h"[m
[32m+[m[32m#include "fcntl.h"[m
[32m+[m
[32m+[m[32m// our own atoi() function - convert string to int[m
[32m+[m[32mint ourAtoi(char *str)[m
[32m+[m[32m{[m
[32m+[m[32m 213:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 215:	53                   	push   %ebx[m
[32m+[m[32m 216:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m    int res = 0;  // Initialize result[m
[32m+[m[32m    int sign = 1;  // Initialize sign as positive[m
[32m+[m[32m    int i = 0;  // Initialize index of first digit[m
[32m+[m[41m      [m
[32m+[m[32m    // If number is negative, then update sign[m
[32m+[m[32m    if (str[0] == '-')[m
[32m+[m[32m 219:	80 38 2d             	cmpb   $0x2d,(%eax)[m
[32m+[m[32m 21c:	0f 94 c2             	sete   %dl[m
[32m+[m[32m 21f:	0f 95 c3             	setne  %bl[m
[32m+[m[32m 222:	89 d1                	mov    %edx,%ecx[m
[32m+[m[32m        sign = -1;[m[41m  [m
[32m+[m[32m        i++;  // Also update index of first digit[m
[32m+[m[32m    }[m
[32m+[m[41m      [m
[32m+[m[32m    // Iterate through all digits and update the result[m
[32m+[m[32m    for (; str[i] != '\0'; ++i)[m
[32m+[m[32m 224:	0f be 14 10          	movsbl (%eax,%edx,1),%edx[m
[32m+[m[32m 228:	84 d2                	test   %dl,%dl[m
[32m+[m[32m 22a:	74 2b                	je     257 <ourAtoi+0x47>[m
[32m+[m[32m 22c:	0f b6 db             	movzbl %bl,%ebx[m
[32m+[m[32m 22f:	01 c1                	add    %eax,%ecx[m
[32m+[m[32m 231:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m 233:	8d 5c 1b ff          	lea    -0x1(%ebx,%ebx,1),%ebx[m
[32m+[m[32m 237:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m 239:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m        res = res*10 + str[i] - '0';[m
[32m+[m[32m 240:	8d 04 80             	lea    (%eax,%eax,4),%eax[m
[32m+[m[32m 243:	83 c1 01             	add    $0x1,%ecx[m
[32m+[m[32m 246:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax[m
[32m+[m[32m        sign = -1;[m[41m  [m
[32m+[m[32m        i++;  // Also update index of first digit[m
[32m+[m[32m    }[m
[32m+[m[41m      [m
[32m+[m[32m    // Iterate through all digits and update the result[m
[32m+[m[32m    for (; str[i] != '\0'; ++i)[m
[32m+[m[32m 24a:	0f be 11             	movsbl (%ecx),%edx[m
[32m+[m[32m 24d:	84 d2                	test   %dl,%dl[m
[32m+[m[32m 24f:	75 ef                	jne    240 <ourAtoi+0x30>[m
[32m+[m[32m 251:	0f af c3             	imul   %ebx,%eax[m
[32m+[m[32m        res = res*10 + str[i] - '0';[m
[32m+[m[41m    [m
[32m+[m[32m    // Return result with sign[m
[32m+[m[32m    return sign*res;[m
[32m+[m[32m}[m
[32m+[m[32m 254:	5b                   	pop    %ebx[m
[32m+[m[32m 255:	5d                   	pop    %ebp[m
[32m+[m[32m 256:	c3                   	ret[m[41m    [m
[32m+[m[32m        sign = -1;[m[41m  [m
[32m+[m[32m        i++;  // Also update index of first digit[m
[32m+[m[32m    }[m
[32m+[m[41m      [m
[32m+[m[32m    // Iterate through all digits and update the result[m
[32m+[m[32m    for (; str[i] != '\0'; ++i)[m
[32m+[m[32m 257:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m 259:	eb f9                	jmp    254 <ourAtoi+0x44>[m
[32m+[m[32m 25b:	90                   	nop[m
[32m+[m[32m 25c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m
[32m+[m[32m00000260 <my_reverse>:[m
[32m+[m[32m    return sign*res;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//revers string[m[41m [m
[32m+[m[32mvoid my_reverse(char str[], int len)[m
[32m+[m[32m{[m
[32m+[m[32m 260:	55                   	push   %ebp[m
[32m+[m[32m 261:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 263:	56                   	push   %esi[m
[32m+[m[32m 264:	53                   	push   %ebx[m
[32m+[m[32m    int start, end;[m
[32m+[m[32m    char temp;[m
[32m+[m[32m    for(start=0, end=len-1; start < end; start++, end--) {[m
[32m+[m[32m 265:	8b 45 0c             	mov    0xc(%ebp),%eax[m
[32m+[m[32m    return sign*res;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//revers string[m[41m [m
[32m+[m[32mvoid my_reverse(char str[], int len)[m
[32m+[m[32m{[m
[32m+[m[32m 268:	8b 4d 08             	mov    0x8(%ebp),%ecx[m
[32m+[m[32m    int start, end;[m
[32m+[m[32m    char temp;[m
[32m+[m[32m    for(start=0, end=len-1; start < end; start++, end--) {[m
[32m+[m[32m 26b:	83 e8 01             	sub    $0x1,%eax[m
[32m+[m[32m 26e:	85 c0                	test   %eax,%eax[m
[32m+[m[32m 270:	7e 20                	jle    292 <my_reverse+0x32>[m
[32m+[m[32m 272:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m 274:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m        temp = *(str+start);[m
[32m+[m[32m 278:	0f b6 34 11          	movzbl (%ecx,%edx,1),%esi[m
[32m+[m[32m        *(str+start) = *(str+end);[m
[32m+[m[32m 27c:	0f b6 1c 01          	movzbl (%ecx,%eax,1),%ebx[m
[32m+[m[32m 280:	88 1c 11             	mov    %bl,(%ecx,%edx,1)[m
[32m+[m[32m        *(str+end) = temp;[m
[32m+[m[32m 283:	89 f3                	mov    %esi,%ebx[m
[32m+[m[32m//revers string[m[41m [m
[32m+[m[32mvoid my_reverse(char str[], int len)[m
[32m+[m[32m{[m
[32m+[m[32m    int start, end;[m
[32m+[m[32m    char temp;[m
[32m+[m[32m    for(start=0, end=len-1; start < end; start++, end--) {[m
[32m+[m[32m 285:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m        temp = *(str+start);[m
[32m+[m[32m        *(str+start) = *(str+end);[m
[32m+[m[32m        *(str+end) = temp;[m
[32m+[m[32m 288:	88 1c 01             	mov    %bl,(%ecx,%eax,1)[m
[32m+[m[32m//revers string[m[41m [m
[32m+[m[32mvoid my_reverse(char str[], int len)[m
[32m+[m[32m{[m
[32m+[m[32m    int start, end;[m
[32m+[m[32m    char temp;[m
[32m+[m[32m    for(start=0, end=len-1; start < end; start++, end--) {[m
[32m+[m[32m 28b:	83 e8 01             	sub    $0x1,%eax[m
[32m+[m[32m 28e:	39 c2                	cmp    %eax,%edx[m
[32m+[m[32m 290:	7c e6                	jl     278 <my_reverse+0x18>[m
[32m+[m[32m        temp = *(str+start);[m
[32m+[m[32m        *(str+start) = *(str+end);[m
[32m+[m[32m        *(str+end) = temp;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m[32m 292:	5b                   	pop    %ebx[m
[32m+[m[32m 293:	5e                   	pop    %esi[m
[32m+[m[32m 294:	5d                   	pop    %ebp[m
[32m+[m[32m 295:	c3                   	ret[m[41m    [m
[32m+[m[32m 296:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m 299:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m
[32m+[m[32m000002a0 <cleanArray>:[m
[32m+[m
[32m+[m
[32m+[m[32mvoid cleanArray(char* ArratToClean, int size){[m
[32m+[m[32m 2a0:	55                   	push   %ebp[m
[32m+[m[32m 2a1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 2a3:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[32m+[m[32m 2a6:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m
[32m+[m[32m for(int i=0;i<size;i++){[m
[32m+[m[32m 2a9:	85 c9                	test   %ecx,%ecx[m
[32m+[m[32m 2ab:	8d 14 08             	lea    (%eax,%ecx,1),%edx[m
[32m+[m[32m 2ae:	7e 0a                	jle    2ba <cleanArray+0x1a>[m
[32m+[m[32m    ArratToClean[i]='\0';[m
[32m+[m[32m 2b0:	c6 00 00             	movb   $0x0,(%eax)[m
[32m+[m[32m 2b3:	83 c0 01             	add    $0x1,%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mvoid cleanArray(char* ArratToClean, int size){[m
[32m+[m
[32m+[m[32m for(int i=0;i<size;i++){[m
[32m+[m[32m 2b6:	39 d0                	cmp    %edx,%eax[m
[32m+[m[32m 2b8:	75 f6                	jne    2b0 <cleanArray+0x10>[m
[32m+[m[32m    ArratToClean[i]='\0';[m
[32m+[m[32m }[m
[32m+[m[32m}[m
[32m+[m[32m 2ba:	5d                   	pop    %ebp[m
[32m+[m[32m 2bb:	c3                   	ret[m[41m    [m
[32m+[m[32m 2bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m
[32m+[m[32m000002c0 <itoa>:[m
[32m+[m
[32m+[m[32m// Implementation of itoa() - convert int to String[m[41m [m
[32m+[m[32mchar* itoa(int num, char* str, int base)[m
[32m+[m[32m{[m
[32m+[m[32m 2c0:	55                   	push   %ebp[m
[32m+[m[32m 2c1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 2c3:	53                   	push   %ebx[m
[32m+[m[32m 2c4:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m 2c7:	8b 5d 0c             	mov    0xc(%ebp),%ebx[m
[32m+[m[32m    int i = 0;[m
[32m+[m[32m    int isNegative = 0;  //false[m
[32m+[m[41m [m
[32m+[m[32m    /* Handle 0 explicitely, otherwise empty string is printed for 0 */[m
[32m+[m[32m    if (num == 0)[m
[32m+[m[32m 2ca:	85 c0                	test   %eax,%eax[m
[32m+[m[32m 2cc:	74 12                	je     2e0 <itoa+0x20>[m
[32m+[m[32m 2ce:	8b 4d 10             	mov    0x10(%ebp),%ecx[m
[32m+[m[32m 2d1:	89 da                	mov    %ebx,%edx[m
[32m+[m[32m 2d3:	e8 68 fe ff ff       	call   140 <itoa.part.0>[m
[32m+[m[41m [m
[32m+[m[32m    // Reverse the string[m
[32m+[m[32m    my_reverse(str, i);[m
[32m+[m[41m [m
[32m+[m[32m    return str;[m
[32m+[m[32m}[m
[32m+[m[32m 2d8:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m 2da:	5b                   	pop    %ebx[m
[32m+[m[32m 2db:	5d                   	pop    %ebp[m
[32m+[m[32m 2dc:	c3                   	ret[m[41m    [m
[32m+[m[32m 2dd:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m    int isNegative = 0;  //false[m
[32m+[m[41m [m
[32m+[m[32m    /* Handle 0 explicitely, otherwise empty string is printed for 0 */[m
[32m+[m[32m    if (num == 0)[m
[32m+[m[32m    {[m
[32m+[m[32m        str[i++] = '0';[m
[32m+[m[32m 2e0:	c6 03 30             	movb   $0x30,(%ebx)[m
[32m+[m[32m        str[i] = '\0';[m
[32m+[m[32m 2e3:	c6 43 01 00          	movb   $0x0,0x1(%ebx)[m
[32m+[m[41m [m
[32m+[m[32m    // Reverse the string[m
[32m+[m[32m    my_reverse(str, i);[m
[32m+[m[41m [m
[32m+[m[32m    return str;[m
[32m+[m[32m}[m
[32m+[m[32m 2e7:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m 2e9:	5b                   	pop    %ebx[m
[32m+[m[32m 2ea:	5d                   	pop    %ebp[m
[32m+[m[32m 2eb:	c3                   	ret[m[41m    [m
[32m+[m[32m 2ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m
[32m+[m[32m000002f0 <ChildCode>:[m
[32m+[m[32m//children code as function[m
[32m+[m[32m//every child read from a different pipe(fd_ChildePipe_Array[i]) just for him[m
[32m+[m[32m//all childs write to the same pipe (fd_ProducerPipe)[m
[32m+[m
[32m+[m
[32m+[m[32mvoid ChildCode(int* readFromPipe,int* writeToPipe,int numToAdd){[m
[32m+[m[32m 2f0:	55                   	push   %ebp[m
[32m+[m[41m       [m
[32m+[m[32m    char readNum[15]={'\0'};[m[41m [m
[32m+[m[32m 2f1:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m//children code as function[m
[32m+[m[32m//every child read from a different pipe(fd_ChildePipe_Array[i]) just for him[m
[32m+[m[32m//all childs write to the same pipe (fd_ProducerPipe)[m
[32m+[m
[32m+[m
[32m+[m[32mvoid ChildCode(int* readFromPipe,int* writeToPipe,int numToAdd){[m
[32m+[m[32m 2f3:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 2f5:	57                   	push   %edi[m
[32m+[m[32m 2f6:	56                   	push   %esi[m
[32m+[m[32m 2f7:	53                   	push   %ebx[m
[32m+[m[32m 2f8:	8d 5d d9             	lea    -0x27(%ebp),%ebx[m
[32m+[m[32m 2fb:	8d 75 e8             	lea    -0x18(%ebp),%esi[m
[32m+[m[32m 2fe:	83 ec 38             	sub    $0x38,%esp[m
[32m+[m[41m       [m
[32m+[m[32m    char readNum[15]={'\0'};[m[41m [m
[32m+[m[32m 301:	66 89 45 e5          	mov    %ax,-0x1b(%ebp)[m
[32m+[m[32m    int childNum=0;[m
[32m+[m[32m    //printf(0,"child1\n");[m
[32m+[m[32m    dup(readFromPipe[0]); //dup just the pipe child1 read from[m
[32m+[m[32m 305:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m//all childs write to the same pipe (fd_ProducerPipe)[m
[32m+[m
[32m+[m
[32m+[m[32mvoid ChildCode(int* readFromPipe,int* writeToPipe,int numToAdd){[m
[32m+[m[41m       [m
[32m+[m[32m    char readNum[15]={'\0'};[m[41m [m
[32m+[m[32m 308:	c7 45 d9 00 00 00 00 	movl   $0x0,-0x27(%ebp)[m
[32m+[m[32m 30f:	c7 45 dd 00 00 00 00 	movl   $0x0,-0x23(%ebp)[m
[32m+[m[32m 316:	c7 45 e1 00 00 00 00 	movl   $0x0,-0x1f(%ebp)[m
[32m+[m[32m 31d:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)[m
[32m+[m[32m    int childNum=0;[m
[32m+[m[32m    //printf(0,"child1\n");[m
[32m+[m[32m    dup(readFromPipe[0]); //dup just the pipe child1 read from[m
[32m+[m[32m 321:	ff 30                	pushl  (%eax)[m
[32m+[m
[32m+[m
[32m+[m[32mvoid ChildCode(int* readFromPipe,int* writeToPipe,int numToAdd){[m
[32m+[m[41m       [m
[32m+[m[32m    char readNum[15]={'\0'};[m[41m [m
[32m+[m[32m    int childNum=0;[m
[32m+[m[32m 323:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)[m
[32m+[m[32m    //printf(0,"child1\n");[m
[32m+[m[32m    dup(readFromPipe[0]); //dup just the pipe child1 read from[m
[32m+[m[32m 32a:	e8 cb 05 00 00       	call   8fa <dup>[m
[32m+[m[32m 32f:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 332:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m 334:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m
[32m+[m
[32m+[m[32mvoid cleanArray(char* ArratToClean, int size){[m
[32m+[m
[32m+[m[32m for(int i=0;i<size;i++){[m
[32m+[m[32m    ArratToClean[i]='\0';[m
[32m+[m[32m 338:	c6 00 00             	movb   $0x0,(%eax)[m
[32m+[m[32m 33b:	83 c0 01             	add    $0x1,%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mvoid cleanArray(char* ArratToClean, int size){[m
[32m+[m
[32m+[m[32m for(int i=0;i<size;i++){[m
[32m+[m[32m 33e:	39 f0                	cmp    %esi,%eax[m
[32m+[m[32m 340:	75 f6                	jne    338 <ChildCode+0x48>[m
[32m+[m[32m 342:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m    char readNum[15]={'\0'};[m[41m [m
[32m+[m[32m    int childNum=0;[m
[32m+[m[32m    //printf(0,"child1\n");[m
[32m+[m[32m    dup(readFromPipe[0]); //dup just the pipe child1 read from[m
[32m+[m[32m    cleanArray(readNum, 15);[m[41m  [m
[32m+[m[32m    while ((read(readFromPipe[0], readNum, 15)) != 0){[m[41m         [m
[32m+[m[32m 348:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m 34b:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m 34e:	6a 0f                	push   $0xf[m
[32m+[m[32m 350:	53                   	push   %ebx[m
[32m+[m[32m 351:	ff 30                	pushl  (%eax)[m
[32m+[m[32m 353:	e8 42 05 00 00       	call   89a <read>[m
[32m+[m[32m 358:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 35b:	85 c0                	test   %eax,%eax[m
[32m+[m[32m 35d:	74 7f                	je     3de <ChildCode+0xee>[m
[32m+[m[32m    int res = 0;  // Initialize result[m
[32m+[m[32m    int sign = 1;  // Initialize sign as positive[m
[32m+[m[32m    int i = 0;  // Initialize index of first digit[m
[32m+[m[41m      [m
[32m+[m[32m    // If number is negative, then update sign[m
[32m+[m[32m    if (str[0] == '-')[m
[32m+[m[32m 35f:	0f be 45 d9          	movsbl -0x27(%ebp),%eax[m
[32m+[m[32mint ourAtoi(char *str)[m
[32m+[m[32m{[m
[32m+[m
[32m+[m[32m    int res = 0;  // Initialize result[m
[32m+[m[32m    int sign = 1;  // Initialize sign as positive[m
[32m+[m[32m    int i = 0;  // Initialize index of first digit[m
[32m+[m[32m 363:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m// our own atoi() function - convert string to int[m
[32m+[m[32mint ourAtoi(char *str)[m
[32m+[m[32m{[m
[32m+[m
[32m+[m[32m    int res = 0;  // Initialize result[m
[32m+[m[32m    int sign = 1;  // Initialize sign as positive[m
[32m+[m[32m 365:	bf 01 00 00 00       	mov    $0x1,%edi[m
[32m+[m[32m    int i = 0;  // Initialize index of first digit[m
[32m+[m[41m      [m
[32m+[m[32m    // If number is negative, then update sign[m
[32m+[m[32m    if (str[0] == '-')[m
[32m+[m[32m 36a:	3c 2d                	cmp    $0x2d,%al[m
[32m+[m[32m 36c:	74 5a                	je     3c8 <ChildCode+0xd8>[m
[32m+[m[32m        sign = -1;[m[41m  [m
[32m+[m[32m        i++;  // Also update index of first digit[m
[32m+[m[32m    }[m
[32m+[m[41m      [m
[32m+[m[32m    // Iterate through all digits and update the result[m
[32m+[m[32m    for (; str[i] != '\0'; ++i)[m
[32m+[m[32m 36e:	84 c0                	test   %al,%al[m
[32m+[m[32m 370:	74 68                	je     3da <ChildCode+0xea>[m
[32m+[m[32m 372:	8d 4c 13 01          	lea    0x1(%ebx,%edx,1),%ecx[m
[32m+[m[32m 376:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m 378:	90                   	nop[m
[32m+[m[32m 379:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m        res = res*10 + str[i] - '0';[m
[32m+[m[32m 380:	8d 14 92             	lea    (%edx,%edx,4),%edx[m
[32m+[m[32m 383:	83 c1 01             	add    $0x1,%ecx[m
[32m+[m[32m 386:	8d 54 50 d0          	lea    -0x30(%eax,%edx,2),%edx[m
[32m+[m[32m        sign = -1;[m[41m  [m
[32m+[m[32m        i++;  // Also update index of first digit[m
[32m+[m[32m    }[m
[32m+[m[41m      [m
[32m+[m[32m    // Iterate through all digits and update the result[m
[32m+[m[32m    for (; str[i] != '\0'; ++i)[m
[32m+[m[32m 38a:	0f be 41 ff          	movsbl -0x1(%ecx),%eax[m
[32m+[m[32m 38e:	84 c0                	test   %al,%al[m
[32m+[m[32m 390:	75 ee                	jne    380 <ChildCode+0x90>[m
[32m+[m[32m 392:	0f af d7             	imul   %edi,%edx[m
[32m+[m[32m    dup(readFromPipe[0]); //dup just the pipe child1 read from[m
[32m+[m[32m    cleanArray(readNum, 15);[m[41m  [m
[32m+[m[32m    while ((read(readFromPipe[0], readNum, 15)) != 0){[m[41m         [m
[32m+[m	[32m//printf(1,"readNum1= %s \n",readNum);[m
[32m+[m	[32m//printf(0,"child1 after read\n");[m
[32m+[m	[32mchildNum= numToAdd+ ourAtoi(readNum);[m
[32m+[m[32m 395:	03 55 10             	add    0x10(%ebp),%edx[m
[32m+[m[32m 398:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m 39a:	89 55 d4             	mov    %edx,-0x2c(%ebp)[m
[32m+[m[32m 39d:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m
[32m+[m
[32m+[m[32mvoid cleanArray(char* ArratToClean, int size){[m
[32m+[m
[32m+[m[32m for(int i=0;i<size;i++){[m
[32m+[m[32m    ArratToClean[i]='\0';[m
[32m+[m[32m 3a0:	c6 00 00             	movb   $0x0,(%eax)[m
[32m+[m[32m 3a3:	83 c0 01             	add    $0x1,%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mvoid cleanArray(char* ArratToClean, int size){[m
[32m+[m
[32m+[m[32m for(int i=0;i<size;i++){[m
[32m+[m[32m 3a6:	39 c6                	cmp    %eax,%esi[m
[32m+[m[32m 3a8:	75 f6                	jne    3a0 <ChildCode+0xb0>[m
[32m+[m	[32mchildNum= numToAdd+ ourAtoi(readNum);[m
[32m+[m[32m        cleanArray(readNum, 15);[m[41m  [m
[32m+[m	[32m//printf(1,"numToAdd=%d \n",numToAdd);[m
[32m+[m	[32m//printf(1,"ourAtoi(readNum)=%d \n",ourAtoi(readNum));[m
[32m+[m	[32m//printf(1,"childNum2=%d \n",childNum);[m
[32m+[m	[32mwrite(writeToPipe[1], &childNum, sizeof(childNum));[m
[32m+[m[32m 3aa:	8d 45 d4             	lea    -0x2c(%ebp),%eax[m
[32m+[m[32m 3ad:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m 3b0:	6a 04                	push   $0x4[m
[32m+[m[32m 3b2:	50                   	push   %eax[m
[32m+[m[32m 3b3:	8b 45 0c             	mov    0xc(%ebp),%eax[m
[32m+[m[32m 3b6:	ff 70 04             	pushl  0x4(%eax)[m
[32m+[m[32m 3b9:	e8 e4 04 00 00       	call   8a2 <write>[m
[32m+[m[32m 3be:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 3c1:	eb 85                	jmp    348 <ChildCode+0x58>[m
[32m+[m[32m 3c3:	90                   	nop[m
[32m+[m[32m 3c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m 3c8:	0f be 45 da          	movsbl -0x26(%ebp),%eax[m
[32m+[m[41m      [m
[32m+[m[32m    // If number is negative, then update sign[m
[32m+[m[32m    if (str[0] == '-')[m
[32m+[m[32m    {[m
[32m+[m[32m        sign = -1;[m[41m  [m
[32m+[m[32m        i++;  // Also update index of first digit[m
[32m+[m[32m 3cc:	ba 01 00 00 00       	mov    $0x1,%edx[m
[32m+[m[32m    int i = 0;  // Initialize index of first digit[m
[32m+[m[41m      [m
[32m+[m[32m    // If number is negative, then update sign[m
[32m+[m[32m    if (str[0] == '-')[m
[32m+[m[32m    {[m
[32m+[m[32m        sign = -1;[m[41m  [m
[32m+[m[32m 3d1:	bf ff ff ff ff       	mov    $0xffffffff,%edi[m
[32m+[m[32m        i++;  // Also update index of first digit[m
[32m+[m[32m    }[m
[32m+[m[41m      [m
[32m+[m[32m    // Iterate through all digits and update the result[m
[32m+[m[32m    for (; str[i] != '\0'; ++i)[m
[32m+[m[32m 3d6:	84 c0                	test   %al,%al[m
[32m+[m[32m 3d8:	75 98                	jne    372 <ChildCode+0x82>[m
[32m+[m[32m 3da:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m 3dc:	eb b7                	jmp    395 <ChildCode+0xa5>[m
[32m+[m	[32m//printf(1,"ourAtoi(readNum)=%d \n",ourAtoi(readNum));[m
[32m+[m	[32m//printf(1,"childNum2=%d \n",childNum);[m
[32m+[m	[32mwrite(writeToPipe[1], &childNum, sizeof(childNum));[m
[32m+[m
[32m+[m[32m   }[m
[32m+[m[32m}[m
[32m+[m[32m 3de:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m 3e1:	5b                   	pop    %ebx[m
[32m+[m[32m 3e2:	5e                   	pop    %esi[m
[32m+[m[32m 3e3:	5f                   	pop    %edi[m
[32m+[m[32m 3e4:	5d                   	pop    %ebp[m
[32m+[m[32m 3e5:	c3                   	ret[m[41m    [m
[32m+[m[32m 3e6:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m 3e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m
[32m+[m[32m000003f0 <Task3Action>:[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mTask3Action(int ToAddNumber,int textFD,int tempFileFD ){[m
[32m+[m[32m 3f0:	55                   	push   %ebp[m
[32m+[m[32m int fd_ChildePipe_Array[3][2];[m[41m [m
[32m+[m[32m int numOfChildren=3;[m
[32m+[m[32m int digitNum=0;[m
[32m+[m[32m char readChar='\0';[m
[32m+[m[32m char prevReadChar='\0';[m
[32m+[m[32m char readNum[15]={'\0'};[m[41m [m
[32m+[m[32m 3f1:	31 c9                	xor    %ecx,%ecx[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mTask3Action(int ToAddNumber,int textFD,int tempFileFD ){[m
[32m+[m[32m 3f3:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 3f5:	57                   	push   %edi[m
[32m+[m[32m 3f6:	56                   	push   %esi[m
[32m+[m[32m 3f7:	53                   	push   %ebx[m
[32m+[m[32m int res=0;[m[41m [m
[32m+[m[32m char wrResToFile[15];[m[41m	[m
[32m+[m
[32m+[m
[32m+[m[32m int fd_ProducerPipe[2];   //read and write FD[m
[32m+[m[32m pipe(fd_ProducerPipe);  //producer only write to this pipe (in [0])[m
[32m+[m[32m 3f8:	8d 75 a8             	lea    -0x58(%ebp),%esi[m
[32m+[m
[32m+[m[32m for(int j=0; j<numOfChildren;j++){  //children pipes[m
[32m+[m[32m  pipe(fd_ChildePipe_Array[j]);[m[41m [m
[32m+[m[32m 3fb:	8d 5d d0             	lea    -0x30(%ebp),%ebx[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mTask3Action(int ToAddNumber,int textFD,int tempFileFD ){[m
[32m+[m[32m 3fe:	83 ec 78             	sub    $0x78,%esp[m
[32m+[m[32m int fd_ChildePipe_Array[3][2];[m[41m [m
[32m+[m[32m int numOfChildren=3;[m
[32m+[m[32m int digitNum=0;[m
[32m+[m[32m char readChar='\0';[m
[32m+[m[32m char prevReadChar='\0';[m
[32m+[m[32m char readNum[15]={'\0'};[m[41m [m
[32m+[m[32m 401:	66 89 4d be          	mov    %cx,-0x42(%ebp)[m
[32m+[m[32m//[m
[32m+[m[32m int pidArray[3];[m
[32m+[m[32m int fd_ChildePipe_Array[3][2];[m[41m [m
[32m+[m[32m int numOfChildren=3;[m
[32m+[m[32m int digitNum=0;[m
[32m+[m[32m char readChar='\0';[m
[32m+[m[32m 405:	c6 45 a3 00          	movb   $0x0,-0x5d(%ebp)[m
[32m+[m[32m int res=0;[m[41m [m
[32m+[m[32m char wrResToFile[15];[m[41m	[m
[32m+[m
[32m+[m
[32m+[m[32m int fd_ProducerPipe[2];   //read and write FD[m
[32m+[m[32m pipe(fd_ProducerPipe);  //producer only write to this pipe (in [0])[m
[32m+[m[32m 409:	56                   	push   %esi[m
[32m+[m[32m int fd_ChildePipe_Array[3][2];[m[41m [m
[32m+[m[32m int numOfChildren=3;[m
[32m+[m[32m int digitNum=0;[m
[32m+[m[32m char readChar='\0';[m
[32m+[m[32m char prevReadChar='\0';[m
[32m+[m[32m char readNum[15]={'\0'};[m[41m [m
[32m+[m[32m 40a:	c7 45 b2 00 00 00 00 	movl   $0x0,-0x4e(%ebp)[m
[32m+[m
[32m+[m[32m int fd_ProducerPipe[2];   //read and write FD[m
[32m+[m[32m pipe(fd_ProducerPipe);  //producer only write to this pipe (in [0])[m
[32m+[m
[32m+[m[32m for(int j=0; j<numOfChildren;j++){  //children pipes[m
[32m+[m[32m  pipe(fd_ChildePipe_Array[j]);[m[41m [m
[32m+[m[32m 411:	89 df                	mov    %ebx,%edi[m
[32m+[m[32m int fd_ChildePipe_Array[3][2];[m[41m [m
[32m+[m[32m int numOfChildren=3;[m
[32m+[m[32m int digitNum=0;[m
[32m+[m[32m char readChar='\0';[m
[32m+[m[32m char prevReadChar='\0';[m
[32m+[m[32m char readNum[15]={'\0'};[m[41m [m
[32m+[m[32m 413:	c7 45 b6 00 00 00 00 	movl   $0x0,-0x4a(%ebp)[m
[32m+[m[32m 41a:	c7 45 ba 00 00 00 00 	movl   $0x0,-0x46(%ebp)[m
[32m+[m[32m 421:	c6 45 c0 00          	movb   $0x0,-0x40(%ebp)[m
[32m+[m[32m int res=0;[m[41m [m
[32m+[m[32m 425:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)[m
[32m+[m[32m char wrResToFile[15];[m[41m	[m
[32m+[m
[32m+[m
[32m+[m[32m int fd_ProducerPipe[2];   //read and write FD[m
[32m+[m[32m pipe(fd_ProducerPipe);  //producer only write to this pipe (in [0])[m
[32m+[m[32m 42c:	e8 61 04 00 00       	call   892 <pipe>[m
[32m+[m
[32m+[m[32m for(int j=0; j<numOfChildren;j++){  //children pipes[m
[32m+[m[32m  pipe(fd_ChildePipe_Array[j]);[m[41m [m
[32m+[m[32m 431:	89 1c 24             	mov    %ebx,(%esp)[m
[32m+[m[32m 434:	e8 59 04 00 00       	call   892 <pipe>[m
[32m+[m[32m 439:	8d 45 d8             	lea    -0x28(%ebp),%eax[m
[32m+[m[32m 43c:	89 04 24             	mov    %eax,(%esp)[m
[32m+[m[32m 43f:	e8 4e 04 00 00       	call   892 <pipe>[m
[32m+[m[32m 444:	8d 45 e0             	lea    -0x20(%ebp),%eax[m
[32m+[m[32m 447:	89 04 24             	mov    %eax,(%esp)[m
[32m+[m[32m 44a:	e8 43 04 00 00       	call   892 <pipe>[m
[32m+[m[32m 44f:	89 5d 8c             	mov    %ebx,-0x74(%ebp)[m
[32m+[m[32m 452:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m }[m
[32m+[m
[32m+[m
[32m+[m[32m for(int i=0; i<numOfChildren;i++){[m
[32m+[m[41m   [m
[32m+[m[32m   pidArray[i] = fork();[m
[32m+[m[32m 455:	e8 20 04 00 00       	call   87a <fork>[m
[32m+[m
[32m+[m[32m   if(pidArray[i]<0){[m
[32m+[m[32m 45a:	85 c0                	test   %eax,%eax[m
[32m+[m[32m 45c:	0f 88 c7 01 00 00    	js     629 <Task3Action+0x239>[m
[32m+[m[32m       //printf(1,"fork error occured\n");[m
[32m+[m[32m       exit(0);[m
[32m+[m[32m   }[m
[32m+[m[32m   else if(pidArray[i]==0){  //do child task[m
[32m+[m[32m 462:	0f 84 98 01 00 00    	je     600 <Task3Action+0x210>[m
[32m+[m[32m for(int j=0; j<numOfChildren;j++){  //children pipes[m
[32m+[m[32m  pipe(fd_ChildePipe_Array[j]);[m[41m [m
[32m+[m[32m }[m
[32m+[m
[32m+[m
[32m+[m[32m for(int i=0; i<numOfChildren;i++){[m
[32m+[m[32m 468:	8d 45 e8             	lea    -0x18(%ebp),%eax[m
[32m+[m[32m 46b:	83 c7 08             	add    $0x8,%edi[m
[32m+[m[32m 46e:	39 c7                	cmp    %eax,%edi[m
[32m+[m[32m 470:	75 e3                	jne    455 <Task3Action+0x65>[m
[32m+[m[32m 472:	89 5d 90             	mov    %ebx,-0x70(%ebp)[m
[32m+[m[32m 475:	8d 7d a3             	lea    -0x5d(%ebp),%edi[m
[32m+[m[32m 478:	8d 5d c1             	lea    -0x3f(%ebp),%ebx[m
[32m+[m[32m 47b:	c6 45 97 00          	movb   $0x0,-0x69(%ebp)[m
[32m+[m[32m 47f:	31 f6                	xor    %esi,%esi[m
[32m+[m
[32m+[m[32m int fd_ProducerPipe[2];   //read and write FD[m
[32m+[m[32m pipe(fd_ProducerPipe);  //producer only write to this pipe (in [0])[m
[32m+[m
[32m+[m[32m for(int j=0; j<numOfChildren;j++){  //children pipes[m
[32m+[m[32m  pipe(fd_ChildePipe_Array[j]);[m[41m [m
[32m+[m[32m 481:	8d 45 b2             	lea    -0x4e(%ebp),%eax[m
[32m+[m[32m 484:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m
[32m+[m
[32m+[m[32mvoid cleanArray(char* ArratToClean, int size){[m
[32m+[m
[32m+[m[32m for(int i=0;i<size;i++){[m
[32m+[m[32m    ArratToClean[i]='\0';[m
[32m+[m[32m 488:	c6 00 00             	movb   $0x0,(%eax)[m
[32m+[m[32m 48b:	83 c0 01             	add    $0x1,%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mvoid cleanArray(char* ArratToClean, int size){[m
[32m+[m
[32m+[m[32m for(int i=0;i<size;i++){[m
[32m+[m[32m 48e:	39 d8                	cmp    %ebx,%eax[m
[32m+[m[32m 490:	75 f6                	jne    488 <Task3Action+0x98>[m
[32m+[m[32m 492:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m }[m
[32m+[m[32m//do producer code[m
[32m+[m
[32m+[m[32m for(int i=0; i<numOfChildren;i++){[m
[32m+[m[32m   cleanArray(readNum, 15);  //clean readNum from prev[m
[32m+[m[32m   while (read(textFD, &readChar, 1) != 0){[m
[32m+[m[32m 498:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m 49b:	6a 01                	push   $0x1[m
[32m+[m[32m 49d:	57                   	push   %edi[m
[32m+[m[32m 49e:	ff 75 0c             	pushl  0xc(%ebp)[m
[32m+[m[32m 4a1:	e8 f4 03 00 00       	call   89a <read>[m
[32m+[m[32m 4a6:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 4a9:	85 c0                	test   %eax,%eax[m
[32m+[m[32m 4ab:	0f 84 bf 00 00 00    	je     570 <Task3Action+0x180>[m
[32m+[m[41m	[m
[32m+[m[32m      //printf(1,"readChar=%c \n",readChar);[m[41m [m
[32m+[m[32m      if('0'<readChar && readChar<'9'){[m
[32m+[m[32m 4b1:	0f b6 45 a3          	movzbl -0x5d(%ebp),%eax[m
[32m+[m[32m 4b5:	8d 50 cf             	lea    -0x31(%eax),%edx[m
[32m+[m[32m 4b8:	80 fa 07             	cmp    $0x7,%dl[m
[32m+[m[32m 4bb:	77 13                	ja     4d0 <Task3Action+0xe0>[m
[32m+[m	[32m  readNum[digitNum] = readChar;[m
[32m+[m[32m 4bd:	88 44 35 b2          	mov    %al,-0x4e(%ebp,%esi,1)[m
[32m+[m[32m 4c1:	88 45 97             	mov    %al,-0x69(%ebp)[m
[32m+[m	[32m  digitNum++;[m
[32m+[m[32m 4c4:	83 c6 01             	add    $0x1,%esi[m
[32m+[m[32m 4c7:	eb cf                	jmp    498 <Task3Action+0xa8>[m
[32m+[m[32m 4c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m	[32m  prevReadChar=readChar;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      else if ((readChar<'0' || readChar>'9')&& ('0'>prevReadChar || prevReadChar>'9')) {[m
[32m+[m[32m 4d0:	83 e8 30             	sub    $0x30,%eax[m
[32m+[m[32m 4d3:	3c 09                	cmp    $0x9,%al[m
[32m+[m[32m 4d5:	76 c1                	jbe    498 <Task3Action+0xa8>[m
[32m+[m[32m 4d7:	0f b6 45 97          	movzbl -0x69(%ebp),%eax[m
[32m+[m[32m 4db:	83 e8 30             	sub    $0x30,%eax[m
[32m+[m[32m 4de:	3c 09                	cmp    $0x9,%al[m
[32m+[m[32m 4e0:	0f 87 e2 00 00 00    	ja     5c8 <Task3Action+0x1d8>[m
[32m+[m[32m          cleanArray(readNum, 15);  //clean readNum from prev[m
[32m+[m	[32m  prevReadChar=readChar;[m
[32m+[m
[32m+[m[32m      }[m
[32m+[m[41m [m
[32m+[m[32m      else if ((readChar<'0' || readChar>'9') && ('0'<prevReadChar && prevReadChar<'9')){[m
[32m+[m[32m 4e6:	0f b6 45 97          	movzbl -0x69(%ebp),%eax[m
[32m+[m[32m 4ea:	83 e8 31             	sub    $0x31,%eax[m
[32m+[m[32m 4ed:	3c 07                	cmp    $0x7,%al[m
[32m+[m[32m 4ef:	77 a7                	ja     498 <Task3Action+0xa8>[m
[32m+[m	[32m  //printf(1,"readNum0= %s \n",readNum);[m
[32m+[m	[32m  write(fd_ChildePipe_Array[i][1], readNum, digitNum);[m
[32m+[m[32m 4f1:	8d 45 b2             	lea    -0x4e(%ebp),%eax[m
[32m+[m[32m 4f4:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m 4f7:	56                   	push   %esi[m
[32m+[m[32m 4f8:	50                   	push   %eax[m
[32m+[m[32m 4f9:	8b 45 90             	mov    -0x70(%ebp),%eax[m
[32m+[m[32m 4fc:	ff 70 04             	pushl  0x4(%eax)[m
[32m+[m[32m 4ff:	e8 9e 03 00 00       	call   8a2 <write>[m
[32m+[m[32m 504:	8d 45 b2             	lea    -0x4e(%ebp),%eax[m
[32m+[m[32m 507:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 50a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m
[32m+[m
[32m+[m[32mvoid cleanArray(char* ArratToClean, int size){[m
[32m+[m
[32m+[m[32m for(int i=0;i<size;i++){[m
[32m+[m[32m    ArratToClean[i]='\0';[m
[32m+[m[32m 510:	c6 00 00             	movb   $0x0,(%eax)[m
[32m+[m[32m 513:	83 c0 01             	add    $0x1,%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mvoid cleanArray(char* ArratToClean, int size){[m
[32m+[m
[32m+[m[32m for(int i=0;i<size;i++){[m
[32m+[m[32m 516:	39 d8                	cmp    %ebx,%eax[m
[32m+[m[32m 518:	75 f6                	jne    510 <Task3Action+0x120>[m
[32m+[m[41m [m
[32m+[m[32m      else if ((readChar<'0' || readChar>'9') && ('0'<prevReadChar && prevReadChar<'9')){[m
[32m+[m	[32m  //printf(1,"readNum0= %s \n",readNum);[m
[32m+[m	[32m  write(fd_ChildePipe_Array[i][1], readNum, digitNum);[m
[32m+[m[32m          cleanArray(readNum, 15);  //clean readNum from prev[m
[32m+[m	[32m  read(fd_ProducerPipe[0], &res,sizeof(int));[m
[32m+[m[32m 51a:	8d 45 a4             	lea    -0x5c(%ebp),%eax[m
[32m+[m[32m 51d:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m 520:	6a 04                	push   $0x4[m
[32m+[m[32m 522:	50                   	push   %eax[m
[32m+[m[32m 523:	ff 75 a8             	pushl  -0x58(%ebp)[m
[32m+[m[32m 526:	e8 6f 03 00 00       	call   89a <read>[m
[32m+[m	[32m  //printf(1,"res=%d \n",res );[m
[32m+[m	[32m  itoa(res,wrResToFile,10);[m
[32m+[m[32m 52b:	8b 45 a4             	mov    -0x5c(%ebp),%eax[m
[32m+[m[32m{[m
[32m+[m[32m    int i = 0;[m
[32m+[m[32m    int isNegative = 0;  //false[m
[32m+[m[41m [m
[32m+[m[32m    /* Handle 0 explicitely, otherwise empty string is printed for 0 */[m
[32m+[m[32m    if (num == 0)[m
[32m+[m[32m 52e:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 531:	85 c0                	test   %eax,%eax[m
[32m+[m[32m 533:	0f 85 df 00 00 00    	jne    618 <Task3Action+0x228>[m
[32m+[m[32m    {[m
[32m+[m[32m        str[i++] = '0';[m
[32m+[m[32m 539:	c6 45 c1 30          	movb   $0x30,-0x3f(%ebp)[m
[32m+[m[32m        str[i] = '\0';[m
[32m+[m[32m 53d:	c6 45 c2 00          	movb   $0x0,-0x3e(%ebp)[m
[32m+[m	[32m  write(fd_ChildePipe_Array[i][1], readNum, digitNum);[m
[32m+[m[32m          cleanArray(readNum, 15);  //clean readNum from prev[m
[32m+[m	[32m  read(fd_ProducerPipe[0], &res,sizeof(int));[m
[32m+[m	[32m  //printf(1,"res=%d \n",res );[m
[32m+[m	[32m  itoa(res,wrResToFile,10);[m
[32m+[m	[32m  write(tempFileFD, wrResToFile, sizeof(wrResToFile));[m
[32m+[m[32m 541:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m	[32m  write(tempFileFD, &readChar, 1);[m
[32m+[m	[32m  prevReadChar=readChar;[m[41m [m
[32m+[m	[32m  digitNum=0;[m[41m	      [m
[32m+[m[32m 544:	31 f6                	xor    %esi,%esi[m
[32m+[m	[32m  write(fd_ChildePipe_Array[i][1], readNum, digitNum);[m
[32m+[m[32m          cleanArray(readNum, 15);  //clean readNum from prev[m
[32m+[m	[32m  read(fd_ProducerPipe[0], &res,sizeof(int));[m
[32m+[m	[32m  //printf(1,"res=%d \n",res );[m
[32m+[m	[32m  itoa(res,wrResToFile,10);[m
[32m+[m	[32m  write(tempFileFD, wrResToFile, sizeof(wrResToFile));[m
[32m+[m[32m 546:	6a 0f                	push   $0xf[m
[32m+[m[32m 548:	53                   	push   %ebx[m
[32m+[m[32m 549:	ff 75 10             	pushl  0x10(%ebp)[m
[32m+[m[32m 54c:	e8 51 03 00 00       	call   8a2 <write>[m
[32m+[m	[32m  write(tempFileFD, &readChar, 1);[m
[32m+[m[32m 551:	83 c4 0c             	add    $0xc,%esp[m
[32m+[m[32m 554:	6a 01                	push   $0x1[m
[32m+[m[32m 556:	57                   	push   %edi[m
[32m+[m[32m 557:	ff 75 10             	pushl  0x10(%ebp)[m
[32m+[m[32m 55a:	e8 43 03 00 00       	call   8a2 <write>[m
[32m+[m	[32m  prevReadChar=readChar;[m[41m [m
[32m+[m[32m 55f:	0f b6 45 a3          	movzbl -0x5d(%ebp),%eax[m
[32m+[m[32m 563:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 566:	88 45 97             	mov    %al,-0x69(%ebp)[m
[32m+[m[32m 569:	e9 2a ff ff ff       	jmp    498 <Task3Action+0xa8>[m
[32m+[m[32m 56e:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 570:	83 45 90 08          	addl   $0x8,-0x70(%ebp)[m
[32m+[m[32m   }[m
[32m+[m[41m    [m
[32m+[m[32m }[m
[32m+[m[32m//do producer code[m
[32m+[m
[32m+[m[32m for(int i=0; i<numOfChildren;i++){[m
[32m+[m[32m 574:	8d 4d e8             	lea    -0x18(%ebp),%ecx[m
[32m+[m[32m 577:	8b 45 90             	mov    -0x70(%ebp),%eax[m
[32m+[m[32m 57a:	39 c8                	cmp    %ecx,%eax[m
[32m+[m[32m 57c:	0f 85 ff fe ff ff    	jne    481 <Task3Action+0x91>[m
[32m+[m[32m     }[m
[32m+[m[32m   }[m
[32m+[m[32m }[m
[32m+[m[32m//close pipes[m
[32m+[m
[32m+[m[32m close(fd_ProducerPipe[0]);[m
[32m+[m[32m 582:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m 585:	ff 75 a8             	pushl  -0x58(%ebp)[m
[32m+[m[32m 588:	e8 1d 03 00 00       	call   8aa <close>[m
[32m+[m[32m close(fd_ProducerPipe[1]);[m
[32m+[m[32m 58d:	5a                   	pop    %edx[m
[32m+[m[32m 58e:	ff 75 ac             	pushl  -0x54(%ebp)[m
[32m+[m[32m 591:	e8 14 03 00 00       	call   8aa <close>[m
[32m+[m[32m 596:	8b 5d 8c             	mov    -0x74(%ebp),%ebx[m
[32m+[m[32m 599:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m for(int j=0; j<numOfChildren;j++){  //close children pipes[m
[32m+[m[32m    close(fd_ChildePipe_Array[j][0]);[m
[32m+[m[32m 59c:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m 59f:	ff 33                	pushl  (%ebx)[m
[32m+[m[32m 5a1:	83 c3 08             	add    $0x8,%ebx[m
[32m+[m[32m 5a4:	e8 01 03 00 00       	call   8aa <close>[m
[32m+[m[32m    close(fd_ChildePipe_Array[j][1]);[m[41m [m
[32m+[m[32m 5a9:	58                   	pop    %eax[m
[32m+[m[32m 5aa:	ff 73 fc             	pushl  -0x4(%ebx)[m
[32m+[m[32m 5ad:	e8 f8 02 00 00       	call   8aa <close>[m
[32m+[m[32m }[m
[32m+[m[32m//close pipes[m
[32m+[m
[32m+[m[32m close(fd_ProducerPipe[0]);[m
[32m+[m[32m close(fd_ProducerPipe[1]);[m
[32m+[m[32m for(int j=0; j<numOfChildren;j++){  //close children pipes[m
[32m+[m[32m 5b2:	8d 45 e8             	lea    -0x18(%ebp),%eax[m
[32m+[m[32m 5b5:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 5b8:	39 c3                	cmp    %eax,%ebx[m
[32m+[m[32m 5ba:	75 e0                	jne    59c <Task3Action+0x1ac>[m
[32m+[m[32m    close(fd_ChildePipe_Array[j][0]);[m
[32m+[m[32m    close(fd_ChildePipe_Array[j][1]);[m[41m [m
[32m+[m[32m }[m
[32m+[m
[32m+[m[41m	[m
[32m+[m[32m}[m
[32m+[m[32m 5bc:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m 5bf:	5b                   	pop    %ebx[m
[32m+[m[32m 5c0:	5e                   	pop    %esi[m
[32m+[m[32m 5c1:	5f                   	pop    %edi[m
[32m+[m[32m 5c2:	5d                   	pop    %ebp[m
[32m+[m[32m 5c3:	c3                   	ret[m[41m    [m
[32m+[m[32m 5c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m	[32m  digitNum++;[m
[32m+[m	[32m  prevReadChar=readChar;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      else if ((readChar<'0' || readChar>'9')&& ('0'>prevReadChar || prevReadChar>'9')) {[m
[32m+[m	[32m  write(tempFileFD, &readChar, 1);[m
[32m+[m[32m 5c8:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m 5cb:	6a 01                	push   $0x1[m
[32m+[m[32m 5cd:	57                   	push   %edi[m
[32m+[m[32m 5ce:	ff 75 10             	pushl  0x10(%ebp)[m
[32m+[m[32m 5d1:	e8 cc 02 00 00       	call   8a2 <write>[m
[32m+[m[32m 5d6:	8d 45 b2             	lea    -0x4e(%ebp),%eax[m
[32m+[m[32m 5d9:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 5dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m
[32m+[m
[32m+[m[32mvoid cleanArray(char* ArratToClean, int size){[m
[32m+[m
[32m+[m[32m for(int i=0;i<size;i++){[m
[32m+[m[32m    ArratToClean[i]='\0';[m
[32m+[m[32m 5e0:	c6 00 00             	movb   $0x0,(%eax)[m
[32m+[m[32m 5e3:	83 c0 01             	add    $0x1,%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mvoid cleanArray(char* ArratToClean, int size){[m
[32m+[m
[32m+[m[32m for(int i=0;i<size;i++){[m
[32m+[m[32m 5e6:	39 c3                	cmp    %eax,%ebx[m
[32m+[m[32m 5e8:	75 f6                	jne    5e0 <Task3Action+0x1f0>[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      else if ((readChar<'0' || readChar>'9')&& ('0'>prevReadChar || prevReadChar>'9')) {[m
[32m+[m	[32m  write(tempFileFD, &readChar, 1);[m
[32m+[m[32m          cleanArray(readNum, 15);  //clean readNum from prev[m
[32m+[m	[32m  prevReadChar=readChar;[m
[32m+[m[32m 5ea:	0f b6 45 a3          	movzbl -0x5d(%ebp),%eax[m
[32m+[m[32m 5ee:	88 45 97             	mov    %al,-0x69(%ebp)[m
[32m+[m[32m 5f1:	e9 a2 fe ff ff       	jmp    498 <Task3Action+0xa8>[m
[32m+[m[32m 5f6:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m 5f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m       //printf(1,"fork error occured\n");[m
[32m+[m[32m       exit(0);[m
[32m+[m[32m   }[m
[32m+[m[32m   else if(pidArray[i]==0){  //do child task[m
[32m+[m[32m       //printf(0,"child no.%d \n",i);[m
[32m+[m[32m       ChildCode(fd_ChildePipe_Array[i],fd_ProducerPipe,ToAddNumber);[m
[32m+[m[32m 600:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m 603:	ff 75 08             	pushl  0x8(%ebp)[m
[32m+[m[32m 606:	56                   	push   %esi[m
[32m+[m[32m 607:	57                   	push   %edi[m
[32m+[m[32m 608:	e8 e3 fc ff ff       	call   2f0 <ChildCode>[m
[32m+[m[32m 60d:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 610:	e9 53 fe ff ff       	jmp    468 <Task3Action+0x78>[m
[32m+[m[32m 615:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m 618:	b9 0a 00 00 00       	mov    $0xa,%ecx[m
[32m+[m[32m 61d:	89 da                	mov    %ebx,%edx[m
[32m+[m[32m 61f:	e8 1c fb ff ff       	call   140 <itoa.part.0>[m
[32m+[m[32m 624:	e9 18 ff ff ff       	jmp    541 <Task3Action+0x151>[m
[32m+[m[41m   [m
[32m+[m[32m   pidArray[i] = fork();[m
[32m+[m
[32m+[m[32m   if(pidArray[i]<0){[m
[32m+[m[32m       //printf(1,"fork error occured\n");[m
[32m+[m[32m       exit(0);[m
[32m+[m[32m 629:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m 62c:	6a 00                	push   $0x0[m
[32m+[m[32m 62e:	e8 4f 02 00 00       	call   882 <exit>[m
[32m+[m[32m 633:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 635:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 637:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 639:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 63b:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 63d:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 63f:	90                   	nop[m
[32m+[m
[32m+[m[32m00000640 <strcpy>:[m
[32m+[m[32m#include "user.h"[m
[32m+[m[32m#include "x86.h"[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mstrcpy(char *s, char *t)[m
[32m+[m[32m{[m
[32m+[m[32m 640:	55                   	push   %ebp[m
[32m+[m[32m 641:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 643:	53                   	push   %ebx[m
[32m+[m[32m 644:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m 647:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[32m+[m[32m  char *os;[m
[32m+[m
[32m+[m[32m  os = s;[m
[32m+[m[32m  while((*s++ = *t++) != 0)[m
[32m+[m[32m 64a:	89 c2                	mov    %eax,%edx[m
[32m+[m[32m 64c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m 650:	83 c1 01             	add    $0x1,%ecx[m
[32m+[m[32m 653:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx[m
[32m+[m[32m 657:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m 65a:	84 db                	test   %bl,%bl[m
[32m+[m[32m 65c:	88 5a ff             	mov    %bl,-0x1(%edx)[m
[32m+[m[32m 65f:	75 ef                	jne    650 <strcpy+0x10>[m
[32m+[m[32m    ;[m
[32m+[m[32m  return os;[m
[32m+[m[32m}[m
[32m+[m[32m 661:	5b                   	pop    %ebx[m
[32m+[m[32m 662:	5d                   	pop    %ebp[m
[32m+[m[32m 663:	c3                   	ret[m[41m    [m
[32m+[m[32m 664:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m 66a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi[m
[32m+[m
[32m+[m[32m00000670 <strcmp>:[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m 670:	55                   	push   %ebp[m
[32m+[m[32m 671:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 673:	56                   	push   %esi[m
[32m+[m[32m 674:	53                   	push   %ebx[m
[32m+[m[32m 675:	8b 55 08             	mov    0x8(%ebp),%edx[m
[32m+[m[32m 678:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[32m+[m[32m  while(*p && *p == *q)[m
[32m+[m[32m 67b:	0f b6 02             	movzbl (%edx),%eax[m
[32m+[m[32m 67e:	0f b6 19             	movzbl (%ecx),%ebx[m
[32m+[m[32m 681:	84 c0                	test   %al,%al[m
[32m+[m[32m 683:	75 1e                	jne    6a3 <strcmp+0x33>[m
[32m+[m[32m 685:	eb 29                	jmp    6b0 <strcmp+0x40>[m
[32m+[m[32m 687:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m 689:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    p++, q++;[m
[32m+[m[32m 690:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m  while(*p && *p == *q)[m
[32m+[m[32m 693:	0f b6 02             	movzbl (%edx),%eax[m
[32m+[m[32m    p++, q++;[m
[32m+[m[32m 696:	8d 71 01             	lea    0x1(%ecx),%esi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m  while(*p && *p == *q)[m
[32m+[m[32m 699:	0f b6 59 01          	movzbl 0x1(%ecx),%ebx[m
[32m+[m[32m 69d:	84 c0                	test   %al,%al[m
[32m+[m[32m 69f:	74 0f                	je     6b0 <strcmp+0x40>[m
[32m+[m[32m 6a1:	89 f1                	mov    %esi,%ecx[m
[32m+[m[32m 6a3:	38 d8                	cmp    %bl,%al[m
[32m+[m[32m 6a5:	74 e9                	je     690 <strcmp+0x20>[m
[32m+[m[32m    p++, q++;[m
[32m+[m[32m  return (uchar)*p - (uchar)*q;[m
[32m+[m[32m 6a7:	29 d8                	sub    %ebx,%eax[m
[32m+[m[32m}[m
[32m+[m[32m 6a9:	5b                   	pop    %ebx[m
[32m+[m[32m 6aa:	5e                   	pop    %esi[m
[32m+[m[32m 6ab:	5d                   	pop    %ebp[m
[32m+[m[32m 6ac:	c3                   	ret[m[41m    [m
[32m+[m[32m 6ad:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m  while(*p && *p == *q)[m
[32m+[m[32m 6b0:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m    p++, q++;[m
[32m+[m[32m  return (uchar)*p - (uchar)*q;[m
[32m+[m[32m 6b2:	29 d8                	sub    %ebx,%eax[m
[32m+[m[32m}[m
[32m+[m[32m 6b4:	5b                   	pop    %ebx[m
[32m+[m[32m 6b5:	5e                   	pop    %esi[m
[32m+[m[32m 6b6:	5d                   	pop    %ebp[m
[32m+[m[32m 6b7:	c3                   	ret[m[41m    [m
[32m+[m[32m 6b8:	90                   	nop[m
[32m+[m[32m 6b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m
[32m+[m[32m000006c0 <strlen>:[m
[32m+[m
[32m+[m[32muint[m
[32m+[m[32mstrlen(char *s)[m
[32m+[m[32m{[m
[32m+[m[32m 6c0:	55                   	push   %ebp[m
[32m+[m[32m 6c1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 6c3:	8b 4d 08             	mov    0x8(%ebp),%ecx[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  for(n = 0; s[n]; n++)[m
[32m+[m[32m 6c6:	80 39 00             	cmpb   $0x0,(%ecx)[m
[32m+[m[32m 6c9:	74 12                	je     6dd <strlen+0x1d>[m
[32m+[m[32m 6cb:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m 6cd:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m 6d0:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m 6d3:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)[m
[32m+[m[32m 6d7:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m 6d9:	75 f5                	jne    6d0 <strlen+0x10>[m
[32m+[m[32m    ;[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
[32m+[m[32m 6db:	5d                   	pop    %ebp[m
[32m+[m[32m 6dc:	c3                   	ret[m[41m    [m
[32m+[m[32muint[m
[32m+[m[32mstrlen(char *s)[m
[32m+[m[32m{[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  for(n = 0; s[n]; n++)[m
[32m+[m[32m 6dd:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m    ;[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
[32m+[m[32m 6df:	5d                   	pop    %ebp[m
[32m+[m[32m 6e0:	c3                   	ret[m[41m    [m
[32m+[m[32m 6e1:	eb 0d                	jmp    6f0 <memset>[m
[32m+[m[32m 6e3:	90                   	nop[m
[32m+[m[32m 6e4:	90                   	nop[m
[32m+[m[32m 6e5:	90                   	nop[m
[32m+[m[32m 6e6:	90                   	nop[m
[32m+[m[32m 6e7:	90                   	nop[m
[32m+[m[32m 6e8:	90                   	nop[m
[32m+[m[32m 6e9:	90                   	nop[m
[32m+[m[32m 6ea:	90                   	nop[m
[32m+[m[32m 6eb:	90                   	nop[m
[32m+[m[32m 6ec:	90                   	nop[m
[32m+[m[32m 6ed:	90                   	nop[m
[32m+[m[32m 6ee:	90                   	nop[m
[32m+[m[32m 6ef:	90                   	nop[m
[32m+[m
[32m+[m[32m000006f0 <memset>:[m
[32m+[m
[32m+[m[32mvoid*[m
[32m+[m[32mmemset(void *dst, int c, uint n)[m
[32m+[m[32m{[m
[32m+[m[32m 6f0:	55                   	push   %ebp[m
[32m+[m[32m 6f1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 6f3:	57                   	push   %edi[m
[32m+[m[32m 6f4:	8b 55 08             	mov    0x8(%ebp),%edx[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32mstosb(void *addr, int data, int cnt)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("cld; rep stosb" :[m
[32m+[m[32m 6f7:	8b 4d 10             	mov    0x10(%ebp),%ecx[m
[32m+[m[32m 6fa:	8b 45 0c             	mov    0xc(%ebp),%eax[m
[32m+[m[32m 6fd:	89 d7                	mov    %edx,%edi[m
[32m+[m[32m 6ff:	fc                   	cld[m[41m    [m
[32m+[m[32m 700:	f3 aa                	rep stos %al,%es:(%edi)[m
[32m+[m[32m  stosb(dst, c, n);[m
[32m+[m[32m  return dst;[m
[32m+[m[32m}[m
[32m+[m[32m 702:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m 704:	5f                   	pop    %edi[m
[32m+[m[32m 705:	5d                   	pop    %ebp[m
[32m+[m[32m 706:	c3                   	ret[m[41m    [m
[32m+[m[32m 707:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m 709:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m
[32m+[m[32m00000710 <strchr>:[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mstrchr(const char *s, char c)[m
[32m+[m[32m{[m
[32m+[m[32m 710:	55                   	push   %ebp[m
[32m+[m[32m 711:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 713:	53                   	push   %ebx[m
[32m+[m[32m 714:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m 717:	8b 5d 0c             	mov    0xc(%ebp),%ebx[m
[32m+[m[32m  for(; *s; s++)[m
[32m+[m[32m 71a:	0f b6 10             	movzbl (%eax),%edx[m
[32m+[m[32m 71d:	84 d2                	test   %dl,%dl[m
[32m+[m[32m 71f:	74 1d                	je     73e <strchr+0x2e>[m
[32m+[m[32m    if(*s == c)[m
[32m+[m[32m 721:	38 d3                	cmp    %dl,%bl[m
[32m+[m[32m 723:	89 d9                	mov    %ebx,%ecx[m
[32m+[m[32m 725:	75 0d                	jne    734 <strchr+0x24>[m
[32m+[m[32m 727:	eb 17                	jmp    740 <strchr+0x30>[m
[32m+[m[32m 729:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m 730:	38 ca                	cmp    %cl,%dl[m
[32m+[m[32m 732:	74 0c                	je     740 <strchr+0x30>[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mstrchr(const char *s, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  for(; *s; s++)[m
[32m+[m[32m 734:	83 c0 01             	add    $0x1,%eax[m
[32m+[m[32m 737:	0f b6 10             	movzbl (%eax),%edx[m
[32m+[m[32m 73a:	84 d2                	test   %dl,%dl[m
[32m+[m[32m 73c:	75 f2                	jne    730 <strchr+0x20>[m
[32m+[m[32m    if(*s == c)[m
[32m+[m[32m      return (char*)s;[m
[32m+[m[32m  return 0;[m
[32m+[m[32m 73e:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m}[m
[32m+[m[32m 740:	5b                   	pop    %ebx[m
[32m+[m[32m 741:	5d                   	pop    %ebp[m
[32m+[m[32m 742:	c3                   	ret[m[41m    [m
[32m+[m[32m 743:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m 749:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m
[32m+[m[32m00000750 <gets>:[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
[32m+[m[32m 750:	55                   	push   %ebp[m
[32m+[m[32m 751:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 753:	57                   	push   %edi[m
[32m+[m[32m 754:	56                   	push   %esi[m
[32m+[m[32m 755:	53                   	push   %ebx[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
[32m+[m[32m 756:	31 f6                	xor    %esi,%esi[m
[32m+[m[32m    cc = read(0, &c, 1);[m
[32m+[m[32m 758:	8d 7d e7             	lea    -0x19(%ebp),%edi[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
[32m+[m[32m 75b:	83 ec 1c             	sub    $0x1c,%esp[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
[32m+[m[32m 75e:	eb 29                	jmp    789 <gets+0x39>[m
[32m+[m[32m    cc = read(0, &c, 1);[m
[32m+[m[32m 760:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m 763:	6a 01                	push   $0x1[m
[32m+[m[32m 765:	57                   	push   %edi[m
[32m+[m[32m 766:	6a 00                	push   $0x0[m
[32m+[m[32m 768:	e8 2d 01 00 00       	call   89a <read>[m
[32m+[m[32m    if(cc < 1)[m
[32m+[m[32m 76d:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 770:	85 c0                	test   %eax,%eax[m
[32m+[m[32m 772:	7e 1d                	jle    791 <gets+0x41>[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m 774:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax[m
[32m+[m[32m 778:	8b 55 08             	mov    0x8(%ebp),%edx[m
[32m+[m[32m 77b:	89 de                	mov    %ebx,%esi[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m 77d:	3c 0a                	cmp    $0xa,%al[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
[32m+[m[32m    cc = read(0, &c, 1);[m
[32m+[m[32m    if(cc < 1)[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m 77f:	88 44 1a ff          	mov    %al,-0x1(%edx,%ebx,1)[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m 783:	74 1b                	je     7a0 <gets+0x50>[m
[32m+[m[32m 785:	3c 0d                	cmp    $0xd,%al[m
[32m+[m[32m 787:	74 17                	je     7a0 <gets+0x50>[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
[32m+[m[32m 789:	8d 5e 01             	lea    0x1(%esi),%ebx[m
[32m+[m[32m 78c:	3b 5d 0c             	cmp    0xc(%ebp),%ebx[m
[32m+[m[32m 78f:	7c cf                	jl     760 <gets+0x10>[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m[32m  buf[i] = '\0';[m
[32m+[m[32m 791:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m 794:	c6 04 30 00          	movb   $0x0,(%eax,%esi,1)[m
[32m+[m[32m  return buf;[m
[32m+[m[32m}[m
[32m+[m[32m 798:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m 79b:	5b                   	pop    %ebx[m
[32m+[m[32m 79c:	5e                   	pop    %esi[m
[32m+[m[32m 79d:	5f                   	pop    %edi[m
[32m+[m[32m 79e:	5d                   	pop    %ebp[m
[32m+[m[32m 79f:	c3                   	ret[m[41m    [m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m[32m  buf[i] = '\0';[m
[32m+[m[32m 7a0:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
[32m+[m[32m 7a3:	89 de                	mov    %ebx,%esi[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m[32m  buf[i] = '\0';[m
[32m+[m[32m 7a5:	c6 04 30 00          	movb   $0x0,(%eax,%esi,1)[m
[32m+[m[32m  return buf;[m
[32m+[m[32m}[m
[32m+[m[32m 7a9:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m 7ac:	5b                   	pop    %ebx[m
[32m+[m[32m 7ad:	5e                   	pop    %esi[m
[32m+[m[32m 7ae:	5f                   	pop    %edi[m
[32m+[m[32m 7af:	5d                   	pop    %ebp[m
[32m+[m[32m 7b0:	c3                   	ret[m[41m    [m
[32m+[m[32m 7b1:	eb 0d                	jmp    7c0 <stat>[m
[32m+[m[32m 7b3:	90                   	nop[m
[32m+[m[32m 7b4:	90                   	nop[m
[32m+[m[32m 7b5:	90                   	nop[m
[32m+[m[32m 7b6:	90                   	nop[m
[32m+[m[32m 7b7:	90                   	nop[m
[32m+[m[32m 7b8:	90                   	nop[m
[32m+[m[32m 7b9:	90                   	nop[m
[32m+[m[32m 7ba:	90                   	nop[m
[32m+[m[32m 7bb:	90                   	nop[m
[32m+[m[32m 7bc:	90                   	nop[m
[32m+[m[32m 7bd:	90                   	nop[m
[32m+[m[32m 7be:	90                   	nop[m
[32m+[m[32m 7bf:	90                   	nop[m
[32m+[m
[32m+[m[32m000007c0 <stat>:[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstat(char *n, struct stat *st)[m
[32m+[m[32m{[m
[32m+[m[32m 7c0:	55                   	push   %ebp[m
[32m+[m[32m 7c1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 7c3:	56                   	push   %esi[m
[32m+[m[32m 7c4:	53                   	push   %ebx[m
[32m+[m[32m  int fd;[m
[32m+[m[32m  int r;[m
[32m+[m
[32m+[m[32m  fd = open(n, O_RDONLY);[m
[32m+[m[32m 7c5:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m 7c8:	6a 00                	push   $0x0[m
[32m+[m[32m 7ca:	ff 75 08             	pushl  0x8(%ebp)[m
[32m+[m[32m 7cd:	e8 f0 00 00 00       	call   8c2 <open>[m
[32m+[m[32m  if(fd < 0)[m
[32m+[m[32m 7d2:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 7d5:	85 c0                	test   %eax,%eax[m
[32m+[m[32m 7d7:	78 27                	js     800 <stat+0x40>[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  r = fstat(fd, st);[m
[32m+[m[32m 7d9:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m 7dc:	ff 75 0c             	pushl  0xc(%ebp)[m
[32m+[m[32m 7df:	89 c3                	mov    %eax,%ebx[m
[32m+[m[32m 7e1:	50                   	push   %eax[m
[32m+[m[32m 7e2:	e8 f3 00 00 00       	call   8da <fstat>[m
[32m+[m[32m 7e7:	89 c6                	mov    %eax,%esi[m
[32m+[m[32m  close(fd);[m
[32m+[m[32m 7e9:	89 1c 24             	mov    %ebx,(%esp)[m
[32m+[m[32m 7ec:	e8 b9 00 00 00       	call   8aa <close>[m
[32m+[m[32m  return r;[m
[32m+[m[32m 7f1:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 7f4:	89 f0                	mov    %esi,%eax[m
[32m+[m[32m}[m
[32m+[m[32m 7f6:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[32m+[m[32m 7f9:	5b                   	pop    %ebx[m
[32m+[m[32m 7fa:	5e                   	pop    %esi[m
[32m+[m[32m 7fb:	5d                   	pop    %ebp[m
[32m+[m[32m 7fc:	c3                   	ret[m[41m    [m
[32m+[m[32m 7fd:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m  int fd;[m
[32m+[m[32m  int r;[m
[32m+[m
[32m+[m[32m  fd = open(n, O_RDONLY);[m
[32m+[m[32m  if(fd < 0)[m
[32m+[m[32m    return -1;[m
[32m+[m[32m 800:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[32m+[m[32m 805:	eb ef                	jmp    7f6 <stat+0x36>[m
[32m+[m[32m 807:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m 809:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m
[32m+[m[32m00000810 <atoi>:[m
[32m+[m[32m  return r;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32matoi(const char *s)[m
[32m+[m[32m{[m
[32m+[m[32m 810:	55                   	push   %ebp[m
[32m+[m[32m 811:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 813:	53                   	push   %ebx[m
[32m+[m[32m 814:	8b 4d 08             	mov    0x8(%ebp),%ecx[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  n = 0;[m
[32m+[m[32m  while('0' <= *s && *s <= '9')[m
[32m+[m[32m 817:	0f be 11             	movsbl (%ecx),%edx[m
[32m+[m[32m 81a:	8d 42 d0             	lea    -0x30(%edx),%eax[m
[32m+[m[32m 81d:	3c 09                	cmp    $0x9,%al[m
[32m+[m[32m 81f:	b8 00 00 00 00       	mov    $0x0,%eax[m
[32m+[m[32m 824:	77 1f                	ja     845 <atoi+0x35>[m
[32m+[m[32m 826:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m 829:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    n = n*10 + *s++ - '0';[m
[32m+[m[32m 830:	8d 04 80             	lea    (%eax,%eax,4),%eax[m
[32m+[m[32m 833:	83 c1 01             	add    $0x1,%ecx[m
[32m+[m[32m 836:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax[m
[32m+[m[32matoi(const char *s)[m
[32m+[m[32m{[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  n = 0;[m
[32m+[m[32m  while('0' <= *s && *s <= '9')[m
[32m+[m[32m 83a:	0f be 11             	movsbl (%ecx),%edx[m
[32m+[m[32m 83d:	8d 5a d0             	lea    -0x30(%edx),%ebx[m
[32m+[m[32m 840:	80 fb 09             	cmp    $0x9,%bl[m
[32m+[m[32m 843:	76 eb                	jbe    830 <atoi+0x20>[m
[32m+[m[32m    n = n*10 + *s++ - '0';[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
[32m+[m[32m 845:	5b                   	pop    %ebx[m
[32m+[m[32m 846:	5d                   	pop    %ebp[m
[32m+[m[32m 847:	c3                   	ret[m[41m    [m
[32m+[m[32m 848:	90                   	nop[m
[32m+[m[32m 849:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m
[32m+[m[32m00000850 <memmove>:[m
[32m+[m
[32m+[m[32mvoid*[m
[32m+[m[32mmemmove(void *vdst, void *vsrc, int n)[m
[32m+[m[32m{[m
[32m+[m[32m 850:	55                   	push   %ebp[m
[32m+[m[32m 851:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 853:	56                   	push   %esi[m
[32m+[m[32m 854:	53                   	push   %ebx[m
[32m+[m[32m 855:	8b 5d 10             	mov    0x10(%ebp),%ebx[m
[32m+[m[32m 858:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m 85b:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[32m+[m[32m  char *dst, *src;[m
[32m+[m
[32m+[m[32m  dst = vdst;[m
[32m+[m[32m  src = vsrc;[m
[32m+[m[32m  while(n-- > 0)[m
[32m+[m[32m 85e:	85 db                	test   %ebx,%ebx[m
[32m+[m[32m 860:	7e 14                	jle    876 <memmove+0x26>[m
[32m+[m[32m 862:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m 864:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    *dst++ = *src++;[m
[32m+[m[32m 868:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx[m
[32m+[m[32m 86c:	88 0c 10             	mov    %cl,(%eax,%edx,1)[m
[32m+[m[32m 86f:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m{[m
[32m+[m[32m  char *dst, *src;[m
[32m+[m
[32m+[m[32m  dst = vdst;[m
[32m+[m[32m  src = vsrc;[m
[32m+[m[32m  while(n-- > 0)[m
[32m+[m[32m 872:	39 da                	cmp    %ebx,%edx[m
[32m+[m[32m 874:	75 f2                	jne    868 <memmove+0x18>[m
[32m+[m[32m    *dst++ = *src++;[m
[32m+[m[32m  return vdst;[m
[32m+[m[32m}[m
[32m+[m[32m 876:	5b                   	pop    %ebx[m
[32m+[m[32m 877:	5e                   	pop    %esi[m
[32m+[m[32m 878:	5d                   	pop    %ebp[m
[32m+[m[32m 879:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m0000087a <fork>:[m
[32m+[m[32m 87a:	b8 01 00 00 00       	mov    $0x1,%eax[m
[32m+[m[32m 87f:	cd 40                	int    $0x40[m
[32m+[m[32m 881:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m00000882 <exit>:[m
[32m+[m[32m 882:	b8 02 00 00 00       	mov    $0x2,%eax[m
[32m+[m[32m 887:	cd 40                	int    $0x40[m
[32m+[m[32m 889:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m0000088a <wait>:[m
[32m+[m[32m 88a:	b8 03 00 00 00       	mov    $0x3,%eax[m
[32m+[m[32m 88f:	cd 40                	int    $0x40[m
[32m+[m[32m 891:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m00000892 <pipe>:[m
[32m+[m[32m 892:	b8 04 00 00 00       	mov    $0x4,%eax[m
[32m+[m[32m 897:	cd 40                	int    $0x40[m
[32m+[m[32m 899:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m0000089a <read>:[m
[32m+[m[32m 89a:	b8 05 00 00 00       	mov    $0x5,%eax[m
[32m+[m[32m 89f:	cd 40                	int    $0x40[m
[32m+[m[32m 8a1:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m000008a2 <write>:[m
[32m+[m[32m 8a2:	b8 10 00 00 00       	mov    $0x10,%eax[m
[32m+[m[32m 8a7:	cd 40                	int    $0x40[m
[32m+[m[32m 8a9:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m000008aa <close>:[m
[32m+[m[32m 8aa:	b8 15 00 00 00       	mov    $0x15,%eax[m
[32m+[m[32m 8af:	cd 40                	int    $0x40[m
[32m+[m[32m 8b1:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m000008b2 <kill>:[m
[32m+[m[32m 8b2:	b8 06 00 00 00       	mov    $0x6,%eax[m
[32m+[m[32m 8b7:	cd 40                	int    $0x40[m
[32m+[m[32m 8b9:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m000008ba <exec>:[m
[32m+[m[32m 8ba:	b8 07 00 00 00       	mov    $0x7,%eax[m
[32m+[m[32m 8bf:	cd 40                	int    $0x40[m
[32m+[m[32m 8c1:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m000008c2 <open>:[m
[32m+[m[32m 8c2:	b8 0f 00 00 00       	mov    $0xf,%eax[m
[32m+[m[32m 8c7:	cd 40                	int    $0x40[m
[32m+[m[32m 8c9:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m000008ca <mknod>:[m
[32m+[m[32m 8ca:	b8 11 00 00 00       	mov    $0x11,%eax[m
[32m+[m[32m 8cf:	cd 40                	int    $0x40[m
[32m+[m[32m 8d1:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m000008d2 <unlink>:[m
[32m+[m[32m 8d2:	b8 12 00 00 00       	mov    $0x12,%eax[m
[32m+[m[32m 8d7:	cd 40                	int    $0x40[m
[32m+[m[32m 8d9:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m000008da <fstat>:[m
[32m+[m[32m 8da:	b8 08 00 00 00       	mov    $0x8,%eax[m
[32m+[m[32m 8df:	cd 40                	int    $0x40[m
[32m+[m[32m 8e1:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m000008e2 <link>:[m
[32m+[m[32m 8e2:	b8 13 00 00 00       	mov    $0x13,%eax[m
[32m+[m[32m 8e7:	cd 40                	int    $0x40[m
[32m+[m[32m 8e9:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m000008ea <mkdir>:[m
[32m+[m[32m 8ea:	b8 14 00 00 00       	mov    $0x14,%eax[m
[32m+[m[32m 8ef:	cd 40                	int    $0x40[m
[32m+[m[32m 8f1:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m000008f2 <chdir>:[m
[32m+[m[32m 8f2:	b8 09 00 00 00       	mov    $0x9,%eax[m
[32m+[m[32m 8f7:	cd 40                	int    $0x40[m
[32m+[m[32m 8f9:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m000008fa <dup>:[m
[32m+[m[32m 8fa:	b8 0a 00 00 00       	mov    $0xa,%eax[m
[32m+[m[32m 8ff:	cd 40                	int    $0x40[m
[32m+[m[32m 901:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m00000902 <getpid>:[m
[32m+[m[32m 902:	b8 0b 00 00 00       	mov    $0xb,%eax[m
[32m+[m[32m 907:	cd 40                	int    $0x40[m
[32m+[m[32m 909:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m0000090a <sbrk>:[m
[32m+[m[32m 90a:	b8 0c 00 00 00       	mov    $0xc,%eax[m
[32m+[m[32m 90f:	cd 40                	int    $0x40[m
[32m+[m[32m 911:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m00000912 <sleep>:[m
[32m+[m[32m 912:	b8 0d 00 00 00       	mov    $0xd,%eax[m
[32m+[m[32m 917:	cd 40                	int    $0x40[m
[32m+[m[32m 919:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m0000091a <uptime>:[m
[32m+[m[32m 91a:	b8 0e 00 00 00       	mov    $0xe,%eax[m
[32m+[m[32m 91f:	cd 40                	int    $0x40[m
[32m+[m[32m 921:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m00000922 <set>:[m
[32m+[m[32m 922:	b8 16 00 00 00       	mov    $0x16,%eax[m
[32m+[m[32m 927:	cd 40                	int    $0x40[m
[32m+[m[32m 929:	c3                   	ret[m[41m    [m
[32m+[m[32m 92a:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 92c:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 92e:	66 90                	xchg   %ax,%ax[m
[32m+[m
[32m+[m[32m00000930 <printint>:[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mprintint(int fd, int xx, int base, int sgn)[m
[32m+[m[32m{[m
[32m+[m[32m 930:	55                   	push   %ebp[m
[32m+[m[32m 931:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 933:	57                   	push   %edi[m
[32m+[m[32m 934:	56                   	push   %esi[m
[32m+[m[32m 935:	53                   	push   %ebx[m
[32m+[m[32m 936:	89 c6                	mov    %eax,%esi[m
[32m+[m[32m 938:	83 ec 3c             	sub    $0x3c,%esp[m
[32m+[m[32m  char buf[16];[m
[32m+[m[32m  int i, neg;[m
[32m+[m[32m  uint x;[m
[32m+[m
[32m+[m[32m  neg = 0;[m
[32m+[m[32m  if(sgn && xx < 0){[m
[32m+[m[32m 93b:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m 93e:	85 db                	test   %ebx,%ebx[m
[32m+[m[32m 940:	74 7e                	je     9c0 <printint+0x90>[m
[32m+[m[32m 942:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m 944:	c1 e8 1f             	shr    $0x1f,%eax[m
[32m+[m[32m 947:	84 c0                	test   %al,%al[m
[32m+[m[32m 949:	74 75                	je     9c0 <printint+0x90>[m
[32m+[m[32m    neg = 1;[m
[32m+[m[32m    x = -xx;[m
[32m+[m[32m 94b:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m  int i, neg;[m
[32m+[m[32m  uint x;[m
[32m+[m
[32m+[m[32m  neg = 0;[m
[32m+[m[32m  if(sgn && xx < 0){[m
[32m+[m[32m    neg = 1;[m
[32m+[m[32m 94d:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)[m
[32m+[m[32m    x = -xx;[m
[32m+[m[32m 954:	f7 d8                	neg    %eax[m
[32m+[m[32m 956:	89 75 c0             	mov    %esi,-0x40(%ebp)[m
[32m+[m[32m  } else {[m
[32m+[m[32m    x = xx;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  i = 0;[m
[32m+[m[32m 959:	31 ff                	xor    %edi,%edi[m
[32m+[m[32m 95b:	8d 5d d7             	lea    -0x29(%ebp),%ebx[m
[32m+[m[32m 95e:	89 ce                	mov    %ecx,%esi[m
[32m+[m[32m 960:	eb 08                	jmp    96a <printint+0x3a>[m
[32m+[m[32m 962:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m  do{[m
[32m+[m[32m    buf[i++] = digits[x % base];[m
[32m+[m[32m 968:	89 cf                	mov    %ecx,%edi[m
[32m+[m[32m 96a:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m 96c:	8d 4f 01             	lea    0x1(%edi),%ecx[m
[32m+[m[32m 96f:	f7 f6                	div    %esi[m
[32m+[m[32m 971:	0f b6 92 24 0d 00 00 	movzbl 0xd24(%edx),%edx[m
[32m+[m[32m  }while((x /= base) != 0);[m
[32m+[m[32m 978:	85 c0                	test   %eax,%eax[m
[32m+[m[32m    x = xx;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  i = 0;[m
[32m+[m[32m  do{[m
[32m+[m[32m    buf[i++] = digits[x % base];[m
[32m+[m[32m 97a:	88 14 0b             	mov    %dl,(%ebx,%ecx,1)[m
[32m+[m[32m  }while((x /= base) != 0);[m
[32m+[m[32m 97d:	75 e9                	jne    968 <printint+0x38>[m
[32m+[m[32m  if(neg)[m
[32m+[m[32m 97f:	8b 45 c4             	mov    -0x3c(%ebp),%eax[m
[32m+[m[32m 982:	8b 75 c0             	mov    -0x40(%ebp),%esi[m
[32m+[m[32m 985:	85 c0                	test   %eax,%eax[m
[32m+[m[32m 987:	74 08                	je     991 <printint+0x61>[m
[32m+[m[32m    buf[i++] = '-';[m
[32m+[m[32m 989:	c6 44 0d d8 2d       	movb   $0x2d,-0x28(%ebp,%ecx,1)[m
[32m+[m[32m 98e:	8d 4f 02             	lea    0x2(%edi),%ecx[m
[32m+[m[32m 991:	8d 7c 0d d7          	lea    -0x29(%ebp,%ecx,1),%edi[m
[32m+[m[32m 995:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m 998:	0f b6 07             	movzbl (%edi),%eax[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m 99b:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m 99e:	83 ef 01             	sub    $0x1,%edi[m
[32m+[m[32m 9a1:	6a 01                	push   $0x1[m
[32m+[m[32m 9a3:	53                   	push   %ebx[m
[32m+[m[32m 9a4:	56                   	push   %esi[m
[32m+[m[32m 9a5:	88 45 d7             	mov    %al,-0x29(%ebp)[m
[32m+[m[32m 9a8:	e8 f5 fe ff ff       	call   8a2 <write>[m
[32m+[m[32m    buf[i++] = digits[x % base];[m
[32m+[m[32m  }while((x /= base) != 0);[m
[32m+[m[32m  if(neg)[m
[32m+[m[32m    buf[i++] = '-';[m
[32m+[m
[32m+[m[32m  while(--i >= 0)[m
[32m+[m[32m 9ad:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 9b0:	39 df                	cmp    %ebx,%edi[m
[32m+[m[32m 9b2:	75 e4                	jne    998 <printint+0x68>[m
[32m+[m[32m    putc(fd, buf[i]);[m
[32m+[m[32m}[m
[32m+[m[32m 9b4:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m 9b7:	5b                   	pop    %ebx[m
[32m+[m[32m 9b8:	5e                   	pop    %esi[m
[32m+[m[32m 9b9:	5f                   	pop    %edi[m
[32m+[m[32m 9ba:	5d                   	pop    %ebp[m
[32m+[m[32m 9bb:	c3                   	ret[m[41m    [m
[32m+[m[32m 9bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  neg = 0;[m
[32m+[m[32m  if(sgn && xx < 0){[m
[32m+[m[32m    neg = 1;[m
[32m+[m[32m    x = -xx;[m
[32m+[m[32m  } else {[m
[32m+[m[32m    x = xx;[m
[32m+[m[32m 9c0:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m  static char digits[] = "0123456789ABCDEF";[m
[32m+[m[32m  char buf[16];[m
[32m+[m[32m  int i, neg;[m
[32m+[m[32m  uint x;[m
[32m+[m
[32m+[m[32m  neg = 0;[m
[32m+[m[32m 9c2:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)[m
[32m+[m[32m 9c9:	eb 8b                	jmp    956 <printint+0x26>[m
[32m+[m[32m 9cb:	90                   	nop[m
[32m+[m[32m 9cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m
[32m+[m[32m000009d0 <printf>:[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Print to the given fd. Only understands %d, %x, %p, %s.[m
[32m+[m[32mvoid[m
[32m+[m[32mprintf(int fd, char *fmt, ...)[m
[32m+[m[32m{[m
[32m+[m[32m 9d0:	55                   	push   %ebp[m
[32m+[m[32m 9d1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 9d3:	57                   	push   %edi[m
[32m+[m[32m 9d4:	56                   	push   %esi[m
[32m+[m[32m 9d5:	53                   	push   %ebx[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m 9d6:	8d 45 10             	lea    0x10(%ebp),%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Print to the given fd. Only understands %d, %x, %p, %s.[m
[32m+[m[32mvoid[m
[32m+[m[32mprintf(int fd, char *fmt, ...)[m
[32m+[m[32m{[m
[32m+[m[32m 9d9:	83 ec 2c             	sub    $0x2c,%esp[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m 9dc:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Print to the given fd. Only understands %d, %x, %p, %s.[m
[32m+[m[32mvoid[m
[32m+[m[32mprintf(int fd, char *fmt, ...)[m
[32m+[m[32m{[m
[32m+[m[32m 9df:	8b 7d 08             	mov    0x8(%ebp),%edi[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m 9e2:	89 45 d0             	mov    %eax,-0x30(%ebp)[m
[32m+[m[32m 9e5:	0f b6 1e             	movzbl (%esi),%ebx[m
[32m+[m[32m 9e8:	83 c6 01             	add    $0x1,%esi[m
[32m+[m[32m 9eb:	84 db                	test   %bl,%bl[m
[32m+[m[32m 9ed:	0f 84 b0 00 00 00    	je     aa3 <printf+0xd3>[m
[32m+[m[32m 9f3:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m 9f5:	eb 39                	jmp    a30 <printf+0x60>[m
[32m+[m[32m 9f7:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m 9f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    c = fmt[i] & 0xff;[m
[32m+[m[32m    if(state == 0){[m
[32m+[m[32m      if(c == '%'){[m
[32m+[m[32m a00:	83 f8 25             	cmp    $0x25,%eax[m
[32m+[m[32m a03:	89 55 d4             	mov    %edx,-0x2c(%ebp)[m
[32m+[m[32m        state = '%';[m
[32m+[m[32m a06:	ba 25 00 00 00       	mov    $0x25,%edx[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m    c = fmt[i] & 0xff;[m
[32m+[m[32m    if(state == 0){[m
[32m+[m[32m      if(c == '%'){[m
[32m+[m[32m a0b:	74 18                	je     a25 <printf+0x55>[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m a0d:	8d 45 e2             	lea    -0x1e(%ebp),%eax[m
[32m+[m[32m a10:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m a13:	88 5d e2             	mov    %bl,-0x1e(%ebp)[m
[32m+[m[32m a16:	6a 01                	push   $0x1[m
[32m+[m[32m a18:	50                   	push   %eax[m
[32m+[m[32m a19:	57                   	push   %edi[m
[32m+[m[32m a1a:	e8 83 fe ff ff       	call   8a2 <write>[m
[32m+[m[32m a1f:	8b 55 d4             	mov    -0x2c(%ebp),%edx[m
[32m+[m[32m a22:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m a25:	83 c6 01             	add    $0x1,%esi[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m a28:	0f b6 5e ff          	movzbl -0x1(%esi),%ebx[m
[32m+[m[32m a2c:	84 db                	test   %bl,%bl[m
[32m+[m[32m a2e:	74 73                	je     aa3 <printf+0xd3>[m
[32m+[m[32m    c = fmt[i] & 0xff;[m
[32m+[m[32m    if(state == 0){[m
[32m+[m[32m a30:	85 d2                	test   %edx,%edx[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m    c = fmt[i] & 0xff;[m
[32m+[m[32m a32:	0f be cb             	movsbl %bl,%ecx[m
[32m+[m[32m a35:	0f b6 c3             	movzbl %bl,%eax[m
[32m+[m[32m    if(state == 0){[m
[32m+[m[32m a38:	74 c6                	je     a00 <printf+0x30>[m
[32m+[m[32m      if(c == '%'){[m
[32m+[m[32m        state = '%';[m
[32m+[m[32m      } else {[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m    } else if(state == '%'){[m
[32m+[m[32m a3a:	83 fa 25             	cmp    $0x25,%edx[m
[32m+[m[32m a3d:	75 e6                	jne    a25 <printf+0x55>[m
[32m+[m[32m      if(c == 'd'){[m
[32m+[m[32m a3f:	83 f8 64             	cmp    $0x64,%eax[m
[32m+[m[32m a42:	0f 84 f8 00 00 00    	je     b40 <printf+0x170>[m
[32m+[m[32m        printint(fd, *ap, 10, 1);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == 'x' || c == 'p'){[m
[32m+[m[32m a48:	81 e1 f7 00 00 00    	and    $0xf7,%ecx[m
[32m+[m[32m a4e:	83 f9 70             	cmp    $0x70,%ecx[m
[32m+[m[32m a51:	74 5d                	je     ab0 <printf+0xe0>[m
[32m+[m[32m        printint(fd, *ap, 16, 0);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == 's'){[m
[32m+[m[32m a53:	83 f8 73             	cmp    $0x73,%eax[m
[32m+[m[32m a56:	0f 84 84 00 00 00    	je     ae0 <printf+0x110>[m
[32m+[m[32m          s = "(null)";[m
[32m+[m[32m        while(*s != 0){[m
[32m+[m[32m          putc(fd, *s);[m
[32m+[m[32m          s++;[m
[32m+[m[32m        }[m
[32m+[m[32m      } else if(c == 'c'){[m
[32m+[m[32m a5c:	83 f8 63             	cmp    $0x63,%eax[m
[32m+[m[32m a5f:	0f 84 ea 00 00 00    	je     b4f <printf+0x17f>[m
[32m+[m[32m        putc(fd, *ap);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == '%'){[m
[32m+[m[32m a65:	83 f8 25             	cmp    $0x25,%eax[m
[32m+[m[32m a68:	0f 84 c2 00 00 00    	je     b30 <printf+0x160>[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m a6e:	8d 45 e7             	lea    -0x19(%ebp),%eax[m
[32m+[m[32m a71:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m a74:	c6 45 e7 25          	movb   $0x25,-0x19(%ebp)[m
[32m+[m[32m a78:	6a 01                	push   $0x1[m
[32m+[m[32m a7a:	50                   	push   %eax[m
[32m+[m[32m a7b:	57                   	push   %edi[m
[32m+[m[32m a7c:	e8 21 fe ff ff       	call   8a2 <write>[m
[32m+[m[32m a81:	83 c4 0c             	add    $0xc,%esp[m
[32m+[m[32m a84:	8d 45 e6             	lea    -0x1a(%ebp),%eax[m
[32m+[m[32m a87:	88 5d e6             	mov    %bl,-0x1a(%ebp)[m
[32m+[m[32m a8a:	6a 01                	push   $0x1[m
[32m+[m[32m a8c:	50                   	push   %eax[m
[32m+[m[32m a8d:	57                   	push   %edi[m
[32m+[m[32m a8e:	83 c6 01             	add    $0x1,%esi[m
[32m+[m[32m a91:	e8 0c fe ff ff       	call   8a2 <write>[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m a96:	0f b6 5e ff          	movzbl -0x1(%esi),%ebx[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m a9a:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // Unknown % sequence.  Print it to draw attention.[m
[32m+[m[32m        putc(fd, '%');[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m      state = 0;[m
[32m+[m[32m a9d:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m a9f:	84 db                	test   %bl,%bl[m
[32m+[m[32m aa1:	75 8d                	jne    a30 <printf+0x60>[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m      state = 0;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[32m aa3:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m aa6:	5b                   	pop    %ebx[m
[32m+[m[32m aa7:	5e                   	pop    %esi[m
[32m+[m[32m aa8:	5f                   	pop    %edi[m
[32m+[m[32m aa9:	5d                   	pop    %ebp[m
[32m+[m[32m aaa:	c3                   	ret[m[41m    [m
[32m+[m[32m aab:	90                   	nop[m
[32m+[m[32m aac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    } else if(state == '%'){[m
[32m+[m[32m      if(c == 'd'){[m
[32m+[m[32m        printint(fd, *ap, 10, 1);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == 'x' || c == 'p'){[m
[32m+[m[32m        printint(fd, *ap, 16, 0);[m
[32m+[m[32m ab0:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m ab3:	b9 10 00 00 00       	mov    $0x10,%ecx[m
[32m+[m[32m ab8:	6a 00                	push   $0x0[m
[32m+[m[32m aba:	8b 5d d0             	mov    -0x30(%ebp),%ebx[m
[32m+[m[32m abd:	89 f8                	mov    %edi,%eax[m
[32m+[m[32m abf:	8b 13                	mov    (%ebx),%edx[m
[32m+[m[32m ac1:	e8 6a fe ff ff       	call   930 <printint>[m
[32m+[m[32m        ap++;[m
[32m+[m[32m ac6:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m ac8:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // Unknown % sequence.  Print it to draw attention.[m
[32m+[m[32m        putc(fd, '%');[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m      state = 0;[m
[32m+[m[32m acb:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m      if(c == 'd'){[m
[32m+[m[32m        printint(fd, *ap, 10, 1);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == 'x' || c == 'p'){[m
[32m+[m[32m        printint(fd, *ap, 16, 0);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m acd:	83 c0 04             	add    $0x4,%eax[m
[32m+[m[32m ad0:	89 45 d0             	mov    %eax,-0x30(%ebp)[m
[32m+[m[32m ad3:	e9 4d ff ff ff       	jmp    a25 <printf+0x55>[m
[32m+[m[32m ad8:	90                   	nop[m
[32m+[m[32m ad9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m      } else if(c == 's'){[m
[32m+[m[32m        s = (char*)*ap;[m
[32m+[m[32m ae0:	8b 45 d0             	mov    -0x30(%ebp),%eax[m
[32m+[m[32m ae3:	8b 18                	mov    (%eax),%ebx[m
[32m+[m[32m        ap++;[m
[32m+[m[32m ae5:	83 c0 04             	add    $0x4,%eax[m
[32m+[m[32m ae8:	89 45 d0             	mov    %eax,-0x30(%ebp)[m
[32m+[m[32m        if(s == 0)[m
[32m+[m[32m          s = "(null)";[m
[32m+[m[32m aeb:	b8 1c 0d 00 00       	mov    $0xd1c,%eax[m
[32m+[m[32m af0:	85 db                	test   %ebx,%ebx[m
[32m+[m[32m af2:	0f 44 d8             	cmove  %eax,%ebx[m
[32m+[m[32m        while(*s != 0){[m
[32m+[m[32m af5:	0f b6 03             	movzbl (%ebx),%eax[m
[32m+[m[32m af8:	84 c0                	test   %al,%al[m
[32m+[m[32m afa:	74 23                	je     b1f <printf+0x14f>[m
[32m+[m[32m afc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m b00:	88 45 e3             	mov    %al,-0x1d(%ebp)[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m b03:	8d 45 e3             	lea    -0x1d(%ebp),%eax[m
[32m+[m[32m b06:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m b09:	6a 01                	push   $0x1[m
[32m+[m[32m        ap++;[m
[32m+[m[32m        if(s == 0)[m
[32m+[m[32m          s = "(null)";[m
[32m+[m[32m        while(*s != 0){[m
[32m+[m[32m          putc(fd, *s);[m
[32m+[m[32m          s++;[m
[32m+[m[32m b0b:	83 c3 01             	add    $0x1,%ebx[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m b0e:	50                   	push   %eax[m
[32m+[m[32m b0f:	57                   	push   %edi[m
[32m+[m[32m b10:	e8 8d fd ff ff       	call   8a2 <write>[m
[32m+[m[32m      } else if(c == 's'){[m
[32m+[m[32m        s = (char*)*ap;[m
[32m+[m[32m        ap++;[m
[32m+[m[32m        if(s == 0)[m
[32m+[m[32m          s = "(null)";[m
[32m+[m[32m        while(*s != 0){[m
[32m+[m[32m b15:	0f b6 03             	movzbl (%ebx),%eax[m
[32m+[m[32m b18:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m b1b:	84 c0                	test   %al,%al[m
[32m+[m[32m b1d:	75 e1                	jne    b00 <printf+0x130>[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // Unknown % sequence.  Print it to draw attention.[m
[32m+[m[32m        putc(fd, '%');[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m      state = 0;[m
[32m+[m[32m b1f:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m b21:	e9 ff fe ff ff       	jmp    a25 <printf+0x55>[m
[32m+[m[32m b26:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m b29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m b30:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m b33:	88 5d e5             	mov    %bl,-0x1b(%ebp)[m
[32m+[m[32m b36:	8d 45 e5             	lea    -0x1b(%ebp),%eax[m
[32m+[m[32m b39:	6a 01                	push   $0x1[m
[32m+[m[32m b3b:	e9 4c ff ff ff       	jmp    a8c <printf+0xbc>[m
[32m+[m[32m      } else {[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m    } else if(state == '%'){[m
[32m+[m[32m      if(c == 'd'){[m
[32m+[m[32m        printint(fd, *ap, 10, 1);[m
[32m+[m[32m b40:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m b43:	b9 0a 00 00 00       	mov    $0xa,%ecx[m
[32m+[m[32m b48:	6a 01                	push   $0x1[m
[32m+[m[32m b4a:	e9 6b ff ff ff       	jmp    aba <printf+0xea>[m
[32m+[m[32m b4f:	8b 5d d0             	mov    -0x30(%ebp),%ebx[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m b52:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m b55:	8b 03                	mov    (%ebx),%eax[m
[32m+[m[32m b57:	6a 01                	push   $0x1[m
[32m+[m[32m b59:	88 45 e4             	mov    %al,-0x1c(%ebp)[m
[32m+[m[32m b5c:	8d 45 e4             	lea    -0x1c(%ebp),%eax[m
[32m+[m[32m b5f:	50                   	push   %eax[m
[32m+[m[32m b60:	57                   	push   %edi[m
[32m+[m[32m b61:	e8 3c fd ff ff       	call   8a2 <write>[m
[32m+[m[32m b66:	e9 5b ff ff ff       	jmp    ac6 <printf+0xf6>[m
[32m+[m[32m b6b:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m b6d:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m b6f:	90                   	nop[m
[32m+[m
[32m+[m[32m00000b70 <free>:[m
[32m+[m[32mstatic Header base;[m
[32m+[m[32mstatic Header *freep;[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
[32m+[m[32m b70:	55                   	push   %ebp[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
[32m+[m[32m b71:	a1 f4 10 00 00       	mov    0x10f4,%eax[m
[32m+[m[32mstatic Header base;[m
[32m+[m[32mstatic Header *freep;[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
[32m+[m[32m b76:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m b78:	57                   	push   %edi[m
[32m+[m[32m b79:	56                   	push   %esi[m
[32m+[m[32m b7a:	53                   	push   %ebx[m
[32m+[m[32m b7b:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
[32m+[m[32m b7e:	8b 10                	mov    (%eax),%edx[m
[32m+[m[32mvoid[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m b80:	8d 4b f8             	lea    -0x8(%ebx),%ecx[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
[32m+[m[32m b83:	39 c8                	cmp    %ecx,%eax[m
[32m+[m[32m b85:	73 19                	jae    ba0 <free+0x30>[m
[32m+[m[32m b87:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m b89:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m b90:	39 d1                	cmp    %edx,%ecx[m
[32m+[m[32m b92:	72 1c                	jb     bb0 <free+0x40>[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
[32m+[m[32m b94:	39 d0                	cmp    %edx,%eax[m
[32m+[m[32m b96:	73 18                	jae    bb0 <free+0x40>[m
[32m+[m[32mstatic Header base;[m
[32m+[m[32mstatic Header *freep;[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
[32m+[m[32m b98:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
[32m+[m[32m b9a:	39 c8                	cmp    %ecx,%eax[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
[32m+[m[32m b9c:	8b 10                	mov    (%eax),%edx[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
[32m+[m[32m b9e:	72 f0                	jb     b90 <free+0x20>[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
[32m+[m[32m ba0:	39 d0                	cmp    %edx,%eax[m
[32m+[m[32m ba2:	72 f4                	jb     b98 <free+0x28>[m
[32m+[m[32m ba4:	39 d1                	cmp    %edx,%ecx[m
[32m+[m[32m ba6:	73 f0                	jae    b98 <free+0x28>[m
[32m+[m[32m ba8:	90                   	nop[m
[32m+[m[32m ba9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m      break;[m
[32m+[m[32m  if(bp + bp->s.size == p->s.ptr){[m
[32m+[m[32m bb0:	8b 73 fc             	mov    -0x4(%ebx),%esi[m
[32m+[m[32m bb3:	8d 3c f1             	lea    (%ecx,%esi,8),%edi[m
[32m+[m[32m bb6:	39 d7                	cmp    %edx,%edi[m
[32m+[m[32m bb8:	74 19                	je     bd3 <free+0x63>[m
[32m+[m[32m    bp->s.size += p->s.ptr->s.size;[m
[32m+[m[32m    bp->s.ptr = p->s.ptr->s.ptr;[m
[32m+[m[32m  } else[m
[32m+[m[32m    bp->s.ptr = p->s.ptr;[m
[32m+[m[32m bba:	89 53 f8             	mov    %edx,-0x8(%ebx)[m
[32m+[m[32m  if(p + p->s.size == bp){[m
[32m+[m[32m bbd:	8b 50 04             	mov    0x4(%eax),%edx[m
[32m+[m[32m bc0:	8d 34 d0             	lea    (%eax,%edx,8),%esi[m
[32m+[m[32m bc3:	39 f1                	cmp    %esi,%ecx[m
[32m+[m[32m bc5:	74 23                	je     bea <free+0x7a>[m
[32m+[m[32m    p->s.size += bp->s.size;[m
[32m+[m[32m    p->s.ptr = bp->s.ptr;[m
[32m+[m[32m  } else[m
[32m+[m[32m    p->s.ptr = bp;[m
[32m+[m[32m bc7:	89 08                	mov    %ecx,(%eax)[m
[32m+[m[32m  freep = p;[m
[32m+[m[32m bc9:	a3 f4 10 00 00       	mov    %eax,0x10f4[m
[32m+[m[32m}[m
[32m+[m[32m bce:	5b                   	pop    %ebx[m
[32m+[m[32m bcf:	5e                   	pop    %esi[m
[32m+[m[32m bd0:	5f                   	pop    %edi[m
[32m+[m[32m bd1:	5d                   	pop    %ebp[m
[32m+[m[32m bd2:	c3                   	ret[m[41m    [m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
[32m+[m[32m      break;[m
[32m+[m[32m  if(bp + bp->s.size == p->s.ptr){[m
[32m+[m[32m    bp->s.size += p->s.ptr->s.size;[m
[32m+[m[32m bd3:	03 72 04             	add    0x4(%edx),%esi[m
[32m+[m[32m bd6:	89 73 fc             	mov    %esi,-0x4(%ebx)[m
[32m+[m[32m    bp->s.ptr = p->s.ptr->s.ptr;[m
[32m+[m[32m bd9:	8b 10                	mov    (%eax),%edx[m
[32m+[m[32m bdb:	8b 12                	mov    (%edx),%edx[m
[32m+[m[32m bdd:	89 53 f8             	mov    %edx,-0x8(%ebx)[m
[32m+[m[32m  } else[m
[32m+[m[32m    bp->s.ptr = p->s.ptr;[m
[32m+[m[32m  if(p + p->s.size == bp){[m
[32m+[m[32m be0:	8b 50 04             	mov    0x4(%eax),%edx[m
[32m+[m[32m be3:	8d 34 d0             	lea    (%eax,%edx,8),%esi[m
[32m+[m[32m be6:	39 f1                	cmp    %esi,%ecx[m
[32m+[m[32m be8:	75 dd                	jne    bc7 <free+0x57>[m
[32m+[m[32m    p->s.size += bp->s.size;[m
[32m+[m[32m bea:	03 53 fc             	add    -0x4(%ebx),%edx[m
[32m+[m[32m    p->s.ptr = bp->s.ptr;[m
[32m+[m[32m  } else[m
[32m+[m[32m    p->s.ptr = bp;[m
[32m+[m[32m  freep = p;[m
[32m+[m[32m bed:	a3 f4 10 00 00       	mov    %eax,0x10f4[m
[32m+[m[32m    bp->s.size += p->s.ptr->s.size;[m
[32m+[m[32m    bp->s.ptr = p->s.ptr->s.ptr;[m
[32m+[m[32m  } else[m
[32m+[m[32m    bp->s.ptr = p->s.ptr;[m
[32m+[m[32m  if(p + p->s.size == bp){[m
[32m+[m[32m    p->s.size += bp->s.size;[m
[32m+[m[32m bf2:	89 50 04             	mov    %edx,0x4(%eax)[m
[32m+[m[32m    p->s.ptr = bp->s.ptr;[m
[32m+[m[32m bf5:	8b 53 f8             	mov    -0x8(%ebx),%edx[m
[32m+[m[32m bf8:	89 10                	mov    %edx,(%eax)[m
[32m+[m[32m  } else[m
[32m+[m[32m    p->s.ptr = bp;[m
[32m+[m[32m  freep = p;[m
[32m+[m[32m}[m
[32m+[m[32m bfa:	5b                   	pop    %ebx[m
[32m+[m[32m bfb:	5e                   	pop    %esi[m
[32m+[m[32m bfc:	5f                   	pop    %edi[m
[32m+[m[32m bfd:	5d                   	pop    %ebp[m
[32m+[m[32m bfe:	c3                   	ret[m[41m    [m
[32m+[m[32m bff:	90                   	nop[m
[32m+[m
[32m+[m[32m00000c00 <malloc>:[m
[32m+[m[32m  return freep;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid*[m
[32m+[m[32mmalloc(uint nbytes)[m
[32m+[m[32m{[m
[32m+[m[32m c00:	55                   	push   %ebp[m
[32m+[m[32m c01:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m c03:	57                   	push   %edi[m
[32m+[m[32m c04:	56                   	push   %esi[m
[32m+[m[32m c05:	53                   	push   %ebx[m
[32m+[m[32m c06:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m  Header *p, *prevp;[m
[32m+[m[32m  uint nunits;[m
[32m+[m
[32m+[m[32m  nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;[m
[32m+[m[32m c09:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m  if((prevp = freep) == 0){[m
[32m+[m[32m c0c:	8b 15 f4 10 00 00    	mov    0x10f4,%edx[m
[32m+[m[32mmalloc(uint nbytes)[m
[32m+[m[32m{[m
[32m+[m[32m  Header *p, *prevp;[m
[32m+[m[32m  uint nunits;[m
[32m+[m
[32m+[m[32m  nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;[m
[32m+[m[32m c12:	8d 78 07             	lea    0x7(%eax),%edi[m
[32m+[m[32m c15:	c1 ef 03             	shr    $0x3,%edi[m
[32m+[m[32m c18:	83 c7 01             	add    $0x1,%edi[m
[32m+[m[32m  if((prevp = freep) == 0){[m
[32m+[m[32m c1b:	85 d2                	test   %edx,%edx[m
[32m+[m[32m c1d:	0f 84 a3 00 00 00    	je     cc6 <malloc+0xc6>[m
[32m+[m[32m c23:	8b 02                	mov    (%edx),%eax[m
[32m+[m[32m c25:	8b 48 04             	mov    0x4(%eax),%ecx[m
[32m+[m[32m    base.s.ptr = freep = prevp = &base;[m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){[m
[32m+[m[32m    if(p->s.size >= nunits){[m
[32m+[m[32m c28:	39 cf                	cmp    %ecx,%edi[m
[32m+[m[32m c2a:	76 74                	jbe    ca0 <malloc+0xa0>[m
[32m+[m[32m c2c:	81 ff 00 10 00 00    	cmp    $0x1000,%edi[m
[32m+[m[32m c32:	be 00 10 00 00       	mov    $0x1000,%esi[m
[32m+[m[32m c37:	8d 1c fd 00 00 00 00 	lea    0x0(,%edi,8),%ebx[m
[32m+[m[32m c3e:	0f 43 f7             	cmovae %edi,%esi[m
[32m+[m[32m c41:	ba 00 80 00 00       	mov    $0x8000,%edx[m
[32m+[m[32m c46:	81 ff ff 0f 00 00    	cmp    $0xfff,%edi[m
[32m+[m[32m c4c:	0f 46 da             	cmovbe %edx,%ebx[m
[32m+[m[32m c4f:	eb 10                	jmp    c61 <malloc+0x61>[m
[32m+[m[32m c51:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;[m
[32m+[m[32m  if((prevp = freep) == 0){[m
[32m+[m[32m    base.s.ptr = freep = prevp = &base;[m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){[m
[32m+[m[32m c58:	8b 02                	mov    (%edx),%eax[m
[32m+[m[32m    if(p->s.size >= nunits){[m
[32m+[m[32m c5a:	8b 48 04             	mov    0x4(%eax),%ecx[m
[32m+[m[32m c5d:	39 cf                	cmp    %ecx,%edi[m
[32m+[m[32m c5f:	76 3f                	jbe    ca0 <malloc+0xa0>[m
[32m+[m[32m        p->s.size = nunits;[m
[32m+[m[32m      }[m
[32m+[m[32m      freep = prevp;[m
[32m+[m[32m      return (void*)(p + 1);[m
[32m+[m[32m    }[m
[32m+[m[32m    if(p == freep)[m
[32m+[m[32m c61:	39 05 f4 10 00 00    	cmp    %eax,0x10f4[m
[32m+[m[32m c67:	89 c2                	mov    %eax,%edx[m
[32m+[m[32m c69:	75 ed                	jne    c58 <malloc+0x58>[m
[32m+[m[32m  char *p;[m
[32m+[m[32m  Header *hp;[m
[32m+[m
[32m+[m[32m  if(nu < 4096)[m
[32m+[m[32m    nu = 4096;[m
[32m+[m[32m  p = sbrk(nu * sizeof(Header));[m
[32m+[m[32m c6b:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m c6e:	53                   	push   %ebx[m
[32m+[m[32m c6f:	e8 96 fc ff ff       	call   90a <sbrk>[m
[32m+[m[32m  if(p == (char*)-1)[m
[32m+[m[32m c74:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m c77:	83 f8 ff             	cmp    $0xffffffff,%eax[m
[32m+[m[32m c7a:	74 1c                	je     c98 <malloc+0x98>[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  hp = (Header*)p;[m
[32m+[m[32m  hp->s.size = nu;[m
[32m+[m[32m c7c:	89 70 04             	mov    %esi,0x4(%eax)[m
[32m+[m[32m  free((void*)(hp + 1));[m
[32m+[m[32m c7f:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m c82:	83 c0 08             	add    $0x8,%eax[m
[32m+[m[32m c85:	50                   	push   %eax[m
[32m+[m[32m c86:	e8 e5 fe ff ff       	call   b70 <free>[m
[32m+[m[32m  return freep;[m
[32m+[m[32m c8b:	8b 15 f4 10 00 00    	mov    0x10f4,%edx[m
[32m+[m[32m      }[m
[32m+[m[32m      freep = prevp;[m
[32m+[m[32m      return (void*)(p + 1);[m
[32m+[m[32m    }[m
[32m+[m[32m    if(p == freep)[m
[32m+[m[32m      if((p = morecore(nunits)) == 0)[m
[32m+[m[32m c91:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m c94:	85 d2                	test   %edx,%edx[m
[32m+[m[32m c96:	75 c0                	jne    c58 <malloc+0x58>[m
[32m+[m[32m        return 0;[m
[32m+[m[32m c98:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m c9a:	eb 1c                	jmp    cb8 <malloc+0xb8>[m
[32m+[m[32m c9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    base.s.ptr = freep = prevp = &base;[m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){[m
[32m+[m[32m    if(p->s.size >= nunits){[m
[32m+[m[32m      if(p->s.size == nunits)[m
[32m+[m[32m ca0:	39 cf                	cmp    %ecx,%edi[m
[32m+[m[32m ca2:	74 1c                	je     cc0 <malloc+0xc0>[m
[32m+[m[32m        prevp->s.ptr = p->s.ptr;[m
[32m+[m[32m      else {[m
[32m+[m[32m        p->s.size -= nunits;[m
[32m+[m[32m ca4:	29 f9                	sub    %edi,%ecx[m
[32m+[m[32m ca6:	89 48 04             	mov    %ecx,0x4(%eax)[m
[32m+[m[32m        p += p->s.size;[m
[32m+[m[32m ca9:	8d 04 c8             	lea    (%eax,%ecx,8),%eax[m
[32m+[m[32m        p->s.size = nunits;[m
[32m+[m[32m cac:	89 78 04             	mov    %edi,0x4(%eax)[m
[32m+[m[32m      }[m
[32m+[m[32m      freep = prevp;[m
[32m+[m[32m caf:	89 15 f4 10 00 00    	mov    %edx,0x10f4[m
[32m+[m[32m      return (void*)(p + 1);[m
[32m+[m[32m cb5:	83 c0 08             	add    $0x8,%eax[m
[32m+[m[32m    }[m
[32m+[m[32m    if(p == freep)[m
[32m+[m[32m      if((p = morecore(nunits)) == 0)[m
[32m+[m[32m        return 0;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[32m cb8:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m cbb:	5b                   	pop    %ebx[m
[32m+[m[32m cbc:	5e                   	pop    %esi[m
[32m+[m[32m cbd:	5f                   	pop    %edi[m
[32m+[m[32m cbe:	5d                   	pop    %ebp[m
[32m+[m[32m cbf:	c3                   	ret[m[41m    [m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){[m
[32m+[m[32m    if(p->s.size >= nunits){[m
[32m+[m[32m      if(p->s.size == nunits)[m
[32m+[m[32m        prevp->s.ptr = p->s.ptr;[m
[32m+[m[32m cc0:	8b 08                	mov    (%eax),%ecx[m
[32m+[m[32m cc2:	89 0a                	mov    %ecx,(%edx)[m
[32m+[m[32m cc4:	eb e9                	jmp    caf <malloc+0xaf>[m
[32m+[m[32m  Header *p, *prevp;[m
[32m+[m[32m  uint nunits;[m
[32m+[m
[32m+[m[32m  nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;[m
[32m+[m[32m  if((prevp = freep) == 0){[m
[32m+[m[32m    base.s.ptr = freep = prevp = &base;[m
[32m+[m[32m cc6:	c7 05 f4 10 00 00 f8 	movl   $0x10f8,0x10f4[m
[32m+[m[32m ccd:	10 00 00[m[41m [m
[32m+[m[32m cd0:	c7 05 f8 10 00 00 f8 	movl   $0x10f8,0x10f8[m
[32m+[m[32m cd7:	10 00 00[m[41m [m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m cda:	b8 f8 10 00 00       	mov    $0x10f8,%eax[m
[32m+[m[32m cdf:	c7 05 fc 10 00 00 00 	movl   $0x0,0x10fc[m
[32m+[m[32m ce6:	00 00 00[m[41m [m
[32m+[m[32m ce9:	e9 3e ff ff ff       	jmp    c2c <malloc+0x2c>[m
[1mdiff --git a/T3.c b/T3.c[m
[1mnew file mode 100644[m
[1mindex 0000000..7fbe27e[m
[1m--- /dev/null[m
[1m+++ b/T3.c[m
[36m@@ -0,0 +1,241 @@[m
[32m+[m[32m#include "types.h"[m
[32m+[m[32m#include "user.h"[m
[32m+[m[32m#include "fcntl.h"[m
[32m+[m
[32m+[m[32m// our own atoi() function - convert string to int[m
[32m+[m[32mint ourAtoi(char *str)[m
[32m+[m[32m{[m
[32m+[m
[32m+[m[32m    int res = 0;  // Initialize result[m
[32m+[m[32m    int sign = 1;  // Initialize sign as positive[m
[32m+[m[32m    int i = 0;  // Initialize index of first digit[m
[32m+[m[41m      [m
[32m+[m[32m    // If number is negative, then update sign[m
[32m+[m[32m    if (str[0] == '-')[m
[32m+[m[32m    {[m
[32m+[m[32m        sign = -1;[m[41m  [m
[32m+[m[32m        i++;  // Also update index of first digit[m
[32m+[m[32m    }[m
[32m+[m[41m      [m
[32m+[m[32m    // Iterate through all digits and update the result[m
[32m+[m[32m    for (; str[i] != '\0'; ++i)[m
[32m+[m[32m        res = res*10 + str[i] - '0';[m
[32m+[m[41m    [m
[32m+[m[32m    // Return result with sign[m
[32m+[m[32m    return sign*res;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//revers string[m[41m [m
[32m+[m[32mvoid my_reverse(char str[], int len)[m
[32m+[m[32m{[m
[32m+[m[32m    int start, end;[m
[32m+[m[32m    char temp;[m
[32m+[m[32m    for(start=0, end=len-1; start < end; start++, end--) {[m
[32m+[m[32m        temp = *(str+start);[m
[32m+[m[32m        *(str+start) = *(str+end);[m
[32m+[m[32m        *(str+end) = temp;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mvoid cleanArray(char* ArratToClean, int size){[m
[32m+[m
[32m+[m[32m for(int i=0;i<size;i++){[m
[32m+[m[32m    ArratToClean[i]='\0';[m
[32m+[m[32m }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Implementation of itoa() - convert int to String[m[41m [m
[32m+[m[32mchar* itoa(int num, char* str, int base)[m
[32m+[m[32m{[m
[32m+[m[32m    int i = 0;[m
[32m+[m[32m    int isNegative = 0;  //false[m
[32m+[m[41m [m
[32m+[m[32m    /* Handle 0 explicitely, otherwise empty string is printed for 0 */[m
[32m+[m[32m    if (num == 0)[m
[32m+[m[32m    {[m
[32m+[m[32m        str[i++] = '0';[m
[32m+[m[32m        str[i] = '\0';[m
[32m+[m[32m        return str;[m
[32m+[m[32m    }[m
[32m+[m[41m [m
[32m+[m[32m    // In standard itoa(), negative numbers are handled only with[m[41m [m
[32m+[m[32m    // base 10. Otherwise numbers are considered unsigned.[m
[32m+[m[32m    if (num < 0 && base == 10)[m
[32m+[m[32m    {[m
[32m+[m[32m        isNegative = 1; //true[m
[32m+[m[32m        num = -num;[m
[32m+[m[32m    }[m
[32m+[m[41m [m
[32m+[m[32m    // Process individual digits[m
[32m+[m[32m    while (num != 0)[m
[32m+[m[32m    {[m
[32m+[m[32m        int rem = num % base;[m
[32m+[m[32m        str[i++] = (rem > 9)? (rem-10) + 'a' : rem + '0';[m
[32m+[m[32m        num = num/base;[m
[32m+[m[32m    }[m
[32m+[m[41m [m
[32m+[m[32m    // If number is negative, append '-'[m
[32m+[m[32m    if (isNegative)[m
[32m+[m[32m        str[i++] = '-';[m
[32m+[m[41m [m
[32m+[m[32m    str[i] = '\0'; // Append string terminator[m
[32m+[m[41m [m
[32m+[m[32m    // Reverse the string[m
[32m+[m[32m    my_reverse(str, i);[m
[32m+[m[41m [m
[32m+[m[32m    return str;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32m//children code as function[m
[32m+[m[32m//every child read from a different pipe(fd_ChildePipe_Array[i]) just for him[m
[32m+[m[32m//all childs write to the same pipe (fd_ProducerPipe)[m
[32m+[m
[32m+[m
[32m+[m[32mvoid ChildCode(int* readFromPipe,int* writeToPipe,int numToAdd){[m
[32m+[m[41m       [m
[32m+[m[32m    char readNum[15]={'\0'};[m[41m [m
[32m+[m[32m    int childNum=0;[m
[32m+[m[32m    //printf(0,"child1\n");[m
[32m+[m[32m    dup(readFromPipe[0]); //dup just the pipe child1 read from[m
[32m+[m[32m    cleanArray(readNum, 15);[m[41m  [m
[32m+[m[32m    while ((read(readFromPipe[0], readNum, 15)) != 0){[m[41m         [m
[32m+[m	[32m//printf(1,"readNum1= %s \n",readNum);[m
[32m+[m	[32m//printf(0,"child1 after read\n");[m
[32m+[m	[32mchildNum= numToAdd+ ourAtoi(readNum);[m
[32m+[m[32m        cleanArray(readNum, 15);[m[41m  [m
[32m+[m	[32m//printf(1,"numToAdd=%d \n",numToAdd);[m
[32m+[m	[32m//printf(1,"ourAtoi(readNum)=%d \n",ourAtoi(readNum));[m
[32m+[m	[32m//printf(1,"childNum2=%d \n",childNum);[m
[32m+[m	[32mwrite(writeToPipe[1], &childNum, sizeof(childNum));[m
[32m+[m
[32m+[m[32m   }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mTask3Action(int ToAddNumber,int textFD,int tempFileFD ){[m
[32m+[m[32m//[m
[32m+[m[32m int pidArray[3];[m
[32m+[m[32m int fd_ChildePipe_Array[3][2];[m[41m [m
[32m+[m[32m int numOfChildren=3;[m
[32m+[m[32m int digitNum=0;[m
[32m+[m[32m char readChar='\0';[m
[32m+[m[32m char prevReadChar='\0';[m
[32m+[m[32m char readNum[15]={'\0'};[m[41m [m
[32m+[m[32m int res=0;[m[41m [m
[32m+[m[32m char wrResToFile[15];[m[41m	[m
[32m+[m
[32m+[m
[32m+[m[32m int fd_ProducerPipe[2];   //read and write FD[m
[32m+[m[32m pipe(fd_ProducerPipe);  //producer only write to this pipe (in [0])[m
[32m+[m
[32m+[m[32m for(int j=0; j<numOfChildren;j++){  //children pipes[m
[32m+[m[32m  pipe(fd_ChildePipe_Array[j]);[m[41m [m
[32m+[m[32m }[m
[32m+[m
[32m+[m
[32m+[m[32m for(int i=0; i<numOfChildren;i++){[m
[32m+[m[41m   [m
[32m+[m[32m   pidArray[i] = fork();[m
[32m+[m
[32m+[m[32m   if(pidArray[i]<0){[m
[32m+[m[32m       //printf(1,"fork error occured\n");[m
[32m+[m[32m       exit(0);[m
[32m+[m[32m   }[m
[32m+[m[32m   else if(pidArray[i]==0){  //do child task[m
[32m+[m[32m       //printf(0,"child no.%d \n",i);[m
[32m+[m[32m       ChildCode(fd_ChildePipe_Array[i],fd_ProducerPipe,ToAddNumber);[m
[32m+[m	[32m//printf(1,"child no.%d is done \n",i);[m[41m [m
[32m+[m	[32m//exit(0);[m
[32m+[m[32m   }[m
[32m+[m[41m    [m
[32m+[m[32m }[m
[32m+[m[32m//do producer code[m
[32m+[m
[32m+[m[32m for(int i=0; i<numOfChildren;i++){[m
[32m+[m[32m   cleanArray(readNum, 15);  //clean readNum from prev[m
[32m+[m[32m   while (read(textFD, &readChar, 1) != 0){[m
[32m+[m[41m	[m
[32m+[m[32m      //printf(1,"readChar=%c \n",readChar);[m[41m [m
[32m+[m[32m      if('0'<readChar && readChar<'9'){[m
[32m+[m	[32m  readNum[digitNum] = readChar;[m
[32m+[m	[32m  digitNum++;[m
[32m+[m	[32m  prevReadChar=readChar;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      else if ((readChar<'0' || readChar>'9')&& ('0'>prevReadChar || prevReadChar>'9')) {[m
[32m+[m	[32m  write(tempFileFD, &readChar, 1);[m
[32m+[m[32m          cleanArray(readNum, 15);  //clean readNum from prev[m
[32m+[m	[32m  prevReadChar=readChar;[m
[32m+[m
[32m+[m[32m      }[m
[32m+[m[41m [m
[32m+[m[32m      else if ((readChar<'0' || readChar>'9') && ('0'<prevReadChar && prevReadChar<'9')){[m
[32m+[m	[32m  //printf(1,"readNum0= %s \n",readNum);[m
[32m+[m	[32m  write(fd_ChildePipe_Array[i][1], readNum, digitNum);[m
[32m+[m[32m          cleanArray(readNum, 15);  //clean readNum from prev[m
[32m+[m	[32m  read(fd_ProducerPipe[0], &res,sizeof(int));[m
[32m+[m	[32m  //printf(1,"res=%d \n",res );[m
[32m+[m	[32m  itoa(res,wrResToFile,10);[m
[32m+[m	[32m  write(tempFileFD, wrResToFile, sizeof(wrResToFile));[m
[32m+[m	[32m  write(tempFileFD, &readChar, 1);[m
[32m+[m	[32m  prevReadChar=readChar;[m[41m [m
[32m+[m	[32m  digitNum=0;[m[41m	      [m
[32m+[m[32m     }[m
[32m+[m[32m   }[m
[32m+[m[32m }[m
[32m+[m[32m//close pipes[m
[32m+[m
[32m+[m[32m close(fd_ProducerPipe[0]);[m
[32m+[m[32m close(fd_ProducerPipe[1]);[m
[32m+[m[32m for(int j=0; j<numOfChildren;j++){  //close children pipes[m
[32m+[m[32m    close(fd_ChildePipe_Array[j][0]);[m
[32m+[m[32m    close(fd_ChildePipe_Array[j][1]);[m[41m [m
[32m+[m[32m }[m
[32m+[m
[32m+[m[41m	[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m//producer process:[m
[32m+[m[32mint[m
[32m+[m[32mmain(int argc, char *argv[])[m
[32m+[m[32m{[m
[32m+[m[32m char* fileName=argv[1];[m
[32m+[m[32m //printf(1,"numToAdd %s\n", argv[2]);[m
[32m+[m[32m int numToAdd=ourAtoi(argv[2]);[m
[32m+[m[32m char copyResToOrgFile='\0';//[15];[m[41m	[m
[32m+[m
[32m+[m
[32m+[m[32m //printf(0," open file= %s\n", fileName);[m
[32m+[m[32m int textFileDesc = open (fileName, O_RDWR);[m
[32m+[m[32m //temp file to write to the result + non-number chars[m[41m      [m
[32m+[m[32m int tempF = open ("tempFile",O_CREATE | O_RDWR);[m[41m  [m
[32m+[m
[32m+[m[32m Task3Action(numToAdd,textFileDesc,tempF);[m
[32m+[m[32m printf(1,"modifing the given %s file...\n",fileName);[m
[32m+[m
[32m+[m[32m close(textFileDesc);[m
[32m+[m[32m textFileDesc = open (fileName,O_CREATE | O_RDWR);[m[41m  [m
[32m+[m[32m close(tempF);[m
[32m+[m[32m tempF = open ("tempFile",O_CREATE | O_RDWR);[m[41m  [m
[32m+[m
[32m+[m
[32m+[m[32m  while ((read(tempF, &copyResToOrgFile, 1)) != 0){[m
[32m+[m[32m     write(textFileDesc, &copyResToOrgFile, 1);[m
[32m+[m[32m  }[m[41m	[m
[32m+[m
[32m+[m[32munlink("tempFile");  //deleting the temp file after copping it to the ogiven file[m
[32m+[m
[32m+[m[32mclose(tempF);[m
[32m+[m[32mclose(textFileDesc);[m
[32m+[m[32m exit(0);[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/T3.d b/T3.d[m
[1mnew file mode 100644[m
[1mindex 0000000..12ea207[m
[1m--- /dev/null[m
[1m+++ b/T3.d[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mT3.o: T3.c /usr/include/stdc-predef.h types.h user.h fcntl.h[m
[1mdiff --git a/T3.o b/T3.o[m
[1mnew file mode 100644[m
[1mindex 0000000..67476b9[m
Binary files /dev/null and b/T3.o differ
[1mdiff --git a/T3.sym b/T3.sym[m
[1mnew file mode 100644[m
[1mindex 0000000..265eee6[m
[1m--- /dev/null[m
[1m+++ b/T3.sym[m
[36m@@ -0,0 +1,65 @@[m
[32m+[m[32m00000000 .text[m
[32m+[m[32m00000cf0 .rodata[m
[32m+[m[32m00000d38 .eh_frame[m
[32m+[m[32m000010f4 .bss[m
[32m+[m[32m00000000 .comment[m
[32m+[m[32m00000000 .debug_aranges[m
[32m+[m[32m00000000 .debug_info[m
[32m+[m[32m00000000 .debug_abbrev[m
[32m+[m[32m00000000 .debug_line[m
[32m+[m[32m00000000 .debug_str[m
[32m+[m[32m00000000 .debug_loc[m
[32m+[m[32m00000000 .debug_ranges[m
[32m+[m[32m00000000 T3.c[m
[32m+[m[32m00000140 itoa.part.0[m
[32m+[m[32m00000000 ulib.c[m
[32m+[m[32m00000000 printf.c[m
[32m+[m[32m00000930 printint[m
[32m+[m[32m00000d24 digits.1110[m
[32m+[m[32m00000000 umalloc.c[m
[32m+[m[32m000010f4 freep[m
[32m+[m[32m000010f8 base[m
[32m+[m[32m00000640 strcpy[m
[32m+[m[32m000009d0 printf[m
[32m+[m[32m00000850 memmove[m
[32m+[m[32m000008ca mknod[m
[32m+[m[32m00000750 gets[m
[32m+[m[32m00000902 getpid[m
[32m+[m[32m00000c00 malloc[m
[32m+[m[32m00000912 sleep[m
[32m+[m[32m000002c0 itoa[m
[32m+[m[32m00000892 pipe[m
[32m+[m[32m000002a0 cleanArray[m
[32m+[m[32m000008a2 write[m
[32m+[m[32m000008da fstat[m
[32m+[m[32m000008b2 kill[m
[32m+[m[32m000008f2 chdir[m
[32m+[m[32m000008ba exec[m
[32m+[m[32m0000088a wait[m
[32m+[m[32m00000260 my_reverse[m
[32m+[m[32m0000089a read[m
[32m+[m[32m000008d2 unlink[m
[32m+[m[32m0000087a fork[m
[32m+[m[32m0000090a sbrk[m
[32m+[m[32m0000091a uptime[m
[32m+[m[32m000003f0 Task3Action[m
[32m+[m[32m000010f4 __bss_start[m
[32m+[m[32m000006f0 memset[m
[32m+[m[32m00000000 main[m
[32m+[m[32m00000670 strcmp[m
[32m+[m[32m000008fa dup[m
[32m+[m[32m00000210 ourAtoi[m
[32m+[m[32m000002f0 ChildCode[m
[32m+[m[32m000007c0 stat[m
[32m+[m[32m000010f4 _edata[m
[32m+[m[32m00001100 _end[m
[32m+[m[32m000008e2 link[m
[32m+[m[32m00000882 exit[m
[32m+[m[32m00000810 atoi[m
[32m+[m[32m000006c0 strlen[m
[32m+[m[32m000008c2 open[m
[32m+[m[32m00000922 set[m
[32m+[m[32m00000710 strchr[m
[32m+[m[32m000008ea mkdir[m
[32m+[m[32m000008aa close[m
[32m+[m[32m00000b70 free[m
[1mdiff --git a/_T3 b/_T3[m
[1mnew file mode 100755[m
[1mindex 0000000..7717f54[m
Binary files /dev/null and b/_T3 differ
[1mdiff --git a/_cat b/_cat[m
[1mindex 9d2cd8e..db32b1e 100755[m
Binary files a/_cat and b/_cat differ
[1mdiff --git a/_echo b/_echo[m
[1mindex 30d2892..7147dc5 100755[m
Binary files a/_echo and b/_echo differ
[1mdiff --git a/_forktest b/_forktest[m
[1mindex 736b931..a72e7c9 100755[m
Binary files a/_forktest and b/_forktest differ
[1mdiff --git a/_grep b/_grep[m
[1mindex 55c67f2..ea20187 100755[m
Binary files a/_grep and b/_grep differ
[1mdiff --git a/_init b/_init[m
[1mindex 6ae9f71..25473a9 100755[m
Binary files a/_init and b/_init differ
[1mdiff --git a/_kill b/_kill[m
[1mindex daaa2f6..71fe5a6 100755[m
Binary files a/_kill and b/_kill differ
[1mdiff --git a/_ln b/_ln[m
[1mindex c5bfc7f..13dee6b 100755[m
Binary files a/_ln and b/_ln differ
[1mdiff --git a/_ls b/_ls[m
[1mindex e601349..ac04fe5 100755[m
Binary files a/_ls and b/_ls differ
[1mdiff --git a/_mkdir b/_mkdir[m
[1mindex 463e362..ebd914b 100755[m
Binary files a/_mkdir and b/_mkdir differ
[1mdiff --git a/_my_test b/_my_test[m
[1mindex 14387ac..9706563 100755[m
Binary files a/_my_test and b/_my_test differ
[1mdiff --git a/_rm b/_rm[m
[1mindex 25b9c72..9bc735c 100755[m
Binary files a/_rm and b/_rm differ
[1mdiff --git a/_set b/_set[m
[1mnew file mode 100755[m
[1mindex 0000000..f5d9bf9[m
Binary files /dev/null and b/_set differ
[1mdiff --git a/_sh b/_sh[m
[1mindex 3735564..29bbf2f 100755[m
Binary files a/_sh and b/_sh differ
[1mdiff --git a/_stressfs b/_stressfs[m
[1mindex ed9d4fc..d3f4ca3 100755[m
Binary files a/_stressfs and b/_stressfs differ
[1mdiff --git a/_tee b/_tee[m
[1mnew file mode 100755[m
[1mindex 0000000..4616884[m
Binary files /dev/null and b/_tee differ
[1mdiff --git a/_usertests b/_usertests[m
[1mindex f349f6b..b8ddd22 100755[m
Binary files a/_usertests and b/_usertests differ
[1mdiff --git a/_wc b/_wc[m
[1mindex 088ce49..215a955 100755[m
Binary files a/_wc and b/_wc differ
[1mdiff --git a/_zombie b/_zombie[m
[1mindex b793717..e0fceb5 100755[m
Binary files a/_zombie and b/_zombie differ
[1mdiff --git a/bio.o b/bio.o[m
[1mindex e849e68..127404a 100644[m
Binary files a/bio.o and b/bio.o differ
[1mdiff --git a/bootasm.o b/bootasm.o[m
[1mindex 988f9ad..8df4bbe 100644[m
Binary files a/bootasm.o and b/bootasm.o differ
[1mdiff --git a/bootblock.o b/bootblock.o[m
[1mindex 91083cf..4052557 100755[m
Binary files a/bootblock.o and b/bootblock.o differ
[1mdiff --git a/bootblockother.o b/bootblockother.o[m
[1mindex bf63f41..0e870a6 100755[m
Binary files a/bootblockother.o and b/bootblockother.o differ
[1mdiff --git a/bootmain.o b/bootmain.o[m
[1mindex 28eab67..f508a06 100644[m
Binary files a/bootmain.o and b/bootmain.o differ
[1mdiff --git a/cat.asm b/cat.asm[m
[1mindex d4a6e55..dd20763 100644[m
[1m--- a/cat.asm[m
[1m+++ b/cat.asm[m
[36m@@ -42,7 +42,7 @@[m [mmain(int argc, char *argv[])[m
   27:	7e 60                	jle    89 <main+0x89>[m
   29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
     cat(0);[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
 [m
   for(i = 1; i < argc; i++){[m
[36m@@ -56,13 +56,13 @@[m [mmain(int argc, char *argv[])[m
   41:	89 c7                	mov    %eax,%edi[m
   43:	78 29                	js     6e <main+0x6e>[m
       printf(1, "cat: cannot open %s\n", argv[i]);[m
[31m-      exit(11);[m
[32m+[m[32m      exit(0);[m
     }[m
     cat(fd);[m
   45:	83 ec 0c             	sub    $0xc,%esp[m
   if(argc <= 1){[m
     cat(0);[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
 [m
   for(i = 1; i < argc; i++){[m
[36m@@ -70,7 +70,7 @@[m [mmain(int argc, char *argv[])[m
   4b:	83 c3 04             	add    $0x4,%ebx[m
     if((fd = open(argv[i], 0)) < 0){[m
       printf(1, "cat: cannot open %s\n", argv[i]);[m
[31m-      exit(11);[m
[32m+[m[32m      exit(0);[m
     }[m
     cat(fd);[m
   4e:	50                   	push   %eax[m
[36m@@ -80,23 +80,23 @@[m [mmain(int argc, char *argv[])[m
   57:	e8 3e 03 00 00       	call   39a <close>[m
   if(argc <= 1){[m
     cat(0);[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
 [m
   for(i = 1; i < argc; i++){[m
   5c:	83 c4 10             	add    $0x10,%esp[m
   5f:	39 75 e4             	cmp    %esi,-0x1c(%ebp)[m
   62:	75 cc                	jne    30 <main+0x30>[m
[31m-      exit(11);[m
[32m+[m[32m      exit(0);[m
     }[m
     cat(fd);[m
     close(fd);[m
   }[m
[31m-  exit(11);[m
[32m+[m[32m  exit(0);[m
   64:	83 ec 0c             	sub    $0xc,%esp[m
[31m-  67:	6a 0b                	push   $0xb[m
[32m+[m[32m  67:	6a 00                	push   $0x0[m
   69:	e8 04 03 00 00       	call   372 <exit>[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
 [m
   for(i = 1; i < argc; i++){[m
[36m@@ -107,8 +107,8 @@[m [mmain(int argc, char *argv[])[m
   71:	68 03 08 00 00       	push   $0x803[m
   76:	6a 01                	push   $0x1[m
   78:	e8 43 04 00 00       	call   4c0 <printf>[m
[31m-      exit(11);[m
[31m-  7d:	c7 04 24 0b 00 00 00 	movl   $0xb,(%esp)[m
[32m+[m[32m      exit(0);[m
[32m+[m[32m  7d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)[m
   84:	e8 e9 02 00 00       	call   372 <exit>[m
 main(int argc, char *argv[])[m
 {[m
[36m@@ -119,8 +119,8 @@[m [mmain(int argc, char *argv[])[m
   89:	83 ec 0c             	sub    $0xc,%esp[m
   8c:	6a 00                	push   $0x0[m
   8e:	e8 0d 00 00 00       	call   a0 <cat>[m
[31m-    exit(11);[m
[31m-  93:	c7 04 24 0b 00 00 00 	movl   $0xb,(%esp)[m
[32m+[m[32m    exit(0);[m
[32m+[m[32m  93:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)[m
   9a:	e8 d3 02 00 00       	call   372 <exit>[m
   9f:	90                   	nop[m
 [m
[36m@@ -167,13 +167,13 @@[m [mcat(int fd)[m
   e2:	7f cc                	jg     b0 <cat+0x10>[m
     if (write(1, buf, n) != n) {[m
       printf(1, "cat: write error\n");[m
[31m-      exit(11);[m
[32m+[m[32m      exit(0);[m
     }[m
   }[m
   if(n < 0){[m
   e4:	75 22                	jne    108 <cat+0x68>[m
     printf(1, "cat: read error\n");[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
 }[m
   e6:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[36m@@ -191,8 +191,8 @@[m [mcat(int fd)[m
   f0:	68 e0 07 00 00       	push   $0x7e0[m
   f5:	6a 01                	push   $0x1[m
   f7:	e8 c4 03 00 00       	call   4c0 <printf>[m
[31m-      exit(11);[m
[31m-  fc:	c7 04 24 0b 00 00 00 	movl   $0xb,(%esp)[m
[32m+[m[32m      exit(0);[m
[32m+[m[32m  fc:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)[m
  103:	e8 6a 02 00 00       	call   372 <exit>[m
     }[m
   }[m
[36m@@ -202,8 +202,8 @@[m [mcat(int fd)[m
  10b:	68 f2 07 00 00       	push   $0x7f2[m
  110:	6a 01                	push   $0x1[m
  112:	e8 a9 03 00 00       	call   4c0 <printf>[m
[31m-    exit(11);[m
[31m- 117:	c7 04 24 0b 00 00 00 	movl   $0xb,(%esp)[m
[32m+[m[32m    exit(0);[m
[32m+[m[32m 117:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)[m
  11e:	e8 4f 02 00 00       	call   372 <exit>[m
  123:	66 90                	xchg   %ax,%ax[m
  125:	66 90                	xchg   %ax,%ax[m
[36m@@ -214,11 +214,21 @@[m [mcat(int fd)[m
  12f:	90                   	nop[m
 [m
 00000130 <strcpy>:[m
[32m+[m[32m#include "user.h"[m
[32m+[m[32m#include "x86.h"[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mstrcpy(char *s, char *t)[m
[32m+[m[32m{[m
  130:	55                   	push   %ebp[m
  131:	89 e5                	mov    %esp,%ebp[m
  133:	53                   	push   %ebx[m
  134:	8b 45 08             	mov    0x8(%ebp),%eax[m
  137:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[32m+[m[32m  char *os;[m
[32m+[m
[32m+[m[32m  os = s;[m
[32m+[m[32m  while((*s++ = *t++) != 0)[m
  13a:	89 c2                	mov    %eax,%edx[m
  13c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
  140:	83 c1 01             	add    $0x1,%ecx[m
[36m@@ -227,6 +237,9 @@[m [mcat(int fd)[m
  14a:	84 db                	test   %bl,%bl[m
  14c:	88 5a ff             	mov    %bl,-0x1(%edx)[m
  14f:	75 ef                	jne    140 <strcpy+0x10>[m
[32m+[m[32m    ;[m
[32m+[m[32m  return os;[m
[32m+[m[32m}[m
  151:	5b                   	pop    %ebx[m
  152:	5d                   	pop    %ebp[m
  153:	c3                   	ret    [m
[36m@@ -234,12 +247,17 @@[m [mcat(int fd)[m
  15a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi[m
 [m
 00000160 <strcmp>:[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
  160:	55                   	push   %ebp[m
  161:	89 e5                	mov    %esp,%ebp[m
  163:	56                   	push   %esi[m
  164:	53                   	push   %ebx[m
  165:	8b 55 08             	mov    0x8(%ebp),%edx[m
  168:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[32m+[m[32m  while(*p && *p == *q)[m
  16b:	0f b6 02             	movzbl (%edx),%eax[m
  16e:	0f b6 19             	movzbl (%ecx),%ebx[m
  171:	84 c0                	test   %al,%al[m
[36m@@ -247,23 +265,49 @@[m [mcat(int fd)[m
  175:	eb 29                	jmp    1a0 <strcmp+0x40>[m
  177:	89 f6                	mov    %esi,%esi[m
  179:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    p++, q++;[m
  180:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m  while(*p && *p == *q)[m
  183:	0f b6 02             	movzbl (%edx),%eax[m
[32m+[m[32m    p++, q++;[m
  186:	8d 71 01             	lea    0x1(%ecx),%esi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m  while(*p && *p == *q)[m
  189:	0f b6 59 01          	movzbl 0x1(%ecx),%ebx[m
  18d:	84 c0                	test   %al,%al[m
  18f:	74 0f                	je     1a0 <strcmp+0x40>[m
  191:	89 f1                	mov    %esi,%ecx[m
  193:	38 d8                	cmp    %bl,%al[m
  195:	74 e9                	je     180 <strcmp+0x20>[m
[32m+[m[32m    p++, q++;[m
[32m+[m[32m  return (uchar)*p - (uchar)*q;[m
  197:	29 d8                	sub    %ebx,%eax[m
[32m+[m[32m}[m
  199:	5b                   	pop    %ebx[m
  19a:	5e                   	pop    %esi[m
  19b:	5d                   	pop    %ebp[m
  19c:	c3                   	ret    [m
  19d:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m  while(*p && *p == *q)[m
  1a0:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m    p++, q++;[m
[32m+[m[32m  return (uchar)*p - (uchar)*q;[m
  1a2:	29 d8                	sub    %ebx,%eax[m
[32m+[m[32m}[m
  1a4:	5b                   	pop    %ebx[m
  1a5:	5e                   	pop    %esi[m
  1a6:	5d                   	pop    %ebp[m
[36m@@ -272,9 +316,16 @@[m [mcat(int fd)[m
  1a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
 [m
 000001b0 <strlen>:[m
[32m+[m
[32m+[m[32muint[m
[32m+[m[32mstrlen(char *s)[m
[32m+[m[32m{[m
  1b0:	55                   	push   %ebp[m
  1b1:	89 e5                	mov    %esp,%ebp[m
  1b3:	8b 4d 08             	mov    0x8(%ebp),%ecx[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  for(n = 0; s[n]; n++)[m
  1b6:	80 39 00             	cmpb   $0x0,(%ecx)[m
  1b9:	74 12                	je     1cd <strlen+0x1d>[m
  1bb:	31 d2                	xor    %edx,%edx[m
[36m@@ -283,9 +334,21 @@[m [mcat(int fd)[m
  1c3:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)[m
  1c7:	89 d0                	mov    %edx,%eax[m
  1c9:	75 f5                	jne    1c0 <strlen+0x10>[m
[32m+[m[32m    ;[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
  1cb:	5d                   	pop    %ebp[m
  1cc:	c3                   	ret    [m
[32m+[m[32muint[m
[32m+[m[32mstrlen(char *s)[m
[32m+[m[32m{[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  for(n = 0; s[n]; n++)[m
  1cd:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m    ;[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
  1cf:	5d                   	pop    %ebp[m
  1d0:	c3                   	ret    [m
  1d1:	eb 0d                	jmp    1e0 <memset>[m
[36m@@ -304,15 +367,28 @@[m [mcat(int fd)[m
  1df:	90                   	nop[m
 [m
 000001e0 <memset>:[m
[32m+[m
[32m+[m[32mvoid*[m
[32m+[m[32mmemset(void *dst, int c, uint n)[m
[32m+[m[32m{[m
  1e0:	55                   	push   %ebp[m
  1e1:	89 e5                	mov    %esp,%ebp[m
  1e3:	57                   	push   %edi[m
  1e4:	8b 55 08             	mov    0x8(%ebp),%edx[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32mstosb(void *addr, int data, int cnt)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("cld; rep stosb" :[m
  1e7:	8b 4d 10             	mov    0x10(%ebp),%ecx[m
  1ea:	8b 45 0c             	mov    0xc(%ebp),%eax[m
  1ed:	89 d7                	mov    %edx,%edi[m
  1ef:	fc                   	cld    [m
  1f0:	f3 aa                	rep stos %al,%es:(%edi)[m
[32m+[m[32m  stosb(dst, c, n);[m
[32m+[m[32m  return dst;[m
[32m+[m[32m}[m
  1f2:	89 d0                	mov    %edx,%eax[m
  1f4:	5f                   	pop    %edi[m
  1f5:	5d                   	pop    %ebp[m
[36m@@ -321,14 +397,20 @@[m [mcat(int fd)[m
  1f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
 00000200 <strchr>:[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mstrchr(const char *s, char c)[m
[32m+[m[32m{[m
  200:	55                   	push   %ebp[m
  201:	89 e5                	mov    %esp,%ebp[m
  203:	53                   	push   %ebx[m
  204:	8b 45 08             	mov    0x8(%ebp),%eax[m
  207:	8b 5d 0c             	mov    0xc(%ebp),%ebx[m
[32m+[m[32m  for(; *s; s++)[m
  20a:	0f b6 10             	movzbl (%eax),%edx[m
  20d:	84 d2                	test   %dl,%dl[m
  20f:	74 1d                	je     22e <strchr+0x2e>[m
[32m+[m[32m    if(*s == c)[m
  211:	38 d3                	cmp    %dl,%bl[m
  213:	89 d9                	mov    %ebx,%ecx[m
  215:	75 0d                	jne    224 <strchr+0x24>[m
[36m@@ -336,11 +418,21 @@[m [mcat(int fd)[m
  219:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
  220:	38 ca                	cmp    %cl,%dl[m
  222:	74 0c                	je     230 <strchr+0x30>[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mstrchr(const char *s, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  for(; *s; s++)[m
  224:	83 c0 01             	add    $0x1,%eax[m
  227:	0f b6 10             	movzbl (%eax),%edx[m
  22a:	84 d2                	test   %dl,%dl[m
  22c:	75 f2                	jne    220 <strchr+0x20>[m
[32m+[m[32m    if(*s == c)[m
[32m+[m[32m      return (char*)s;[m
[32m+[m[32m  return 0;[m
  22e:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m}[m
  230:	5b                   	pop    %ebx[m
  231:	5d                   	pop    %ebp[m
  232:	c3                   	ret    [m
[36m@@ -348,45 +440,110 @@[m [mcat(int fd)[m
  239:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
 00000240 <gets>:[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
  240:	55                   	push   %ebp[m
  241:	89 e5                	mov    %esp,%ebp[m
  243:	57                   	push   %edi[m
  244:	56                   	push   %esi[m
  245:	53                   	push   %ebx[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
  246:	31 f6                	xor    %esi,%esi[m
[32m+[m[32m    cc = read(0, &c, 1);[m
  248:	8d 7d e7             	lea    -0x19(%ebp),%edi[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
  24b:	83 ec 1c             	sub    $0x1c,%esp[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
  24e:	eb 29                	jmp    279 <gets+0x39>[m
[32m+[m[32m    cc = read(0, &c, 1);[m
  250:	83 ec 04             	sub    $0x4,%esp[m
  253:	6a 01                	push   $0x1[m
  255:	57                   	push   %edi[m
  256:	6a 00                	push   $0x0[m
  258:	e8 2d 01 00 00       	call   38a <read>[m
[32m+[m[32m    if(cc < 1)[m
  25d:	83 c4 10             	add    $0x10,%esp[m
  260:	85 c0                	test   %eax,%eax[m
  262:	7e 1d                	jle    281 <gets+0x41>[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
  264:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax[m
  268:	8b 55 08             	mov    0x8(%ebp),%edx[m
  26b:	89 de                	mov    %ebx,%esi[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
  26d:	3c 0a                	cmp    $0xa,%al[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
[32m+[m[32m    cc = read(0, &c, 1);[m
[32m+[m[32m    if(cc < 1)[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
  26f:	88 44 1a ff          	mov    %al,-0x1(%edx,%ebx,1)[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
  273:	74 1b                	je     290 <gets+0x50>[m
  275:	3c 0d                	cmp    $0xd,%al[m
  277:	74 17                	je     290 <gets+0x50>[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
  279:	8d 5e 01             	lea    0x1(%esi),%ebx[m
  27c:	3b 5d 0c             	cmp    0xc(%ebp),%ebx[m
  27f:	7c cf                	jl     250 <gets+0x10>[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m[32m  buf[i] = '\0';[m
  281:	8b 45 08             	mov    0x8(%ebp),%eax[m
  284:	c6 04 30 00          	movb   $0x0,(%eax,%esi,1)[m
[32m+[m[32m  return buf;[m
[32m+[m[32m}[m
  288:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
  28b:	5b                   	pop    %ebx[m
  28c:	5e                   	pop    %esi[m
  28d:	5f                   	pop    %edi[m
  28e:	5d                   	pop    %ebp[m
  28f:	c3                   	ret    [m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m[32m  buf[i] = '\0';[m
  290:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
  293:	89 de                	mov    %ebx,%esi[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m[32m  buf[i] = '\0';[m
  295:	c6 04 30 00          	movb   $0x0,(%eax,%esi,1)[m
[32m+[m[32m  return buf;[m
[32m+[m[32m}[m
  299:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
  29c:	5b                   	pop    %ebx[m
  29d:	5e                   	pop    %esi[m
[36m@@ -409,43 +566,73 @@[m [mcat(int fd)[m
  2af:	90                   	nop[m
 [m
 000002b0 <stat>:[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstat(char *n, struct stat *st)[m
[32m+[m[32m{[m
  2b0:	55                   	push   %ebp[m
  2b1:	89 e5                	mov    %esp,%ebp[m
  2b3:	56                   	push   %esi[m
  2b4:	53                   	push   %ebx[m
[32m+[m[32m  int fd;[m
[32m+[m[32m  int r;[m
[32m+[m
[32m+[m[32m  fd = open(n, O_RDONLY);[m
  2b5:	83 ec 08             	sub    $0x8,%esp[m
  2b8:	6a 00                	push   $0x0[m
  2ba:	ff 75 08             	pushl  0x8(%ebp)[m
  2bd:	e8 f0 00 00 00       	call   3b2 <open>[m
[32m+[m[32m  if(fd < 0)[m
  2c2:	83 c4 10             	add    $0x10,%esp[m
  2c5:	85 c0                	test   %eax,%eax[m
  2c7:	78 27                	js     2f0 <stat+0x40>[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  r = fstat(fd, st);[m
  2c9:	83 ec 08             	sub    $0x8,%esp[m
  2cc:	ff 75 0c             	pushl  0xc(%ebp)[m
  2cf:	89 c3                	mov    %eax,%ebx[m
  2d1:	50                   	push   %eax[m
  2d2:	e8 f3 00 00 00       	call   3ca <fstat>[m
  2d7:	89 c6                	mov    %eax,%esi[m
[32m+[m[32m  close(fd);[m
  2d9:	89 1c 24             	mov    %ebx,(%esp)[m
  2dc:	e8 b9 00 00 00       	call   39a <close>[m
[32m+[m[32m  return r;[m
  2e1:	83 c4 10             	add    $0x10,%esp[m
  2e4:	89 f0                	mov    %esi,%eax[m
[32m+[m[32m}[m
  2e6:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
  2e9:	5b                   	pop    %ebx[m
  2ea:	5e                   	pop    %esi[m
  2eb:	5d                   	pop    %ebp[m
  2ec:	c3                   	ret    [m
  2ed:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m  int fd;[m
[32m+[m[32m  int r;[m
[32m+[m
[32m+[m[32m  fd = open(n, O_RDONLY);[m
[32m+[m[32m  if(fd < 0)[m
[32m+[m[32m    return -1;[m
  2f0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
  2f5:	eb ef                	jmp    2e6 <stat+0x36>[m
  2f7:	89 f6                	mov    %esi,%esi[m
  2f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
 00000300 <atoi>:[m
[32m+[m[32m  return r;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32matoi(const char *s)[m
[32m+[m[32m{[m
  300:	55                   	push   %ebp[m
  301:	89 e5                	mov    %esp,%ebp[m
  303:	53                   	push   %ebx[m
  304:	8b 4d 08             	mov    0x8(%ebp),%ecx[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  n = 0;[m
[32m+[m[32m  while('0' <= *s && *s <= '9')[m
  307:	0f be 11             	movsbl (%ecx),%edx[m
  30a:	8d 42 d0             	lea    -0x30(%edx),%eax[m
  30d:	3c 09                	cmp    $0x9,%al[m
[36m@@ -453,13 +640,23 @@[m [mcat(int fd)[m
  314:	77 1f                	ja     335 <atoi+0x35>[m
  316:	8d 76 00             	lea    0x0(%esi),%esi[m
  319:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    n = n*10 + *s++ - '0';[m
  320:	8d 04 80             	lea    (%eax,%eax,4),%eax[m
  323:	83 c1 01             	add    $0x1,%ecx[m
  326:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax[m
[32m+[m[32matoi(const char *s)[m
[32m+[m[32m{[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  n = 0;[m
[32m+[m[32m  while('0' <= *s && *s <= '9')[m
  32a:	0f be 11             	movsbl (%ecx),%edx[m
  32d:	8d 5a d0             	lea    -0x30(%edx),%ebx[m
  330:	80 fb 09             	cmp    $0x9,%bl[m
  333:	76 eb                	jbe    320 <atoi+0x20>[m
[32m+[m[32m    n = n*10 + *s++ - '0';[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
  335:	5b                   	pop    %ebx[m
  336:	5d                   	pop    %ebp[m
  337:	c3                   	ret    [m
[36m@@ -467,6 +664,10 @@[m [mcat(int fd)[m
  339:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
 [m
 00000340 <memmove>:[m
[32m+[m
[32m+[m[32mvoid*[m
[32m+[m[32mmemmove(void *vdst, void *vsrc, int n)[m
[32m+[m[32m{[m
  340:	55                   	push   %ebp[m
  341:	89 e5                	mov    %esp,%ebp[m
  343:	56                   	push   %esi[m
[36m@@ -474,15 +675,30 @@[m [mcat(int fd)[m
  345:	8b 5d 10             	mov    0x10(%ebp),%ebx[m
  348:	8b 45 08             	mov    0x8(%ebp),%eax[m
  34b:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[32m+[m[32m  char *dst, *src;[m
[32m+[m
[32m+[m[32m  dst = vdst;[m
[32m+[m[32m  src = vsrc;[m
[32m+[m[32m  while(n-- > 0)[m
  34e:	85 db                	test   %ebx,%ebx[m
  350:	7e 14                	jle    366 <memmove+0x26>[m
  352:	31 d2                	xor    %edx,%edx[m
  354:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    *dst++ = *src++;[m
  358:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx[m
  35c:	88 0c 10             	mov    %cl,(%eax,%edx,1)[m
  35f:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m{[m
[32m+[m[32m  char *dst, *src;[m
[32m+[m
[32m+[m[32m  dst = vdst;[m
[32m+[m[32m  src = vsrc;[m
[32m+[m[32m  while(n-- > 0)[m
  362:	39 da                	cmp    %ebx,%edx[m
  364:	75 f2                	jne    358 <memmove+0x18>[m
[32m+[m[32m    *dst++ = *src++;[m
[32m+[m[32m  return vdst;[m
[32m+[m[32m}[m
  366:	5b                   	pop    %ebx[m
  367:	5e                   	pop    %esi[m
  368:	5d                   	pop    %ebp[m
[36m@@ -592,15 +808,22 @@[m [mcat(int fd)[m
  40a:	b8 0e 00 00 00       	mov    $0xe,%eax[m
  40f:	cd 40                	int    $0x40[m
  411:	c3                   	ret    [m
[31m- 412:	66 90                	xchg   %ax,%ax[m
[31m- 414:	66 90                	xchg   %ax,%ax[m
[31m- 416:	66 90                	xchg   %ax,%ax[m
[31m- 418:	66 90                	xchg   %ax,%ax[m
[32m+[m
[32m+[m[32m00000412 <set>:[m
[32m+[m[32m 412:	b8 16 00 00 00       	mov    $0x16,%eax[m
[32m+[m[32m 417:	cd 40                	int    $0x40[m
[32m+[m[32m 419:	c3                   	ret[m[41m    [m
  41a:	66 90                	xchg   %ax,%ax[m
  41c:	66 90                	xchg   %ax,%ax[m
  41e:	66 90                	xchg   %ax,%ax[m
 [m
 00000420 <printint>:[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mprintint(int fd, int xx, int base, int sgn)[m
[32m+[m[32m{[m
  420:	55                   	push   %ebp[m
  421:	89 e5                	mov    %esp,%ebp[m
  423:	57                   	push   %edi[m
[36m@@ -608,6 +831,12 @@[m [mcat(int fd)[m
  425:	53                   	push   %ebx[m
  426:	89 c6                	mov    %eax,%esi[m
  428:	83 ec 3c             	sub    $0x3c,%esp[m
[32m+[m[32m  char buf[16];[m
[32m+[m[32m  int i, neg;[m
[32m+[m[32m  uint x;[m
[32m+[m
[32m+[m[32m  neg = 0;[m
[32m+[m[32m  if(sgn && xx < 0){[m
  42b:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
  42e:	85 db                	test   %ebx,%ebx[m
  430:	74 7e                	je     4b0 <printint+0x90>[m
[36m@@ -615,32 +844,64 @@[m [mcat(int fd)[m
  434:	c1 e8 1f             	shr    $0x1f,%eax[m
  437:	84 c0                	test   %al,%al[m
  439:	74 75                	je     4b0 <printint+0x90>[m
[32m+[m[32m    neg = 1;[m
[32m+[m[32m    x = -xx;[m
  43b:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m  int i, neg;[m
[32m+[m[32m  uint x;[m
[32m+[m
[32m+[m[32m  neg = 0;[m
[32m+[m[32m  if(sgn && xx < 0){[m
[32m+[m[32m    neg = 1;[m
  43d:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)[m
[32m+[m[32m    x = -xx;[m
  444:	f7 d8                	neg    %eax[m
  446:	89 75 c0             	mov    %esi,-0x40(%ebp)[m
[32m+[m[32m  } else {[m
[32m+[m[32m    x = xx;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  i = 0;[m
  449:	31 ff                	xor    %edi,%edi[m
  44b:	8d 5d d7             	lea    -0x29(%ebp),%ebx[m
  44e:	89 ce                	mov    %ecx,%esi[m
  450:	eb 08                	jmp    45a <printint+0x3a>[m
  452:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m  do{[m
[32m+[m[32m    buf[i++] = digits[x % base];[m
  458:	89 cf                	mov    %ecx,%edi[m
  45a:	31 d2                	xor    %edx,%edx[m
  45c:	8d 4f 01             	lea    0x1(%edi),%ecx[m
  45f:	f7 f6                	div    %esi[m
  461:	0f b6 92 20 08 00 00 	movzbl 0x820(%edx),%edx[m
[32m+[m[32m  }while((x /= base) != 0);[m
  468:	85 c0                	test   %eax,%eax[m
[32m+[m[32m    x = xx;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  i = 0;[m
[32m+[m[32m  do{[m
[32m+[m[32m    buf[i++] = digits[x % base];[m
  46a:	88 14 0b             	mov    %dl,(%ebx,%ecx,1)[m
[32m+[m[32m  }while((x /= base) != 0);[m
  46d:	75 e9                	jne    458 <printint+0x38>[m
[32m+[m[32m  if(neg)[m
  46f:	8b 45 c4             	mov    -0x3c(%ebp),%eax[m
  472:	8b 75 c0             	mov    -0x40(%ebp),%esi[m
  475:	85 c0                	test   %eax,%eax[m
  477:	74 08                	je     481 <printint+0x61>[m
[32m+[m[32m    buf[i++] = '-';[m
  479:	c6 44 0d d8 2d       	movb   $0x2d,-0x28(%ebp,%ecx,1)[m
  47e:	8d 4f 02             	lea    0x2(%edi),%ecx[m
  481:	8d 7c 0d d7          	lea    -0x29(%ebp,%ecx,1),%edi[m
  485:	8d 76 00             	lea    0x0(%esi),%esi[m
  488:	0f b6 07             	movzbl (%edi),%eax[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  48b:	83 ec 04             	sub    $0x4,%esp[m
  48e:	83 ef 01             	sub    $0x1,%edi[m
  491:	6a 01                	push   $0x1[m
[36m@@ -648,9 +909,17 @@[m [mcat(int fd)[m
  494:	56                   	push   %esi[m
  495:	88 45 d7             	mov    %al,-0x29(%ebp)[m
  498:	e8 f5 fe ff ff       	call   392 <write>[m
[32m+[m[32m    buf[i++] = digits[x % base];[m
[32m+[m[32m  }while((x /= base) != 0);[m
[32m+[m[32m  if(neg)[m
[32m+[m[32m    buf[i++] = '-';[m
[32m+[m
[32m+[m[32m  while(--i >= 0)[m
  49d:	83 c4 10             	add    $0x10,%esp[m
  4a0:	39 df                	cmp    %ebx,%edi[m
  4a2:	75 e4                	jne    488 <printint+0x68>[m
[32m+[m[32m    putc(fd, buf[i]);[m
[32m+[m[32m}[m
  4a4:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
  4a7:	5b                   	pop    %ebx[m
  4a8:	5e                   	pop    %esi[m
[36m@@ -658,22 +927,70 @@[m [mcat(int fd)[m
  4aa:	5d                   	pop    %ebp[m
  4ab:	c3                   	ret    [m
  4ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  neg = 0;[m
[32m+[m[32m  if(sgn && xx < 0){[m
[32m+[m[32m    neg = 1;[m
[32m+[m[32m    x = -xx;[m
[32m+[m[32m  } else {[m
[32m+[m[32m    x = xx;[m
  4b0:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m  static char digits[] = "0123456789ABCDEF";[m
[32m+[m[32m  char buf[16];[m
[32m+[m[32m  int i, neg;[m
[32m+[m[32m  uint x;[m
[32m+[m
[32m+[m[32m  neg = 0;[m
  4b2:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)[m
  4b9:	eb 8b                	jmp    446 <printint+0x26>[m
  4bb:	90                   	nop[m
  4bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
 [m
 000004c0 <printf>:[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Print to the given fd. Only understands %d, %x, %p, %s.[m
[32m+[m[32mvoid[m
[32m+[m[32mprintf(int fd, char *fmt, ...)[m
[32m+[m[32m{[m
  4c0:	55                   	push   %ebp[m
  4c1:	89 e5                	mov    %esp,%ebp[m
  4c3:	57                   	push   %edi[m
  4c4:	56                   	push   %esi[m
  4c5:	53                   	push   %ebx[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
  4c6:	8d 45 10             	lea    0x10(%ebp),%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Print to the given fd. Only understands %d, %x, %p, %s.[m
[32m+[m[32mvoid[m
[32m+[m[32mprintf(int fd, char *fmt, ...)[m
[32m+[m[32m{[m
  4c9:	83 ec 2c             	sub    $0x2c,%esp[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
  4cc:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Print to the given fd. Only understands %d, %x, %p, %s.[m
[32m+[m[32mvoid[m
[32m+[m[32mprintf(int fd, char *fmt, ...)[m
[32m+[m[32m{[m
  4cf:	8b 7d 08             	mov    0x8(%ebp),%edi[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
  4d2:	89 45 d0             	mov    %eax,-0x30(%ebp)[m
  4d5:	0f b6 1e             	movzbl (%esi),%ebx[m
  4d8:	83 c6 01             	add    $0x1,%esi[m
[36m@@ -683,10 +1000,26 @@[m [mcat(int fd)[m
  4e5:	eb 39                	jmp    520 <printf+0x60>[m
  4e7:	89 f6                	mov    %esi,%esi[m
  4e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    c = fmt[i] & 0xff;[m
[32m+[m[32m    if(state == 0){[m
[32m+[m[32m      if(c == '%'){[m
  4f0:	83 f8 25             	cmp    $0x25,%eax[m
  4f3:	89 55 d4             	mov    %edx,-0x2c(%ebp)[m
[32m+[m[32m        state = '%';[m
  4f6:	ba 25 00 00 00       	mov    $0x25,%edx[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m    c = fmt[i] & 0xff;[m
[32m+[m[32m    if(state == 0){[m
[32m+[m[32m      if(c == '%'){[m
  4fb:	74 18                	je     515 <printf+0x55>[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  4fd:	8d 45 e2             	lea    -0x1e(%ebp),%eax[m
  500:	83 ec 04             	sub    $0x4,%esp[m
  503:	88 5d e2             	mov    %bl,-0x1e(%ebp)[m
[36m@@ -697,26 +1030,69 @@[m [mcat(int fd)[m
  50f:	8b 55 d4             	mov    -0x2c(%ebp),%edx[m
  512:	83 c4 10             	add    $0x10,%esp[m
  515:	83 c6 01             	add    $0x1,%esi[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
  518:	0f b6 5e ff          	movzbl -0x1(%esi),%ebx[m
  51c:	84 db                	test   %bl,%bl[m
  51e:	74 73                	je     593 <printf+0xd3>[m
[32m+[m[32m    c = fmt[i] & 0xff;[m
[32m+[m[32m    if(state == 0){[m
  520:	85 d2                	test   %edx,%edx[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m    c = fmt[i] & 0xff;[m
  522:	0f be cb             	movsbl %bl,%ecx[m
  525:	0f b6 c3             	movzbl %bl,%eax[m
[32m+[m[32m    if(state == 0){[m
  528:	74 c6                	je     4f0 <printf+0x30>[m
[32m+[m[32m      if(c == '%'){[m
[32m+[m[32m        state = '%';[m
[32m+[m[32m      } else {[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m    } else if(state == '%'){[m
  52a:	83 fa 25             	cmp    $0x25,%edx[m
  52d:	75 e6                	jne    515 <printf+0x55>[m
[32m+[m[32m      if(c == 'd'){[m
  52f:	83 f8 64             	cmp    $0x64,%eax[m
  532:	0f 84 f8 00 00 00    	je     630 <printf+0x170>[m
[32m+[m[32m        printint(fd, *ap, 10, 1);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == 'x' || c == 'p'){[m
  538:	81 e1 f7 00 00 00    	and    $0xf7,%ecx[m
  53e:	83 f9 70             	cmp    $0x70,%ecx[m
  541:	74 5d                	je     5a0 <printf+0xe0>[m
[32m+[m[32m        printint(fd, *ap, 16, 0);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == 's'){[m
  543:	83 f8 73             	cmp    $0x73,%eax[m
  546:	0f 84 84 00 00 00    	je     5d0 <printf+0x110>[m
[32m+[m[32m          s = "(null)";[m
[32m+[m[32m        while(*s != 0){[m
[32m+[m[32m          putc(fd, *s);[m
[32m+[m[32m          s++;[m
[32m+[m[32m        }[m
[32m+[m[32m      } else if(c == 'c'){[m
  54c:	83 f8 63             	cmp    $0x63,%eax[m
  54f:	0f 84 ea 00 00 00    	je     63f <printf+0x17f>[m
[32m+[m[32m        putc(fd, *ap);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == '%'){[m
  555:	83 f8 25             	cmp    $0x25,%eax[m
  558:	0f 84 c2 00 00 00    	je     620 <printf+0x160>[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  55e:	8d 45 e7             	lea    -0x19(%ebp),%eax[m
  561:	83 ec 04             	sub    $0x4,%esp[m
  564:	c6 45 e7 25          	movb   $0x25,-0x19(%ebp)[m
[36m@@ -732,11 +1108,41 @@[m [mcat(int fd)[m
  57d:	57                   	push   %edi[m
  57e:	83 c6 01             	add    $0x1,%esi[m
  581:	e8 0c fe ff ff       	call   392 <write>[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
  586:	0f b6 5e ff          	movzbl -0x1(%esi),%ebx[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  58a:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // Unknown % sequence.  Print it to draw attention.[m
[32m+[m[32m        putc(fd, '%');[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m      state = 0;[m
  58d:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
  58f:	84 db                	test   %bl,%bl[m
  591:	75 8d                	jne    520 <printf+0x60>[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m      state = 0;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
  593:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
  596:	5b                   	pop    %ebx[m
  597:	5e                   	pop    %esi[m
[36m@@ -745,6 +1151,12 @@[m [mcat(int fd)[m
  59a:	c3                   	ret    [m
  59b:	90                   	nop[m
  59c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    } else if(state == '%'){[m
[32m+[m[32m      if(c == 'd'){[m
[32m+[m[32m        printint(fd, *ap, 10, 1);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == 'x' || c == 'p'){[m
[32m+[m[32m        printint(fd, *ap, 16, 0);[m
  5a0:	83 ec 0c             	sub    $0xc,%esp[m
  5a3:	b9 10 00 00 00       	mov    $0x10,%ecx[m
  5a8:	6a 00                	push   $0x0[m
[36m@@ -752,51 +1164,118 @@[m [mcat(int fd)[m
  5ad:	89 f8                	mov    %edi,%eax[m
  5af:	8b 13                	mov    (%ebx),%edx[m
  5b1:	e8 6a fe ff ff       	call   420 <printint>[m
[32m+[m[32m        ap++;[m
  5b6:	89 d8                	mov    %ebx,%eax[m
  5b8:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // Unknown % sequence.  Print it to draw attention.[m
[32m+[m[32m        putc(fd, '%');[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m      state = 0;[m
  5bb:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m      if(c == 'd'){[m
[32m+[m[32m        printint(fd, *ap, 10, 1);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == 'x' || c == 'p'){[m
[32m+[m[32m        printint(fd, *ap, 16, 0);[m
[32m+[m[32m        ap++;[m
  5bd:	83 c0 04             	add    $0x4,%eax[m
  5c0:	89 45 d0             	mov    %eax,-0x30(%ebp)[m
  5c3:	e9 4d ff ff ff       	jmp    515 <printf+0x55>[m
  5c8:	90                   	nop[m
  5c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m      } else if(c == 's'){[m
[32m+[m[32m        s = (char*)*ap;[m
  5d0:	8b 45 d0             	mov    -0x30(%ebp),%eax[m
  5d3:	8b 18                	mov    (%eax),%ebx[m
[32m+[m[32m        ap++;[m
  5d5:	83 c0 04             	add    $0x4,%eax[m
  5d8:	89 45 d0             	mov    %eax,-0x30(%ebp)[m
[32m+[m[32m        if(s == 0)[m
[32m+[m[32m          s = "(null)";[m
  5db:	b8 18 08 00 00       	mov    $0x818,%eax[m
  5e0:	85 db                	test   %ebx,%ebx[m
  5e2:	0f 44 d8             	cmove  %eax,%ebx[m
[32m+[m[32m        while(*s != 0){[m
  5e5:	0f b6 03             	movzbl (%ebx),%eax[m
  5e8:	84 c0                	test   %al,%al[m
  5ea:	74 23                	je     60f <printf+0x14f>[m
  5ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
  5f0:	88 45 e3             	mov    %al,-0x1d(%ebp)[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  5f3:	8d 45 e3             	lea    -0x1d(%ebp),%eax[m
  5f6:	83 ec 04             	sub    $0x4,%esp[m
  5f9:	6a 01                	push   $0x1[m
[32m+[m[32m        ap++;[m
[32m+[m[32m        if(s == 0)[m
[32m+[m[32m          s = "(null)";[m
[32m+[m[32m        while(*s != 0){[m
[32m+[m[32m          putc(fd, *s);[m
[32m+[m[32m          s++;[m
  5fb:	83 c3 01             	add    $0x1,%ebx[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  5fe:	50                   	push   %eax[m
  5ff:	57                   	push   %edi[m
  600:	e8 8d fd ff ff       	call   392 <write>[m
[32m+[m[32m      } else if(c == 's'){[m
[32m+[m[32m        s = (char*)*ap;[m
[32m+[m[32m        ap++;[m
[32m+[m[32m        if(s == 0)[m
[32m+[m[32m          s = "(null)";[m
[32m+[m[32m        while(*s != 0){[m
  605:	0f b6 03             	movzbl (%ebx),%eax[m
  608:	83 c4 10             	add    $0x10,%esp[m
  60b:	84 c0                	test   %al,%al[m
  60d:	75 e1                	jne    5f0 <printf+0x130>[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // Unknown % sequence.  Print it to draw attention.[m
[32m+[m[32m        putc(fd, '%');[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m      state = 0;[m
  60f:	31 d2                	xor    %edx,%edx[m
  611:	e9 ff fe ff ff       	jmp    515 <printf+0x55>[m
  616:	8d 76 00             	lea    0x0(%esi),%esi[m
  619:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  620:	83 ec 04             	sub    $0x4,%esp[m
  623:	88 5d e5             	mov    %bl,-0x1b(%ebp)[m
  626:	8d 45 e5             	lea    -0x1b(%ebp),%eax[m
  629:	6a 01                	push   $0x1[m
  62b:	e9 4c ff ff ff       	jmp    57c <printf+0xbc>[m
[32m+[m[32m      } else {[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m    } else if(state == '%'){[m
[32m+[m[32m      if(c == 'd'){[m
[32m+[m[32m        printint(fd, *ap, 10, 1);[m
  630:	83 ec 0c             	sub    $0xc,%esp[m
  633:	b9 0a 00 00 00       	mov    $0xa,%ecx[m
  638:	6a 01                	push   $0x1[m
  63a:	e9 6b ff ff ff       	jmp    5aa <printf+0xea>[m
  63f:	8b 5d d0             	mov    -0x30(%ebp),%ebx[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  642:	83 ec 04             	sub    $0x4,%esp[m
  645:	8b 03                	mov    (%ebx),%eax[m
  647:	6a 01                	push   $0x1[m
[36m@@ -811,63 +1290,149 @@[m [mcat(int fd)[m
  65f:	90                   	nop[m
 [m
 00000660 <free>:[m
[32m+[m[32mstatic Header base;[m
[32m+[m[32mstatic Header *freep;[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
  660:	55                   	push   %ebp[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
  661:	a1 00 0b 00 00       	mov    0xb00,%eax[m
[32m+[m[32mstatic Header base;[m
[32m+[m[32mstatic Header *freep;[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
  666:	89 e5                	mov    %esp,%ebp[m
  668:	57                   	push   %edi[m
  669:	56                   	push   %esi[m
  66a:	53                   	push   %ebx[m
  66b:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
  66e:	8b 10                	mov    (%eax),%edx[m
[32m+[m[32mvoid[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
  670:	8d 4b f8             	lea    -0x8(%ebx),%ecx[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
  673:	39 c8                	cmp    %ecx,%eax[m
  675:	73 19                	jae    690 <free+0x30>[m
  677:	89 f6                	mov    %esi,%esi[m
  679:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
  680:	39 d1                	cmp    %edx,%ecx[m
  682:	72 1c                	jb     6a0 <free+0x40>[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
  684:	39 d0                	cmp    %edx,%eax[m
  686:	73 18                	jae    6a0 <free+0x40>[m
[32m+[m[32mstatic Header base;[m
[32m+[m[32mstatic Header *freep;[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
  688:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
  68a:	39 c8                	cmp    %ecx,%eax[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
  68c:	8b 10                	mov    (%eax),%edx[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
  68e:	72 f0                	jb     680 <free+0x20>[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
  690:	39 d0                	cmp    %edx,%eax[m
  692:	72 f4                	jb     688 <free+0x28>[m
  694:	39 d1                	cmp    %edx,%ecx[m
  696:	73 f0                	jae    688 <free+0x28>[m
  698:	90                   	nop[m
  699:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m      break;[m
[32m+[m[32m  if(bp + bp->s.size == p->s.ptr){[m
  6a0:	8b 73 fc             	mov    -0x4(%ebx),%esi[m
  6a3:	8d 3c f1             	lea    (%ecx,%esi,8),%edi[m
  6a6:	39 d7                	cmp    %edx,%edi[m
  6a8:	74 19                	je     6c3 <free+0x63>[m
[32m+[m[32m    bp->s.size += p->s.ptr->s.size;[m
[32m+[m[32m    bp->s.ptr = p->s.ptr->s.ptr;[m
[32m+[m[32m  } else[m
[32m+[m[32m    bp->s.ptr = p->s.ptr;[m
  6aa:	89 53 f8             	mov    %edx,-0x8(%ebx)[m
[32m+[m[32m  if(p + p->s.size == bp){[m
  6ad:	8b 50 04             	mov    0x4(%eax),%edx[m
  6b0:	8d 34 d0             	lea    (%eax,%edx,8),%esi[m
  6b3:	39 f1                	cmp    %esi,%ecx[m
  6b5:	74 23                	je     6da <free+0x7a>[m
[32m+[m[32m    p->s.size += bp->s.size;[m
[32m+[m[32m    p->s.ptr = bp->s.ptr;[m
[32m+[m[32m  } else[m
[32m+[m[32m    p->s.ptr = bp;[m
  6b7:	89 08                	mov    %ecx,(%eax)[m
[32m+[m[32m  freep = p;[m
  6b9:	a3 00 0b 00 00       	mov    %eax,0xb00[m
[32m+[m[32m}[m
  6be:	5b                   	pop    %ebx[m
  6bf:	5e                   	pop    %esi[m
  6c0:	5f                   	pop    %edi[m
  6c1:	5d                   	pop    %ebp[m
  6c2:	c3                   	ret    [m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
[32m+[m[32m      break;[m
[32m+[m[32m  if(bp + bp->s.size == p->s.ptr){[m
[32m+[m[32m    bp->s.size += p->s.ptr->s.size;[m
  6c3:	03 72 04             	add    0x4(%edx),%esi[m
  6c6:	89 73 fc             	mov    %esi,-0x4(%ebx)[m
[32m+[m[32m    bp->s.ptr = p->s.ptr->s.ptr;[m
  6c9:	8b 10                	mov    (%eax),%edx[m
  6cb:	8b 12                	mov    (%edx),%edx[m
  6cd:	89 53 f8             	mov    %edx,-0x8(%ebx)[m
[32m+[m[32m  } else[m
[32m+[m[32m    bp->s.ptr = p->s.ptr;[m
[32m+[m[32m  if(p + p->s.size == bp){[m
  6d0:	8b 50 04             	mov    0x4(%eax),%edx[m
  6d3:	8d 34 d0             	lea    (%eax,%edx,8),%esi[m
  6d6:	39 f1                	cmp    %esi,%ecx[m
  6d8:	75 dd                	jne    6b7 <free+0x57>[m
[32m+[m[32m    p->s.size += bp->s.size;[m
  6da:	03 53 fc             	add    -0x4(%ebx),%edx[m
[32m+[m[32m    p->s.ptr = bp->s.ptr;[m
[32m+[m[32m  } else[m
[32m+[m[32m    p->s.ptr = bp;[m
[32m+[m[32m  freep = p;[m
  6dd:	a3 00 0b 00 00       	mov    %eax,0xb00[m
[32m+[m[32m    bp->s.size += p->s.ptr->s.size;[m
[32m+[m[32m    bp->s.ptr = p->s.ptr->s.ptr;[m
[32m+[m[32m  } else[m
[32m+[m[32m    bp->s.ptr = p->s.ptr;[m
[32m+[m[32m  if(p + p->s.size == bp){[m
[32m+[m[32m    p->s.size += bp->s.size;[m
  6e2:	89 50 04             	mov    %edx,0x4(%eax)[m
[32m+[m[32m    p->s.ptr = bp->s.ptr;[m
  6e5:	8b 53 f8             	mov    -0x8(%ebx),%edx[m
  6e8:	89 10                	mov    %edx,(%eax)[m
[32m+[m[32m  } else[m
[32m+[m[32m    p->s.ptr = bp;[m
[32m+[m[32m  freep = p;[m
[32m+[m[32m}[m
  6ea:	5b                   	pop    %ebx[m
  6eb:	5e                   	pop    %esi[m
  6ec:	5f                   	pop    %edi[m
[36m@@ -876,21 +1441,44 @@[m [mcat(int fd)[m
  6ef:	90                   	nop[m
 [m
 000006f0 <malloc>:[m
[32m+[m[32m  return freep;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid*[m
[32m+[m[32mmalloc(uint nbytes)[m
[32m+[m[32m{[m
  6f0:	55                   	push   %ebp[m
  6f1:	89 e5                	mov    %esp,%ebp[m
  6f3:	57                   	push   %edi[m
  6f4:	56                   	push   %esi[m
  6f5:	53                   	push   %ebx[m
  6f6:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m  Header *p, *prevp;[m
[32m+[m[32m  uint nunits;[m
[32m+[m
[32m+[m[32m  nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;[m
  6f9:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m  if((prevp = freep) == 0){[m
  6fc:	8b 15 00 0b 00 00    	mov    0xb00,%edx[m
[32m+[m[32mmalloc(uint nbytes)[m
[32m+[m[32m{[m
[32m+[m[32m  Header *p, *prevp;[m
[32m+[m[32m  uint nunits;[m
[32m+[m
[32m+[m[32m  nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;[m
  702:	8d 78 07             	lea    0x7(%eax),%edi[m
  705:	c1 ef 03             	shr    $0x3,%edi[m
  708:	83 c7 01             	add    $0x1,%edi[m
[32m+[m[32m  if((prevp = freep) == 0){[m
  70b:	85 d2                	test   %edx,%edx[m
  70d:	0f 84 a3 00 00 00    	je     7b6 <malloc+0xc6>[m
  713:	8b 02                	mov    (%edx),%eax[m
  715:	8b 48 04             	mov    0x4(%eax),%ecx[m
[32m+[m[32m    base.s.ptr = freep = prevp = &base;[m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){[m
[32m+[m[32m    if(p->s.size >= nunits){[m
  718:	39 cf                	cmp    %ecx,%edi[m
  71a:	76 74                	jbe    790 <malloc+0xa0>[m
  71c:	81 ff 00 10 00 00    	cmp    $0x1000,%edi[m
[36m@@ -902,52 +1490,117 @@[m [mcat(int fd)[m
  73c:	0f 46 da             	cmovbe %edx,%ebx[m
  73f:	eb 10                	jmp    751 <malloc+0x61>[m
  741:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;[m
[32m+[m[32m  if((prevp = freep) == 0){[m
[32m+[m[32m    base.s.ptr = freep = prevp = &base;[m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){[m
  748:	8b 02                	mov    (%edx),%eax[m
[32m+[m[32m    if(p->s.size >= nunits){[m
  74a:	8b 48 04             	mov    0x4(%eax),%ecx[m
  74d:	39 cf                	cmp    %ecx,%edi[m
  74f:	76 3f                	jbe    790 <malloc+0xa0>[m
[32m+[m[32m        p->s.size = nunits;[m
[32m+[m[32m      }[m
[32m+[m[32m      freep = prevp;[m
[32m+[m[32m      return (void*)(p + 1);[m
[32m+[m[32m    }[m
[32m+[m[32m    if(p == freep)[m
  751:	39 05 00 0b 00 00    	cmp    %eax,0xb00[m
  757:	89 c2                	mov    %eax,%edx[m
  759:	75 ed                	jne    748 <malloc+0x58>[m
[32m+[m[32m  char *p;[m
[32m+[m[32m  Header *hp;[m
[32m+[m
[32m+[m[32m  if(nu < 4096)[m
[32m+[m[32m    nu = 4096;[m
[32m+[m[32m  p = sbrk(nu * sizeof(Header));[m
  75b:	83 ec 0c             	sub    $0xc,%esp[m
  75e:	53                   	push   %ebx[m
  75f:	e8 96 fc ff ff       	call   3fa <sbrk>[m
[32m+[m[32m  if(p == (char*)-1)[m
  764:	83 c4 10             	add    $0x10,%esp[m
  767:	83 f8 ff             	cmp    $0xffffffff,%eax[m
  76a:	74 1c                	je     788 <malloc+0x98>[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  hp = (Header*)p;[m
[32m+[m[32m  hp->s.size = nu;[m
  76c:	89 70 04             	mov    %esi,0x4(%eax)[m
[32m+[m[32m  free((void*)(hp + 1));[m
  76f:	83 ec 0c             	sub    $0xc,%esp[m
  772:	83 c0 08             	add    $0x8,%eax[m
  775:	50                   	push   %eax[m
  776:	e8 e5 fe ff ff       	call   660 <free>[m
[32m+[m[32m  return freep;[m
  77b:	8b 15 00 0b 00 00    	mov    0xb00,%edx[m
[32m+[m[32m      }[m
[32m+[m[32m      freep = prevp;[m
[32m+[m[32m      return (void*)(p + 1);[m
[32m+[m[32m    }[m
[32m+[m[32m    if(p == freep)[m
[32m+[m[32m      if((p = morecore(nunits)) == 0)[m
  781:	83 c4 10             	add    $0x10,%esp[m
  784:	85 d2                	test   %edx,%edx[m
  786:	75 c0                	jne    748 <malloc+0x58>[m
[32m+[m[32m        return 0;[m
  788:	31 c0                	xor    %eax,%eax[m
  78a:	eb 1c                	jmp    7a8 <malloc+0xb8>[m
  78c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    base.s.ptr = freep = prevp = &base;[m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){[m
[32m+[m[32m    if(p->s.size >= nunits){[m
[32m+[m[32m      if(p->s.size == nunits)[m
  790:	39 cf                	cmp    %ecx,%edi[m
  792:	74 1c                	je     7b0 <malloc+0xc0>[m
[32m+[m[32m        prevp->s.ptr = p->s.ptr;[m
[32m+[m[32m      else {[m
[32m+[m[32m        p->s.size -= nunits;[m
  794:	29 f9                	sub    %edi,%ecx[m
  796:	89 48 04             	mov    %ecx,0x4(%eax)[m
[32m+[m[32m        p += p->s.size;[m
  799:	8d 04 c8             	lea    (%eax,%ecx,8),%eax[m
[32m+[m[32m        p->s.size = nunits;[m
  79c:	89 78 04             	mov    %edi,0x4(%eax)[m
[32m+[m[32m      }[m
[32m+[m[32m      freep = prevp;[m
  79f:	89 15 00 0b 00 00    	mov    %edx,0xb00[m
[32m+[m[32m      return (void*)(p + 1);[m
  7a5:	83 c0 08             	add    $0x8,%eax[m
[32m+[m[32m    }[m
[32m+[m[32m    if(p == freep)[m
[32m+[m[32m      if((p = morecore(nunits)) == 0)[m
[32m+[m[32m        return 0;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
  7a8:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
  7ab:	5b                   	pop    %ebx[m
  7ac:	5e                   	pop    %esi[m
  7ad:	5f                   	pop    %edi[m
  7ae:	5d                   	pop    %ebp[m
  7af:	c3                   	ret    [m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){[m
[32m+[m[32m    if(p->s.size >= nunits){[m
[32m+[m[32m      if(p->s.size == nunits)[m
[32m+[m[32m        prevp->s.ptr = p->s.ptr;[m
  7b0:	8b 08                	mov    (%eax),%ecx[m
  7b2:	89 0a                	mov    %ecx,(%edx)[m
  7b4:	eb e9                	jmp    79f <malloc+0xaf>[m
[32m+[m[32m  Header *p, *prevp;[m
[32m+[m[32m  uint nunits;[m
[32m+[m
[32m+[m[32m  nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;[m
[32m+[m[32m  if((prevp = freep) == 0){[m
[32m+[m[32m    base.s.ptr = freep = prevp = &base;[m
  7b6:	c7 05 00 0b 00 00 04 	movl   $0xb04,0xb00[m
  7bd:	0b 00 00 [m
  7c0:	c7 05 04 0b 00 00 04 	movl   $0xb04,0xb04[m
  7c7:	0b 00 00 [m
[32m+[m[32m    base.s.size = 0;[m
  7ca:	b8 04 0b 00 00       	mov    $0xb04,%eax[m
  7cf:	c7 05 08 0b 00 00 00 	movl   $0x0,0xb08[m
  7d6:	00 00 00 [m
[1mdiff --git a/cat.c b/cat.c[m
[1mindex cf89d4b..ed1987d 100644[m
[1m--- a/cat.c[m
[1m+++ b/cat.c[m
[36m@@ -12,12 +12,12 @@[m [mcat(int fd)[m
   while((n = read(fd, buf, sizeof(buf))) > 0) {[m
     if (write(1, buf, n) != n) {[m
       printf(1, "cat: write error\n");[m
[31m-      exit(11);[m
[32m+[m[32m      exit(0);[m
     }[m
   }[m
   if(n < 0){[m
     printf(1, "cat: read error\n");[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
 }[m
 [m
[36m@@ -28,16 +28,16 @@[m [mmain(int argc, char *argv[])[m
 [m
   if(argc <= 1){[m
     cat(0);[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
 [m
   for(i = 1; i < argc; i++){[m
     if((fd = open(argv[i], 0)) < 0){[m
       printf(1, "cat: cannot open %s\n", argv[i]);[m
[31m-      exit(11);[m
[32m+[m[32m      exit(0);[m
     }[m
     cat(fd);[m
     close(fd);[m
   }[m
[31m-  exit(11);[m
[32m+[m[32m  exit(0);[m
 }[m
[1mdiff --git a/cat.o b/cat.o[m
[1mindex 71fdd21..a0c9437 100644[m
Binary files a/cat.o and b/cat.o differ
[1mdiff --git a/cat.sym b/cat.sym[m
[1mindex b042c2c..fad8a40 100644[m
[1m--- a/cat.sym[m
[1m+++ b/cat.sym[m
[36m@@ -14,7 +14,7 @@[m
 00000000 ulib.c[m
 00000000 printf.c[m
 00000420 printint[m
[31m-00000820 digits.1107[m
[32m+[m[32m00000820 digits.1110[m
 00000000 umalloc.c[m
 00000b00 freep[m
 00000b04 base[m
[36m@@ -53,6 +53,7 @@[m
 00000300 atoi[m
 000001b0 strlen[m
 000003b2 open[m
[32m+[m[32m00000412 set[m
 00000200 strchr[m
 000003da mkdir[m
 0000039a close[m
[1mdiff --git a/console.o b/console.o[m
[1mindex a28908a..de71d67 100644[m
Binary files a/console.o and b/console.o differ
[1mdiff --git a/echo.asm b/echo.asm[m
[1mindex 33870da..70448cc 100644[m
[1m--- a/echo.asm[m
[1m+++ b/echo.asm[m
[36m@@ -47,9 +47,9 @@[m [mmain(int argc, char *argv[])[m
   55:	6a 01                	push   $0x1[m
   57:	e8 a4 03 00 00       	call   400 <printf>[m
   5c:	83 c4 10             	add    $0x10,%esp[m
[31m-  exit(11);[m
[32m+[m[32m  exit(0);[m
   5f:	83 ec 0c             	sub    $0xc,%esp[m
[31m-  62:	6a 0b                	push   $0xb[m
[32m+[m[32m  62:	6a 00                	push   $0x0[m
   64:	e8 49 02 00 00       	call   2b2 <exit>[m
   69:	66 90                	xchg   %ax,%ax[m
   6b:	66 90                	xchg   %ax,%ax[m
[36m@@ -57,11 +57,21 @@[m [mmain(int argc, char *argv[])[m
   6f:	90                   	nop[m
 [m
 00000070 <strcpy>:[m
[32m+[m[32m#include "user.h"[m
[32m+[m[32m#include "x86.h"[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mstrcpy(char *s, char *t)[m
[32m+[m[32m{[m
   70:	55                   	push   %ebp[m
   71:	89 e5                	mov    %esp,%ebp[m
   73:	53                   	push   %ebx[m
   74:	8b 45 08             	mov    0x8(%ebp),%eax[m
   77:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[32m+[m[32m  char *os;[m
[32m+[m
[32m+[m[32m  os = s;[m
[32m+[m[32m  while((*s++ = *t++) != 0)[m
   7a:	89 c2                	mov    %eax,%edx[m
   7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
   80:	83 c1 01             	add    $0x1,%ecx[m
[36m@@ -70,6 +80,9 @@[m [mmain(int argc, char *argv[])[m
   8a:	84 db                	test   %bl,%bl[m
   8c:	88 5a ff             	mov    %bl,-0x1(%edx)[m
   8f:	75 ef                	jne    80 <strcpy+0x10>[m
[32m+[m[32m    ;[m
[32m+[m[32m  return os;[m
[32m+[m[32m}[m
   91:	5b                   	pop    %ebx[m
   92:	5d                   	pop    %ebp[m
   93:	c3                   	ret    [m
[36m@@ -77,12 +90,17 @@[m [mmain(int argc, char *argv[])[m
   9a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi[m
 [m
 000000a0 <strcmp>:[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
   a0:	55                   	push   %ebp[m
   a1:	89 e5                	mov    %esp,%ebp[m
   a3:	56                   	push   %esi[m
   a4:	53                   	push   %ebx[m
   a5:	8b 55 08             	mov    0x8(%ebp),%edx[m
   a8:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[32m+[m[32m  while(*p && *p == *q)[m
   ab:	0f b6 02             	movzbl (%edx),%eax[m
   ae:	0f b6 19             	movzbl (%ecx),%ebx[m
   b1:	84 c0                	test   %al,%al[m
[36m@@ -90,23 +108,49 @@[m [mmain(int argc, char *argv[])[m
   b5:	eb 29                	jmp    e0 <strcmp+0x40>[m
   b7:	89 f6                	mov    %esi,%esi[m
   b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    p++, q++;[m
   c0:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m  while(*p && *p == *q)[m
   c3:	0f b6 02             	movzbl (%edx),%eax[m
[32m+[m[32m    p++, q++;[m
   c6:	8d 71 01             	lea    0x1(%ecx),%esi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m  while(*p && *p == *q)[m
   c9:	0f b6 59 01          	movzbl 0x1(%ecx),%ebx[m
   cd:	84 c0                	test   %al,%al[m
   cf:	74 0f                	je     e0 <strcmp+0x40>[m
   d1:	89 f1                	mov    %esi,%ecx[m
   d3:	38 d8                	cmp    %bl,%al[m
   d5:	74 e9                	je     c0 <strcmp+0x20>[m
[32m+[m[32m    p++, q++;[m
[32m+[m[32m  return (uchar)*p - (uchar)*q;[m
   d7:	29 d8                	sub    %ebx,%eax[m
[32m+[m[32m}[m
   d9:	5b                   	pop    %ebx[m
   da:	5e                   	pop    %esi[m
   db:	5d                   	pop    %ebp[m
   dc:	c3                   	ret    [m
   dd:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m  while(*p && *p == *q)[m
   e0:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m    p++, q++;[m
[32m+[m[32m  return (uchar)*p - (uchar)*q;[m
   e2:	29 d8                	sub    %ebx,%eax[m
[32m+[m[32m}[m
   e4:	5b                   	pop    %ebx[m
   e5:	5e                   	pop    %esi[m
   e6:	5d                   	pop    %ebp[m
[36m@@ -115,9 +159,16 @@[m [mmain(int argc, char *argv[])[m
   e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
 [m
 000000f0 <strlen>:[m
[32m+[m
[32m+[m[32muint[m
[32m+[m[32mstrlen(char *s)[m
[32m+[m[32m{[m
   f0:	55                   	push   %ebp[m
   f1:	89 e5                	mov    %esp,%ebp[m
   f3:	8b 4d 08             	mov    0x8(%ebp),%ecx[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  for(n = 0; s[n]; n++)[m
   f6:	80 39 00             	cmpb   $0x0,(%ecx)[m
   f9:	74 12                	je     10d <strlen+0x1d>[m
   fb:	31 d2                	xor    %edx,%edx[m
[36m@@ -126,9 +177,21 @@[m [mmain(int argc, char *argv[])[m
  103:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)[m
  107:	89 d0                	mov    %edx,%eax[m
  109:	75 f5                	jne    100 <strlen+0x10>[m
[32m+[m[32m    ;[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
  10b:	5d                   	pop    %ebp[m
  10c:	c3                   	ret    [m
[32m+[m[32muint[m
[32m+[m[32mstrlen(char *s)[m
[32m+[m[32m{[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  for(n = 0; s[n]; n++)[m
  10d:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m    ;[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
  10f:	5d                   	pop    %ebp[m
  110:	c3                   	ret    [m
  111:	eb 0d                	jmp    120 <memset>[m
[36m@@ -147,15 +210,28 @@[m [mmain(int argc, char *argv[])[m
  11f:	90                   	nop[m
 [m
 00000120 <memset>:[m
[32m+[m
[32m+[m[32mvoid*[m
[32m+[m[32mmemset(void *dst, int c, uint n)[m
[32m+[m[32m{[m
  120:	55                   	push   %ebp[m
  121:	89 e5                	mov    %esp,%ebp[m
  123:	57                   	push   %edi[m
  124:	8b 55 08             	mov    0x8(%ebp),%edx[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32mstosb(void *addr, int data, int cnt)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("cld; rep stosb" :[m
  127:	8b 4d 10             	mov    0x10(%ebp),%ecx[m
  12a:	8b 45 0c             	mov    0xc(%ebp),%eax[m
  12d:	89 d7                	mov    %edx,%edi[m
  12f:	fc                   	cld    [m
  130:	f3 aa                	rep stos %al,%es:(%edi)[m
[32m+[m[32m  stosb(dst, c, n);[m
[32m+[m[32m  return dst;[m
[32m+[m[32m}[m
  132:	89 d0                	mov    %edx,%eax[m
  134:	5f                   	pop    %edi[m
  135:	5d                   	pop    %ebp[m
[36m@@ -164,14 +240,20 @@[m [mmain(int argc, char *argv[])[m
  139:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
 00000140 <strchr>:[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mstrchr(const char *s, char c)[m
[32m+[m[32m{[m
  140:	55                   	push   %ebp[m
  141:	89 e5                	mov    %esp,%ebp[m
  143:	53                   	push   %ebx[m
  144:	8b 45 08             	mov    0x8(%ebp),%eax[m
  147:	8b 5d 0c             	mov    0xc(%ebp),%ebx[m
[32m+[m[32m  for(; *s; s++)[m
  14a:	0f b6 10             	movzbl (%eax),%edx[m
  14d:	84 d2                	test   %dl,%dl[m
  14f:	74 1d                	je     16e <strchr+0x2e>[m
[32m+[m[32m    if(*s == c)[m
  151:	38 d3                	cmp    %dl,%bl[m
  153:	89 d9                	mov    %ebx,%ecx[m
  155:	75 0d                	jne    164 <strchr+0x24>[m
[36m@@ -179,11 +261,21 @@[m [mmain(int argc, char *argv[])[m
  159:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
  160:	38 ca                	cmp    %cl,%dl[m
  162:	74 0c                	je     170 <strchr+0x30>[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mstrchr(const char *s, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  for(; *s; s++)[m
  164:	83 c0 01             	add    $0x1,%eax[m
  167:	0f b6 10             	movzbl (%eax),%edx[m
  16a:	84 d2                	test   %dl,%dl[m
  16c:	75 f2                	jne    160 <strchr+0x20>[m
[32m+[m[32m    if(*s == c)[m
[32m+[m[32m      return (char*)s;[m
[32m+[m[32m  return 0;[m
  16e:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m}[m
  170:	5b                   	pop    %ebx[m
  171:	5d                   	pop    %ebp[m
  172:	c3                   	ret    [m
[36m@@ -191,45 +283,110 @@[m [mmain(int argc, char *argv[])[m
  179:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
 00000180 <gets>:[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
  180:	55                   	push   %ebp[m
  181:	89 e5                	mov    %esp,%ebp[m
  183:	57                   	push   %edi[m
  184:	56                   	push   %esi[m
  185:	53                   	push   %ebx[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
  186:	31 f6                	xor    %esi,%esi[m
[32m+[m[32m    cc = read(0, &c, 1);[m
  188:	8d 7d e7             	lea    -0x19(%ebp),%edi[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
  18b:	83 ec 1c             	sub    $0x1c,%esp[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
  18e:	eb 29                	jmp    1b9 <gets+0x39>[m
[32m+[m[32m    cc = read(0, &c, 1);[m
  190:	83 ec 04             	sub    $0x4,%esp[m
  193:	6a 01                	push   $0x1[m
  195:	57                   	push   %edi[m
  196:	6a 00                	push   $0x0[m
  198:	e8 2d 01 00 00       	call   2ca <read>[m
[32m+[m[32m    if(cc < 1)[m
  19d:	83 c4 10             	add    $0x10,%esp[m
  1a0:	85 c0                	test   %eax,%eax[m
  1a2:	7e 1d                	jle    1c1 <gets+0x41>[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
  1a4:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax[m
  1a8:	8b 55 08             	mov    0x8(%ebp),%edx[m
  1ab:	89 de                	mov    %ebx,%esi[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
  1ad:	3c 0a                	cmp    $0xa,%al[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
[32m+[m[32m    cc = read(0, &c, 1);[m
[32m+[m[32m    if(cc < 1)[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
  1af:	88 44 1a ff          	mov    %al,-0x1(%edx,%ebx,1)[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
  1b3:	74 1b                	je     1d0 <gets+0x50>[m
  1b5:	3c 0d                	cmp    $0xd,%al[m
  1b7:	74 17                	je     1d0 <gets+0x50>[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
  1b9:	8d 5e 01             	lea    0x1(%esi),%ebx[m
  1bc:	3b 5d 0c             	cmp    0xc(%ebp),%ebx[m
  1bf:	7c cf                	jl     190 <gets+0x10>[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m[32m  buf[i] = '\0';[m
  1c1:	8b 45 08             	mov    0x8(%ebp),%eax[m
  1c4:	c6 04 30 00          	movb   $0x0,(%eax,%esi,1)[m
[32m+[m[32m  return buf;[m
[32m+[m[32m}[m
  1c8:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
  1cb:	5b                   	pop    %ebx[m
  1cc:	5e                   	pop    %esi[m
  1cd:	5f                   	pop    %edi[m
  1ce:	5d                   	pop    %ebp[m
  1cf:	c3                   	ret    [m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m[32m  buf[i] = '\0';[m
  1d0:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
  1d3:	89 de                	mov    %ebx,%esi[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m[32m  buf[i] = '\0';[m
  1d5:	c6 04 30 00          	movb   $0x0,(%eax,%esi,1)[m
[32m+[m[32m  return buf;[m
[32m+[m[32m}[m
  1d9:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
  1dc:	5b                   	pop    %ebx[m
  1dd:	5e                   	pop    %esi[m
[36m@@ -252,43 +409,73 @@[m [mmain(int argc, char *argv[])[m
  1ef:	90                   	nop[m
 [m
 000001f0 <stat>:[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstat(char *n, struct stat *st)[m
[32m+[m[32m{[m
  1f0:	55                   	push   %ebp[m
  1f1:	89 e5                	mov    %esp,%ebp[m
  1f3:	56                   	push   %esi[m
  1f4:	53                   	push   %ebx[m
[32m+[m[32m  int fd;[m
[32m+[m[32m  int r;[m
[32m+[m
[32m+[m[32m  fd = open(n, O_RDONLY);[m
  1f5:	83 ec 08             	sub    $0x8,%esp[m
  1f8:	6a 00                	push   $0x0[m
  1fa:	ff 75 08             	pushl  0x8(%ebp)[m
  1fd:	e8 f0 00 00 00       	call   2f2 <open>[m
[32m+[m[32m  if(fd < 0)[m
  202:	83 c4 10             	add    $0x10,%esp[m
  205:	85 c0                	test   %eax,%eax[m
  207:	78 27                	js     230 <stat+0x40>[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  r = fstat(fd, st);[m
  209:	83 ec 08             	sub    $0x8,%esp[m
  20c:	ff 75 0c             	pushl  0xc(%ebp)[m
  20f:	89 c3                	mov    %eax,%ebx[m
  211:	50                   	push   %eax[m
  212:	e8 f3 00 00 00       	call   30a <fstat>[m
  217:	89 c6                	mov    %eax,%esi[m
[32m+[m[32m  close(fd);[m
  219:	89 1c 24             	mov    %ebx,(%esp)[m
  21c:	e8 b9 00 00 00       	call   2da <close>[m
[32m+[m[32m  return r;[m
  221:	83 c4 10             	add    $0x10,%esp[m
  224:	89 f0                	mov    %esi,%eax[m
[32m+[m[32m}[m
  226:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
  229:	5b                   	pop    %ebx[m
  22a:	5e                   	pop    %esi[m
  22b:	5d                   	pop    %ebp[m
  22c:	c3                   	ret    [m
  22d:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m  int fd;[m
[32m+[m[32m  int r;[m
[32m+[m
[32m+[m[32m  fd = open(n, O_RDONLY);[m
[32m+[m[32m  if(fd < 0)[m
[32m+[m[32m    return -1;[m
  230:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
  235:	eb ef                	jmp    226 <stat+0x36>[m
  237:	89 f6                	mov    %esi,%esi[m
  239:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
 00000240 <atoi>:[m
[32m+[m[32m  return r;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32matoi(const char *s)[m
[32m+[m[32m{[m
  240:	55                   	push   %ebp[m
  241:	89 e5                	mov    %esp,%ebp[m
  243:	53                   	push   %ebx[m
  244:	8b 4d 08             	mov    0x8(%ebp),%ecx[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  n = 0;[m
[32m+[m[32m  while('0' <= *s && *s <= '9')[m
  247:	0f be 11             	movsbl (%ecx),%edx[m
  24a:	8d 42 d0             	lea    -0x30(%edx),%eax[m
  24d:	3c 09                	cmp    $0x9,%al[m
[36m@@ -296,13 +483,23 @@[m [mmain(int argc, char *argv[])[m
  254:	77 1f                	ja     275 <atoi+0x35>[m
  256:	8d 76 00             	lea    0x0(%esi),%esi[m
  259:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    n = n*10 + *s++ - '0';[m
  260:	8d 04 80             	lea    (%eax,%eax,4),%eax[m
  263:	83 c1 01             	add    $0x1,%ecx[m
  266:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax[m
[32m+[m[32matoi(const char *s)[m
[32m+[m[32m{[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  n = 0;[m
[32m+[m[32m  while('0' <= *s && *s <= '9')[m
  26a:	0f be 11             	movsbl (%ecx),%edx[m
  26d:	8d 5a d0             	lea    -0x30(%edx),%ebx[m
  270:	80 fb 09             	cmp    $0x9,%bl[m
  273:	76 eb                	jbe    260 <atoi+0x20>[m
[32m+[m[32m    n = n*10 + *s++ - '0';[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
  275:	5b                   	pop    %ebx[m
  276:	5d                   	pop    %ebp[m
  277:	c3                   	ret    [m
[36m@@ -310,6 +507,10 @@[m [mmain(int argc, char *argv[])[m
  279:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
 [m
 00000280 <memmove>:[m
[32m+[m
[32m+[m[32mvoid*[m
[32m+[m[32mmemmove(void *vdst, void *vsrc, int n)[m
[32m+[m[32m{[m
  280:	55                   	push   %ebp[m
  281:	89 e5                	mov    %esp,%ebp[m
  283:	56                   	push   %esi[m
[36m@@ -317,15 +518,30 @@[m [mmain(int argc, char *argv[])[m
  285:	8b 5d 10             	mov    0x10(%ebp),%ebx[m
  288:	8b 45 08             	mov    0x8(%ebp),%eax[m
  28b:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[32m+[m[32m  char *dst, *src;[m
[32m+[m
[32m+[m[32m  dst = vdst;[m
[32m+[m[32m  src = vsrc;[m
[32m+[m[32m  while(n-- > 0)[m
  28e:	85 db                	test   %ebx,%ebx[m
  290:	7e 14                	jle    2a6 <memmove+0x26>[m
  292:	31 d2                	xor    %edx,%edx[m
  294:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    *dst++ = *src++;[m
  298:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx[m
  29c:	88 0c 10             	mov    %cl,(%eax,%edx,1)[m
  29f:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m{[m
[32m+[m[32m  char *dst, *src;[m
[32m+[m
[32m+[m[32m  dst = vdst;[m
[32m+[m[32m  src = vsrc;[m
[32m+[m[32m  while(n-- > 0)[m
  2a2:	39 da                	cmp    %ebx,%edx[m
  2a4:	75 f2                	jne    298 <memmove+0x18>[m
[32m+[m[32m    *dst++ = *src++;[m
[32m+[m[32m  return vdst;[m
[32m+[m[32m}[m
  2a6:	5b                   	pop    %ebx[m
  2a7:	5e                   	pop    %esi[m
  2a8:	5d                   	pop    %ebp[m
[36m@@ -435,15 +651,22 @@[m [mmain(int argc, char *argv[])[m
  34a:	b8 0e 00 00 00       	mov    $0xe,%eax[m
  34f:	cd 40                	int    $0x40[m
  351:	c3                   	ret    [m
[31m- 352:	66 90                	xchg   %ax,%ax[m
[31m- 354:	66 90                	xchg   %ax,%ax[m
[31m- 356:	66 90                	xchg   %ax,%ax[m
[31m- 358:	66 90                	xchg   %ax,%ax[m
[32m+[m
[32m+[m[32m00000352 <set>:[m
[32m+[m[32m 352:	b8 16 00 00 00       	mov    $0x16,%eax[m
[32m+[m[32m 357:	cd 40                	int    $0x40[m
[32m+[m[32m 359:	c3                   	ret[m[41m    [m
  35a:	66 90                	xchg   %ax,%ax[m
  35c:	66 90                	xchg   %ax,%ax[m
  35e:	66 90                	xchg   %ax,%ax[m
 [m
 00000360 <printint>:[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mprintint(int fd, int xx, int base, int sgn)[m
[32m+[m[32m{[m
  360:	55                   	push   %ebp[m
  361:	89 e5                	mov    %esp,%ebp[m
  363:	57                   	push   %edi[m
[36m@@ -451,6 +674,12 @@[m [mmain(int argc, char *argv[])[m
  365:	53                   	push   %ebx[m
  366:	89 c6                	mov    %eax,%esi[m
  368:	83 ec 3c             	sub    $0x3c,%esp[m
[32m+[m[32m  char buf[16];[m
[32m+[m[32m  int i, neg;[m
[32m+[m[32m  uint x;[m
[32m+[m
[32m+[m[32m  neg = 0;[m
[32m+[m[32m  if(sgn && xx < 0){[m
  36b:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
  36e:	85 db                	test   %ebx,%ebx[m
  370:	74 7e                	je     3f0 <printint+0x90>[m
[36m@@ -458,32 +687,64 @@[m [mmain(int argc, char *argv[])[m
  374:	c1 e8 1f             	shr    $0x1f,%eax[m
  377:	84 c0                	test   %al,%al[m
  379:	74 75                	je     3f0 <printint+0x90>[m
[32m+[m[32m    neg = 1;[m
[32m+[m[32m    x = -xx;[m
  37b:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m  int i, neg;[m
[32m+[m[32m  uint x;[m
[32m+[m
[32m+[m[32m  neg = 0;[m
[32m+[m[32m  if(sgn && xx < 0){[m
[32m+[m[32m    neg = 1;[m
  37d:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)[m
[32m+[m[32m    x = -xx;[m
  384:	f7 d8                	neg    %eax[m
  386:	89 75 c0             	mov    %esi,-0x40(%ebp)[m
[32m+[m[32m  } else {[m
[32m+[m[32m    x = xx;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  i = 0;[m
  389:	31 ff                	xor    %edi,%edi[m
  38b:	8d 5d d7             	lea    -0x29(%ebp),%ebx[m
  38e:	89 ce                	mov    %ecx,%esi[m
  390:	eb 08                	jmp    39a <printint+0x3a>[m
  392:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m  do{[m
[32m+[m[32m    buf[i++] = digits[x % base];[m
  398:	89 cf                	mov    %ecx,%edi[m
  39a:	31 d2                	xor    %edx,%edx[m
  39c:	8d 4f 01             	lea    0x1(%edi),%ecx[m
  39f:	f7 f6                	div    %esi[m
  3a1:	0f b6 92 30 07 00 00 	movzbl 0x730(%edx),%edx[m
[32m+[m[32m  }while((x /= base) != 0);[m
  3a8:	85 c0                	test   %eax,%eax[m
[32m+[m[32m    x = xx;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  i = 0;[m
[32m+[m[32m  do{[m
[32m+[m[32m    buf[i++] = digits[x % base];[m
  3aa:	88 14 0b             	mov    %dl,(%ebx,%ecx,1)[m
[32m+[m[32m  }while((x /= base) != 0);[m
  3ad:	75 e9                	jne    398 <printint+0x38>[m
[32m+[m[32m  if(neg)[m
  3af:	8b 45 c4             	mov    -0x3c(%ebp),%eax[m
  3b2:	8b 75 c0             	mov    -0x40(%ebp),%esi[m
  3b5:	85 c0                	test   %eax,%eax[m
  3b7:	74 08                	je     3c1 <printint+0x61>[m
[32m+[m[32m    buf[i++] = '-';[m
  3b9:	c6 44 0d d8 2d       	movb   $0x2d,-0x28(%ebp,%ecx,1)[m
  3be:	8d 4f 02             	lea    0x2(%edi),%ecx[m
  3c1:	8d 7c 0d d7          	lea    -0x29(%ebp,%ecx,1),%edi[m
  3c5:	8d 76 00             	lea    0x0(%esi),%esi[m
  3c8:	0f b6 07             	movzbl (%edi),%eax[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  3cb:	83 ec 04             	sub    $0x4,%esp[m
  3ce:	83 ef 01             	sub    $0x1,%edi[m
  3d1:	6a 01                	push   $0x1[m
[36m@@ -491,9 +752,17 @@[m [mmain(int argc, char *argv[])[m
  3d4:	56                   	push   %esi[m
  3d5:	88 45 d7             	mov    %al,-0x29(%ebp)[m
  3d8:	e8 f5 fe ff ff       	call   2d2 <write>[m
[32m+[m[32m    buf[i++] = digits[x % base];[m
[32m+[m[32m  }while((x /= base) != 0);[m
[32m+[m[32m  if(neg)[m
[32m+[m[32m    buf[i++] = '-';[m
[32m+[m
[32m+[m[32m  while(--i >= 0)[m
  3dd:	83 c4 10             	add    $0x10,%esp[m
  3e0:	39 df                	cmp    %ebx,%edi[m
  3e2:	75 e4                	jne    3c8 <printint+0x68>[m
[32m+[m[32m    putc(fd, buf[i]);[m
[32m+[m[32m}[m
  3e4:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
  3e7:	5b                   	pop    %ebx[m
  3e8:	5e                   	pop    %esi[m
[36m@@ -501,22 +770,70 @@[m [mmain(int argc, char *argv[])[m
  3ea:	5d                   	pop    %ebp[m
  3eb:	c3                   	ret    [m
  3ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  neg = 0;[m
[32m+[m[32m  if(sgn && xx < 0){[m
[32m+[m[32m    neg = 1;[m
[32m+[m[32m    x = -xx;[m
[32m+[m[32m  } else {[m
[32m+[m[32m    x = xx;[m
  3f0:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m  static char digits[] = "0123456789ABCDEF";[m
[32m+[m[32m  char buf[16];[m
[32m+[m[32m  int i, neg;[m
[32m+[m[32m  uint x;[m
[32m+[m
[32m+[m[32m  neg = 0;[m
  3f2:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)[m
  3f9:	eb 8b                	jmp    386 <printint+0x26>[m
  3fb:	90                   	nop[m
  3fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
 [m
 00000400 <printf>:[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Print to the given fd. Only understands %d, %x, %p, %s.[m
[32m+[m[32mvoid[m
[32m+[m[32mprintf(int fd, char *fmt, ...)[m
[32m+[m[32m{[m
  400:	55                   	push   %ebp[m
  401:	89 e5                	mov    %esp,%ebp[m
  403:	57                   	push   %edi[m
  404:	56                   	push   %esi[m
  405:	53                   	push   %ebx[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
  406:	8d 45 10             	lea    0x10(%ebp),%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Print to the given fd. Only understands %d, %x, %p, %s.[m
[32m+[m[32mvoid[m
[32m+[m[32mprintf(int fd, char *fmt, ...)[m
[32m+[m[32m{[m
  409:	83 ec 2c             	sub    $0x2c,%esp[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
  40c:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Print to the given fd. Only understands %d, %x, %p, %s.[m
[32m+[m[32mvoid[m
[32m+[m[32mprintf(int fd, char *fmt, ...)[m
[32m+[m[32m{[m
  40f:	8b 7d 08             	mov    0x8(%ebp),%edi[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
  412:	89 45 d0             	mov    %eax,-0x30(%ebp)[m
  415:	0f b6 1e             	movzbl (%esi),%ebx[m
  418:	83 c6 01             	add    $0x1,%esi[m
[36m@@ -526,10 +843,26 @@[m [mmain(int argc, char *argv[])[m
  425:	eb 39                	jmp    460 <printf+0x60>[m
  427:	89 f6                	mov    %esi,%esi[m
  429:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    c = fmt[i] & 0xff;[m
[32m+[m[32m    if(state == 0){[m
[32m+[m[32m      if(c == '%'){[m
  430:	83 f8 25             	cmp    $0x25,%eax[m
  433:	89 55 d4             	mov    %edx,-0x2c(%ebp)[m
[32m+[m[32m        state = '%';[m
  436:	ba 25 00 00 00       	mov    $0x25,%edx[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m    c = fmt[i] & 0xff;[m
[32m+[m[32m    if(state == 0){[m
[32m+[m[32m      if(c == '%'){[m
  43b:	74 18                	je     455 <printf+0x55>[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  43d:	8d 45 e2             	lea    -0x1e(%ebp),%eax[m
  440:	83 ec 04             	sub    $0x4,%esp[m
  443:	88 5d e2             	mov    %bl,-0x1e(%ebp)[m
[36m@@ -540,26 +873,69 @@[m [mmain(int argc, char *argv[])[m
  44f:	8b 55 d4             	mov    -0x2c(%ebp),%edx[m
  452:	83 c4 10             	add    $0x10,%esp[m
  455:	83 c6 01             	add    $0x1,%esi[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
  458:	0f b6 5e ff          	movzbl -0x1(%esi),%ebx[m
  45c:	84 db                	test   %bl,%bl[m
  45e:	74 73                	je     4d3 <printf+0xd3>[m
[32m+[m[32m    c = fmt[i] & 0xff;[m
[32m+[m[32m    if(state == 0){[m
  460:	85 d2                	test   %edx,%edx[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m    c = fmt[i] & 0xff;[m
  462:	0f be cb             	movsbl %bl,%ecx[m
  465:	0f b6 c3             	movzbl %bl,%eax[m
[32m+[m[32m    if(state == 0){[m
  468:	74 c6                	je     430 <printf+0x30>[m
[32m+[m[32m      if(c == '%'){[m
[32m+[m[32m        state = '%';[m
[32m+[m[32m      } else {[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m    } else if(state == '%'){[m
  46a:	83 fa 25             	cmp    $0x25,%edx[m
  46d:	75 e6                	jne    455 <printf+0x55>[m
[32m+[m[32m      if(c == 'd'){[m
  46f:	83 f8 64             	cmp    $0x64,%eax[m
  472:	0f 84 f8 00 00 00    	je     570 <printf+0x170>[m
[32m+[m[32m        printint(fd, *ap, 10, 1);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == 'x' || c == 'p'){[m
  478:	81 e1 f7 00 00 00    	and    $0xf7,%ecx[m
  47e:	83 f9 70             	cmp    $0x70,%ecx[m
  481:	74 5d                	je     4e0 <printf+0xe0>[m
[32m+[m[32m        printint(fd, *ap, 16, 0);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == 's'){[m
  483:	83 f8 73             	cmp    $0x73,%eax[m
  486:	0f 84 84 00 00 00    	je     510 <printf+0x110>[m
[32m+[m[32m          s = "(null)";[m
[32m+[m[32m        while(*s != 0){[m
[32m+[m[32m          putc(fd, *s);[m
[32m+[m[32m          s++;[m
[32m+[m[32m        }[m
[32m+[m[32m      } else if(c == 'c'){[m
  48c:	83 f8 63             	cmp    $0x63,%eax[m
  48f:	0f 84 ea 00 00 00    	je     57f <printf+0x17f>[m
[32m+[m[32m        putc(fd, *ap);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == '%'){[m
  495:	83 f8 25             	cmp    $0x25,%eax[m
  498:	0f 84 c2 00 00 00    	je     560 <printf+0x160>[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  49e:	8d 45 e7             	lea    -0x19(%ebp),%eax[m
  4a1:	83 ec 04             	sub    $0x4,%esp[m
  4a4:	c6 45 e7 25          	movb   $0x25,-0x19(%ebp)[m
[36m@@ -575,11 +951,41 @@[m [mmain(int argc, char *argv[])[m
  4bd:	57                   	push   %edi[m
  4be:	83 c6 01             	add    $0x1,%esi[m
  4c1:	e8 0c fe ff ff       	call   2d2 <write>[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
  4c6:	0f b6 5e ff          	movzbl -0x1(%esi),%ebx[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  4ca:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // Unknown % sequence.  Print it to draw attention.[m
[32m+[m[32m        putc(fd, '%');[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m      state = 0;[m
  4cd:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
  4cf:	84 db                	test   %bl,%bl[m
  4d1:	75 8d                	jne    460 <printf+0x60>[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m      state = 0;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
  4d3:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
  4d6:	5b                   	pop    %ebx[m
  4d7:	5e                   	pop    %esi[m
[36m@@ -588,6 +994,12 @@[m [mmain(int argc, char *argv[])[m
  4da:	c3                   	ret    [m
  4db:	90                   	nop[m
  4dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    } else if(state == '%'){[m
[32m+[m[32m      if(c == 'd'){[m
[32m+[m[32m        printint(fd, *ap, 10, 1);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == 'x' || c == 'p'){[m
[32m+[m[32m        printint(fd, *ap, 16, 0);[m
  4e0:	83 ec 0c             	sub    $0xc,%esp[m
  4e3:	b9 10 00 00 00       	mov    $0x10,%ecx[m
  4e8:	6a 00                	push   $0x0[m
[36m@@ -595,51 +1007,118 @@[m [mmain(int argc, char *argv[])[m
  4ed:	89 f8                	mov    %edi,%eax[m
  4ef:	8b 13                	mov    (%ebx),%edx[m
  4f1:	e8 6a fe ff ff       	call   360 <printint>[m
[32m+[m[32m        ap++;[m
  4f6:	89 d8                	mov    %ebx,%eax[m
  4f8:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // Unknown % sequence.  Print it to draw attention.[m
[32m+[m[32m        putc(fd, '%');[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m      state = 0;[m
  4fb:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m      if(c == 'd'){[m
[32m+[m[32m        printint(fd, *ap, 10, 1);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == 'x' || c == 'p'){[m
[32m+[m[32m        printint(fd, *ap, 16, 0);[m
[32m+[m[32m        ap++;[m
  4fd:	83 c0 04             	add    $0x4,%eax[m
  500:	89 45 d0             	mov    %eax,-0x30(%ebp)[m
  503:	e9 4d ff ff ff       	jmp    455 <printf+0x55>[m
  508:	90                   	nop[m
  509:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m      } else if(c == 's'){[m
[32m+[m[32m        s = (char*)*ap;[m
  510:	8b 45 d0             	mov    -0x30(%ebp),%eax[m
  513:	8b 18                	mov    (%eax),%ebx[m
[32m+[m[32m        ap++;[m
  515:	83 c0 04             	add    $0x4,%eax[m
  518:	89 45 d0             	mov    %eax,-0x30(%ebp)[m
[32m+[m[32m        if(s == 0)[m
[32m+[m[32m          s = "(null)";[m
  51b:	b8 29 07 00 00       	mov    $0x729,%eax[m
  520:	85 db                	test   %ebx,%ebx[m
  522:	0f 44 d8             	cmove  %eax,%ebx[m
[32m+[m[32m        while(*s != 0){[m
  525:	0f b6 03             	movzbl (%ebx),%eax[m
  528:	84 c0                	test   %al,%al[m
  52a:	74 23                	je     54f <printf+0x14f>[m
  52c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
  530:	88 45 e3             	mov    %al,-0x1d(%ebp)[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  533:	8d 45 e3             	lea    -0x1d(%ebp),%eax[m
  536:	83 ec 04             	sub    $0x4,%esp[m
  539:	6a 01                	push   $0x1[m
[32m+[m[32m        ap++;[m
[32m+[m[32m        if(s == 0)[m
[32m+[m[32m          s = "(null)";[m
[32m+[m[32m        while(*s != 0){[m
[32m+[m[32m          putc(fd, *s);[m
[32m+[m[32m          s++;[m
  53b:	83 c3 01             	add    $0x1,%ebx[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  53e:	50                   	push   %eax[m
  53f:	57                   	push   %edi[m
  540:	e8 8d fd ff ff       	call   2d2 <write>[m
[32m+[m[32m      } else if(c == 's'){[m
[32m+[m[32m        s = (char*)*ap;[m
[32m+[m[32m        ap++;[m
[32m+[m[32m        if(s == 0)[m
[32m+[m[32m          s = "(null)";[m
[32m+[m[32m        while(*s != 0){[m
  545:	0f b6 03             	movzbl (%ebx),%eax[m
  548:	83 c4 10             	add    $0x10,%esp[m
  54b:	84 c0                	test   %al,%al[m
  54d:	75 e1                	jne    530 <printf+0x130>[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // Unknown % sequence.  Print it to draw attention.[m
[32m+[m[32m        putc(fd, '%');[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m      state = 0;[m
  54f:	31 d2                	xor    %edx,%edx[m
  551:	e9 ff fe ff ff       	jmp    455 <printf+0x55>[m
  556:	8d 76 00             	lea    0x0(%esi),%esi[m
  559:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  560:	83 ec 04             	sub    $0x4,%esp[m
  563:	88 5d e5             	mov    %bl,-0x1b(%ebp)[m
  566:	8d 45 e5             	lea    -0x1b(%ebp),%eax[m
  569:	6a 01                	push   $0x1[m
  56b:	e9 4c ff ff ff       	jmp    4bc <printf+0xbc>[m
[32m+[m[32m      } else {[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m    } else if(state == '%'){[m
[32m+[m[32m      if(c == 'd'){[m
[32m+[m[32m        printint(fd, *ap, 10, 1);[m
  570:	83 ec 0c             	sub    $0xc,%esp[m
  573:	b9 0a 00 00 00       	mov    $0xa,%ecx[m
  578:	6a 01                	push   $0x1[m
  57a:	e9 6b ff ff ff       	jmp    4ea <printf+0xea>[m
  57f:	8b 5d d0             	mov    -0x30(%ebp),%ebx[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  582:	83 ec 04             	sub    $0x4,%esp[m
  585:	8b 03                	mov    (%ebx),%eax[m
  587:	6a 01                	push   $0x1[m
[36m@@ -654,63 +1133,149 @@[m [mmain(int argc, char *argv[])[m
  59f:	90                   	nop[m
 [m
 000005a0 <free>:[m
[32m+[m[32mstatic Header base;[m
[32m+[m[32mstatic Header *freep;[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
  5a0:	55                   	push   %ebp[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
  5a1:	a1 d4 09 00 00       	mov    0x9d4,%eax[m
[32m+[m[32mstatic Header base;[m
[32m+[m[32mstatic Header *freep;[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
  5a6:	89 e5                	mov    %esp,%ebp[m
  5a8:	57                   	push   %edi[m
  5a9:	56                   	push   %esi[m
  5aa:	53                   	push   %ebx[m
  5ab:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
  5ae:	8b 10                	mov    (%eax),%edx[m
[32m+[m[32mvoid[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
  5b0:	8d 4b f8             	lea    -0x8(%ebx),%ecx[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
  5b3:	39 c8                	cmp    %ecx,%eax[m
  5b5:	73 19                	jae    5d0 <free+0x30>[m
  5b7:	89 f6                	mov    %esi,%esi[m
  5b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
  5c0:	39 d1                	cmp    %edx,%ecx[m
  5c2:	72 1c                	jb     5e0 <free+0x40>[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
  5c4:	39 d0                	cmp    %edx,%eax[m
  5c6:	73 18                	jae    5e0 <free+0x40>[m
[32m+[m[32mstatic Header base;[m
[32m+[m[32mstatic Header *freep;[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
  5c8:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
  5ca:	39 c8                	cmp    %ecx,%eax[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
  5cc:	8b 10                	mov    (%eax),%edx[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
  5ce:	72 f0                	jb     5c0 <free+0x20>[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
  5d0:	39 d0                	cmp    %edx,%eax[m
  5d2:	72 f4                	jb     5c8 <free+0x28>[m
  5d4:	39 d1                	cmp    %edx,%ecx[m
  5d6:	73 f0                	jae    5c8 <free+0x28>[m
  5d8:	90                   	nop[m
  5d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m      break;[m
[32m+[m[32m  if(bp + bp->s.size == p->s.ptr){[m
  5e0:	8b 73 fc             	mov    -0x4(%ebx),%esi[m
  5e3:	8d 3c f1             	lea    (%ecx,%esi,8),%edi[m
  5e6:	39 d7                	cmp    %edx,%edi[m
  5e8:	74 19                	je     603 <free+0x63>[m
[32m+[m[32m    bp->s.size += p->s.ptr->s.size;[m
[32m+[m[32m    bp->s.ptr = p->s.ptr->s.ptr;[m
[32m+[m[32m  } else[m
[32m+[m[32m    bp->s.ptr = p->s.ptr;[m
  5ea:	89 53 f8             	mov    %edx,-0x8(%ebx)[m
[32m+[m[32m  if(p + p->s.size == bp){[m
  5ed:	8b 50 04             	mov    0x4(%eax),%edx[m
  5f0:	8d 34 d0             	lea    (%eax,%edx,8),%esi[m
  5f3:	39 f1                	cmp    %esi,%ecx[m
  5f5:	74 23                	je     61a <free+0x7a>[m
[32m+[m[32m    p->s.size += bp->s.size;[m
[32m+[m[32m    p->s.ptr = bp->s.ptr;[m
[32m+[m[32m  } else[m
[32m+[m[32m    p->s.ptr = bp;[m
  5f7:	89 08                	mov    %ecx,(%eax)[m
[32m+[m[32m  freep = p;[m
  5f9:	a3 d4 09 00 00       	mov    %eax,0x9d4[m
[32m+[m[32m}[m
  5fe:	5b                   	pop    %ebx[m
  5ff:	5e                   	pop    %esi[m
  600:	5f                   	pop    %edi[m
  601:	5d                   	pop    %ebp[m
  602:	c3                   	ret    [m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
[32m+[m[32m      break;[m
[32m+[m[32m  if(bp + bp->s.size == p->s.ptr){[m
[32m+[m[32m    bp->s.size += p->s.ptr->s.size;[m
  603:	03 72 04             	add    0x4(%edx),%esi[m
  606:	89 73 fc             	mov    %esi,-0x4(%ebx)[m
[32m+[m[32m    bp->s.ptr = p->s.ptr->s.ptr;[m
  609:	8b 10                	mov    (%eax),%edx[m
  60b:	8b 12                	mov    (%edx),%edx[m
  60d:	89 53 f8             	mov    %edx,-0x8(%ebx)[m
[32m+[m[32m  } else[m
[32m+[m[32m    bp->s.ptr = p->s.ptr;[m
[32m+[m[32m  if(p + p->s.size == bp){[m
  610:	8b 50 04             	mov    0x4(%eax),%edx[m
  613:	8d 34 d0             	lea    (%eax,%edx,8),%esi[m
  616:	39 f1                	cmp    %esi,%ecx[m
  618:	75 dd                	jne    5f7 <free+0x57>[m
[32m+[m[32m    p->s.size += bp->s.size;[m
  61a:	03 53 fc             	add    -0x4(%ebx),%edx[m
[32m+[m[32m    p->s.ptr = bp->s.ptr;[m
[32m+[m[32m  } else[m
[32m+[m[32m    p->s.ptr = bp;[m
[32m+[m[32m  freep = p;[m
  61d:	a3 d4 09 00 00       	mov    %eax,0x9d4[m
[32m+[m[32m    bp->s.size += p->s.ptr->s.size;[m
[32m+[m[32m    bp->s.ptr = p->s.ptr->s.ptr;[m
[32m+[m[32m  } else[m
[32m+[m[32m    bp->s.ptr = p->s.ptr;[m
[32m+[m[32m  if(p + p->s.size == bp){[m
[32m+[m[32m    p->s.size += bp->s.size;[m
  622:	89 50 04             	mov    %edx,0x4(%eax)[m
[32m+[m[32m    p->s.ptr = bp->s.ptr;[m
  625:	8b 53 f8             	mov    -0x8(%ebx),%edx[m
  628:	89 10                	mov    %edx,(%eax)[m
[32m+[m[32m  } else[m
[32m+[m[32m    p->s.ptr = bp;[m
[32m+[m[32m  freep = p;[m
[32m+[m[32m}[m
  62a:	5b                   	pop    %ebx[m
  62b:	5e                   	pop    %esi[m
  62c:	5f                   	pop    %edi[m
[36m@@ -719,21 +1284,44 @@[m [mmain(int argc, char *argv[])[m
  62f:	90                   	nop[m
 [m
 00000630 <malloc>:[m
[32m+[m[32m  return freep;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid*[m
[32m+[m[32mmalloc(uint nbytes)[m
[32m+[m[32m{[m
  630:	55                   	push   %ebp[m
  631:	89 e5                	mov    %esp,%ebp[m
  633:	57                   	push   %edi[m
  634:	56                   	push   %esi[m
  635:	53                   	push   %ebx[m
  636:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m  Header *p, *prevp;[m
[32m+[m[32m  uint nunits;[m
[32m+[m
[32m+[m[32m  nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;[m
  639:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m  if((prevp = freep) == 0){[m
  63c:	8b 15 d4 09 00 00    	mov    0x9d4,%edx[m
[32m+[m[32mmalloc(uint nbytes)[m
[32m+[m[32m{[m
[32m+[m[32m  Header *p, *prevp;[m
[32m+[m[32m  uint nunits;[m
[32m+[m
[32m+[m[32m  nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;[m
  642:	8d 78 07             	lea    0x7(%eax),%edi[m
  645:	c1 ef 03             	shr    $0x3,%edi[m
  648:	83 c7 01             	add    $0x1,%edi[m
[32m+[m[32m  if((prevp = freep) == 0){[m
  64b:	85 d2                	test   %edx,%edx[m
  64d:	0f 84 a3 00 00 00    	je     6f6 <malloc+0xc6>[m
  653:	8b 02                	mov    (%edx),%eax[m
  655:	8b 48 04             	mov    0x4(%eax),%ecx[m
[32m+[m[32m    base.s.ptr = freep = prevp = &base;[m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){[m
[32m+[m[32m    if(p->s.size >= nunits){[m
  658:	39 cf                	cmp    %ecx,%edi[m
  65a:	76 74                	jbe    6d0 <malloc+0xa0>[m
  65c:	81 ff 00 10 00 00    	cmp    $0x1000,%edi[m
[36m@@ -745,52 +1333,117 @@[m [mmain(int argc, char *argv[])[m
  67c:	0f 46 da             	cmovbe %edx,%ebx[m
  67f:	eb 10                	jmp    691 <malloc+0x61>[m
  681:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;[m
[32m+[m[32m  if((prevp = freep) == 0){[m
[32m+[m[32m    base.s.ptr = freep = prevp = &base;[m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){[m
  688:	8b 02                	mov    (%edx),%eax[m
[32m+[m[32m    if(p->s.size >= nunits){[m
  68a:	8b 48 04             	mov    0x4(%eax),%ecx[m
  68d:	39 cf                	cmp    %ecx,%edi[m
  68f:	76 3f                	jbe    6d0 <malloc+0xa0>[m
[32m+[m[32m        p->s.size = nunits;[m
[32m+[m[32m      }[m
[32m+[m[32m      freep = prevp;[m
[32m+[m[32m      return (void*)(p + 1);[m
[32m+[m[32m    }[m
[32m+[m[32m    if(p == freep)[m
  691:	39 05 d4 09 00 00    	cmp    %eax,0x9d4[m
  697:	89 c2                	mov    %eax,%edx[m
  699:	75 ed                	jne    688 <malloc+0x58>[m
[32m+[m[32m  char *p;[m
[32m+[m[32m  Header *hp;[m
[32m+[m
[32m+[m[32m  if(nu < 4096)[m
[32m+[m[32m    nu = 4096;[m
[32m+[m[32m  p = sbrk(nu * sizeof(Header));[m
  69b:	83 ec 0c             	sub    $0xc,%esp[m
  69e:	53                   	push   %ebx[m
  69f:	e8 96 fc ff ff       	call   33a <sbrk>[m
[32m+[m[32m  if(p == (char*)-1)[m
  6a4:	83 c4 10             	add    $0x10,%esp[m
  6a7:	83 f8 ff             	cmp    $0xffffffff,%eax[m
  6aa:	74 1c                	je     6c8 <malloc+0x98>[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  hp = (Header*)p;[m
[32m+[m[32m  hp->s.size = nu;[m
  6ac:	89 70 04             	mov    %esi,0x4(%eax)[m
[32m+[m[32m  free((void*)(hp + 1));[m
  6af:	83 ec 0c             	sub    $0xc,%esp[m
  6b2:	83 c0 08             	add    $0x8,%eax[m
  6b5:	50                   	push   %eax[m
  6b6:	e8 e5 fe ff ff       	call   5a0 <free>[m
[32m+[m[32m  return freep;[m
  6bb:	8b 15 d4 09 00 00    	mov    0x9d4,%edx[m
[32m+[m[32m      }[m
[32m+[m[32m      freep = prevp;[m
[32m+[m[32m      return (void*)(p + 1);[m
[32m+[m[32m    }[m
[32m+[m[32m    if(p == freep)[m
[32m+[m[32m      if((p = morecore(nunits)) == 0)[m
  6c1:	83 c4 10             	add    $0x10,%esp[m
  6c4:	85 d2                	test   %edx,%edx[m
  6c6:	75 c0                	jne    688 <malloc+0x58>[m
[32m+[m[32m        return 0;[m
  6c8:	31 c0                	xor    %eax,%eax[m
  6ca:	eb 1c                	jmp    6e8 <malloc+0xb8>[m
  6cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    base.s.ptr = freep = prevp = &base;[m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){[m
[32m+[m[32m    if(p->s.size >= nunits){[m
[32m+[m[32m      if(p->s.size == nunits)[m
  6d0:	39 cf                	cmp    %ecx,%edi[m
  6d2:	74 1c                	je     6f0 <malloc+0xc0>[m
[32m+[m[32m        prevp->s.ptr = p->s.ptr;[m
[32m+[m[32m      else {[m
[32m+[m[32m        p->s.size -= nunits;[m
  6d4:	29 f9                	sub    %edi,%ecx[m
  6d6:	89 48 04             	mov    %ecx,0x4(%eax)[m
[32m+[m[32m        p += p->s.size;[m
  6d9:	8d 04 c8             	lea    (%eax,%ecx,8),%eax[m
[32m+[m[32m        p->s.size = nunits;[m
  6dc:	89 78 04             	mov    %edi,0x4(%eax)[m
[32m+[m[32m      }[m
[32m+[m[32m      freep = prevp;[m
  6df:	89 15 d4 09 00 00    	mov    %edx,0x9d4[m
[32m+[m[32m      return (void*)(p + 1);[m
  6e5:	83 c0 08             	add    $0x8,%eax[m
[32m+[m[32m    }[m
[32m+[m[32m    if(p == freep)[m
[32m+[m[32m      if((p = morecore(nunits)) == 0)[m
[32m+[m[32m        return 0;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
  6e8:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
  6eb:	5b                   	pop    %ebx[m
  6ec:	5e                   	pop    %esi[m
  6ed:	5f                   	pop    %edi[m
  6ee:	5d                   	pop    %ebp[m
  6ef:	c3                   	ret    [m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){[m
[32m+[m[32m    if(p->s.size >= nunits){[m
[32m+[m[32m      if(p->s.size == nunits)[m
[32m+[m[32m        prevp->s.ptr = p->s.ptr;[m
  6f0:	8b 08                	mov    (%eax),%ecx[m
  6f2:	89 0a                	mov    %ecx,(%edx)[m
  6f4:	eb e9                	jmp    6df <malloc+0xaf>[m
[32m+[m[32m  Header *p, *prevp;[m
[32m+[m[32m  uint nunits;[m
[32m+[m
[32m+[m[32m  nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;[m
[32m+[m[32m  if((prevp = freep) == 0){[m
[32m+[m[32m    base.s.ptr = freep = prevp = &base;[m
  6f6:	c7 05 d4 09 00 00 d8 	movl   $0x9d8,0x9d4[m
  6fd:	09 00 00 [m
  700:	c7 05 d8 09 00 00 d8 	movl   $0x9d8,0x9d8[m
  707:	09 00 00 [m
[32m+[m[32m    base.s.size = 0;[m
  70a:	b8 d8 09 00 00       	mov    $0x9d8,%eax[m
  70f:	c7 05 dc 09 00 00 00 	movl   $0x0,0x9dc[m
  716:	00 00 00 [m
[1mdiff --git a/echo.c b/echo.c[m
[1mindex 83d2649..eed68a0 100644[m
[1m--- a/echo.c[m
[1m+++ b/echo.c[m
[36m@@ -9,5 +9,5 @@[m [mmain(int argc, char *argv[])[m
 [m
   for(i = 1; i < argc; i++)[m
     printf(1, "%s%s", argv[i], i+1 < argc ? " " : "\n");[m
[31m-  exit(11);[m
[32m+[m[32m  exit(0);[m
 }[m
[1mdiff --git a/echo.o b/echo.o[m
[1mindex 2e63230..a6d88fd 100644[m
Binary files a/echo.o and b/echo.o differ
[1mdiff --git a/echo.sym b/echo.sym[m
[1mindex fb66749..5a204ad 100644[m
[1m--- a/echo.sym[m
[1m+++ b/echo.sym[m
[36m@@ -14,7 +14,7 @@[m
 00000000 ulib.c[m
 00000000 printf.c[m
 00000360 printint[m
[31m-00000730 digits.1107[m
[32m+[m[32m00000730 digits.1110[m
 00000000 umalloc.c[m
 000009d4 freep[m
 000009d8 base[m
[36m@@ -51,6 +51,7 @@[m
 00000240 atoi[m
 000000f0 strlen[m
 000002f2 open[m
[32m+[m[32m00000352 set[m
 00000140 strchr[m
 0000031a mkdir[m
 000002da close[m
[1mdiff --git a/entry.o b/entry.o[m
[1mindex 4d77b0e..fd1a6d5 100644[m
Binary files a/entry.o and b/entry.o differ
[1mdiff --git a/entryother.o b/entryother.o[m
[1mindex 235aefb..98c3b9d 100644[m
Binary files a/entryother.o and b/entryother.o differ
[1mdiff --git a/exec.c b/exec.c[m
[1mindex 2c46b15..6a89211 100644[m
[1m--- a/exec.c[m
[1m+++ b/exec.c[m
[36m@@ -24,6 +24,7 @@[m [mexitf()[m
 [m
 /***************************************************/[m
 [m
[32m+[m
 int[m
 exec(char *path, char **argv)[m
 {[m
[36m@@ -33,18 +34,57 @@[m [mexec(char *path, char **argv)[m
   struct elfhdr elf;[m
   struct inode *ip;[m
   struct proghdr ph;[m
[31m-  /* exit syscall size (byte) */[m
[32m+[m[32m    /* exit syscall size (byte) */[m
   int exitsz = (int)exec - (int)exitf;[m
   pde_t *pgdir, *oldpgdir;[m
 [m
[31m-  begin_op();[m
 [m
[32m+[m[32mchar newOpPath[1024]={'\0'};[m
[32m+[m[32mint j;[m
[32m+[m[32mbegin_op();[m
[32m+[m[32mint n=0;[m
[32m+[m[32mint Failed=0;[m
[32m+[m[32mint found=0;[m
[32m+[m
[32m+[m
[32m+[m[32mwhile(n<10 && found==0){[m
[32m+[m[32m  for(j=0;j<strlen(gPath[n]);j++){[m
[32m+[m[32m    newOpPath[j]=(gPath[n])[j];[m
[32m+[m
[32m+[m[32m  }[m[41m [m
[32m+[m[32m  for(int k=j;(k-j)<strlen(path);k++){[m
[32m+[m[32m      newOpPath[k]=path[k-j];[m
[32m+[m[32m  }[m[41m   [m
[32m+[m
[32m+[m[32m  if((ip = namei(newOpPath)) == 0){  //operate failed[m
[32m+[m[32m     Failed++;[m
[32m+[m[32m  }[m
[32m+[m[32m  else{[m
[32m+[m[32m    found=1;[m
[32m+[m[32m   }[m[41m	[m
[32m+[m[32m  n++;[m
[32m+[m[32m}[m
[32m+[m[32m if(Failed==10){   //failed 10 times[m
[32m+[m[32m    end_op();[m
[32m+[m[32m    return -1;[m
[32m+[m[32m}[m
[32m+[m[32m  ilock(ip);[m
[32m+[m[32m  pgdir = 0;[m
[32m+[m
[32m+[m[41m [m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m  begin_op();[m
   if((ip = namei(path)) == 0){[m
[32m+[m[32m     cprintf("  in line 43 exec ip= %s  path=%s ",ip, path);[m[41m [m
     end_op();[m
     return -1;[m
   }[m
[32m+[m
   ilock(ip);[m
   pgdir = 0;[m
[32m+[m[32m*/[m
[32m+[m
 [m
   // Check ELF header[m
   if(readi(ip, (char*)&elf, 0, sizeof(elf)) < sizeof(elf))[m
[36m@@ -94,7 +134,7 @@[m [mexec(char *path, char **argv)[m
       goto bad;[m
     ustack[3+argc] = sp;[m
   }[m
[31m-  /* stack pointer update */[m
[32m+[m[32m    /* stack pointer update */[m
   sp = sz - exitsz;[m
   /* copy page from sp to exitf */[m
   copyout(pgdir,sp,exitf,exitsz);[m
[36m@@ -106,7 +146,6 @@[m [mexec(char *path, char **argv)[m
   ustack[1] = argc;[m
   ustack[2] = sp - (argc+1)*4;  // argv pointer[m
 [m
[31m-[m
   sp -= (3+argc+1) * 4;[m
   if(copyout(pgdir, sp, ustack, (3+argc+1)*4) < 0)[m
     goto bad;[m
[1mdiff --git a/exec.o b/exec.o[m
[1mindex eed9d76..0f87ce4 100644[m
Binary files a/exec.o and b/exec.o differ
[1mdiff --git a/file.o b/file.o[m
[1mindex 3414cfd..60e9bdb 100644[m
Binary files a/file.o and b/file.o differ
[1mdiff --git a/forktest.asm b/forktest.asm[m
[1mindex d28b3c2..54f9d99 100644[m
[1m--- a/forktest.asm[m
[1m+++ b/forktest.asm[m
[36m@@ -20,10 +20,10 @@[m [mmain(void)[m
    e:	83 ec 04             	sub    $0x4,%esp[m
   forktest();[m
   11:	e8 3a 00 00 00       	call   50 <forktest>[m
[31m-  exit(11);[m
[32m+[m[32m  exit(0);[m
   16:	83 ec 0c             	sub    $0xc,%esp[m
[31m-  19:	6a 0b                	push   $0xb[m
[31m-  1b:	e8 92 03 00 00       	call   3b2 <exit>[m
[32m+[m[32m  19:	6a 00                	push   $0x0[m
[32m+[m[32m  1b:	e8 a2 03 00 00       	call   3c2 <exit>[m
 [m
 00000020 <printf>:[m
 [m
[36m@@ -39,12 +39,12 @@[m [mprintf(int fd, char *s, ...)[m
   27:	8b 5d 0c             	mov    0xc(%ebp),%ebx[m
   write(fd, s, strlen(s));[m
   2a:	53                   	push   %ebx[m
[31m-  2b:	e8 c0 01 00 00       	call   1f0 <strlen>[m
[32m+[m[32m  2b:	e8 d0 01 00 00       	call   200 <strlen>[m
   30:	83 c4 0c             	add    $0xc,%esp[m
   33:	50                   	push   %eax[m
   34:	53                   	push   %ebx[m
   35:	ff 75 08             	pushl  0x8(%ebp)[m
[31m-  38:	e8 95 03 00 00       	call   3d2 <write>[m
[32m+[m[32m  38:	e8 a5 03 00 00       	call   3e2 <write>[m
 }[m
   3d:	83 c4 10             	add    $0x10,%esp[m
   40:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[36m@@ -80,13 +80,13 @@[m [mvoid[m
 printf(int fd, char *s, ...)[m
 {[m
   write(fd, s, strlen(s));[m
[31m-  59:	68 54 04 00 00       	push   $0x454[m
[31m-  5e:	e8 8d 01 00 00       	call   1f0 <strlen>[m
[32m+[m[32m  59:	68 6c 04 00 00       	push   $0x46c[m
[32m+[m[32m  5e:	e8 9d 01 00 00       	call   200 <strlen>[m
   63:	83 c4 0c             	add    $0xc,%esp[m
   66:	50                   	push   %eax[m
[31m-  67:	68 54 04 00 00       	push   $0x454[m
[32m+[m[32m  67:	68 6c 04 00 00       	push   $0x46c[m
   6c:	6a 01                	push   $0x1[m
[31m-  6e:	e8 5f 03 00 00       	call   3d2 <write>[m
[32m+[m[32m  6e:	e8 6f 03 00 00       	call   3e2 <write>[m
   73:	83 c4 10             	add    $0x10,%esp[m
   76:	eb 19                	jmp    91 <forktest+0x41>[m
   78:	90                   	nop[m
[36m@@ -97,7 +97,7 @@[m [mprintf(int fd, char *s, ...)[m
     if(pid < 0)[m
       break;[m
     if(pid == 0)[m
[31m-  80:	0f 84 83 00 00 00    	je     109 <forktest+0xb9>[m
[32m+[m[32m  80:	0f 84 93 00 00 00    	je     119 <forktest+0xc9>[m
 {[m
   int n, pid;[m
 [m
[36m@@ -106,524 +106,751 @@[m [mprintf(int fd, char *s, ...)[m
   for(n=0; n<N; n++){[m
   86:	83 c3 01             	add    $0x1,%ebx[m
   89:	81 fb e8 03 00 00    	cmp    $0x3e8,%ebx[m
[31m-  8f:	74 4f                	je     e0 <forktest+0x90>[m
[32m+[m[32m  8f:	74 5f                	je     f0 <forktest+0xa0>[m
     pid = fork();[m
[31m-  91:	e8 14 03 00 00       	call   3aa <fork>[m
[32m+[m[32m  91:	e8 24 03 00 00       	call   3ba <fork>[m
     if(pid < 0)[m
   96:	85 c0                	test   %eax,%eax[m
   98:	79 e6                	jns    80 <forktest+0x30>[m
   if(n == N){[m
     printf(1, "fork claimed to work N times!\n", N);[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
 [m
   for(; n > 0; n--){[m
   9a:	85 db                	test   %ebx,%ebx[m
[31m-  9c:	74 10                	je     ae <forktest+0x5e>[m
[32m+[m[32m  9c:	74 18                	je     b6 <forktest+0x66>[m
   9e:	66 90                	xchg   %ax,%ax[m
[31m-    if(wait() < 0){[m
[31m-  a0:	e8 15 03 00 00       	call   3ba <wait>[m
[31m-  a5:	85 c0                	test   %eax,%eax[m
[31m-  a7:	78 6a                	js     113 <forktest+0xc3>[m
[32m+[m[32m    if(wait(0) < 0){[m
[32m+[m[32m  a0:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m  a3:	6a 00                	push   $0x0[m
[32m+[m[32m  a5:	e8 20 03 00 00       	call   3ca <wait>[m
[32m+[m[32m  aa:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m  ad:	85 c0                	test   %eax,%eax[m
[32m+[m[32m  af:	78 72                	js     123 <forktest+0xd3>[m
   if(n == N){[m
     printf(1, "fork claimed to work N times!\n", N);[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
 [m
   for(; n > 0; n--){[m
[31m-  a9:	83 eb 01             	sub    $0x1,%ebx[m
[31m-  ac:	75 f2                	jne    a0 <forktest+0x50>[m
[32m+[m[32m  b1:	83 eb 01             	sub    $0x1,%ebx[m
[32m+[m[32m  b4:	75 ea                	jne    a0 <forktest+0x50>[m
       printf(1, "wait stopped early\n");[m
[31m-      exit(11);[m
[32m+[m[32m      exit(0);[m
     }[m
   }[m
 [m
[31m-  if(wait() != -1){[m
[31m-  ae:	e8 07 03 00 00       	call   3ba <wait>[m
[31m-  b3:	83 f8 ff             	cmp    $0xffffffff,%eax[m
[31m-  b6:	0f 85 80 00 00 00    	jne    13c <forktest+0xec>[m
[32m+[m[32m  if(wait(0) != -1){[m
[32m+[m[32m  b6:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m  b9:	6a 00                	push   $0x0[m
[32m+[m[32m  bb:	e8 0a 03 00 00       	call   3ca <wait>[m
[32m+[m[32m  c0:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m  c3:	83 f8 ff             	cmp    $0xffffffff,%eax[m
[32m+[m[32m  c6:	0f 85 80 00 00 00    	jne    14c <forktest+0xfc>[m
 #define N  1000[m
 [m
 void[m
 printf(int fd, char *s, ...)[m
 {[m
   write(fd, s, strlen(s));[m
[31m-  bc:	83 ec 0c             	sub    $0xc,%esp[m
[31m-  bf:	68 86 04 00 00       	push   $0x486[m
[31m-  c4:	e8 27 01 00 00       	call   1f0 <strlen>[m
[31m-  c9:	83 c4 0c             	add    $0xc,%esp[m
[31m-  cc:	50                   	push   %eax[m
[31m-  cd:	68 86 04 00 00       	push   $0x486[m
[31m-  d2:	6a 01                	push   $0x1[m
[31m-  d4:	e8 f9 02 00 00       	call   3d2 <write>[m
[32m+[m[32m  cc:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m  cf:	68 9e 04 00 00       	push   $0x49e[m
[32m+[m[32m  d4:	e8 27 01 00 00       	call   200 <strlen>[m
[32m+[m[32m  d9:	83 c4 0c             	add    $0xc,%esp[m
[32m+[m[32m  dc:	50                   	push   %eax[m
[32m+[m[32m  dd:	68 9e 04 00 00       	push   $0x49e[m
[32m+[m[32m  e2:	6a 01                	push   $0x1[m
[32m+[m[32m  e4:	e8 f9 02 00 00       	call   3e2 <write>[m
     printf(1, "wait got too many\n");[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
 [m
   printf(1, "fork test OK\n");[m
 }[m
[31m-  d9:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[31m-  dc:	c9                   	leave  [m
[31m-  dd:	c3                   	ret    [m
[31m-  de:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m  e9:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[32m+[m[32m  ec:	c9                   	leave[m[41m  [m
[32m+[m[32m  ed:	c3                   	ret[m[41m    [m
[32m+[m[32m  ee:	66 90                	xchg   %ax,%ax[m
 #define N  1000[m
 [m
 void[m
 printf(int fd, char *s, ...)[m
 {[m
   write(fd, s, strlen(s));[m
[31m-  e0:	83 ec 0c             	sub    $0xc,%esp[m
[31m-  e3:	68 94 04 00 00       	push   $0x494[m
[31m-  e8:	e8 03 01 00 00       	call   1f0 <strlen>[m
[31m-  ed:	83 c4 0c             	add    $0xc,%esp[m
[31m-  f0:	50                   	push   %eax[m
[31m-  f1:	68 94 04 00 00       	push   $0x494[m
[31m-  f6:	6a 01                	push   $0x1[m
[31m-  f8:	e8 d5 02 00 00       	call   3d2 <write>[m
[31m-      exit(11);[m
[32m+[m[32m  f0:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m  f3:	68 ac 04 00 00       	push   $0x4ac[m
[32m+[m[32m  f8:	e8 03 01 00 00       	call   200 <strlen>[m
[32m+[m[32m  fd:	83 c4 0c             	add    $0xc,%esp[m
[32m+[m[32m 100:	50                   	push   %eax[m
[32m+[m[32m 101:	68 ac 04 00 00       	push   $0x4ac[m
[32m+[m[32m 106:	6a 01                	push   $0x1[m
[32m+[m[32m 108:	e8 d5 02 00 00       	call   3e2 <write>[m
[32m+[m[32m      exit(0);[m
   }[m
 [m
   if(n == N){[m
     printf(1, "fork claimed to work N times!\n", N);[m
[31m-    exit(11);[m
[31m-  fd:	c7 04 24 0b 00 00 00 	movl   $0xb,(%esp)[m
[31m- 104:	e8 a9 02 00 00       	call   3b2 <exit>[m
[32m+[m[32m    exit(0);[m
[32m+[m[32m 10d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)[m
[32m+[m[32m 114:	e8 a9 02 00 00       	call   3c2 <exit>[m
   for(n=0; n<N; n++){[m
     pid = fork();[m
     if(pid < 0)[m
       break;[m
     if(pid == 0)[m
[31m-      exit(11);[m
[31m- 109:	83 ec 0c             	sub    $0xc,%esp[m
[31m- 10c:	6a 0b                	push   $0xb[m
[31m- 10e:	e8 9f 02 00 00       	call   3b2 <exit>[m
[32m+[m[32m      exit(0);[m
[32m+[m[32m 119:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m 11c:	6a 00                	push   $0x0[m
[32m+[m[32m 11e:	e8 9f 02 00 00       	call   3c2 <exit>[m
 #define N  1000[m
 [m
 void[m
 printf(int fd, char *s, ...)[m
 {[m
   write(fd, s, strlen(s));[m
[31m- 113:	83 ec 0c             	sub    $0xc,%esp[m
[31m- 116:	68 5f 04 00 00       	push   $0x45f[m
[31m- 11b:	e8 d0 00 00 00       	call   1f0 <strlen>[m
[31m- 120:	83 c4 0c             	add    $0xc,%esp[m
[31m- 123:	50                   	push   %eax[m
[31m- 124:	68 5f 04 00 00       	push   $0x45f[m
[31m- 129:	6a 01                	push   $0x1[m
[31m- 12b:	e8 a2 02 00 00       	call   3d2 <write>[m
[32m+[m[32m 123:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m 126:	68 77 04 00 00       	push   $0x477[m
[32m+[m[32m 12b:	e8 d0 00 00 00       	call   200 <strlen>[m
[32m+[m[32m 130:	83 c4 0c             	add    $0xc,%esp[m
[32m+[m[32m 133:	50                   	push   %eax[m
[32m+[m[32m 134:	68 77 04 00 00       	push   $0x477[m
[32m+[m[32m 139:	6a 01                	push   $0x1[m
[32m+[m[32m 13b:	e8 a2 02 00 00       	call   3e2 <write>[m
   }[m
 [m
   for(; n > 0; n--){[m
[31m-    if(wait() < 0){[m
[32m+[m[32m    if(wait(0) < 0){[m
       printf(1, "wait stopped early\n");[m
[31m-      exit(11);[m
[31m- 130:	c7 04 24 0b 00 00 00 	movl   $0xb,(%esp)[m
[31m- 137:	e8 76 02 00 00       	call   3b2 <exit>[m
[32m+[m[32m      exit(0);[m
[32m+[m[32m 140:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)[m
[32m+[m[32m 147:	e8 76 02 00 00       	call   3c2 <exit>[m
 #define N  1000[m
 [m
 void[m
 printf(int fd, char *s, ...)[m
 {[m
   write(fd, s, strlen(s));[m
[31m- 13c:	83 ec 0c             	sub    $0xc,%esp[m
[31m- 13f:	68 73 04 00 00       	push   $0x473[m
[31m- 144:	e8 a7 00 00 00       	call   1f0 <strlen>[m
[31m- 149:	83 c4 0c             	add    $0xc,%esp[m
[31m- 14c:	50                   	push   %eax[m
[31m- 14d:	68 73 04 00 00       	push   $0x473[m
[31m- 152:	6a 01                	push   $0x1[m
[31m- 154:	e8 79 02 00 00       	call   3d2 <write>[m
[32m+[m[32m 14c:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m 14f:	68 8b 04 00 00       	push   $0x48b[m
[32m+[m[32m 154:	e8 a7 00 00 00       	call   200 <strlen>[m
[32m+[m[32m 159:	83 c4 0c             	add    $0xc,%esp[m
[32m+[m[32m 15c:	50                   	push   %eax[m
[32m+[m[32m 15d:	68 8b 04 00 00       	push   $0x48b[m
[32m+[m[32m 162:	6a 01                	push   $0x1[m
[32m+[m[32m 164:	e8 79 02 00 00       	call   3e2 <write>[m
     }[m
   }[m
 [m
[31m-  if(wait() != -1){[m
[32m+[m[32m  if(wait(0) != -1){[m
     printf(1, "wait got too many\n");[m
[31m-    exit(11);[m
[31m- 159:	c7 04 24 0b 00 00 00 	movl   $0xb,(%esp)[m
[31m- 160:	e8 4d 02 00 00       	call   3b2 <exit>[m
[31m- 165:	66 90                	xchg   %ax,%ax[m
[31m- 167:	66 90                	xchg   %ax,%ax[m
[31m- 169:	66 90                	xchg   %ax,%ax[m
[31m- 16b:	66 90                	xchg   %ax,%ax[m
[31m- 16d:	66 90                	xchg   %ax,%ax[m
[31m- 16f:	90                   	nop[m
[31m-[m
[31m-00000170 <strcpy>:[m
[31m- 170:	55                   	push   %ebp[m
[31m- 171:	89 e5                	mov    %esp,%ebp[m
[31m- 173:	53                   	push   %ebx[m
[31m- 174:	8b 45 08             	mov    0x8(%ebp),%eax[m
[31m- 177:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[31m- 17a:	89 c2                	mov    %eax,%edx[m
[31m- 17c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m- 180:	83 c1 01             	add    $0x1,%ecx[m
[31m- 183:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx[m
[31m- 187:	83 c2 01             	add    $0x1,%edx[m
[31m- 18a:	84 db                	test   %bl,%bl[m
[31m- 18c:	88 5a ff             	mov    %bl,-0x1(%edx)[m
[31m- 18f:	75 ef                	jne    180 <strcpy+0x10>[m
[31m- 191:	5b                   	pop    %ebx[m
[31m- 192:	5d                   	pop    %ebp[m
[31m- 193:	c3                   	ret    [m
[31m- 194:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m- 19a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi[m
[31m-[m
[31m-000001a0 <strcmp>:[m
[31m- 1a0:	55                   	push   %ebp[m
[31m- 1a1:	89 e5                	mov    %esp,%ebp[m
[31m- 1a3:	56                   	push   %esi[m
[31m- 1a4:	53                   	push   %ebx[m
[31m- 1a5:	8b 55 08             	mov    0x8(%ebp),%edx[m
[31m- 1a8:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[31m- 1ab:	0f b6 02             	movzbl (%edx),%eax[m
[31m- 1ae:	0f b6 19             	movzbl (%ecx),%ebx[m
[31m- 1b1:	84 c0                	test   %al,%al[m
[31m- 1b3:	75 1e                	jne    1d3 <strcmp+0x33>[m
[31m- 1b5:	eb 29                	jmp    1e0 <strcmp+0x40>[m
[31m- 1b7:	89 f6                	mov    %esi,%esi[m
[31m- 1b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m- 1c0:	83 c2 01             	add    $0x1,%edx[m
[31m- 1c3:	0f b6 02             	movzbl (%edx),%eax[m
[31m- 1c6:	8d 71 01             	lea    0x1(%ecx),%esi[m
[31m- 1c9:	0f b6 59 01          	movzbl 0x1(%ecx),%ebx[m
[31m- 1cd:	84 c0                	test   %al,%al[m
[31m- 1cf:	74 0f                	je     1e0 <strcmp+0x40>[m
[31m- 1d1:	89 f1                	mov    %esi,%ecx[m
[31m- 1d3:	38 d8                	cmp    %bl,%al[m
[31m- 1d5:	74 e9                	je     1c0 <strcmp+0x20>[m
[31m- 1d7:	29 d8                	sub    %ebx,%eax[m
[31m- 1d9:	5b                   	pop    %ebx[m
[31m- 1da:	5e                   	pop    %esi[m
[31m- 1db:	5d                   	pop    %ebp[m
[31m- 1dc:	c3                   	ret    [m
[31m- 1dd:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m- 1e0:	31 c0                	xor    %eax,%eax[m
[31m- 1e2:	29 d8                	sub    %ebx,%eax[m
[31m- 1e4:	5b                   	pop    %ebx[m
[31m- 1e5:	5e                   	pop    %esi[m
[31m- 1e6:	5d                   	pop    %ebp[m
[31m- 1e7:	c3                   	ret    [m
[31m- 1e8:	90                   	nop[m
[31m- 1e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-[m
[31m-000001f0 <strlen>:[m
[31m- 1f0:	55                   	push   %ebp[m
[31m- 1f1:	89 e5                	mov    %esp,%ebp[m
[31m- 1f3:	8b 4d 08             	mov    0x8(%ebp),%ecx[m
[31m- 1f6:	80 39 00             	cmpb   $0x0,(%ecx)[m
[31m- 1f9:	74 12                	je     20d <strlen+0x1d>[m
[31m- 1fb:	31 d2                	xor    %edx,%edx[m
[31m- 1fd:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m- 200:	83 c2 01             	add    $0x1,%edx[m
[31m- 203:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)[m
[31m- 207:	89 d0                	mov    %edx,%eax[m
[31m- 209:	75 f5                	jne    200 <strlen+0x10>[m
[31m- 20b:	5d                   	pop    %ebp[m
[31m- 20c:	c3                   	ret    [m
[31m- 20d:	31 c0                	xor    %eax,%eax[m
[31m- 20f:	5d                   	pop    %ebp[m
[31m- 210:	c3                   	ret    [m
[31m- 211:	eb 0d                	jmp    220 <memset>[m
[31m- 213:	90                   	nop[m
[31m- 214:	90                   	nop[m
[31m- 215:	90                   	nop[m
[31m- 216:	90                   	nop[m
[31m- 217:	90                   	nop[m
[31m- 218:	90                   	nop[m
[31m- 219:	90                   	nop[m
[31m- 21a:	90                   	nop[m
[31m- 21b:	90                   	nop[m
[31m- 21c:	90                   	nop[m
[31m- 21d:	90                   	nop[m
[31m- 21e:	90                   	nop[m
[31m- 21f:	90                   	nop[m
[31m-[m
[31m-00000220 <memset>:[m
[31m- 220:	55                   	push   %ebp[m
[31m- 221:	89 e5                	mov    %esp,%ebp[m
[31m- 223:	57                   	push   %edi[m
[31m- 224:	8b 55 08             	mov    0x8(%ebp),%edx[m
[31m- 227:	8b 4d 10             	mov    0x10(%ebp),%ecx[m
[31m- 22a:	8b 45 0c             	mov    0xc(%ebp),%eax[m
[31m- 22d:	89 d7                	mov    %edx,%edi[m
[31m- 22f:	fc                   	cld    [m
[31m- 230:	f3 aa                	rep stos %al,%es:(%edi)[m
[31m- 232:	89 d0                	mov    %edx,%eax[m
[31m- 234:	5f                   	pop    %edi[m
[31m- 235:	5d                   	pop    %ebp[m
[31m- 236:	c3                   	ret    [m
[31m- 237:	89 f6                	mov    %esi,%esi[m
[31m- 239:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-00000240 <strchr>:[m
[31m- 240:	55                   	push   %ebp[m
[31m- 241:	89 e5                	mov    %esp,%ebp[m
[31m- 243:	53                   	push   %ebx[m
[31m- 244:	8b 45 08             	mov    0x8(%ebp),%eax[m
[31m- 247:	8b 5d 0c             	mov    0xc(%ebp),%ebx[m
[31m- 24a:	0f b6 10             	movzbl (%eax),%edx[m
[31m- 24d:	84 d2                	test   %dl,%dl[m
[31m- 24f:	74 1d                	je     26e <strchr+0x2e>[m
[31m- 251:	38 d3                	cmp    %dl,%bl[m
[31m- 253:	89 d9                	mov    %ebx,%ecx[m
[31m- 255:	75 0d                	jne    264 <strchr+0x24>[m
[31m- 257:	eb 17                	jmp    270 <strchr+0x30>[m
[31m- 259:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m- 260:	38 ca                	cmp    %cl,%dl[m
[31m- 262:	74 0c                	je     270 <strchr+0x30>[m
[31m- 264:	83 c0 01             	add    $0x1,%eax[m
[31m- 267:	0f b6 10             	movzbl (%eax),%edx[m
[31m- 26a:	84 d2                	test   %dl,%dl[m
[31m- 26c:	75 f2                	jne    260 <strchr+0x20>[m
[31m- 26e:	31 c0                	xor    %eax,%eax[m
[31m- 270:	5b                   	pop    %ebx[m
[31m- 271:	5d                   	pop    %ebp[m
[31m- 272:	c3                   	ret    [m
[31m- 273:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m- 279:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-00000280 <gets>:[m
[31m- 280:	55                   	push   %ebp[m
[31m- 281:	89 e5                	mov    %esp,%ebp[m
[31m- 283:	57                   	push   %edi[m
[31m- 284:	56                   	push   %esi[m
[31m- 285:	53                   	push   %ebx[m
[31m- 286:	31 f6                	xor    %esi,%esi[m
[31m- 288:	8d 7d e7             	lea    -0x19(%ebp),%edi[m
[31m- 28b:	83 ec 1c             	sub    $0x1c,%esp[m
[31m- 28e:	eb 29                	jmp    2b9 <gets+0x39>[m
[31m- 290:	83 ec 04             	sub    $0x4,%esp[m
[31m- 293:	6a 01                	push   $0x1[m
[31m- 295:	57                   	push   %edi[m
[31m- 296:	6a 00                	push   $0x0[m
[31m- 298:	e8 2d 01 00 00       	call   3ca <read>[m
[31m- 29d:	83 c4 10             	add    $0x10,%esp[m
[31m- 2a0:	85 c0                	test   %eax,%eax[m
[31m- 2a2:	7e 1d                	jle    2c1 <gets+0x41>[m
[31m- 2a4:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax[m
[31m- 2a8:	8b 55 08             	mov    0x8(%ebp),%edx[m
[31m- 2ab:	89 de                	mov    %ebx,%esi[m
[31m- 2ad:	3c 0a                	cmp    $0xa,%al[m
[31m- 2af:	88 44 1a ff          	mov    %al,-0x1(%edx,%ebx,1)[m
[31m- 2b3:	74 1b                	je     2d0 <gets+0x50>[m
[31m- 2b5:	3c 0d                	cmp    $0xd,%al[m
[31m- 2b7:	74 17                	je     2d0 <gets+0x50>[m
[31m- 2b9:	8d 5e 01             	lea    0x1(%esi),%ebx[m
[31m- 2bc:	3b 5d 0c             	cmp    0xc(%ebp),%ebx[m
[31m- 2bf:	7c cf                	jl     290 <gets+0x10>[m
[31m- 2c1:	8b 45 08             	mov    0x8(%ebp),%eax[m
[31m- 2c4:	c6 04 30 00          	movb   $0x0,(%eax,%esi,1)[m
[31m- 2c8:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m- 2cb:	5b                   	pop    %ebx[m
[31m- 2cc:	5e                   	pop    %esi[m
[31m- 2cd:	5f                   	pop    %edi[m
[31m- 2ce:	5d                   	pop    %ebp[m
[31m- 2cf:	c3                   	ret    [m
[31m- 2d0:	8b 45 08             	mov    0x8(%ebp),%eax[m
[31m- 2d3:	89 de                	mov    %ebx,%esi[m
[31m- 2d5:	c6 04 30 00          	movb   $0x0,(%eax,%esi,1)[m
[31m- 2d9:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m- 2dc:	5b                   	pop    %ebx[m
[31m- 2dd:	5e                   	pop    %esi[m
[31m- 2de:	5f                   	pop    %edi[m
[31m- 2df:	5d                   	pop    %ebp[m
[31m- 2e0:	c3                   	ret    [m
[31m- 2e1:	eb 0d                	jmp    2f0 <stat>[m
[31m- 2e3:	90                   	nop[m
[31m- 2e4:	90                   	nop[m
[31m- 2e5:	90                   	nop[m
[31m- 2e6:	90                   	nop[m
[31m- 2e7:	90                   	nop[m
[31m- 2e8:	90                   	nop[m
[31m- 2e9:	90                   	nop[m
[31m- 2ea:	90                   	nop[m
[31m- 2eb:	90                   	nop[m
[31m- 2ec:	90                   	nop[m
[31m- 2ed:	90                   	nop[m
[31m- 2ee:	90                   	nop[m
[31m- 2ef:	90                   	nop[m
[31m-[m
[31m-000002f0 <stat>:[m
[31m- 2f0:	55                   	push   %ebp[m
[31m- 2f1:	89 e5                	mov    %esp,%ebp[m
[31m- 2f3:	56                   	push   %esi[m
[31m- 2f4:	53                   	push   %ebx[m
[31m- 2f5:	83 ec 08             	sub    $0x8,%esp[m
[31m- 2f8:	6a 00                	push   $0x0[m
[31m- 2fa:	ff 75 08             	pushl  0x8(%ebp)[m
[31m- 2fd:	e8 f0 00 00 00       	call   3f2 <open>[m
[31m- 302:	83 c4 10             	add    $0x10,%esp[m
[31m- 305:	85 c0                	test   %eax,%eax[m
[31m- 307:	78 27                	js     330 <stat+0x40>[m
[31m- 309:	83 ec 08             	sub    $0x8,%esp[m
[31m- 30c:	ff 75 0c             	pushl  0xc(%ebp)[m
[31m- 30f:	89 c3                	mov    %eax,%ebx[m
[31m- 311:	50                   	push   %eax[m
[31m- 312:	e8 f3 00 00 00       	call   40a <fstat>[m
[31m- 317:	89 c6                	mov    %eax,%esi[m
[31m- 319:	89 1c 24             	mov    %ebx,(%esp)[m
[31m- 31c:	e8 b9 00 00 00       	call   3da <close>[m
[31m- 321:	83 c4 10             	add    $0x10,%esp[m
[31m- 324:	89 f0                	mov    %esi,%eax[m
[31m- 326:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m- 329:	5b                   	pop    %ebx[m
[31m- 32a:	5e                   	pop    %esi[m
[31m- 32b:	5d                   	pop    %ebp[m
[31m- 32c:	c3                   	ret    [m
[31m- 32d:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m- 330:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[31m- 335:	eb ef                	jmp    326 <stat+0x36>[m
[31m- 337:	89 f6                	mov    %esi,%esi[m
[31m- 339:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-00000340 <atoi>:[m
[31m- 340:	55                   	push   %ebp[m
[31m- 341:	89 e5                	mov    %esp,%ebp[m
[31m- 343:	53                   	push   %ebx[m
[31m- 344:	8b 4d 08             	mov    0x8(%ebp),%ecx[m
[31m- 347:	0f be 11             	movsbl (%ecx),%edx[m
[31m- 34a:	8d 42 d0             	lea    -0x30(%edx),%eax[m
[31m- 34d:	3c 09                	cmp    $0x9,%al[m
[31m- 34f:	b8 00 00 00 00       	mov    $0x0,%eax[m
[31m- 354:	77 1f                	ja     375 <atoi+0x35>[m
[31m- 356:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m- 359:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m- 360:	8d 04 80             	lea    (%eax,%eax,4),%eax[m
[31m- 363:	83 c1 01             	add    $0x1,%ecx[m
[31m- 366:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax[m
[31m- 36a:	0f be 11             	movsbl (%ecx),%edx[m
[31m- 36d:	8d 5a d0             	lea    -0x30(%edx),%ebx[m
[31m- 370:	80 fb 09             	cmp    $0x9,%bl[m
[31m- 373:	76 eb                	jbe    360 <atoi+0x20>[m
[31m- 375:	5b                   	pop    %ebx[m
[31m- 376:	5d                   	pop    %ebp[m
[31m- 377:	c3                   	ret    [m
[31m- 378:	90                   	nop[m
[31m- 379:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-[m
[31m-00000380 <memmove>:[m
[31m- 380:	55                   	push   %ebp[m
[31m- 381:	89 e5                	mov    %esp,%ebp[m
[31m- 383:	56                   	push   %esi[m
[31m- 384:	53                   	push   %ebx[m
[31m- 385:	8b 5d 10             	mov    0x10(%ebp),%ebx[m
[31m- 388:	8b 45 08             	mov    0x8(%ebp),%eax[m
[31m- 38b:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[31m- 38e:	85 db                	test   %ebx,%ebx[m
[31m- 390:	7e 14                	jle    3a6 <memmove+0x26>[m
[31m- 392:	31 d2                	xor    %edx,%edx[m
[31m- 394:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m- 398:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx[m
[31m- 39c:	88 0c 10             	mov    %cl,(%eax,%edx,1)[m
[31m- 39f:	83 c2 01             	add    $0x1,%edx[m
[31m- 3a2:	39 da                	cmp    %ebx,%edx[m
[31m- 3a4:	75 f2                	jne    398 <memmove+0x18>[m
[31m- 3a6:	5b                   	pop    %ebx[m
[31m- 3a7:	5e                   	pop    %esi[m
[31m- 3a8:	5d                   	pop    %ebp[m
[31m- 3a9:	c3                   	ret    [m
[31m-[m
[31m-000003aa <fork>:[m
[31m- 3aa:	b8 01 00 00 00       	mov    $0x1,%eax[m
[31m- 3af:	cd 40                	int    $0x40[m
[31m- 3b1:	c3                   	ret    [m
[31m-[m
[31m-000003b2 <exit>:[m
[31m- 3b2:	b8 02 00 00 00       	mov    $0x2,%eax[m
[31m- 3b7:	cd 40                	int    $0x40[m
[32m+[m[32m    exit(0);[m
[32m+[m[32m 169:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)[m
[32m+[m[32m 170:	e8 4d 02 00 00       	call   3c2 <exit>[m
[32m+[m[32m 175:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 177:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 179:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 17b:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 17d:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 17f:	90                   	nop[m
[32m+[m
[32m+[m[32m00000180 <strcpy>:[m
[32m+[m[32m#include "user.h"[m
[32m+[m[32m#include "x86.h"[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mstrcpy(char *s, char *t)[m
[32m+[m[32m{[m
[32m+[m[32m 180:	55                   	push   %ebp[m
[32m+[m[32m 181:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 183:	53                   	push   %ebx[m
[32m+[m[32m 184:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m 187:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[32m+[m[32m  char *os;[m
[32m+[m
[32m+[m[32m  os = s;[m
[32m+[m[32m  while((*s++ = *t++) != 0)[m
[32m+[m[32m 18a:	89 c2                	mov    %eax,%edx[m
[32m+[m[32m 18c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m 190:	83 c1 01             	add    $0x1,%ecx[m
[32m+[m[32m 193:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx[m
[32m+[m[32m 197:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m 19a:	84 db                	test   %bl,%bl[m
[32m+[m[32m 19c:	88 5a ff             	mov    %bl,-0x1(%edx)[m
[32m+[m[32m 19f:	75 ef                	jne    190 <strcpy+0x10>[m
[32m+[m[32m    ;[m
[32m+[m[32m  return os;[m
[32m+[m[32m}[m
[32m+[m[32m 1a1:	5b                   	pop    %ebx[m
[32m+[m[32m 1a2:	5d                   	pop    %ebp[m
[32m+[m[32m 1a3:	c3                   	ret[m[41m    [m
[32m+[m[32m 1a4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m 1aa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi[m
[32m+[m
[32m+[m[32m000001b0 <strcmp>:[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m 1b0:	55                   	push   %ebp[m
[32m+[m[32m 1b1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 1b3:	56                   	push   %esi[m
[32m+[m[32m 1b4:	53                   	push   %ebx[m
[32m+[m[32m 1b5:	8b 55 08             	mov    0x8(%ebp),%edx[m
[32m+[m[32m 1b8:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[32m+[m[32m  while(*p && *p == *q)[m
[32m+[m[32m 1bb:	0f b6 02             	movzbl (%edx),%eax[m
[32m+[m[32m 1be:	0f b6 19             	movzbl (%ecx),%ebx[m
[32m+[m[32m 1c1:	84 c0                	test   %al,%al[m
[32m+[m[32m 1c3:	75 1e                	jne    1e3 <strcmp+0x33>[m
[32m+[m[32m 1c5:	eb 29                	jmp    1f0 <strcmp+0x40>[m
[32m+[m[32m 1c7:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m 1c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    p++, q++;[m
[32m+[m[32m 1d0:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m  while(*p && *p == *q)[m
[32m+[m[32m 1d3:	0f b6 02             	movzbl (%edx),%eax[m
[32m+[m[32m    p++, q++;[m
[32m+[m[32m 1d6:	8d 71 01             	lea    0x1(%ecx),%esi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m  while(*p && *p == *q)[m
[32m+[m[32m 1d9:	0f b6 59 01          	movzbl 0x1(%ecx),%ebx[m
[32m+[m[32m 1dd:	84 c0                	test   %al,%al[m
[32m+[m[32m 1df:	74 0f                	je     1f0 <strcmp+0x40>[m
[32m+[m[32m 1e1:	89 f1                	mov    %esi,%ecx[m
[32m+[m[32m 1e3:	38 d8                	cmp    %bl,%al[m
[32m+[m[32m 1e5:	74 e9                	je     1d0 <strcmp+0x20>[m
[32m+[m[32m    p++, q++;[m
[32m+[m[32m  return (uchar)*p - (uchar)*q;[m
[32m+[m[32m 1e7:	29 d8                	sub    %ebx,%eax[m
[32m+[m[32m}[m
[32m+[m[32m 1e9:	5b                   	pop    %ebx[m
[32m+[m[32m 1ea:	5e                   	pop    %esi[m
[32m+[m[32m 1eb:	5d                   	pop    %ebp[m
[32m+[m[32m 1ec:	c3                   	ret[m[41m    [m
[32m+[m[32m 1ed:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m  while(*p && *p == *q)[m
[32m+[m[32m 1f0:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m    p++, q++;[m
[32m+[m[32m  return (uchar)*p - (uchar)*q;[m
[32m+[m[32m 1f2:	29 d8                	sub    %ebx,%eax[m
[32m+[m[32m}[m
[32m+[m[32m 1f4:	5b                   	pop    %ebx[m
[32m+[m[32m 1f5:	5e                   	pop    %esi[m
[32m+[m[32m 1f6:	5d                   	pop    %ebp[m
[32m+[m[32m 1f7:	c3                   	ret[m[41m    [m
[32m+[m[32m 1f8:	90                   	nop[m
[32m+[m[32m 1f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m
[32m+[m[32m00000200 <strlen>:[m
[32m+[m
[32m+[m[32muint[m
[32m+[m[32mstrlen(char *s)[m
[32m+[m[32m{[m
[32m+[m[32m 200:	55                   	push   %ebp[m
[32m+[m[32m 201:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 203:	8b 4d 08             	mov    0x8(%ebp),%ecx[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  for(n = 0; s[n]; n++)[m
[32m+[m[32m 206:	80 39 00             	cmpb   $0x0,(%ecx)[m
[32m+[m[32m 209:	74 12                	je     21d <strlen+0x1d>[m
[32m+[m[32m 20b:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m 20d:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m 210:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m 213:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)[m
[32m+[m[32m 217:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m 219:	75 f5                	jne    210 <strlen+0x10>[m
[32m+[m[32m    ;[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
[32m+[m[32m 21b:	5d                   	pop    %ebp[m
[32m+[m[32m 21c:	c3                   	ret[m[41m    [m
[32m+[m[32muint[m
[32m+[m[32mstrlen(char *s)[m
[32m+[m[32m{[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  for(n = 0; s[n]; n++)[m
[32m+[m[32m 21d:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m    ;[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
[32m+[m[32m 21f:	5d                   	pop    %ebp[m
[32m+[m[32m 220:	c3                   	ret[m[41m    [m
[32m+[m[32m 221:	eb 0d                	jmp    230 <memset>[m
[32m+[m[32m 223:	90                   	nop[m
[32m+[m[32m 224:	90                   	nop[m
[32m+[m[32m 225:	90                   	nop[m
[32m+[m[32m 226:	90                   	nop[m
[32m+[m[32m 227:	90                   	nop[m
[32m+[m[32m 228:	90                   	nop[m
[32m+[m[32m 229:	90                   	nop[m
[32m+[m[32m 22a:	90                   	nop[m
[32m+[m[32m 22b:	90                   	nop[m
[32m+[m[32m 22c:	90                   	nop[m
[32m+[m[32m 22d:	90                   	nop[m
[32m+[m[32m 22e:	90                   	nop[m
[32m+[m[32m 22f:	90                   	nop[m
[32m+[m
[32m+[m[32m00000230 <memset>:[m
[32m+[m
[32m+[m[32mvoid*[m
[32m+[m[32mmemset(void *dst, int c, uint n)[m
[32m+[m[32m{[m
[32m+[m[32m 230:	55                   	push   %ebp[m
[32m+[m[32m 231:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 233:	57                   	push   %edi[m
[32m+[m[32m 234:	8b 55 08             	mov    0x8(%ebp),%edx[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32mstosb(void *addr, int data, int cnt)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("cld; rep stosb" :[m
[32m+[m[32m 237:	8b 4d 10             	mov    0x10(%ebp),%ecx[m
[32m+[m[32m 23a:	8b 45 0c             	mov    0xc(%ebp),%eax[m
[32m+[m[32m 23d:	89 d7                	mov    %edx,%edi[m
[32m+[m[32m 23f:	fc                   	cld[m[41m    [m
[32m+[m[32m 240:	f3 aa                	rep stos %al,%es:(%edi)[m
[32m+[m[32m  stosb(dst, c, n);[m
[32m+[m[32m  return dst;[m
[32m+[m[32m}[m
[32m+[m[32m 242:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m 244:	5f                   	pop    %edi[m
[32m+[m[32m 245:	5d                   	pop    %ebp[m
[32m+[m[32m 246:	c3                   	ret[m[41m    [m
[32m+[m[32m 247:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m 249:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m
[32m+[m[32m00000250 <strchr>:[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mstrchr(const char *s, char c)[m
[32m+[m[32m{[m
[32m+[m[32m 250:	55                   	push   %ebp[m
[32m+[m[32m 251:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 253:	53                   	push   %ebx[m
[32m+[m[32m 254:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m 257:	8b 5d 0c             	mov    0xc(%ebp),%ebx[m
[32m+[m[32m  for(; *s; s++)[m
[32m+[m[32m 25a:	0f b6 10             	movzbl (%eax),%edx[m
[32m+[m[32m 25d:	84 d2                	test   %dl,%dl[m
[32m+[m[32m 25f:	74 1d                	je     27e <strchr+0x2e>[m
[32m+[m[32m    if(*s == c)[m
[32m+[m[32m 261:	38 d3                	cmp    %dl,%bl[m
[32m+[m[32m 263:	89 d9                	mov    %ebx,%ecx[m
[32m+[m[32m 265:	75 0d                	jne    274 <strchr+0x24>[m
[32m+[m[32m 267:	eb 17                	jmp    280 <strchr+0x30>[m
[32m+[m[32m 269:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m 270:	38 ca                	cmp    %cl,%dl[m
[32m+[m[32m 272:	74 0c                	je     280 <strchr+0x30>[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mstrchr(const char *s, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  for(; *s; s++)[m
[32m+[m[32m 274:	83 c0 01             	add    $0x1,%eax[m
[32m+[m[32m 277:	0f b6 10             	movzbl (%eax),%edx[m
[32m+[m[32m 27a:	84 d2                	test   %dl,%dl[m
[32m+[m[32m 27c:	75 f2                	jne    270 <strchr+0x20>[m
[32m+[m[32m    if(*s == c)[m
[32m+[m[32m      return (char*)s;[m
[32m+[m[32m  return 0;[m
[32m+[m[32m 27e:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m}[m
[32m+[m[32m 280:	5b                   	pop    %ebx[m
[32m+[m[32m 281:	5d                   	pop    %ebp[m
[32m+[m[32m 282:	c3                   	ret[m[41m    [m
[32m+[m[32m 283:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m 289:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m
[32m+[m[32m00000290 <gets>:[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
[32m+[m[32m 290:	55                   	push   %ebp[m
[32m+[m[32m 291:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 293:	57                   	push   %edi[m
[32m+[m[32m 294:	56                   	push   %esi[m
[32m+[m[32m 295:	53                   	push   %ebx[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
[32m+[m[32m 296:	31 f6                	xor    %esi,%esi[m
[32m+[m[32m    cc = read(0, &c, 1);[m
[32m+[m[32m 298:	8d 7d e7             	lea    -0x19(%ebp),%edi[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
[32m+[m[32m 29b:	83 ec 1c             	sub    $0x1c,%esp[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
[32m+[m[32m 29e:	eb 29                	jmp    2c9 <gets+0x39>[m
[32m+[m[32m    cc = read(0, &c, 1);[m
[32m+[m[32m 2a0:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m 2a3:	6a 01                	push   $0x1[m
[32m+[m[32m 2a5:	57                   	push   %edi[m
[32m+[m[32m 2a6:	6a 00                	push   $0x0[m
[32m+[m[32m 2a8:	e8 2d 01 00 00       	call   3da <read>[m
[32m+[m[32m    if(cc < 1)[m
[32m+[m[32m 2ad:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 2b0:	85 c0                	test   %eax,%eax[m
[32m+[m[32m 2b2:	7e 1d                	jle    2d1 <gets+0x41>[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m 2b4:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax[m
[32m+[m[32m 2b8:	8b 55 08             	mov    0x8(%ebp),%edx[m
[32m+[m[32m 2bb:	89 de                	mov    %ebx,%esi[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m 2bd:	3c 0a                	cmp    $0xa,%al[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
[32m+[m[32m    cc = read(0, &c, 1);[m
[32m+[m[32m    if(cc < 1)[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m 2bf:	88 44 1a ff          	mov    %al,-0x1(%edx,%ebx,1)[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m 2c3:	74 1b                	je     2e0 <gets+0x50>[m
[32m+[m[32m 2c5:	3c 0d                	cmp    $0xd,%al[m
[32m+[m[32m 2c7:	74 17                	je     2e0 <gets+0x50>[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
[32m+[m[32m 2c9:	8d 5e 01             	lea    0x1(%esi),%ebx[m
[32m+[m[32m 2cc:	3b 5d 0c             	cmp    0xc(%ebp),%ebx[m
[32m+[m[32m 2cf:	7c cf                	jl     2a0 <gets+0x10>[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m[32m  buf[i] = '\0';[m
[32m+[m[32m 2d1:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m 2d4:	c6 04 30 00          	movb   $0x0,(%eax,%esi,1)[m
[32m+[m[32m  return buf;[m
[32m+[m[32m}[m
[32m+[m[32m 2d8:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m 2db:	5b                   	pop    %ebx[m
[32m+[m[32m 2dc:	5e                   	pop    %esi[m
[32m+[m[32m 2dd:	5f                   	pop    %edi[m
[32m+[m[32m 2de:	5d                   	pop    %ebp[m
[32m+[m[32m 2df:	c3                   	ret[m[41m    [m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m[32m  buf[i] = '\0';[m
[32m+[m[32m 2e0:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
[32m+[m[32m 2e3:	89 de                	mov    %ebx,%esi[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m[32m  buf[i] = '\0';[m
[32m+[m[32m 2e5:	c6 04 30 00          	movb   $0x0,(%eax,%esi,1)[m
[32m+[m[32m  return buf;[m
[32m+[m[32m}[m
[32m+[m[32m 2e9:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m 2ec:	5b                   	pop    %ebx[m
[32m+[m[32m 2ed:	5e                   	pop    %esi[m
[32m+[m[32m 2ee:	5f                   	pop    %edi[m
[32m+[m[32m 2ef:	5d                   	pop    %ebp[m
[32m+[m[32m 2f0:	c3                   	ret[m[41m    [m
[32m+[m[32m 2f1:	eb 0d                	jmp    300 <stat>[m
[32m+[m[32m 2f3:	90                   	nop[m
[32m+[m[32m 2f4:	90                   	nop[m
[32m+[m[32m 2f5:	90                   	nop[m
[32m+[m[32m 2f6:	90                   	nop[m
[32m+[m[32m 2f7:	90                   	nop[m
[32m+[m[32m 2f8:	90                   	nop[m
[32m+[m[32m 2f9:	90                   	nop[m
[32m+[m[32m 2fa:	90                   	nop[m
[32m+[m[32m 2fb:	90                   	nop[m
[32m+[m[32m 2fc:	90                   	nop[m
[32m+[m[32m 2fd:	90                   	nop[m
[32m+[m[32m 2fe:	90                   	nop[m
[32m+[m[32m 2ff:	90                   	nop[m
[32m+[m
[32m+[m[32m00000300 <stat>:[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstat(char *n, struct stat *st)[m
[32m+[m[32m{[m
[32m+[m[32m 300:	55                   	push   %ebp[m
[32m+[m[32m 301:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 303:	56                   	push   %esi[m
[32m+[m[32m 304:	53                   	push   %ebx[m
[32m+[m[32m  int fd;[m
[32m+[m[32m  int r;[m
[32m+[m
[32m+[m[32m  fd = open(n, O_RDONLY);[m
[32m+[m[32m 305:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m 308:	6a 00                	push   $0x0[m
[32m+[m[32m 30a:	ff 75 08             	pushl  0x8(%ebp)[m
[32m+[m[32m 30d:	e8 f0 00 00 00       	call   402 <open>[m
[32m+[m[32m  if(fd < 0)[m
[32m+[m[32m 312:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 315:	85 c0                	test   %eax,%eax[m
[32m+[m[32m 317:	78 27                	js     340 <stat+0x40>[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  r = fstat(fd, st);[m
[32m+[m[32m 319:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m 31c:	ff 75 0c             	pushl  0xc(%ebp)[m
[32m+[m[32m 31f:	89 c3                	mov    %eax,%ebx[m
[32m+[m[32m 321:	50                   	push   %eax[m
[32m+[m[32m 322:	e8 f3 00 00 00       	call   41a <fstat>[m
[32m+[m[32m 327:	89 c6                	mov    %eax,%esi[m
[32m+[m[32m  close(fd);[m
[32m+[m[32m 329:	89 1c 24             	mov    %ebx,(%esp)[m
[32m+[m[32m 32c:	e8 b9 00 00 00       	call   3ea <close>[m
[32m+[m[32m  return r;[m
[32m+[m[32m 331:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 334:	89 f0                	mov    %esi,%eax[m
[32m+[m[32m}[m
[32m+[m[32m 336:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[32m+[m[32m 339:	5b                   	pop    %ebx[m
[32m+[m[32m 33a:	5e                   	pop    %esi[m
[32m+[m[32m 33b:	5d                   	pop    %ebp[m
[32m+[m[32m 33c:	c3                   	ret[m[41m    [m
[32m+[m[32m 33d:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m  int fd;[m
[32m+[m[32m  int r;[m
[32m+[m
[32m+[m[32m  fd = open(n, O_RDONLY);[m
[32m+[m[32m  if(fd < 0)[m
[32m+[m[32m    return -1;[m
[32m+[m[32m 340:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[32m+[m[32m 345:	eb ef                	jmp    336 <stat+0x36>[m
[32m+[m[32m 347:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m 349:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m
[32m+[m[32m00000350 <atoi>:[m
[32m+[m[32m  return r;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32matoi(const char *s)[m
[32m+[m[32m{[m
[32m+[m[32m 350:	55                   	push   %ebp[m
[32m+[m[32m 351:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 353:	53                   	push   %ebx[m
[32m+[m[32m 354:	8b 4d 08             	mov    0x8(%ebp),%ecx[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  n = 0;[m
[32m+[m[32m  while('0' <= *s && *s <= '9')[m
[32m+[m[32m 357:	0f be 11             	movsbl (%ecx),%edx[m
[32m+[m[32m 35a:	8d 42 d0             	lea    -0x30(%edx),%eax[m
[32m+[m[32m 35d:	3c 09                	cmp    $0x9,%al[m
[32m+[m[32m 35f:	b8 00 00 00 00       	mov    $0x0,%eax[m
[32m+[m[32m 364:	77 1f                	ja     385 <atoi+0x35>[m
[32m+[m[32m 366:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m 369:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    n = n*10 + *s++ - '0';[m
[32m+[m[32m 370:	8d 04 80             	lea    (%eax,%eax,4),%eax[m
[32m+[m[32m 373:	83 c1 01             	add    $0x1,%ecx[m
[32m+[m[32m 376:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax[m
[32m+[m[32matoi(const char *s)[m
[32m+[m[32m{[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  n = 0;[m
[32m+[m[32m  while('0' <= *s && *s <= '9')[m
[32m+[m[32m 37a:	0f be 11             	movsbl (%ecx),%edx[m
[32m+[m[32m 37d:	8d 5a d0             	lea    -0x30(%edx),%ebx[m
[32m+[m[32m 380:	80 fb 09             	cmp    $0x9,%bl[m
[32m+[m[32m 383:	76 eb                	jbe    370 <atoi+0x20>[m
[32m+[m[32m    n = n*10 + *s++ - '0';[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
[32m+[m[32m 385:	5b                   	pop    %ebx[m
[32m+[m[32m 386:	5d                   	pop    %ebp[m
[32m+[m[32m 387:	c3                   	ret[m[41m    [m
[32m+[m[32m 388:	90                   	nop[m
[32m+[m[32m 389:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m
[32m+[m[32m00000390 <memmove>:[m
[32m+[m
[32m+[m[32mvoid*[m
[32m+[m[32mmemmove(void *vdst, void *vsrc, int n)[m
[32m+[m[32m{[m
[32m+[m[32m 390:	55                   	push   %ebp[m
[32m+[m[32m 391:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 393:	56                   	push   %esi[m
[32m+[m[32m 394:	53                   	push   %ebx[m
[32m+[m[32m 395:	8b 5d 10             	mov    0x10(%ebp),%ebx[m
[32m+[m[32m 398:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m 39b:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[32m+[m[32m  char *dst, *src;[m
[32m+[m
[32m+[m[32m  dst = vdst;[m
[32m+[m[32m  src = vsrc;[m
[32m+[m[32m  while(n-- > 0)[m
[32m+[m[32m 39e:	85 db                	test   %ebx,%ebx[m
[32m+[m[32m 3a0:	7e 14                	jle    3b6 <memmove+0x26>[m
[32m+[m[32m 3a2:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m 3a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    *dst++ = *src++;[m
[32m+[m[32m 3a8:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx[m
[32m+[m[32m 3ac:	88 0c 10             	mov    %cl,(%eax,%edx,1)[m
[32m+[m[32m 3af:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m{[m
[32m+[m[32m  char *dst, *src;[m
[32m+[m
[32m+[m[32m  dst = vdst;[m
[32m+[m[32m  src = vsrc;[m
[32m+[m[32m  while(n-- > 0)[m
[32m+[m[32m 3b2:	39 da                	cmp    %ebx,%edx[m
[32m+[m[32m 3b4:	75 f2                	jne    3a8 <memmove+0x18>[m
[32m+[m[32m    *dst++ = *src++;[m
[32m+[m[32m  return vdst;[m
[32m+[m[32m}[m
[32m+[m[32m 3b6:	5b                   	pop    %ebx[m
[32m+[m[32m 3b7:	5e                   	pop    %esi[m
[32m+[m[32m 3b8:	5d                   	pop    %ebp[m
  3b9:	c3                   	ret    [m
 [m
[31m-000003ba <wait>:[m
[31m- 3ba:	b8 03 00 00 00       	mov    $0x3,%eax[m
[32m+[m[32m000003ba <fork>:[m
[32m+[m[32m 3ba:	b8 01 00 00 00       	mov    $0x1,%eax[m
  3bf:	cd 40                	int    $0x40[m
  3c1:	c3                   	ret    [m
 [m
[31m-000003c2 <pipe>:[m
[31m- 3c2:	b8 04 00 00 00       	mov    $0x4,%eax[m
[32m+[m[32m000003c2 <exit>:[m
[32m+[m[32m 3c2:	b8 02 00 00 00       	mov    $0x2,%eax[m
  3c7:	cd 40                	int    $0x40[m
  3c9:	c3                   	ret    [m
 [m
[31m-000003ca <read>:[m
[31m- 3ca:	b8 05 00 00 00       	mov    $0x5,%eax[m
[32m+[m[32m000003ca <wait>:[m
[32m+[m[32m 3ca:	b8 03 00 00 00       	mov    $0x3,%eax[m
  3cf:	cd 40                	int    $0x40[m
  3d1:	c3                   	ret    [m
 [m
[31m-000003d2 <write>:[m
[31m- 3d2:	b8 10 00 00 00       	mov    $0x10,%eax[m
[32m+[m[32m000003d2 <pipe>:[m
[32m+[m[32m 3d2:	b8 04 00 00 00       	mov    $0x4,%eax[m
  3d7:	cd 40                	int    $0x40[m
  3d9:	c3                   	ret    [m
 [m
[31m-000003da <close>:[m
[31m- 3da:	b8 15 00 00 00       	mov    $0x15,%eax[m
[32m+[m[32m000003da <read>:[m
[32m+[m[32m 3da:	b8 05 00 00 00       	mov    $0x5,%eax[m
  3df:	cd 40                	int    $0x40[m
  3e1:	c3                   	ret    [m
 [m
[31m-000003e2 <kill>:[m
[31m- 3e2:	b8 06 00 00 00       	mov    $0x6,%eax[m
[32m+[m[32m000003e2 <write>:[m
[32m+[m[32m 3e2:	b8 10 00 00 00       	mov    $0x10,%eax[m
  3e7:	cd 40                	int    $0x40[m
  3e9:	c3                   	ret    [m
 [m
[31m-000003ea <exec>:[m
[31m- 3ea:	b8 07 00 00 00       	mov    $0x7,%eax[m
[32m+[m[32m000003ea <close>:[m
[32m+[m[32m 3ea:	b8 15 00 00 00       	mov    $0x15,%eax[m
  3ef:	cd 40                	int    $0x40[m
  3f1:	c3                   	ret    [m
 [m
[31m-000003f2 <open>:[m
[31m- 3f2:	b8 0f 00 00 00       	mov    $0xf,%eax[m
[32m+[m[32m000003f2 <kill>:[m
[32m+[m[32m 3f2:	b8 06 00 00 00       	mov    $0x6,%eax[m
  3f7:	cd 40                	int    $0x40[m
  3f9:	c3                   	ret    [m
 [m
[31m-000003fa <mknod>:[m
[31m- 3fa:	b8 11 00 00 00       	mov    $0x11,%eax[m
[32m+[m[32m000003fa <exec>:[m
[32m+[m[32m 3fa:	b8 07 00 00 00       	mov    $0x7,%eax[m
  3ff:	cd 40                	int    $0x40[m
  401:	c3                   	ret    [m
 [m
[31m-00000402 <unlink>:[m
[31m- 402:	b8 12 00 00 00       	mov    $0x12,%eax[m
[32m+[m[32m00000402 <open>:[m
[32m+[m[32m 402:	b8 0f 00 00 00       	mov    $0xf,%eax[m
  407:	cd 40                	int    $0x40[m
  409:	c3                   	ret    [m
 [m
[31m-0000040a <fstat>:[m
[31m- 40a:	b8 08 00 00 00       	mov    $0x8,%eax[m
[32m+[m[32m0000040a <mknod>:[m
[32m+[m[32m 40a:	b8 11 00 00 00       	mov    $0x11,%eax[m
  40f:	cd 40                	int    $0x40[m
  411:	c3                   	ret    [m
 [m
[31m-00000412 <link>:[m
[31m- 412:	b8 13 00 00 00       	mov    $0x13,%eax[m
[32m+[m[32m00000412 <unlink>:[m
[32m+[m[32m 412:	b8 12 00 00 00       	mov    $0x12,%eax[m
  417:	cd 40                	int    $0x40[m
  419:	c3                   	ret    [m
 [m
[31m-0000041a <mkdir>:[m
[31m- 41a:	b8 14 00 00 00       	mov    $0x14,%eax[m
[32m+[m[32m0000041a <fstat>:[m
[32m+[m[32m 41a:	b8 08 00 00 00       	mov    $0x8,%eax[m
  41f:	cd 40                	int    $0x40[m
  421:	c3                   	ret    [m
 [m
[31m-00000422 <chdir>:[m
[31m- 422:	b8 09 00 00 00       	mov    $0x9,%eax[m
[32m+[m[32m00000422 <link>:[m
[32m+[m[32m 422:	b8 13 00 00 00       	mov    $0x13,%eax[m
  427:	cd 40                	int    $0x40[m
  429:	c3                   	ret    [m
 [m
[31m-0000042a <dup>:[m
[31m- 42a:	b8 0a 00 00 00       	mov    $0xa,%eax[m
[32m+[m[32m0000042a <mkdir>:[m
[32m+[m[32m 42a:	b8 14 00 00 00       	mov    $0x14,%eax[m
  42f:	cd 40                	int    $0x40[m
  431:	c3                   	ret    [m
 [m
[31m-00000432 <getpid>:[m
[31m- 432:	b8 0b 00 00 00       	mov    $0xb,%eax[m
[32m+[m[32m00000432 <chdir>:[m
[32m+[m[32m 432:	b8 09 00 00 00       	mov    $0x9,%eax[m
  437:	cd 40                	int    $0x40[m
  439:	c3                   	ret    [m
 [m
[31m-0000043a <sbrk>:[m
[31m- 43a:	b8 0c 00 00 00       	mov    $0xc,%eax[m
[32m+[m[32m0000043a <dup>:[m
[32m+[m[32m 43a:	b8 0a 00 00 00       	mov    $0xa,%eax[m
  43f:	cd 40                	int    $0x40[m
  441:	c3                   	ret    [m
 [m
[31m-00000442 <sleep>:[m
[31m- 442:	b8 0d 00 00 00       	mov    $0xd,%eax[m
[32m+[m[32m00000442 <getpid>:[m
[32m+[m[32m 442:	b8 0b 00 00 00       	mov    $0xb,%eax[m
  447:	cd 40                	int    $0x40[m
  449:	c3                   	ret    [m
 [m
[31m-0000044a <uptime>:[m
[31m- 44a:	b8 0e 00 00 00       	mov    $0xe,%eax[m
[32m+[m[32m0000044a <sbrk>:[m
[32m+[m[32m 44a:	b8 0c 00 00 00       	mov    $0xc,%eax[m
  44f:	cd 40                	int    $0x40[m
  451:	c3                   	ret    [m
[32m+[m
[32m+[m[32m00000452 <sleep>:[m
[32m+[m[32m 452:	b8 0d 00 00 00       	mov    $0xd,%eax[m
[32m+[m[32m 457:	cd 40                	int    $0x40[m
[32m+[m[32m 459:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m0000045a <uptime>:[m
[32m+[m[32m 45a:	b8 0e 00 00 00       	mov    $0xe,%eax[m
[32m+[m[32m 45f:	cd 40                	int    $0x40[m
[32m+[m[32m 461:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m00000462 <set>:[m
[32m+[m[32m 462:	b8 16 00 00 00       	mov    $0x16,%eax[m
[32m+[m[32m 467:	cd 40                	int    $0x40[m
[32m+[m[32m 469:	c3                   	ret[m[41m    [m
[1mdiff --git a/forktest.c b/forktest.c[m
[1mindex 6d219be..770e5a7 100644[m
[1m--- a/forktest.c[m
[1m+++ b/forktest.c[m
[36m@@ -25,24 +25,24 @@[m [mforktest(void)[m
     if(pid < 0)[m
       break;[m
     if(pid == 0)[m
[31m-      exit(11);[m
[32m+[m[32m      exit(0);[m
   }[m
 [m
   if(n == N){[m
     printf(1, "fork claimed to work N times!\n", N);[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
 [m
   for(; n > 0; n--){[m
[31m-    if(wait() < 0){[m
[32m+[m[32m    if(wait(0) < 0){[m
       printf(1, "wait stopped early\n");[m
[31m-      exit(11);[m
[32m+[m[32m      exit(0);[m
     }[m
   }[m
 [m
[31m-  if(wait() != -1){[m
[32m+[m[32m  if(wait(0) != -1){[m
     printf(1, "wait got too many\n");[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
 [m
   printf(1, "fork test OK\n");[m
[36m@@ -52,5 +52,5 @@[m [mint[m
 main(void)[m
 {[m
   forktest();[m
[31m-  exit(11);[m
[32m+[m[32m  exit(0);[m
 }[m
[1mdiff --git a/forktest.o b/forktest.o[m
[1mindex d4a0e93..f0b605b 100644[m
Binary files a/forktest.o and b/forktest.o differ
[1mdiff --git a/fs.img b/fs.img[m
[1mindex ef152e6..2c63229 100644[m
Binary files a/fs.img and b/fs.img differ
[1mdiff --git a/fs.o b/fs.o[m
[1mindex 86dbf86..f87693b 100644[m
Binary files a/fs.o and b/fs.o differ
[1mdiff --git a/grep.asm b/grep.asm[m
[1mindex 49843ad..2ac0567 100644[m
[1m--- a/grep.asm[m
[1m+++ b/grep.asm[m
[36m@@ -41,7 +41,7 @@[m [mmain(int argc, char *argv[])[m
   if(argc <= 1){[m
   1f:	0f 8e 8d 00 00 00    	jle    b2 <main+0xb2>[m
     printf(2, "usage: grep pattern [file ...]\n");[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
   pattern = argv[1];[m
   25:	8b 43 04             	mov    0x4(%ebx),%eax[m
[36m@@ -53,7 +53,7 @@[m [mmain(int argc, char *argv[])[m
 [m
   if(argc <= 1){[m
     printf(2, "usage: grep pattern [file ...]\n");[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
   pattern = argv[1];[m
   34:	89 45 e0             	mov    %eax,-0x20(%ebp)[m
[36m@@ -62,7 +62,7 @@[m [mmain(int argc, char *argv[])[m
   37:	74 63                	je     9c <main+0x9c>[m
   39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
     grep(pattern, 0);[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
 [m
   for(i = 2; i < argc; i++){[m
[36m@@ -76,13 +76,13 @@[m [mmain(int argc, char *argv[])[m
   51:	89 c7                	mov    %eax,%edi[m
   53:	78 2c                	js     81 <main+0x81>[m
       printf(1, "grep: cannot open %s\n", argv[i]);[m
[31m-      exit(11);[m
[32m+[m[32m      exit(0);[m
     }[m
     grep(pattern, fd);[m
   55:	83 ec 08             	sub    $0x8,%esp[m
   if(argc <= 2){[m
     grep(pattern, 0);[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
 [m
   for(i = 2; i < argc; i++){[m
[36m@@ -90,7 +90,7 @@[m [mmain(int argc, char *argv[])[m
   5b:	83 c3 04             	add    $0x4,%ebx[m
     if((fd = open(argv[i], 0)) < 0){[m
       printf(1, "grep: cannot open %s\n", argv[i]);[m
[31m-      exit(11);[m
[32m+[m[32m      exit(0);[m
     }[m
     grep(pattern, fd);[m
   5e:	50                   	push   %eax[m
[36m@@ -101,23 +101,23 @@[m [mmain(int argc, char *argv[])[m
   6a:	e8 3b 05 00 00       	call   5aa <close>[m
   if(argc <= 2){[m
     grep(pattern, 0);[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
 [m
   for(i = 2; i < argc; i++){[m
   6f:	83 c4 10             	add    $0x10,%esp[m
   72:	39 75 e4             	cmp    %esi,-0x1c(%ebp)[m
   75:	7f c9                	jg     40 <main+0x40>[m
[31m-      exit(11);[m
[32m+[m[32m      exit(0);[m
     }[m
     grep(pattern, fd);[m
     close(fd);[m
   }[m
[31m-  exit(11);[m
[32m+[m[32m  exit(0);[m
   77:	83 ec 0c             	sub    $0xc,%esp[m
[31m-  7a:	6a 0b                	push   $0xb[m
[32m+[m[32m  7a:	6a 00                	push   $0x0[m
   7c:	e8 01 05 00 00       	call   582 <exit>[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
 [m
   for(i = 2; i < argc; i++){[m
[36m@@ -128,10 +128,10 @@[m [mmain(int argc, char *argv[])[m
   84:	68 10 0a 00 00       	push   $0xa10[m
   89:	6a 01                	push   $0x1[m
   8b:	e8 40 06 00 00       	call   6d0 <printf>[m
[31m-      exit(11);[m
[31m-  90:	c7 04 24 0b 00 00 00 	movl   $0xb,(%esp)[m
[32m+[m[32m      exit(0);[m
[32m+[m[32m  90:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)[m
   97:	e8 e6 04 00 00       	call   582 <exit>[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
   pattern = argv[1];[m
 [m
[36m@@ -142,8 +142,8 @@[m [mmain(int argc, char *argv[])[m
   9e:	6a 00                	push   $0x0[m
   a0:	50                   	push   %eax[m
   a1:	e8 9a 01 00 00       	call   240 <grep>[m
[31m-    exit(11);[m
[31m-  a6:	c7 04 24 0b 00 00 00 	movl   $0xb,(%esp)[m
[32m+[m[32m    exit(0);[m
[32m+[m[32m  a6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)[m
   ad:	e8 d0 04 00 00       	call   582 <exit>[m
 {[m
   int fd, i;[m
[36m@@ -156,8 +156,8 @@[m [mmain(int argc, char *argv[])[m
   b4:	68 f0 09 00 00       	push   $0x9f0[m
   b9:	6a 02                	push   $0x2[m
   bb:	e8 10 06 00 00       	call   6d0 <printf>[m
[31m-    exit(11);[m
[31m-  c0:	c7 04 24 0b 00 00 00 	movl   $0xb,(%esp)[m
[32m+[m[32m    exit(0);[m
[32m+[m[32m  c0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)[m
   c7:	e8 b6 04 00 00       	call   582 <exit>[m
   cc:	66 90                	xchg   %ax,%ax[m
   ce:	66 90                	xchg   %ax,%ax[m
[36m@@ -608,11 +608,21 @@[m [mgrep(char *pattern, int fd)[m
  33e:	66 90                	xchg   %ax,%ax[m
 [m
 00000340 <strcpy>:[m
[32m+[m[32m#include "user.h"[m
[32m+[m[32m#include "x86.h"[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mstrcpy(char *s, char *t)[m
[32m+[m[32m{[m
  340:	55                   	push   %ebp[m
  341:	89 e5                	mov    %esp,%ebp[m
  343:	53                   	push   %ebx[m
  344:	8b 45 08             	mov    0x8(%ebp),%eax[m
  347:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[32m+[m[32m  char *os;[m
[32m+[m
[32m+[m[32m  os = s;[m
[32m+[m[32m  while((*s++ = *t++) != 0)[m
  34a:	89 c2                	mov    %eax,%edx[m
  34c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
  350:	83 c1 01             	add    $0x1,%ecx[m
[36m@@ -621,6 +631,9 @@[m [mgrep(char *pattern, int fd)[m
  35a:	84 db                	test   %bl,%bl[m
  35c:	88 5a ff             	mov    %bl,-0x1(%edx)[m
  35f:	75 ef                	jne    350 <strcpy+0x10>[m
[32m+[m[32m    ;[m
[32m+[m[32m  return os;[m
[32m+[m[32m}[m
  361:	5b                   	pop    %ebx[m
  362:	5d                   	pop    %ebp[m
  363:	c3                   	ret    [m
[36m@@ -628,12 +641,17 @@[m [mgrep(char *pattern, int fd)[m
  36a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi[m
 [m
 00000370 <strcmp>:[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
  370:	55                   	push   %ebp[m
  371:	89 e5                	mov    %esp,%ebp[m
  373:	56                   	push   %esi[m
  374:	53                   	push   %ebx[m
  375:	8b 55 08             	mov    0x8(%ebp),%edx[m
  378:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[32m+[m[32m  while(*p && *p == *q)[m
  37b:	0f b6 02             	movzbl (%edx),%eax[m
  37e:	0f b6 19             	movzbl (%ecx),%ebx[m
  381:	84 c0                	test   %al,%al[m
[36m@@ -641,23 +659,49 @@[m [mgrep(char *pattern, int fd)[m
  385:	eb 29                	jmp    3b0 <strcmp+0x40>[m
  387:	89 f6                	mov    %esi,%esi[m
  389:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    p++, q++;[m
  390:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m  while(*p && *p == *q)[m
  393:	0f b6 02             	movzbl (%edx),%eax[m
[32m+[m[32m    p++, q++;[m
  396:	8d 71 01             	lea    0x1(%ecx),%esi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m  while(*p && *p == *q)[m
  399:	0f b6 59 01          	movzbl 0x1(%ecx),%ebx[m
  39d:	84 c0                	test   %al,%al[m
  39f:	74 0f                	je     3b0 <strcmp+0x40>[m
  3a1:	89 f1                	mov    %esi,%ecx[m
  3a3:	38 d8                	cmp    %bl,%al[m
  3a5:	74 e9                	je     390 <strcmp+0x20>[m
[32m+[m[32m    p++, q++;[m
[32m+[m[32m  return (uchar)*p - (uchar)*q;[m
  3a7:	29 d8                	sub    %ebx,%eax[m
[32m+[m[32m}[m
  3a9:	5b                   	pop    %ebx[m
  3aa:	5e                   	pop    %esi[m
  3ab:	5d                   	pop    %ebp[m
  3ac:	c3                   	ret    [m
  3ad:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m  while(*p && *p == *q)[m
  3b0:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m    p++, q++;[m
[32m+[m[32m  return (uchar)*p - (uchar)*q;[m
  3b2:	29 d8                	sub    %ebx,%eax[m
[32m+[m[32m}[m
  3b4:	5b                   	pop    %ebx[m
  3b5:	5e                   	pop    %esi[m
  3b6:	5d                   	pop    %ebp[m
[36m@@ -666,9 +710,16 @@[m [mgrep(char *pattern, int fd)[m
  3b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
 [m
 000003c0 <strlen>:[m
[32m+[m
[32m+[m[32muint[m
[32m+[m[32mstrlen(char *s)[m
[32m+[m[32m{[m
  3c0:	55                   	push   %ebp[m
  3c1:	89 e5                	mov    %esp,%ebp[m
  3c3:	8b 4d 08             	mov    0x8(%ebp),%ecx[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  for(n = 0; s[n]; n++)[m
  3c6:	80 39 00             	cmpb   $0x0,(%ecx)[m
  3c9:	74 12                	je     3dd <strlen+0x1d>[m
  3cb:	31 d2                	xor    %edx,%edx[m
[36m@@ -677,9 +728,21 @@[m [mgrep(char *pattern, int fd)[m
  3d3:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)[m
  3d7:	89 d0                	mov    %edx,%eax[m
  3d9:	75 f5                	jne    3d0 <strlen+0x10>[m
[32m+[m[32m    ;[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
  3db:	5d                   	pop    %ebp[m
  3dc:	c3                   	ret    [m
[32m+[m[32muint[m
[32m+[m[32mstrlen(char *s)[m
[32m+[m[32m{[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  for(n = 0; s[n]; n++)[m
  3dd:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m    ;[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
  3df:	5d                   	pop    %ebp[m
  3e0:	c3                   	ret    [m
  3e1:	eb 0d                	jmp    3f0 <memset>[m
[36m@@ -698,15 +761,28 @@[m [mgrep(char *pattern, int fd)[m
  3ef:	90                   	nop[m
 [m
 000003f0 <memset>:[m
[32m+[m
[32m+[m[32mvoid*[m
[32m+[m[32mmemset(void *dst, int c, uint n)[m
[32m+[m[32m{[m
  3f0:	55                   	push   %ebp[m
  3f1:	89 e5                	mov    %esp,%ebp[m
  3f3:	57                   	push   %edi[m
  3f4:	8b 55 08             	mov    0x8(%ebp),%edx[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32mstosb(void *addr, int data, int cnt)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("cld; rep stosb" :[m
  3f7:	8b 4d 10             	mov    0x10(%ebp),%ecx[m
  3fa:	8b 45 0c             	mov    0xc(%ebp),%eax[m
  3fd:	89 d7                	mov    %edx,%edi[m
  3ff:	fc                   	cld    [m
  400:	f3 aa                	rep stos %al,%es:(%edi)[m
[32m+[m[32m  stosb(dst, c, n);[m
[32m+[m[32m  return dst;[m
[32m+[m[32m}[m
  402:	89 d0                	mov    %edx,%eax[m
  404:	5f                   	pop    %edi[m
  405:	5d                   	pop    %ebp[m
[36m@@ -715,14 +791,20 @@[m [mgrep(char *pattern, int fd)[m
  409:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
 00000410 <strchr>:[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mstrchr(const char *s, char c)[m
[32m+[m[32m{[m
  410:	55                   	push   %ebp[m
  411:	89 e5                	mov    %esp,%ebp[m
  413:	53                   	push   %ebx[m
  414:	8b 45 08             	mov    0x8(%ebp),%eax[m
  417:	8b 5d 0c             	mov    0xc(%ebp),%ebx[m
[32m+[m[32m  for(; *s; s++)[m
  41a:	0f b6 10             	movzbl (%eax),%edx[m
  41d:	84 d2                	test   %dl,%dl[m
  41f:	74 1d                	je     43e <strchr+0x2e>[m
[32m+[m[32m    if(*s == c)[m
  421:	38 d3                	cmp    %dl,%bl[m
  423:	89 d9                	mov    %ebx,%ecx[m
  425:	75 0d                	jne    434 <strchr+0x24>[m
[36m@@ -730,11 +812,21 @@[m [mgrep(char *pattern, int fd)[m
  429:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
  430:	38 ca                	cmp    %cl,%dl[m
  432:	74 0c                	je     440 <strchr+0x30>[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mstrchr(const char *s, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  for(; *s; s++)[m
  434:	83 c0 01             	add    $0x1,%eax[m
  437:	0f b6 10             	movzbl (%eax),%edx[m
  43a:	84 d2                	test   %dl,%dl[m
  43c:	75 f2                	jne    430 <strchr+0x20>[m
[32m+[m[32m    if(*s == c)[m
[32m+[m[32m      return (char*)s;[m
[32m+[m[32m  return 0;[m
  43e:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m}[m
  440:	5b                   	pop    %ebx[m
  441:	5d                   	pop    %ebp[m
  442:	c3                   	ret    [m
[36m@@ -742,45 +834,110 @@[m [mgrep(char *pattern, int fd)[m
  449:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
 00000450 <gets>:[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
  450:	55                   	push   %ebp[m
  451:	89 e5                	mov    %esp,%ebp[m
  453:	57                   	push   %edi[m
  454:	56                   	push   %esi[m
  455:	53                   	push   %ebx[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
  456:	31 f6                	xor    %esi,%esi[m
[32m+[m[32m    cc = read(0, &c, 1);[m
  458:	8d 7d e7             	lea    -0x19(%ebp),%edi[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
  45b:	83 ec 1c             	sub    $0x1c,%esp[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
  45e:	eb 29                	jmp    489 <gets+0x39>[m
[32m+[m[32m    cc = read(0, &c, 1);[m
  460:	83 ec 04             	sub    $0x4,%esp[m
  463:	6a 01                	push   $0x1[m
  465:	57                   	push   %edi[m
  466:	6a 00                	push   $0x0[m
  468:	e8 2d 01 00 00       	call   59a <read>[m
[32m+[m[32m    if(cc < 1)[m
  46d:	83 c4 10             	add    $0x10,%esp[m
  470:	85 c0                	test   %eax,%eax[m
  472:	7e 1d                	jle    491 <gets+0x41>[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
  474:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax[m
  478:	8b 55 08             	mov    0x8(%ebp),%edx[m
  47b:	89 de                	mov    %ebx,%esi[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
  47d:	3c 0a                	cmp    $0xa,%al[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
[32m+[m[32m    cc = read(0, &c, 1);[m
[32m+[m[32m    if(cc < 1)[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
  47f:	88 44 1a ff          	mov    %al,-0x1(%edx,%ebx,1)[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
  483:	74 1b                	je     4a0 <gets+0x50>[m
  485:	3c 0d                	cmp    $0xd,%al[m
  487:	74 17                	je     4a0 <gets+0x50>[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
  489:	8d 5e 01             	lea    0x1(%esi),%ebx[m
  48c:	3b 5d 0c             	cmp    0xc(%ebp),%ebx[m
  48f:	7c cf                	jl     460 <gets+0x10>[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m[32m  buf[i] = '\0';[m
  491:	8b 45 08             	mov    0x8(%ebp),%eax[m
  494:	c6 04 30 00          	movb   $0x0,(%eax,%esi,1)[m
[32m+[m[32m  return buf;[m
[32m+[m[32m}[m
  498:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
  49b:	5b                   	pop    %ebx[m
  49c:	5e                   	pop    %esi[m
  49d:	5f                   	pop    %edi[m
  49e:	5d                   	pop    %ebp[m
  49f:	c3                   	ret    [m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m[32m  buf[i] = '\0';[m
  4a0:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
  4a3:	89 de                	mov    %ebx,%esi[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m[32m  buf[i] = '\0';[m
  4a5:	c6 04 30 00          	movb   $0x0,(%eax,%esi,1)[m
[32m+[m[32m  return buf;[m
[32m+[m[32m}[m
  4a9:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
  4ac:	5b                   	pop    %ebx[m
  4ad:	5e                   	pop    %esi[m
[36m@@ -803,43 +960,73 @@[m [mgrep(char *pattern, int fd)[m
  4bf:	90                   	nop[m
 [m
 000004c0 <stat>:[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstat(char *n, struct stat *st)[m
[32m+[m[32m{[m
  4c0:	55                   	push   %ebp[m
  4c1:	89 e5                	mov    %esp,%ebp[m
  4c3:	56                   	push   %esi[m
  4c4:	53                   	push   %ebx[m
[32m+[m[32m  int fd;[m
[32m+[m[32m  int r;[m
[32m+[m
[32m+[m[32m  fd = open(n, O_RDONLY);[m
  4c5:	83 ec 08             	sub    $0x8,%esp[m
  4c8:	6a 00                	push   $0x0[m
  4ca:	ff 75 08             	pushl  0x8(%ebp)[m
  4cd:	e8 f0 00 00 00       	call   5c2 <open>[m
[32m+[m[32m  if(fd < 0)[m
  4d2:	83 c4 10             	add    $0x10,%esp[m
  4d5:	85 c0                	test   %eax,%eax[m
  4d7:	78 27                	js     500 <stat+0x40>[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  r = fstat(fd, st);[m
  4d9:	83 ec 08             	sub    $0x8,%esp[m
  4dc:	ff 75 0c             	pushl  0xc(%ebp)[m
  4df:	89 c3                	mov    %eax,%ebx[m
  4e1:	50                   	push   %eax[m
  4e2:	e8 f3 00 00 00       	call   5da <fstat>[m
  4e7:	89 c6                	mov    %eax,%esi[m
[32m+[m[32m  close(fd);[m
  4e9:	89 1c 24             	mov    %ebx,(%esp)[m
  4ec:	e8 b9 00 00 00       	call   5aa <close>[m
[32m+[m[32m  return r;[m
  4f1:	83 c4 10             	add    $0x10,%esp[m
  4f4:	89 f0                	mov    %esi,%eax[m
[32m+[m[32m}[m
  4f6:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
  4f9:	5b                   	pop    %ebx[m
  4fa:	5e                   	pop    %esi[m
  4fb:	5d                   	pop    %ebp[m
  4fc:	c3                   	ret    [m
  4fd:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m  int fd;[m
[32m+[m[32m  int r;[m
[32m+[m
[32m+[m[32m  fd = open(n, O_RDONLY);[m
[32m+[m[32m  if(fd < 0)[m
[32m+[m[32m    return -1;[m
  500:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
  505:	eb ef                	jmp    4f6 <stat+0x36>[m
  507:	89 f6                	mov    %esi,%esi[m
  509:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
 00000510 <atoi>:[m
[32m+[m[32m  return r;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32matoi(const char *s)[m
[32m+[m[32m{[m
  510:	55                   	push   %ebp[m
  511:	89 e5                	mov    %esp,%ebp[m
  513:	53                   	push   %ebx[m
  514:	8b 4d 08             	mov    0x8(%ebp),%ecx[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  n = 0;[m
[32m+[m[32m  while('0' <= *s && *s <= '9')[m
  517:	0f be 11             	movsbl (%ecx),%edx[m
  51a:	8d 42 d0             	lea    -0x30(%edx),%eax[m
  51d:	3c 09                	cmp    $0x9,%al[m
[36m@@ -847,13 +1034,23 @@[m [mgrep(char *pattern, int fd)[m
  524:	77 1f                	ja     545 <atoi+0x35>[m
  526:	8d 76 00             	lea    0x0(%esi),%esi[m
  529:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    n = n*10 + *s++ - '0';[m
  530:	8d 04 80             	lea    (%eax,%eax,4),%eax[m
  533:	83 c1 01             	add    $0x1,%ecx[m
  536:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax[m
[32m+[m[32matoi(const char *s)[m
[32m+[m[32m{[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  n = 0;[m
[32m+[m[32m  while('0' <= *s && *s <= '9')[m
  53a:	0f be 11             	movsbl (%ecx),%edx[m
  53d:	8d 5a d0             	lea    -0x30(%edx),%ebx[m
  540:	80 fb 09             	cmp    $0x9,%bl[m
  543:	76 eb                	jbe    530 <atoi+0x20>[m
[32m+[m[32m    n = n*10 + *s++ - '0';[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
  545:	5b                   	pop    %ebx[m
  546:	5d                   	pop    %ebp[m
  547:	c3                   	ret    [m
[36m@@ -861,6 +1058,10 @@[m [mgrep(char *pattern, int fd)[m
  549:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
 [m
 00000550 <memmove>:[m
[32m+[m
[32m+[m[32mvoid*[m
[32m+[m[32mmemmove(void *vdst, void *vsrc, int n)[m
[32m+[m[32m{[m
  550:	55                   	push   %ebp[m
  551:	89 e5                	mov    %esp,%ebp[m
  553:	56                   	push   %esi[m
[36m@@ -868,15 +1069,30 @@[m [mgrep(char *pattern, int fd)[m
  555:	8b 5d 10             	mov    0x10(%ebp),%ebx[m
  558:	8b 45 08             	mov    0x8(%ebp),%eax[m
  55b:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[32m+[m[32m  char *dst, *src;[m
[32m+[m
[32m+[m[32m  dst = vdst;[m
[32m+[m[32m  src = vsrc;[m
[32m+[m[32m  while(n-- > 0)[m
  55e:	85 db                	test   %ebx,%ebx[m
  560:	7e 14                	jle    576 <memmove+0x26>[m
  562:	31 d2                	xor    %edx,%edx[m
  564:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    *dst++ = *src++;[m
  568:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx[m
  56c:	88 0c 10             	mov    %cl,(%eax,%edx,1)[m
  56f:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m{[m
[32m+[m[32m  char *dst, *src;[m
[32m+[m
[32m+[m[32m  dst = vdst;[m
[32m+[m[32m  src = vsrc;[m
[32m+[m[32m  while(n-- > 0)[m
  572:	39 da                	cmp    %ebx,%edx[m
  574:	75 f2                	jne    568 <memmove+0x18>[m
[32m+[m[32m    *dst++ = *src++;[m
[32m+[m[32m  return vdst;[m
[32m+[m[32m}[m
  576:	5b                   	pop    %ebx[m
  577:	5e                   	pop    %esi[m
  578:	5d                   	pop    %ebp[m
[36m@@ -986,15 +1202,22 @@[m [mgrep(char *pattern, int fd)[m
  61a:	b8 0e 00 00 00       	mov    $0xe,%eax[m
  61f:	cd 40                	int    $0x40[m
  621:	c3                   	ret    [m
[31m- 622:	66 90                	xchg   %ax,%ax[m
[31m- 624:	66 90                	xchg   %ax,%ax[m
[31m- 626:	66 90                	xchg   %ax,%ax[m
[31m- 628:	66 90                	xchg   %ax,%ax[m
[32m+[m
[32m+[m[32m00000622 <set>:[m
[32m+[m[32m 622:	b8 16 00 00 00       	mov    $0x16,%eax[m
[32m+[m[32m 627:	cd 40                	int    $0x40[m
[32m+[m[32m 629:	c3                   	ret[m[41m    [m
  62a:	66 90                	xchg   %ax,%ax[m
  62c:	66 90                	xchg   %ax,%ax[m
  62e:	66 90                	xchg   %ax,%ax[m
 [m
 00000630 <printint>:[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mprintint(int fd, int xx, int base, int sgn)[m
[32m+[m[32m{[m
  630:	55                   	push   %ebp[m
  631:	89 e5                	mov    %esp,%ebp[m
  633:	57                   	push   %edi[m
[36m@@ -1002,6 +1225,12 @@[m [mgrep(char *pattern, int fd)[m
  635:	53                   	push   %ebx[m
  636:	89 c6                	mov    %eax,%esi[m
  638:	83 ec 3c             	sub    $0x3c,%esp[m
[32m+[m[32m  char buf[16];[m
[32m+[m[32m  int i, neg;[m
[32m+[m[32m  uint x;[m
[32m+[m
[32m+[m[32m  neg = 0;[m
[32m+[m[32m  if(sgn && xx < 0){[m
  63b:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
  63e:	85 db                	test   %ebx,%ebx[m
  640:	74 7e                	je     6c0 <printint+0x90>[m
[36m@@ -1009,32 +1238,64 @@[m [mgrep(char *pattern, int fd)[m
  644:	c1 e8 1f             	shr    $0x1f,%eax[m
  647:	84 c0                	test   %al,%al[m
  649:	74 75                	je     6c0 <printint+0x90>[m
[32m+[m[32m    neg = 1;[m
[32m+[m[32m    x = -xx;[m
  64b:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m  int i, neg;[m
[32m+[m[32m  uint x;[m
[32m+[m
[32m+[m[32m  neg = 0;[m
[32m+[m[32m  if(sgn && xx < 0){[m
[32m+[m[32m    neg = 1;[m
  64d:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)[m
[32m+[m[32m    x = -xx;[m
  654:	f7 d8                	neg    %eax[m
  656:	89 75 c0             	mov    %esi,-0x40(%ebp)[m
[32m+[m[32m  } else {[m
[32m+[m[32m    x = xx;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  i = 0;[m
  659:	31 ff                	xor    %edi,%edi[m
  65b:	8d 5d d7             	lea    -0x29(%ebp),%ebx[m
  65e:	89 ce                	mov    %ecx,%esi[m
  660:	eb 08                	jmp    66a <printint+0x3a>[m
  662:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m  do{[m
[32m+[m[32m    buf[i++] = digits[x % base];[m
  668:	89 cf                	mov    %ecx,%edi[m
  66a:	31 d2                	xor    %edx,%edx[m
  66c:	8d 4f 01             	lea    0x1(%edi),%ecx[m
  66f:	f7 f6                	div    %esi[m
  671:	0f b6 92 30 0a 00 00 	movzbl 0xa30(%edx),%edx[m
[32m+[m[32m  }while((x /= base) != 0);[m
  678:	85 c0                	test   %eax,%eax[m
[32m+[m[32m    x = xx;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  i = 0;[m
[32m+[m[32m  do{[m
[32m+[m[32m    buf[i++] = digits[x % base];[m
  67a:	88 14 0b             	mov    %dl,(%ebx,%ecx,1)[m
[32m+[m[32m  }while((x /= base) != 0);[m
  67d:	75 e9                	jne    668 <printint+0x38>[m
[32m+[m[32m  if(neg)[m
  67f:	8b 45 c4             	mov    -0x3c(%ebp),%eax[m
  682:	8b 75 c0             	mov    -0x40(%ebp),%esi[m
  685:	85 c0                	test   %eax,%eax[m
  687:	74 08                	je     691 <printint+0x61>[m
[32m+[m[32m    buf[i++] = '-';[m
  689:	c6 44 0d d8 2d       	movb   $0x2d,-0x28(%ebp,%ecx,1)[m
  68e:	8d 4f 02             	lea    0x2(%edi),%ecx[m
  691:	8d 7c 0d d7          	lea    -0x29(%ebp,%ecx,1),%edi[m
  695:	8d 76 00             	lea    0x0(%esi),%esi[m
  698:	0f b6 07             	movzbl (%edi),%eax[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  69b:	83 ec 04             	sub    $0x4,%esp[m
  69e:	83 ef 01             	sub    $0x1,%edi[m
  6a1:	6a 01                	push   $0x1[m
[36m@@ -1042,9 +1303,17 @@[m [mgrep(char *pattern, int fd)[m
  6a4:	56                   	push   %esi[m
  6a5:	88 45 d7             	mov    %al,-0x29(%ebp)[m
  6a8:	e8 f5 fe ff ff       	call   5a2 <write>[m
[32m+[m[32m    buf[i++] = digits[x % base];[m
[32m+[m[32m  }while((x /= base) != 0);[m
[32m+[m[32m  if(neg)[m
[32m+[m[32m    buf[i++] = '-';[m
[32m+[m
[32m+[m[32m  while(--i >= 0)[m
  6ad:	83 c4 10             	add    $0x10,%esp[m
  6b0:	39 df                	cmp    %ebx,%edi[m
  6b2:	75 e4                	jne    698 <printint+0x68>[m
[32m+[m[32m    putc(fd, buf[i]);[m
[32m+[m[32m}[m
  6b4:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
  6b7:	5b                   	pop    %ebx[m
  6b8:	5e                   	pop    %esi[m
[36m@@ -1052,22 +1321,70 @@[m [mgrep(char *pattern, int fd)[m
  6ba:	5d                   	pop    %ebp[m
  6bb:	c3                   	ret    [m
  6bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  neg = 0;[m
[32m+[m[32m  if(sgn && xx < 0){[m
[32m+[m[32m    neg = 1;[m
[32m+[m[32m    x = -xx;[m
[32m+[m[32m  } else {[m
[32m+[m[32m    x = xx;[m
  6c0:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m  static char digits[] = "0123456789ABCDEF";[m
[32m+[m[32m  char buf[16];[m
[32m+[m[32m  int i, neg;[m
[32m+[m[32m  uint x;[m
[32m+[m
[32m+[m[32m  neg = 0;[m
  6c2:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)[m
  6c9:	eb 8b                	jmp    656 <printint+0x26>[m
  6cb:	90                   	nop[m
  6cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
 [m
 000006d0 <printf>:[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Print to the given fd. Only understands %d, %x, %p, %s.[m
[32m+[m[32mvoid[m
[32m+[m[32mprintf(int fd, char *fmt, ...)[m
[32m+[m[32m{[m
  6d0:	55                   	push   %ebp[m
  6d1:	89 e5                	mov    %esp,%ebp[m
  6d3:	57                   	push   %edi[m
  6d4:	56                   	push   %esi[m
  6d5:	53                   	push   %ebx[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
  6d6:	8d 45 10             	lea    0x10(%ebp),%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Print to the given fd. Only understands %d, %x, %p, %s.[m
[32m+[m[32mvoid[m
[32m+[m[32mprintf(int fd, char *fmt, ...)[m
[32m+[m[32m{[m
  6d9:	83 ec 2c             	sub    $0x2c,%esp[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
  6dc:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Print to the given fd. Only understands %d, %x, %p, %s.[m
[32m+[m[32mvoid[m
[32m+[m[32mprintf(int fd, char *fmt, ...)[m
[32m+[m[32m{[m
  6df:	8b 7d 08             	mov    0x8(%ebp),%edi[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
  6e2:	89 45 d0             	mov    %eax,-0x30(%ebp)[m
  6e5:	0f b6 1e             	movzbl (%esi),%ebx[m
  6e8:	83 c6 01             	add    $0x1,%esi[m
[36m@@ -1077,10 +1394,26 @@[m [mgrep(char *pattern, int fd)[m
  6f5:	eb 39                	jmp    730 <printf+0x60>[m
  6f7:	89 f6                	mov    %esi,%esi[m
  6f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    c = fmt[i] & 0xff;[m
[32m+[m[32m    if(state == 0){[m
[32m+[m[32m      if(c == '%'){[m
  700:	83 f8 25             	cmp    $0x25,%eax[m
  703:	89 55 d4             	mov    %edx,-0x2c(%ebp)[m
[32m+[m[32m        state = '%';[m
  706:	ba 25 00 00 00       	mov    $0x25,%edx[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m    c = fmt[i] & 0xff;[m
[32m+[m[32m    if(state == 0){[m
[32m+[m[32m      if(c == '%'){[m
  70b:	74 18                	je     725 <printf+0x55>[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  70d:	8d 45 e2             	lea    -0x1e(%ebp),%eax[m
  710:	83 ec 04             	sub    $0x4,%esp[m
  713:	88 5d e2             	mov    %bl,-0x1e(%ebp)[m
[36m@@ -1091,26 +1424,69 @@[m [mgrep(char *pattern, int fd)[m
  71f:	8b 55 d4             	mov    -0x2c(%ebp),%edx[m
  722:	83 c4 10             	add    $0x10,%esp[m
  725:	83 c6 01             	add    $0x1,%esi[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
  728:	0f b6 5e ff          	movzbl -0x1(%esi),%ebx[m
  72c:	84 db                	test   %bl,%bl[m
  72e:	74 73                	je     7a3 <printf+0xd3>[m
[32m+[m[32m    c = fmt[i] & 0xff;[m
[32m+[m[32m    if(state == 0){[m
  730:	85 d2                	test   %edx,%edx[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m    c = fmt[i] & 0xff;[m
  732:	0f be cb             	movsbl %bl,%ecx[m
  735:	0f b6 c3             	movzbl %bl,%eax[m
[32m+[m[32m    if(state == 0){[m
  738:	74 c6                	je     700 <printf+0x30>[m
[32m+[m[32m      if(c == '%'){[m
[32m+[m[32m        state = '%';[m
[32m+[m[32m      } else {[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m    } else if(state == '%'){[m
  73a:	83 fa 25             	cmp    $0x25,%edx[m
  73d:	75 e6                	jne    725 <printf+0x55>[m
[32m+[m[32m      if(c == 'd'){[m
  73f:	83 f8 64             	cmp    $0x64,%eax[m
  742:	0f 84 f8 00 00 00    	je     840 <printf+0x170>[m
[32m+[m[32m        printint(fd, *ap, 10, 1);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == 'x' || c == 'p'){[m
  748:	81 e1 f7 00 00 00    	and    $0xf7,%ecx[m
  74e:	83 f9 70             	cmp    $0x70,%ecx[m
  751:	74 5d                	je     7b0 <printf+0xe0>[m
[32m+[m[32m        printint(fd, *ap, 16, 0);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == 's'){[m
  753:	83 f8 73             	cmp    $0x73,%eax[m
  756:	0f 84 84 00 00 00    	je     7e0 <printf+0x110>[m
[32m+[m[32m          s = "(null)";[m
[32m+[m[32m        while(*s != 0){[m
[32m+[m[32m          putc(fd, *s);[m
[32m+[m[32m          s++;[m
[32m+[m[32m        }[m
[32m+[m[32m      } else if(c == 'c'){[m
  75c:	83 f8 63             	cmp    $0x63,%eax[m
  75f:	0f 84 ea 00 00 00    	je     84f <printf+0x17f>[m
[32m+[m[32m        putc(fd, *ap);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == '%'){[m
  765:	83 f8 25             	cmp    $0x25,%eax[m
  768:	0f 84 c2 00 00 00    	je     830 <printf+0x160>[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  76e:	8d 45 e7             	lea    -0x19(%ebp),%eax[m
  771:	83 ec 04             	sub    $0x4,%esp[m
  774:	c6 45 e7 25          	movb   $0x25,-0x19(%ebp)[m
[36m@@ -1126,11 +1502,41 @@[m [mgrep(char *pattern, int fd)[m
  78d:	57                   	push   %edi[m
  78e:	83 c6 01             	add    $0x1,%esi[m
  791:	e8 0c fe ff ff       	call   5a2 <write>[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
  796:	0f b6 5e ff          	movzbl -0x1(%esi),%ebx[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  79a:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // Unknown % sequence.  Print it to draw attention.[m
[32m+[m[32m        putc(fd, '%');[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m      state = 0;[m
  79d:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
  79f:	84 db                	test   %bl,%bl[m
  7a1:	75 8d                	jne    730 <printf+0x60>[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m      state = 0;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
  7a3:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
  7a6:	5b                   	pop    %ebx[m
  7a7:	5e                   	pop    %esi[m
[36m@@ -1139,6 +1545,12 @@[m [mgrep(char *pattern, int fd)[m
  7aa:	c3                   	ret    [m
  7ab:	90                   	nop[m
  7ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    } else if(state == '%'){[m
[32m+[m[32m      if(c == 'd'){[m
[32m+[m[32m        printint(fd, *ap, 10, 1);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == 'x' || c == 'p'){[m
[32m+[m[32m        printint(fd, *ap, 16, 0);[m
  7b0:	83 ec 0c             	sub    $0xc,%esp[m
  7b3:	b9 10 00 00 00       	mov    $0x10,%ecx[m
  7b8:	6a 00                	push   $0x0[m
[36m@@ -1146,51 +1558,118 @@[m [mgrep(char *pattern, int fd)[m
  7bd:	89 f8                	mov    %edi,%eax[m
  7bf:	8b 13                	mov    (%ebx),%edx[m
  7c1:	e8 6a fe ff ff       	call   630 <printint>[m
[32m+[m[32m        ap++;[m
  7c6:	89 d8                	mov    %ebx,%eax[m
  7c8:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // Unknown % sequence.  Print it to draw attention.[m
[32m+[m[32m        putc(fd, '%');[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m      state = 0;[m
  7cb:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m      if(c == 'd'){[m
[32m+[m[32m        printint(fd, *ap, 10, 1);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == 'x' || c == 'p'){[m
[32m+[m[32m        printint(fd, *ap, 16, 0);[m
[32m+[m[32m        ap++;[m
  7cd:	83 c0 04             	add    $0x4,%eax[m
  7d0:	89 45 d0             	mov    %eax,-0x30(%ebp)[m
  7d3:	e9 4d ff ff ff       	jmp    725 <printf+0x55>[m
  7d8:	90                   	nop[m
  7d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m      } else if(c == 's'){[m
[32m+[m[32m        s = (char*)*ap;[m
  7e0:	8b 45 d0             	mov    -0x30(%ebp),%eax[m
  7e3:	8b 18                	mov    (%eax),%ebx[m
[32m+[m[32m        ap++;[m
  7e5:	83 c0 04             	add    $0x4,%eax[m
  7e8:	89 45 d0             	mov    %eax,-0x30(%ebp)[m
[32m+[m[32m        if(s == 0)[m
[32m+[m[32m          s = "(null)";[m
  7eb:	b8 26 0a 00 00       	mov    $0xa26,%eax[m
  7f0:	85 db                	test   %ebx,%ebx[m
  7f2:	0f 44 d8             	cmove  %eax,%ebx[m
[32m+[m[32m        while(*s != 0){[m
  7f5:	0f b6 03             	movzbl (%ebx),%eax[m
  7f8:	84 c0                	test   %al,%al[m
  7fa:	74 23                	je     81f <printf+0x14f>[m
  7fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
  800:	88 45 e3             	mov    %al,-0x1d(%ebp)[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  803:	8d 45 e3             	lea    -0x1d(%ebp),%eax[m
  806:	83 ec 04             	sub    $0x4,%esp[m
  809:	6a 01                	push   $0x1[m
[32m+[m[32m        ap++;[m
[32m+[m[32m        if(s == 0)[m
[32m+[m[32m          s = "(null)";[m
[32m+[m[32m        while(*s != 0){[m
[32m+[m[32m          putc(fd, *s);[m
[32m+[m[32m          s++;[m
  80b:	83 c3 01             	add    $0x1,%ebx[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  80e:	50                   	push   %eax[m
  80f:	57                   	push   %edi[m
  810:	e8 8d fd ff ff       	call   5a2 <write>[m
[32m+[m[32m      } else if(c == 's'){[m
[32m+[m[32m        s = (char*)*ap;[m
[32m+[m[32m        ap++;[m
[32m+[m[32m        if(s == 0)[m
[32m+[m[32m          s = "(null)";[m
[32m+[m[32m        while(*s != 0){[m
  815:	0f b6 03             	movzbl (%ebx),%eax[m
  818:	83 c4 10             	add    $0x10,%esp[m
  81b:	84 c0                	test   %al,%al[m
  81d:	75 e1                	jne    800 <printf+0x130>[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // Unknown % sequence.  Print it to draw attention.[m
[32m+[m[32m        putc(fd, '%');[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m      state = 0;[m
  81f:	31 d2                	xor    %edx,%edx[m
  821:	e9 ff fe ff ff       	jmp    725 <printf+0x55>[m
  826:	8d 76 00             	lea    0x0(%esi),%esi[m
  829:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  830:	83 ec 04             	sub    $0x4,%esp[m
  833:	88 5d e5             	mov    %bl,-0x1b(%ebp)[m
  836:	8d 45 e5             	lea    -0x1b(%ebp),%eax[m
  839:	6a 01                	push   $0x1[m
  83b:	e9 4c ff ff ff       	jmp    78c <printf+0xbc>[m
[32m+[m[32m      } else {[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m    } else if(state == '%'){[m
[32m+[m[32m      if(c == 'd'){[m
[32m+[m[32m        printint(fd, *ap, 10, 1);[m
  840:	83 ec 0c             	sub    $0xc,%esp[m
  843:	b9 0a 00 00 00       	mov    $0xa,%ecx[m
  848:	6a 01                	push   $0x1[m
  84a:	e9 6b ff ff ff       	jmp    7ba <printf+0xea>[m
  84f:	8b 5d d0             	mov    -0x30(%ebp),%ebx[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
  852:	83 ec 04             	sub    $0x4,%esp[m
  855:	8b 03                	mov    (%ebx),%eax[m
  857:	6a 01                	push   $0x1[m
[36m@@ -1205,63 +1684,149 @@[m [mgrep(char *pattern, int fd)[m
  86f:	90                   	nop[m
 [m
 00000870 <free>:[m
[32m+[m[32mstatic Header base;[m
[32m+[m[32mstatic Header *freep;[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
  870:	55                   	push   %ebp[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
  871:	a1 c0 0d 00 00       	mov    0xdc0,%eax[m
[32m+[m[32mstatic Header base;[m
[32m+[m[32mstatic Header *freep;[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
  876:	89 e5                	mov    %esp,%ebp[m
  878:	57                   	push   %edi[m
  879:	56                   	push   %esi[m
  87a:	53                   	push   %ebx[m
  87b:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
  87e:	8b 10                	mov    (%eax),%edx[m
[32m+[m[32mvoid[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
  880:	8d 4b f8             	lea    -0x8(%ebx),%ecx[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
  883:	39 c8                	cmp    %ecx,%eax[m
  885:	73 19                	jae    8a0 <free+0x30>[m
  887:	89 f6                	mov    %esi,%esi[m
  889:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
  890:	39 d1                	cmp    %edx,%ecx[m
  892:	72 1c                	jb     8b0 <free+0x40>[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
  894:	39 d0                	cmp    %edx,%eax[m
  896:	73 18                	jae    8b0 <free+0x40>[m
[32m+[m[32mstatic Header base;[m
[32m+[m[32mstatic Header *freep;[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
  898:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
  89a:	39 c8                	cmp    %ecx,%eax[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
  89c:	8b 10                	mov    (%eax),%edx[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
  89e:	72 f0                	jb     890 <free+0x20>[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
  8a0:	39 d0                	cmp    %edx,%eax[m
  8a2:	72 f4                	jb     898 <free+0x28>[m
  8a4:	39 d1                	cmp    %edx,%ecx[m
  8a6:	73 f0                	jae    898 <free+0x28>[m
  8a8:	90                   	nop[m
  8a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m      break;[m
[32m+[m[32m  if(bp + bp->s.size == p->s.ptr){[m
  8b0:	8b 73 fc             	mov    -0x4(%ebx),%esi[m
  8b3:	8d 3c f1             	lea    (%ecx,%esi,8),%edi[m
  8b6:	39 d7                	cmp    %edx,%edi[m
  8b8:	74 19                	je     8d3 <free+0x63>[m
[32m+[m[32m    bp->s.size += p->s.ptr->s.size;[m
[32m+[m[32m    bp->s.ptr = p->s.ptr->s.ptr;[m
[32m+[m[32m  } else[m
[32m+[m[32m    bp->s.ptr = p->s.ptr;[m
  8ba:	89 53 f8             	mov    %edx,-0x8(%ebx)[m
[32m+[m[32m  if(p + p->s.size == bp){[m
  8bd:	8b 50 04             	mov    0x4(%eax),%edx[m
  8c0:	8d 34 d0             	lea    (%eax,%edx,8),%esi[m
  8c3:	39 f1                	cmp    %esi,%ecx[m
  8c5:	74 23                	je     8ea <free+0x7a>[m
[32m+[m[32m    p->s.size += bp->s.size;[m
[32m+[m[32m    p->s.ptr = bp->s.ptr;[m
[32m+[m[32m  } else[m
[32m+[m[32m    p->s.ptr = bp;[m
  8c7:	89 08                	mov    %ecx,(%eax)[m
[32m+[m[32m  freep = p;[m
  8c9:	a3 c0 0d 00 00       	mov    %eax,0xdc0[m
[32m+[m[32m}[m
  8ce:	5b                   	pop    %ebx[m
  8cf:	5e                   	pop    %esi[m
  8d0:	5f                   	pop    %edi[m
  8d1:	5d                   	pop    %ebp[m
  8d2:	c3                   	ret    [m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
[32m+[m[32m      break;[m
[32m+[m[32m  if(bp + bp->s.size == p->s.ptr){[m
[32m+[m[32m    bp->s.size += p->s.ptr->s.size;[m
  8d3:	03 72 04             	add    0x4(%edx),%esi[m
  8d6:	89 73 fc             	mov    %esi,-0x4(%ebx)[m
[32m+[m[32m    bp->s.ptr = p->s.ptr->s.ptr;[m
  8d9:	8b 10                	mov    (%eax),%edx[m
  8db:	8b 12                	mov    (%edx),%edx[m
  8dd:	89 53 f8             	mov    %edx,-0x8(%ebx)[m
[32m+[m[32m  } else[m
[32m+[m[32m    bp->s.ptr = p->s.ptr;[m
[32m+[m[32m  if(p + p->s.size == bp){[m
  8e0:	8b 50 04             	mov    0x4(%eax),%edx[m
  8e3:	8d 34 d0             	lea    (%eax,%edx,8),%esi[m
  8e6:	39 f1                	cmp    %esi,%ecx[m
  8e8:	75 dd                	jne    8c7 <free+0x57>[m
[32m+[m[32m    p->s.size += bp->s.size;[m
  8ea:	03 53 fc             	add    -0x4(%ebx),%edx[m
[32m+[m[32m    p->s.ptr = bp->s.ptr;[m
[32m+[m[32m  } else[m
[32m+[m[32m    p->s.ptr = bp;[m
[32m+[m[32m  freep = p;[m
  8ed:	a3 c0 0d 00 00       	mov    %eax,0xdc0[m
[32m+[m[32m    bp->s.size += p->s.ptr->s.size;[m
[32m+[m[32m    bp->s.ptr = p->s.ptr->s.ptr;[m
[32m+[m[32m  } else[m
[32m+[m[32m    bp->s.ptr = p->s.ptr;[m
[32m+[m[32m  if(p + p->s.size == bp){[m
[32m+[m[32m    p->s.size += bp->s.size;[m
  8f2:	89 50 04             	mov    %edx,0x4(%eax)[m
[32m+[m[32m    p->s.ptr = bp->s.ptr;[m
  8f5:	8b 53 f8             	mov    -0x8(%ebx),%edx[m
  8f8:	89 10                	mov    %edx,(%eax)[m
[32m+[m[32m  } else[m
[32m+[m[32m    p->s.ptr = bp;[m
[32m+[m[32m  freep = p;[m
[32m+[m[32m}[m
  8fa:	5b                   	pop    %ebx[m
  8fb:	5e                   	pop    %esi[m
  8fc:	5f                   	pop    %edi[m
[36m@@ -1270,21 +1835,44 @@[m [mgrep(char *pattern, int fd)[m
  8ff:	90                   	nop[m
 [m
 00000900 <malloc>:[m
[32m+[m[32m  return freep;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid*[m
[32m+[m[32mmalloc(uint nbytes)[m
[32m+[m[32m{[m
  900:	55                   	push   %ebp[m
  901:	89 e5                	mov    %esp,%ebp[m
  903:	57                   	push   %edi[m
  904:	56                   	push   %esi[m
  905:	53                   	push   %ebx[m
  906:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m  Header *p, *prevp;[m
[32m+[m[32m  uint nunits;[m
[32m+[m
[32m+[m[32m  nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;[m
  909:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m  if((prevp = freep) == 0){[m
  90c:	8b 15 c0 0d 00 00    	mov    0xdc0,%edx[m
[32m+[m[32mmalloc(uint nbytes)[m
[32m+[m[32m{[m
[32m+[m[32m  Header *p, *prevp;[m
[32m+[m[32m  uint nunits;[m
[32m+[m
[32m+[m[32m  nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;[m
  912:	8d 78 07             	lea    0x7(%eax),%edi[m
  915:	c1 ef 03             	shr    $0x3,%edi[m
  918:	83 c7 01             	add    $0x1,%edi[m
[32m+[m[32m  if((prevp = freep) == 0){[m
  91b:	85 d2                	test   %edx,%edx[m
  91d:	0f 84 a3 00 00 00    	je     9c6 <malloc+0xc6>[m
  923:	8b 02                	mov    (%edx),%eax[m
  925:	8b 48 04             	mov    0x4(%eax),%ecx[m
[32m+[m[32m    base.s.ptr = freep = prevp = &base;[m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){[m
[32m+[m[32m    if(p->s.size >= nunits){[m
  928:	39 cf                	cmp    %ecx,%edi[m
  92a:	76 74                	jbe    9a0 <malloc+0xa0>[m
  92c:	81 ff 00 10 00 00    	cmp    $0x1000,%edi[m
[36m@@ -1296,52 +1884,117 @@[m [mgrep(char *pattern, int fd)[m
  94c:	0f 46 da             	cmovbe %edx,%ebx[m
  94f:	eb 10                	jmp    961 <malloc+0x61>[m
  951:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;[m
[32m+[m[32m  if((prevp = freep) == 0){[m
[32m+[m[32m    base.s.ptr = freep = prevp = &base;[m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){[m
  958:	8b 02                	mov    (%edx),%eax[m
[32m+[m[32m    if(p->s.size >= nunits){[m
  95a:	8b 48 04             	mov    0x4(%eax),%ecx[m
  95d:	39 cf                	cmp    %ecx,%edi[m
  95f:	76 3f                	jbe    9a0 <malloc+0xa0>[m
[32m+[m[32m        p->s.size = nunits;[m
[32m+[m[32m      }[m
[32m+[m[32m      freep = prevp;[m
[32m+[m[32m      return (void*)(p + 1);[m
[32m+[m[32m    }[m
[32m+[m[32m    if(p == freep)[m
  961:	39 05 c0 0d 00 00    	cmp    %eax,0xdc0[m
  967:	89 c2                	mov    %eax,%edx[m
  969:	75 ed                	jne    958 <malloc+0x58>[m
[32m+[m[32m  char *p;[m
[32m+[m[32m  Header *hp;[m
[32m+[m
[32m+[m[32m  if(nu < 4096)[m
[32m+[m[32m    nu = 4096;[m
[32m+[m[32m  p = sbrk(nu * sizeof(Header));[m
  96b:	83 ec 0c             	sub    $0xc,%esp[m
  96e:	53                   	push   %ebx[m
  96f:	e8 96 fc ff ff       	call   60a <sbrk>[m
[32m+[m[32m  if(p == (char*)-1)[m
  974:	83 c4 10             	add    $0x10,%esp[m
  977:	83 f8 ff             	cmp    $0xffffffff,%eax[m
  97a:	74 1c                	je     998 <malloc+0x98>[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  hp = (Header*)p;[m
[32m+[m[32m  hp->s.size = nu;[m
  97c:	89 70 04             	mov    %esi,0x4(%eax)[m
[32m+[m[32m  free((void*)(hp + 1));[m
  97f:	83 ec 0c             	sub    $0xc,%esp[m
  982:	83 c0 08             	add    $0x8,%eax[m
  985:	50                   	push   %eax[m
  986:	e8 e5 fe ff ff       	call   870 <free>[m
[32m+[m[32m  return freep;[m
  98b:	8b 15 c0 0d 00 00    	mov    0xdc0,%edx[m
[32m+[m[32m      }[m
[32m+[m[32m      freep = prevp;[m
[32m+[m[32m      return (void*)(p + 1);[m
[32m+[m[32m    }[m
[32m+[m[32m    if(p == freep)[m
[32m+[m[32m      if((p = morecore(nunits)) == 0)[m
  991:	83 c4 10             	add    $0x10,%esp[m
  994:	85 d2                	test   %edx,%edx[m
  996:	75 c0                	jne    958 <malloc+0x58>[m
[32m+[m[32m        return 0;[m
  998:	31 c0                	xor    %eax,%eax[m
  99a:	eb 1c                	jmp    9b8 <malloc+0xb8>[m
  99c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    base.s.ptr = freep = prevp = &base;[m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){[m
[32m+[m[32m    if(p->s.size >= nunits){[m
[32m+[m[32m      if(p->s.size == nunits)[m
  9a0:	39 cf                	cmp    %ecx,%edi[m
  9a2:	74 1c                	je     9c0 <malloc+0xc0>[m
[32m+[m[32m        prevp->s.ptr = p->s.ptr;[m
[32m+[m[32m      else {[m
[32m+[m[32m        p->s.size -= nunits;[m
  9a4:	29 f9                	sub    %edi,%ecx[m
  9a6:	89 48 04             	mov    %ecx,0x4(%eax)[m
[32m+[m[32m        p += p->s.size;[m
  9a9:	8d 04 c8             	lea    (%eax,%ecx,8),%eax[m
[32m+[m[32m        p->s.size = nunits;[m
  9ac:	89 78 04             	mov    %edi,0x4(%eax)[m
[32m+[m[32m      }[m
[32m+[m[32m      freep = prevp;[m
  9af:	89 15 c0 0d 00 00    	mov    %edx,0xdc0[m
[32m+[m[32m      return (void*)(p + 1);[m
  9b5:	83 c0 08             	add    $0x8,%eax[m
[32m+[m[32m    }[m
[32m+[m[32m    if(p == freep)[m
[32m+[m[32m      if((p = morecore(nunits)) == 0)[m
[32m+[m[32m        return 0;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
  9b8:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
  9bb:	5b                   	pop    %ebx[m
  9bc:	5e                   	pop    %esi[m
  9bd:	5f                   	pop    %edi[m
  9be:	5d                   	pop    %ebp[m
  9bf:	c3                   	ret    [m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){[m
[32m+[m[32m    if(p->s.size >= nunits){[m
[32m+[m[32m      if(p->s.size == nunits)[m
[32m+[m[32m        prevp->s.ptr = p->s.ptr;[m
  9c0:	8b 08                	mov    (%eax),%ecx[m
  9c2:	89 0a                	mov    %ecx,(%edx)[m
  9c4:	eb e9                	jmp    9af <malloc+0xaf>[m
[32m+[m[32m  Header *p, *prevp;[m
[32m+[m[32m  uint nunits;[m
[32m+[m
[32m+[m[32m  nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;[m
[32m+[m[32m  if((prevp = freep) == 0){[m
[32m+[m[32m    base.s.ptr = freep = prevp = &base;[m
  9c6:	c7 05 c0 0d 00 00 c4 	movl   $0xdc4,0xdc0[m
  9cd:	0d 00 00 [m
  9d0:	c7 05 c4 0d 00 00 c4 	movl   $0xdc4,0xdc4[m
  9d7:	0d 00 00 [m
[32m+[m[32m    base.s.size = 0;[m
  9da:	b8 c4 0d 00 00       	mov    $0xdc4,%eax[m
  9df:	c7 05 c8 0d 00 00 00 	movl   $0x0,0xdc8[m
  9e6:	00 00 00 [m
[1mdiff --git a/grep.c b/grep.c[m
[1mindex 720910c..1aa1081 100644[m
[1m--- a/grep.c[m
[1m+++ b/grep.c[m
[36m@@ -43,24 +43,24 @@[m [mmain(int argc, char *argv[])[m
 [m
   if(argc <= 1){[m
     printf(2, "usage: grep pattern [file ...]\n");[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
   pattern = argv[1];[m
 [m
   if(argc <= 2){[m
     grep(pattern, 0);[m
[31m-    exit(11);[m
[32m+[m[32m    exit(0);[m
   }[m
 [m
   for(i = 2; i < argc; i++){[m
     if((fd = open(argv[i], 0)) < 0){[m
       printf(1, "grep: cannot open %s\n", argv[i]);[m
[31m-      exit(11);[m
[32m+[m[32m      exit(0);[m
     }[m
     grep(pattern, fd);[m
     close(fd);[m
   }[m
[31m-  exit(11);[m
[32m+[m[32m  exit(0);[m
 }[m
 [m
 // Regexp matcher from Kernighan & Pike,[m
[1mdiff --git a/grep.o b/grep.o[m
[1mindex 07cf00a..c9d5d66 100644[m
Binary files a/grep.o and b/grep.o differ
[1mdiff --git a/grep.sym b/grep.sym[m
[1mindex 1f813b5..569d481 100644[m
[1m--- a/grep.sym[m
[1m+++ b/grep.sym[m
[36m@@ -14,7 +14,7 @@[m
 00000000 ulib.c[m
 00000000 printf.c[m
 00000630 printint[m
[31m-00000a30 digits.1107[m
[32m+[m[32m00000a30 digits.1110[m
 00000000 umalloc.c[m
 00000dc0 freep[m
 00000dc4 base[m
[36m@@ -56,6 +56,7 @@[m
 00000510 atoi[m
 000003c0 strlen[m
 000005c2 open[m
[32m+[m[32m00000622 set[m
 00000410 strchr[m
 000005ea mkdir[m
 000005aa close[m
[1mdiff --git a/ide.o b/ide.o[m
[1mindex aa249c3..3195f84 100644[m
Binary files a/ide.o and b/ide.o differ
[1mdiff --git a/init.asm b/init.asm[m
[1mindex e20e2c5..7d65196 100644[m
[1m--- a/init.asm[m
[1m+++ b/init.asm[m
[36m@@ -23,32 +23,32 @@[m [mmain(void)[m
   if(open("console", O_RDWR) < 0){[m
    f:	83 ec 08             	sub    $0x8,%esp[m
   12:	6a 02                	push   $0x2[m
[31m-  14:	68 b0 07 00 00       	push   $0x7b0[m
[31m-  19:	e8 64 03 00 00       	call   382 <open>[m
[32m+[m[32m  14:	68 c0 07 00 00       	push   $0x7c0[m
[32m+[m[32m  19:	e8 74 03 00 00       	call   392 <open>[m
   1e:	83 c4 10             	add    $0x10,%esp[m
   21:	85 c0                	test   %eax,%eax[m
[31m-  23:	0f 88 ad 00 00 00    	js     d6 <main+0xd6>[m
[32m+[m[32m  23:	0f 88 b5 00 00 00    	js     de <main+0xde>[m
     mknod("console", 1, 1);[m
     open("console", O_RDWR);[m
   }[m
   dup(0);  // stdout[m
   29:	83 ec 0c             	sub    $0xc,%esp[m
   2c:	6a 00                	push   $0x0[m
[31m-  2e:	e8 87 03 00 00       	call   3ba <dup>[m
[32m+[m[32m  2e:	e8 97 03 00 00       	call   3ca <dup>[m
   dup(0);  // stderr[m
   33:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)[m
[31m-  3a:	e8 7b 03 00 00       	call   3ba <dup>[m
[32m+[m[32m  3a:	e8 8b 03 00 00       	call   3ca <dup>[m
   3f:	83 c4 10             	add    $0x10,%esp[m
   42:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
 [m
   for(;;){[m
     printf(1, "init: starting sh\n");[m
   48:	83 ec 08             	sub    $0x8,%esp[m
[31m-  4b:	68 b8 07 00 00       	push   $0x7b8[m
[32m+[m[32m  4b:	68 c8 07 00 00       	push   $0x7c8[m
   50:	6a 01                	push   $0x1[m
[31m-  52:	e8 39 04 00 00       	call   490 <printf>[m
[32m+[m[32m  52:	e8 49 04 00 00       	call   4a0 <printf>[m
     pid = fork();[m
[31m-  57:	e8 de 02 00 00       	call   33a <fork>[m
[32m+[m[32m  57:	e8 ee 02 00 00       	call   34a <fork>[m
     if(pid < 0){[m
   5c:	83 c4 10             	add    $0x10,%esp[m
   5f:	85 c0                	test   %eax,%eax[m
[36m@@ -60,821 +60,1481 @@[m [mmain(void)[m
     pid = fork();[m
   61:	89 c3                	mov    %eax,%ebx[m
     if(pid < 0){[m
[31m-  63:	78 2c                	js     91 <main+0x91>[m
[32m+[m[32m  63:	78 34                	js     99 <main+0x99>[m
       printf(1, "init: fork failed\n");[m
[31m-      exit(11);[m
[32m+[m[32m      exit(0);[m
     }[m
     if(pid == 0){[m
[31m-  65:	74 44                	je     ab <main+0xab>[m
[32m+[m[32m  65:	74 4c                	je     b3 <main+0xb3>[m
   67:	89 f6                	mov    %esi,%esi[m
   69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
       exec("sh", argv);[m
       printf(1, "init: exec sh failed\n");[m
[31m-      exit(11);[m
[32m+[m[32m      exit(0);[m
     }[m
[31m-    while((wpid=wait()) >= 0 && wpid != pid)[m
[31m-  70:	e8 d5 02 00 00       	call   34a <wait>[m
[31m-  75:	85 c0                	test   %eax,%eax[m
[31m-  77:	78 cf                	js     48 <main+0x48>[m
[31m-  79:	39 c3                	cmp    %eax,%ebx[m
[31m-  7b:	74 cb                	je     48 <main+0x48>[m
[32m+[m[32m    while((wpid=wait(0)) >= 0 && wpid != pid)[m
[32m+[m[32m  70:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m  73:	6a 00                	push   $0x0[m
[32m+[m[32m  75:	e8 e0 02 00 00       	call   35a <wait>[m
[32m+[m[32m  7a:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m  7d:	85 c0                	test   %eax,%eax[m
[32m+[m[32m  7f:	78 c7                	js     48 <main+0x48>[m
[32m+[m[32m  81:	39 c3                	cmp    %eax,%ebx[m
[32m+[m[32m  83:	74 c3                	je     48 <main+0x48>[m
       printf(1, "zombie!\n");[m
[31m-  7d:	83 ec 08             	sub    $0x8,%esp[m
[31m-  80:	68 f7 07 00 00       	push   $0x7f7[m
[31m-  85:	6a 01                	push   $0x1[m
[31m-  87:	e8 04 04 00 00       	call   490 <printf>[m
[31m-  8c:	83 c4 10             	add    $0x10,%esp[m
[31m-  8f:	eb df                	jmp    70 <main+0x70>[m
[32m+[m[32m  85:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m  88:	68 07 08 00 00       	push   $0x807[m
[32m+[m[32m  8d:	6a 01                	push   $0x1[m
[32m+[m[32m  8f:	e8 0c 04 00 00       	call   4a0 <printf>[m
[32m+[m[32m  94:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m  97:	eb d7                	jmp    70 <main+0x70>[m
 [m
   for(;;){[m
     printf(1, "init: starting sh\n");[m
     pid = fork();[m
     if(pid < 0){[m
       printf(1, "init: fork failed\n");[m
[31m-  91:	53                   	push   %ebx[m
[31m-  92:	53                   	push   %ebx[m
[31m-  93:	68 cb 07 00 00       	push   $0x7cb[m
[31m-  98:	6a 01                	push   $0x1[m
[31m-  9a:	e8 f1 03 00 00       	call   490 <printf>[m
[31m-      exit(11);[m
[31m-  9f:	c7 04 24 0b 00 00 00 	movl   $0xb,(%esp)[m
[31m-  a6:	e8 97 02 00 00       	call   342 <exit>[m
[32m+[m[32m  99:	53                   	push   %ebx[m
[32m+[m[32m  9a:	53                   	push   %ebx[m
[32m+[m[32m  9b:	68 db 07 00 00       	push   $0x7db[m
[32m+[m[32m  a0:	6a 01                	push   $0x1[m
[32m+[m[32m  a2:	e8 f9 03 00 00       	call   4a0 <printf>[m
[32m+[m[32m      exit(0);[m
[32m+[m[32m  a7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)[m
[32m+[m[32m  ae:	e8 9f 02 00 00       	call   352 <exit>[m
     }[m
     if(pid == 0){[m
       exec("sh", argv);[m
[31m-  ab:	50                   	push   %eax[m
[31m-  ac:	50                   	push   %eax[m
[31m-  ad:	68 a4 0a 00 00       	push   $0xaa4[m
[31m-  b2:	68 de 07 00 00       	push   $0x7de[m
[31m-  b7:	e8 be 02 00 00       	call   37a <exec>[m
[32m+[m[32m  b3:	50                   	push   %eax[m
[32m+[m[32m  b4:	50                   	push   %eax[m
[32m+[m[32m  b5:	68 b4 0a 00 00       	push   $0xab4[m
[32m+[m[32m  ba:	68 ee 07 00 00       	push   $0x7ee[m
[32m+[m[32m  bf:	e8 c6 02 00 00       	call   38a <exec>[m
       printf(1, "init: exec sh failed\n");[m
[31m-  bc:	5a                   	pop    %edx[m
[31m-  bd:	59                   	pop    %ecx[m
[31m-  be:	68 e1 07 00 00       	push   $0x7e1[m
[31m-  c3:	6a 01                	push   $0x1[m
[31m-  c5:	e8 c6 03 00 00       	call   490 <printf>[m
[31m-      exit(11);[m
[31m-  ca:	c7 04 24 0b 00 00 00 	movl   $0xb,(%esp)[m
[31m-  d1:	e8 6c 02 00 00       	call   342 <exit>[m
[32m+[m[32m  c4:	5a                   	pop    %edx[m
[32m+[m[32m  c5:	59                   	pop    %ecx[m
[32m+[m[32m  c6:	68 f1 07 00 00       	push   $0x7f1[m
[32m+[m[32m  cb:	6a 01                	push   $0x1[m
[32m+[m[32m  cd:	e8 ce 03 00 00       	call   4a0 <printf>[m
[32m+[m[32m      exit(0);[m
[32m+[m[32m  d2:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)[m
[32m+[m[32m  d9:	e8 74 02 00 00       	call   352 <exit>[m
 main(void)[m
 {[m
   int pid, wpid;[m
 [m
   if(open("console", O_RDWR) < 0){[m
     mknod("console", 1, 1);[m
[31m-  d6:	50                   	push   %eax[m
[31m-  d7:	6a 01                	push   $0x1[m
[31m-  d9:	6a 01                	push   $0x1[m
[31m-  db:	68 b0 07 00 00       	push   $0x7b0[m
[31m-  e0:	e8 a5 02 00 00       	call   38a <mknod>[m
[32m+[m[32m  de:	50                   	push   %eax[m
[32m+[m[32m  df:	6a 01                	push   $0x1[m
[32m+[m[32m  e1:	6a 01                	push   $0x1[m
[32m+[m[32m  e3:	68 c0 07 00 00       	push   $0x7c0[m
[32m+[m[32m  e8:	e8 ad 02 00 00       	call   39a <mknod>[m
     open("console", O_RDWR);[m
[31m-  e5:	58                   	pop    %eax[m
[31m-  e6:	5a                   	pop    %edx[m
[31m-  e7:	6a 02                	push   $0x2[m
[31m-  e9:	68 b0 07 00 00       	push   $0x7b0[m
[31m-  ee:	e8 8f 02 00 00       	call   382 <open>[m
[31m-  f3:	83 c4 10             	add    $0x10,%esp[m
[31m-  f6:	e9 2e ff ff ff       	jmp    29 <main+0x29>[m
[31m-  fb:	66 90                	xchg   %ax,%ax[m
[31m-  fd:	66 90                	xchg   %ax,%ax[m
[31m-  ff:	90                   	nop[m
[31m-[m
[31m-00000100 <strcpy>:[m
[31m- 100:	55                   	push   %ebp[m
[31m- 101:	89 e5                	mov    %esp,%ebp[m
[31m- 103:	53                   	push   %ebx[m
[31m- 104:	8b 45 08             	mov    0x8(%ebp),%eax[m
[31m- 107:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[31m- 10a:	89 c2                	mov    %eax,%edx[m
[31m- 10c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m- 110:	83 c1 01             	add    $0x1,%ecx[m
[31m- 113:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx[m
[31m- 117:	83 c2 01             	add    $0x1,%edx[m
[31m- 11a:	84 db                	test   %bl,%bl[m
[31m- 11c:	88 5a ff             	mov    %bl,-0x1(%edx)[m
[31m- 11f:	75 ef                	jne    110 <strcpy+0x10>[m
[31m- 121:	5b                   	pop    %ebx[m
[31m- 122:	5d                   	pop    %ebp[m
[31m- 123:	c3                   	ret    [m
[31m- 124:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m- 12a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi[m
[31m-[m
[31m-00000130 <strcmp>:[m
[31m- 130:	55                   	push   %ebp[m
[31m- 131:	89 e5                	mov    %esp,%ebp[m
[31m- 133:	56                   	push   %esi[m
[31m- 134:	53                   	push   %ebx[m
[31m- 135:	8b 55 08             	mov    0x8(%ebp),%edx[m
[31m- 138:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[31m- 13b:	0f b6 02             	movzbl (%edx),%eax[m
[31m- 13e:	0f b6 19             	movzbl (%ecx),%ebx[m
[31m- 141:	84 c0                	test   %al,%al[m
[31m- 143:	75 1e                	jne    163 <strcmp+0x33>[m
[31m- 145:	eb 29                	jmp    170 <strcmp+0x40>[m
[31m- 147:	89 f6                	mov    %esi,%esi[m
[31m- 149:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m- 150:	83 c2 01             	add    $0x1,%edx[m
[31m- 153:	0f b6 02             	movzbl (%edx),%eax[m
[31m- 156:	8d 71 01             	lea    0x1(%ecx),%esi[m
[31m- 159:	0f b6 59 01          	movzbl 0x1(%ecx),%ebx[m
[31m- 15d:	84 c0                	test   %al,%al[m
[31m- 15f:	74 0f                	je     170 <strcmp+0x40>[m
[31m- 161:	89 f1                	mov    %esi,%ecx[m
[31m- 163:	38 d8                	cmp    %bl,%al[m
[31m- 165:	74 e9                	je     150 <strcmp+0x20>[m
[31m- 167:	29 d8                	sub    %ebx,%eax[m
[31m- 169:	5b                   	pop    %ebx[m
[31m- 16a:	5e                   	pop    %esi[m
[31m- 16b:	5d                   	pop    %ebp[m
[31m- 16c:	c3                   	ret    [m
[31m- 16d:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m- 170:	31 c0                	xor    %eax,%eax[m
[31m- 172:	29 d8                	sub    %ebx,%eax[m
[31m- 174:	5b                   	pop    %ebx[m
[31m- 175:	5e                   	pop    %esi[m
[31m- 176:	5d                   	pop    %ebp[m
[31m- 177:	c3                   	ret    [m
[31m- 178:	90                   	nop[m
[31m- 179:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-[m
[31m-00000180 <strlen>:[m
[31m- 180:	55                   	push   %ebp[m
[31m- 181:	89 e5                	mov    %esp,%ebp[m
[31m- 183:	8b 4d 08             	mov    0x8(%ebp),%ecx[m
[31m- 186:	80 39 00             	cmpb   $0x0,(%ecx)[m
[31m- 189:	74 12                	je     19d <strlen+0x1d>[m
[31m- 18b:	31 d2                	xor    %edx,%edx[m
[31m- 18d:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m- 190:	83 c2 01             	add    $0x1,%edx[m
[31m- 193:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)[m
[31m- 197:	89 d0                	mov    %edx,%eax[m
[31m- 199:	75 f5                	jne    190 <strlen+0x10>[m
[31m- 19b:	5d                   	pop    %ebp[m
[31m- 19c:	c3                   	ret    [m
[31m- 19d:	31 c0                	xor    %eax,%eax[m
[31m- 19f:	5d                   	pop    %ebp[m
[31m- 1a0:	c3                   	ret    [m
[31m- 1a1:	eb 0d                	jmp    1b0 <memset>[m
[31m- 1a3:	90                   	nop[m
[31m- 1a4:	90                   	nop[m
[31m- 1a5:	90                   	nop[m
[31m- 1a6:	90                   	nop[m
[31m- 1a7:	90                   	nop[m
[31m- 1a8:	90                   	nop[m
[31m- 1a9:	90                   	nop[m
[31m- 1aa:	90                   	nop[m
[31m- 1ab:	90                   	nop[m
[31m- 1ac:	90                   	nop[m
[31m- 1ad:	90                   	nop[m
[31m- 1ae:	90                   	nop[m
[31m- 1af:	90                   	nop[m
[31m-[m
[31m-000001b0 <memset>:[m
[31m- 1b0:	55                   	push   %ebp[m
[31m- 1b1:	89 e5                	mov    %esp,%ebp[m
[31m- 1b3:	57                   	push   %edi[m
[31m- 1b4:	8b 55 08             	mov    0x8(%ebp),%edx[m
[31m- 1b7:	8b 4d 10             	mov    0x10(%ebp),%ecx[m
[31m- 1ba:	8b 45 0c             	mov    0xc(%ebp),%eax[m
[31m- 1bd:	89 d7                	mov    %edx,%edi[m
[31m- 1bf:	fc                   	cld    [m
[31m- 1c0:	f3 aa                	rep stos %al,%es:(%edi)[m
[31m- 1c2:	89 d0                	mov    %edx,%eax[m
[31m- 1c4:	5f                   	pop    %edi[m
[31m- 1c5:	5d                   	pop    %ebp[m
[31m- 1c6:	c3                   	ret    [m
[31m- 1c7:	89 f6                	mov    %esi,%esi[m
[31m- 1c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-000001d0 <strchr>:[m
[31m- 1d0:	55                   	push   %ebp[m
[31m- 1d1:	89 e5                	mov    %esp,%ebp[m
[31m- 1d3:	53                   	push   %ebx[m
[31m- 1d4:	8b 45 08             	mov    0x8(%ebp),%eax[m
[31m- 1d7:	8b 5d 0c             	mov    0xc(%ebp),%ebx[m
[31m- 1da:	0f b6 10             	movzbl (%eax),%edx[m
[31m- 1dd:	84 d2                	test   %dl,%dl[m
[31m- 1df:	74 1d                	je     1fe <strchr+0x2e>[m
[31m- 1e1:	38 d3                	cmp    %dl,%bl[m
[31m- 1e3:	89 d9                	mov    %ebx,%ecx[m
[31m- 1e5:	75 0d                	jne    1f4 <strchr+0x24>[m
[31m- 1e7:	eb 17                	jmp    200 <strchr+0x30>[m
[31m- 1e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m- 1f0:	38 ca                	cmp    %cl,%dl[m
[31m- 1f2:	74 0c                	je     200 <strchr+0x30>[m
[31m- 1f4:	83 c0 01             	add    $0x1,%eax[m
[31m- 1f7:	0f b6 10             	movzbl (%eax),%edx[m
[31m- 1fa:	84 d2                	test   %dl,%dl[m
[31m- 1fc:	75 f2                	jne    1f0 <strchr+0x20>[m
[31m- 1fe:	31 c0                	xor    %eax,%eax[m
[31m- 200:	5b                   	pop    %ebx[m
[31m- 201:	5d                   	pop    %ebp[m
[31m- 202:	c3                   	ret    [m
[31m- 203:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m- 209:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-00000210 <gets>:[m
[31m- 210:	55                   	push   %ebp[m
[31m- 211:	89 e5                	mov    %esp,%ebp[m
[31m- 213:	57                   	push   %edi[m
[31m- 214:	56                   	push   %esi[m
[31m- 215:	53                   	push   %ebx[m
[31m- 216:	31 f6                	xor    %esi,%esi[m
[31m- 218:	8d 7d e7             	lea    -0x19(%ebp),%edi[m
[31m- 21b:	83 ec 1c             	sub    $0x1c,%esp[m
[31m- 21e:	eb 29                	jmp    249 <gets+0x39>[m
[31m- 220:	83 ec 04             	sub    $0x4,%esp[m
[31m- 223:	6a 01                	push   $0x1[m
[31m- 225:	57                   	push   %edi[m
[31m- 226:	6a 00                	push   $0x0[m
[31m- 228:	e8 2d 01 00 00       	call   35a <read>[m
[31m- 22d:	83 c4 10             	add    $0x10,%esp[m
[31m- 230:	85 c0                	test   %eax,%eax[m
[31m- 232:	7e 1d                	jle    251 <gets+0x41>[m
[31m- 234:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax[m
[31m- 238:	8b 55 08             	mov    0x8(%ebp),%edx[m
[31m- 23b:	89 de                	mov    %ebx,%esi[m
[31m- 23d:	3c 0a                	cmp    $0xa,%al[m
[31m- 23f:	88 44 1a ff          	mov    %al,-0x1(%edx,%ebx,1)[m
[31m- 243:	74 1b                	je     260 <gets+0x50>[m
[31m- 245:	3c 0d                	cmp    $0xd,%al[m
[31m- 247:	74 17                	je     260 <gets+0x50>[m
[31m- 249:	8d 5e 01             	lea    0x1(%esi),%ebx[m
[31m- 24c:	3b 5d 0c             	cmp    0xc(%ebp),%ebx[m
[31m- 24f:	7c cf                	jl     220 <gets+0x10>[m
[31m- 251:	8b 45 08             	mov    0x8(%ebp),%eax[m
[31m- 254:	c6 04 30 00          	movb   $0x0,(%eax,%esi,1)[m
[31m- 258:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m- 25b:	5b                   	pop    %ebx[m
[31m- 25c:	5e                   	pop    %esi[m
[31m- 25d:	5f                   	pop    %edi[m
[31m- 25e:	5d                   	pop    %ebp[m
[31m- 25f:	c3                   	ret    [m
[31m- 260:	8b 45 08             	mov    0x8(%ebp),%eax[m
[31m- 263:	89 de                	mov    %ebx,%esi[m
[31m- 265:	c6 04 30 00          	movb   $0x0,(%eax,%esi,1)[m
[31m- 269:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m- 26c:	5b                   	pop    %ebx[m
[31m- 26d:	5e                   	pop    %esi[m
[31m- 26e:	5f                   	pop    %edi[m
[31m- 26f:	5d                   	pop    %ebp[m
[31m- 270:	c3                   	ret    [m
[31m- 271:	eb 0d                	jmp    280 <stat>[m
[31m- 273:	90                   	nop[m
[31m- 274:	90                   	nop[m
[31m- 275:	90                   	nop[m
[31m- 276:	90                   	nop[m
[31m- 277:	90                   	nop[m
[31m- 278:	90                   	nop[m
[31m- 279:	90                   	nop[m
[31m- 27a:	90                   	nop[m
[31m- 27b:	90                   	nop[m
[31m- 27c:	90                   	nop[m
[31m- 27d:	90                   	nop[m
[31m- 27e:	90                   	nop[m
[31m- 27f:	90                   	nop[m
[31m-[m
[31m-00000280 <stat>:[m
[31m- 280:	55                   	push   %ebp[m
[31m- 281:	89 e5                	mov    %esp,%ebp[m
[31m- 283:	56                   	push   %esi[m
[31m- 284:	53                   	push   %ebx[m
[31m- 285:	83 ec 08             	sub    $0x8,%esp[m
[31m- 288:	6a 00                	push   $0x0[m
[31m- 28a:	ff 75 08             	pushl  0x8(%ebp)[m
[31m- 28d:	e8 f0 00 00 00       	call   382 <open>[m
[31m- 292:	83 c4 10             	add    $0x10,%esp[m
[31m- 295:	85 c0                	test   %eax,%eax[m
[31m- 297:	78 27                	js     2c0 <stat+0x40>[m
[31m- 299:	83 ec 08             	sub    $0x8,%esp[m
[31m- 29c:	ff 75 0c             	pushl  0xc(%ebp)[m
[31m- 29f:	89 c3                	mov    %eax,%ebx[m
[31m- 2a1:	50                   	push   %eax[m
[31m- 2a2:	e8 f3 00 00 00       	call   39a <fstat>[m
[31m- 2a7:	89 c6                	mov    %eax,%esi[m
[31m- 2a9:	89 1c 24             	mov    %ebx,(%esp)[m
[31m- 2ac:	e8 b9 00 00 00       	call   36a <close>[m
[31m- 2b1:	83 c4 10             	add    $0x10,%esp[m
[31m- 2b4:	89 f0                	mov    %esi,%eax[m
[31m- 2b6:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m- 2b9:	5b                   	pop    %ebx[m
[31m- 2ba:	5e                   	pop    %esi[m
[31m- 2bb:	5d                   	pop    %ebp[m
[31m- 2bc:	c3                   	ret    [m
[31m- 2bd:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m- 2c0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[31m- 2c5:	eb ef                	jmp    2b6 <stat+0x36>[m
[31m- 2c7:	89 f6                	mov    %esi,%esi[m
[31m- 2c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-000002d0 <atoi>:[m
[31m- 2d0:	55                   	push   %ebp[m
[31m- 2d1:	89 e5                	mov    %esp,%ebp[m
[31m- 2d3:	53                   	push   %ebx[m
[31m- 2d4:	8b 4d 08             	mov    0x8(%ebp),%ecx[m
[31m- 2d7:	0f be 11             	movsbl (%ecx),%edx[m
[31m- 2da:	8d 42 d0             	lea    -0x30(%edx),%eax[m
[31m- 2dd:	3c 09                	cmp    $0x9,%al[m
[31m- 2df:	b8 00 00 00 00       	mov    $0x0,%eax[m
[31m- 2e4:	77 1f                	ja     305 <atoi+0x35>[m
[31m- 2e6:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m- 2e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m- 2f0:	8d 04 80             	lea    (%eax,%eax,4),%eax[m
[31m- 2f3:	83 c1 01             	add    $0x1,%ecx[m
[31m- 2f6:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax[m
[31m- 2fa:	0f be 11             	movsbl (%ecx),%edx[m
[31m- 2fd:	8d 5a d0             	lea    -0x30(%edx),%ebx[m
[31m- 300:	80 fb 09             	cmp    $0x9,%bl[m
[31m- 303:	76 eb                	jbe    2f0 <atoi+0x20>[m
[31m- 305:	5b                   	pop    %ebx[m
[31m- 306:	5d                   	pop    %ebp[m
[31m- 307:	c3                   	ret    [m
[31m- 308:	90                   	nop[m
[31m- 309:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-[m
[31m-00000310 <memmove>:[m
[31m- 310:	55                   	push   %ebp[m
[31m- 311:	89 e5                	mov    %esp,%ebp[m
[31m- 313:	56                   	push   %esi[m
[31m- 314:	53                   	push   %ebx[m
[31m- 315:	8b 5d 10             	mov    0x10(%ebp),%ebx[m
[31m- 318:	8b 45 08             	mov    0x8(%ebp),%eax[m
[31m- 31b:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[31m- 31e:	85 db                	test   %ebx,%ebx[m
[31m- 320:	7e 14                	jle    336 <memmove+0x26>[m
[31m- 322:	31 d2                	xor    %edx,%edx[m
[31m- 324:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m- 328:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx[m
[31m- 32c:	88 0c 10             	mov    %cl,(%eax,%edx,1)[m
[31m- 32f:	83 c2 01             	add    $0x1,%edx[m
[31m- 332:	39 da                	cmp    %ebx,%edx[m
[31m- 334:	75 f2                	jne    328 <memmove+0x18>[m
[31m- 336:	5b                   	pop    %ebx[m
[31m- 337:	5e                   	pop    %esi[m
[31m- 338:	5d                   	pop    %ebp[m
[31m- 339:	c3                   	ret    [m
[31m-[m
[31m-0000033a <fork>:[m
[31m- 33a:	b8 01 00 00 00       	mov    $0x1,%eax[m
[31m- 33f:	cd 40                	int    $0x40[m
[31m- 341:	c3                   	ret    [m
[31m-[m
[31m-00000342 <exit>:[m
[31m- 342:	b8 02 00 00 00       	mov    $0x2,%eax[m
[31m- 347:	cd 40                	int    $0x40[m
[32m+[m[32m  ed:	58                   	pop    %eax[m
[32m+[m[32m  ee:	5a                   	pop    %edx[m
[32m+[m[32m  ef:	6a 02                	push   $0x2[m
[32m+[m[32m  f1:	68 c0 07 00 00       	push   $0x7c0[m
[32m+[m[32m  f6:	e8 97 02 00 00       	call   392 <open>[m
[32m+[m[32m  fb:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m  fe:	e9 26 ff ff ff       	jmp    29 <main+0x29>[m
[32m+[m[32m 103:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 105:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 107:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 109:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 10b:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 10d:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 10f:	90                   	nop[m
[32m+[m
[32m+[m[32m00000110 <strcpy>:[m
[32m+[m[32m#include "user.h"[m
[32m+[m[32m#include "x86.h"[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mstrcpy(char *s, char *t)[m
[32m+[m[32m{[m
[32m+[m[32m 110:	55                   	push   %ebp[m
[32m+[m[32m 111:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 113:	53                   	push   %ebx[m
[32m+[m[32m 114:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m 117:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[32m+[m[32m  char *os;[m
[32m+[m
[32m+[m[32m  os = s;[m
[32m+[m[32m  while((*s++ = *t++) != 0)[m
[32m+[m[32m 11a:	89 c2                	mov    %eax,%edx[m
[32m+[m[32m 11c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m 120:	83 c1 01             	add    $0x1,%ecx[m
[32m+[m[32m 123:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx[m
[32m+[m[32m 127:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m 12a:	84 db                	test   %bl,%bl[m
[32m+[m[32m 12c:	88 5a ff             	mov    %bl,-0x1(%edx)[m
[32m+[m[32m 12f:	75 ef                	jne    120 <strcpy+0x10>[m
[32m+[m[32m    ;[m
[32m+[m[32m  return os;[m
[32m+[m[32m}[m
[32m+[m[32m 131:	5b                   	pop    %ebx[m
[32m+[m[32m 132:	5d                   	pop    %ebp[m
[32m+[m[32m 133:	c3                   	ret[m[41m    [m
[32m+[m[32m 134:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m 13a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi[m
[32m+[m
[32m+[m[32m00000140 <strcmp>:[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m 140:	55                   	push   %ebp[m
[32m+[m[32m 141:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 143:	56                   	push   %esi[m
[32m+[m[32m 144:	53                   	push   %ebx[m
[32m+[m[32m 145:	8b 55 08             	mov    0x8(%ebp),%edx[m
[32m+[m[32m 148:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[32m+[m[32m  while(*p && *p == *q)[m
[32m+[m[32m 14b:	0f b6 02             	movzbl (%edx),%eax[m
[32m+[m[32m 14e:	0f b6 19             	movzbl (%ecx),%ebx[m
[32m+[m[32m 151:	84 c0                	test   %al,%al[m
[32m+[m[32m 153:	75 1e                	jne    173 <strcmp+0x33>[m
[32m+[m[32m 155:	eb 29                	jmp    180 <strcmp+0x40>[m
[32m+[m[32m 157:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m 159:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    p++, q++;[m
[32m+[m[32m 160:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m  while(*p && *p == *q)[m
[32m+[m[32m 163:	0f b6 02             	movzbl (%edx),%eax[m
[32m+[m[32m    p++, q++;[m
[32m+[m[32m 166:	8d 71 01             	lea    0x1(%ecx),%esi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m  while(*p && *p == *q)[m
[32m+[m[32m 169:	0f b6 59 01          	movzbl 0x1(%ecx),%ebx[m
[32m+[m[32m 16d:	84 c0                	test   %al,%al[m
[32m+[m[32m 16f:	74 0f                	je     180 <strcmp+0x40>[m
[32m+[m[32m 171:	89 f1                	mov    %esi,%ecx[m
[32m+[m[32m 173:	38 d8                	cmp    %bl,%al[m
[32m+[m[32m 175:	74 e9                	je     160 <strcmp+0x20>[m
[32m+[m[32m    p++, q++;[m
[32m+[m[32m  return (uchar)*p - (uchar)*q;[m
[32m+[m[32m 177:	29 d8                	sub    %ebx,%eax[m
[32m+[m[32m}[m
[32m+[m[32m 179:	5b                   	pop    %ebx[m
[32m+[m[32m 17a:	5e                   	pop    %esi[m
[32m+[m[32m 17b:	5d                   	pop    %ebp[m
[32m+[m[32m 17c:	c3                   	ret[m[41m    [m
[32m+[m[32m 17d:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstrcmp(const char *p, const char *q)[m
[32m+[m[32m{[m
[32m+[m[32m  while(*p && *p == *q)[m
[32m+[m[32m 180:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m    p++, q++;[m
[32m+[m[32m  return (uchar)*p - (uchar)*q;[m
[32m+[m[32m 182:	29 d8                	sub    %ebx,%eax[m
[32m+[m[32m}[m
[32m+[m[32m 184:	5b                   	pop    %ebx[m
[32m+[m[32m 185:	5e                   	pop    %esi[m
[32m+[m[32m 186:	5d                   	pop    %ebp[m
[32m+[m[32m 187:	c3                   	ret[m[41m    [m
[32m+[m[32m 188:	90                   	nop[m
[32m+[m[32m 189:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m
[32m+[m[32m00000190 <strlen>:[m
[32m+[m
[32m+[m[32muint[m
[32m+[m[32mstrlen(char *s)[m
[32m+[m[32m{[m
[32m+[m[32m 190:	55                   	push   %ebp[m
[32m+[m[32m 191:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 193:	8b 4d 08             	mov    0x8(%ebp),%ecx[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  for(n = 0; s[n]; n++)[m
[32m+[m[32m 196:	80 39 00             	cmpb   $0x0,(%ecx)[m
[32m+[m[32m 199:	74 12                	je     1ad <strlen+0x1d>[m
[32m+[m[32m 19b:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m 19d:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m 1a0:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m 1a3:	80 3c 11 00          	cmpb   $0x0,(%ecx,%edx,1)[m
[32m+[m[32m 1a7:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m 1a9:	75 f5                	jne    1a0 <strlen+0x10>[m
[32m+[m[32m    ;[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
[32m+[m[32m 1ab:	5d                   	pop    %ebp[m
[32m+[m[32m 1ac:	c3                   	ret[m[41m    [m
[32m+[m[32muint[m
[32m+[m[32mstrlen(char *s)[m
[32m+[m[32m{[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  for(n = 0; s[n]; n++)[m
[32m+[m[32m 1ad:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m    ;[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
[32m+[m[32m 1af:	5d                   	pop    %ebp[m
[32m+[m[32m 1b0:	c3                   	ret[m[41m    [m
[32m+[m[32m 1b1:	eb 0d                	jmp    1c0 <memset>[m
[32m+[m[32m 1b3:	90                   	nop[m
[32m+[m[32m 1b4:	90                   	nop[m
[32m+[m[32m 1b5:	90                   	nop[m
[32m+[m[32m 1b6:	90                   	nop[m
[32m+[m[32m 1b7:	90                   	nop[m
[32m+[m[32m 1b8:	90                   	nop[m
[32m+[m[32m 1b9:	90                   	nop[m
[32m+[m[32m 1ba:	90                   	nop[m
[32m+[m[32m 1bb:	90                   	nop[m
[32m+[m[32m 1bc:	90                   	nop[m
[32m+[m[32m 1bd:	90                   	nop[m
[32m+[m[32m 1be:	90                   	nop[m
[32m+[m[32m 1bf:	90                   	nop[m
[32m+[m
[32m+[m[32m000001c0 <memset>:[m
[32m+[m
[32m+[m[32mvoid*[m
[32m+[m[32mmemset(void *dst, int c, uint n)[m
[32m+[m[32m{[m
[32m+[m[32m 1c0:	55                   	push   %ebp[m
[32m+[m[32m 1c1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 1c3:	57                   	push   %edi[m
[32m+[m[32m 1c4:	8b 55 08             	mov    0x8(%ebp),%edx[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32mstosb(void *addr, int data, int cnt)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("cld; rep stosb" :[m
[32m+[m[32m 1c7:	8b 4d 10             	mov    0x10(%ebp),%ecx[m
[32m+[m[32m 1ca:	8b 45 0c             	mov    0xc(%ebp),%eax[m
[32m+[m[32m 1cd:	89 d7                	mov    %edx,%edi[m
[32m+[m[32m 1cf:	fc                   	cld[m[41m    [m
[32m+[m[32m 1d0:	f3 aa                	rep stos %al,%es:(%edi)[m
[32m+[m[32m  stosb(dst, c, n);[m
[32m+[m[32m  return dst;[m
[32m+[m[32m}[m
[32m+[m[32m 1d2:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m 1d4:	5f                   	pop    %edi[m
[32m+[m[32m 1d5:	5d                   	pop    %ebp[m
[32m+[m[32m 1d6:	c3                   	ret[m[41m    [m
[32m+[m[32m 1d7:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m 1d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m
[32m+[m[32m000001e0 <strchr>:[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mstrchr(const char *s, char c)[m
[32m+[m[32m{[m
[32m+[m[32m 1e0:	55                   	push   %ebp[m
[32m+[m[32m 1e1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 1e3:	53                   	push   %ebx[m
[32m+[m[32m 1e4:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m 1e7:	8b 5d 0c             	mov    0xc(%ebp),%ebx[m
[32m+[m[32m  for(; *s; s++)[m
[32m+[m[32m 1ea:	0f b6 10             	movzbl (%eax),%edx[m
[32m+[m[32m 1ed:	84 d2                	test   %dl,%dl[m
[32m+[m[32m 1ef:	74 1d                	je     20e <strchr+0x2e>[m
[32m+[m[32m    if(*s == c)[m
[32m+[m[32m 1f1:	38 d3                	cmp    %dl,%bl[m
[32m+[m[32m 1f3:	89 d9                	mov    %ebx,%ecx[m
[32m+[m[32m 1f5:	75 0d                	jne    204 <strchr+0x24>[m
[32m+[m[32m 1f7:	eb 17                	jmp    210 <strchr+0x30>[m
[32m+[m[32m 1f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m 200:	38 ca                	cmp    %cl,%dl[m
[32m+[m[32m 202:	74 0c                	je     210 <strchr+0x30>[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mstrchr(const char *s, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  for(; *s; s++)[m
[32m+[m[32m 204:	83 c0 01             	add    $0x1,%eax[m
[32m+[m[32m 207:	0f b6 10             	movzbl (%eax),%edx[m
[32m+[m[32m 20a:	84 d2                	test   %dl,%dl[m
[32m+[m[32m 20c:	75 f2                	jne    200 <strchr+0x20>[m
[32m+[m[32m    if(*s == c)[m
[32m+[m[32m      return (char*)s;[m
[32m+[m[32m  return 0;[m
[32m+[m[32m 20e:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m}[m
[32m+[m[32m 210:	5b                   	pop    %ebx[m
[32m+[m[32m 211:	5d                   	pop    %ebp[m
[32m+[m[32m 212:	c3                   	ret[m[41m    [m
[32m+[m[32m 213:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m 219:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m
[32m+[m[32m00000220 <gets>:[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
[32m+[m[32m 220:	55                   	push   %ebp[m
[32m+[m[32m 221:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 223:	57                   	push   %edi[m
[32m+[m[32m 224:	56                   	push   %esi[m
[32m+[m[32m 225:	53                   	push   %ebx[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
[32m+[m[32m 226:	31 f6                	xor    %esi,%esi[m
[32m+[m[32m    cc = read(0, &c, 1);[m
[32m+[m[32m 228:	8d 7d e7             	lea    -0x19(%ebp),%edi[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mchar*[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
[32m+[m[32m 22b:	83 ec 1c             	sub    $0x1c,%esp[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
[32m+[m[32m 22e:	eb 29                	jmp    259 <gets+0x39>[m
[32m+[m[32m    cc = read(0, &c, 1);[m
[32m+[m[32m 230:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m 233:	6a 01                	push   $0x1[m
[32m+[m[32m 235:	57                   	push   %edi[m
[32m+[m[32m 236:	6a 00                	push   $0x0[m
[32m+[m[32m 238:	e8 2d 01 00 00       	call   36a <read>[m
[32m+[m[32m    if(cc < 1)[m
[32m+[m[32m 23d:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 240:	85 c0                	test   %eax,%eax[m
[32m+[m[32m 242:	7e 1d                	jle    261 <gets+0x41>[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m 244:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax[m
[32m+[m[32m 248:	8b 55 08             	mov    0x8(%ebp),%edx[m
[32m+[m[32m 24b:	89 de                	mov    %ebx,%esi[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m 24d:	3c 0a                	cmp    $0xa,%al[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
[32m+[m[32m    cc = read(0, &c, 1);[m
[32m+[m[32m    if(cc < 1)[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m 24f:	88 44 1a ff          	mov    %al,-0x1(%edx,%ebx,1)[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m 253:	74 1b                	je     270 <gets+0x50>[m
[32m+[m[32m 255:	3c 0d                	cmp    $0xd,%al[m
[32m+[m[32m 257:	74 17                	je     270 <gets+0x50>[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
[32m+[m[32m 259:	8d 5e 01             	lea    0x1(%esi),%ebx[m
[32m+[m[32m 25c:	3b 5d 0c             	cmp    0xc(%ebp),%ebx[m
[32m+[m[32m 25f:	7c cf                	jl     230 <gets+0x10>[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m[32m  buf[i] = '\0';[m
[32m+[m[32m 261:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m 264:	c6 04 30 00          	movb   $0x0,(%eax,%esi,1)[m
[32m+[m[32m  return buf;[m
[32m+[m[32m}[m
[32m+[m[32m 268:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m 26b:	5b                   	pop    %ebx[m
[32m+[m[32m 26c:	5e                   	pop    %esi[m
[32m+[m[32m 26d:	5f                   	pop    %edi[m
[32m+[m[32m 26e:	5d                   	pop    %ebp[m
[32m+[m[32m 26f:	c3                   	ret[m[41m    [m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m[32m  buf[i] = '\0';[m
[32m+[m[32m 270:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32mgets(char *buf, int max)[m
[32m+[m[32m{[m
[32m+[m[32m  int i, cc;[m
[32m+[m[32m  char c;[m
[32m+[m
[32m+[m[32m  for(i=0; i+1 < max; ){[m
[32m+[m[32m 273:	89 de                	mov    %ebx,%esi[m
[32m+[m[32m      break;[m
[32m+[m[32m    buf[i++] = c;[m
[32m+[m[32m    if(c == '\n' || c == '\r')[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m[32m  buf[i] = '\0';[m
[32m+[m[32m 275:	c6 04 30 00          	movb   $0x0,(%eax,%esi,1)[m
[32m+[m[32m  return buf;[m
[32m+[m[32m}[m
[32m+[m[32m 279:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m 27c:	5b                   	pop    %ebx[m
[32m+[m[32m 27d:	5e                   	pop    %esi[m
[32m+[m[32m 27e:	5f                   	pop    %edi[m
[32m+[m[32m 27f:	5d                   	pop    %ebp[m
[32m+[m[32m 280:	c3                   	ret[m[41m    [m
[32m+[m[32m 281:	eb 0d                	jmp    290 <stat>[m
[32m+[m[32m 283:	90                   	nop[m
[32m+[m[32m 284:	90                   	nop[m
[32m+[m[32m 285:	90                   	nop[m
[32m+[m[32m 286:	90                   	nop[m
[32m+[m[32m 287:	90                   	nop[m
[32m+[m[32m 288:	90                   	nop[m
[32m+[m[32m 289:	90                   	nop[m
[32m+[m[32m 28a:	90                   	nop[m
[32m+[m[32m 28b:	90                   	nop[m
[32m+[m[32m 28c:	90                   	nop[m
[32m+[m[32m 28d:	90                   	nop[m
[32m+[m[32m 28e:	90                   	nop[m
[32m+[m[32m 28f:	90                   	nop[m
[32m+[m
[32m+[m[32m00000290 <stat>:[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mstat(char *n, struct stat *st)[m
[32m+[m[32m{[m
[32m+[m[32m 290:	55                   	push   %ebp[m
[32m+[m[32m 291:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 293:	56                   	push   %esi[m
[32m+[m[32m 294:	53                   	push   %ebx[m
[32m+[m[32m  int fd;[m
[32m+[m[32m  int r;[m
[32m+[m
[32m+[m[32m  fd = open(n, O_RDONLY);[m
[32m+[m[32m 295:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m 298:	6a 00                	push   $0x0[m
[32m+[m[32m 29a:	ff 75 08             	pushl  0x8(%ebp)[m
[32m+[m[32m 29d:	e8 f0 00 00 00       	call   392 <open>[m
[32m+[m[32m  if(fd < 0)[m
[32m+[m[32m 2a2:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 2a5:	85 c0                	test   %eax,%eax[m
[32m+[m[32m 2a7:	78 27                	js     2d0 <stat+0x40>[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  r = fstat(fd, st);[m
[32m+[m[32m 2a9:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m 2ac:	ff 75 0c             	pushl  0xc(%ebp)[m
[32m+[m[32m 2af:	89 c3                	mov    %eax,%ebx[m
[32m+[m[32m 2b1:	50                   	push   %eax[m
[32m+[m[32m 2b2:	e8 f3 00 00 00       	call   3aa <fstat>[m
[32m+[m[32m 2b7:	89 c6                	mov    %eax,%esi[m
[32m+[m[32m  close(fd);[m
[32m+[m[32m 2b9:	89 1c 24             	mov    %ebx,(%esp)[m
[32m+[m[32m 2bc:	e8 b9 00 00 00       	call   37a <close>[m
[32m+[m[32m  return r;[m
[32m+[m[32m 2c1:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 2c4:	89 f0                	mov    %esi,%eax[m
[32m+[m[32m}[m
[32m+[m[32m 2c6:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[32m+[m[32m 2c9:	5b                   	pop    %ebx[m
[32m+[m[32m 2ca:	5e                   	pop    %esi[m
[32m+[m[32m 2cb:	5d                   	pop    %ebp[m
[32m+[m[32m 2cc:	c3                   	ret[m[41m    [m
[32m+[m[32m 2cd:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m  int fd;[m
[32m+[m[32m  int r;[m
[32m+[m
[32m+[m[32m  fd = open(n, O_RDONLY);[m
[32m+[m[32m  if(fd < 0)[m
[32m+[m[32m    return -1;[m
[32m+[m[32m 2d0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[32m+[m[32m 2d5:	eb ef                	jmp    2c6 <stat+0x36>[m
[32m+[m[32m 2d7:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m 2d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m
[32m+[m[32m000002e0 <atoi>:[m
[32m+[m[32m  return r;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32matoi(const char *s)[m
[32m+[m[32m{[m
[32m+[m[32m 2e0:	55                   	push   %ebp[m
[32m+[m[32m 2e1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 2e3:	53                   	push   %ebx[m
[32m+[m[32m 2e4:	8b 4d 08             	mov    0x8(%ebp),%ecx[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  n = 0;[m
[32m+[m[32m  while('0' <= *s && *s <= '9')[m
[32m+[m[32m 2e7:	0f be 11             	movsbl (%ecx),%edx[m
[32m+[m[32m 2ea:	8d 42 d0             	lea    -0x30(%edx),%eax[m
[32m+[m[32m 2ed:	3c 09                	cmp    $0x9,%al[m
[32m+[m[32m 2ef:	b8 00 00 00 00       	mov    $0x0,%eax[m
[32m+[m[32m 2f4:	77 1f                	ja     315 <atoi+0x35>[m
[32m+[m[32m 2f6:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m 2f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    n = n*10 + *s++ - '0';[m
[32m+[m[32m 300:	8d 04 80             	lea    (%eax,%eax,4),%eax[m
[32m+[m[32m 303:	83 c1 01             	add    $0x1,%ecx[m
[32m+[m[32m 306:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eax[m
[32m+[m[32matoi(const char *s)[m
[32m+[m[32m{[m
[32m+[m[32m  int n;[m
[32m+[m
[32m+[m[32m  n = 0;[m
[32m+[m[32m  while('0' <= *s && *s <= '9')[m
[32m+[m[32m 30a:	0f be 11             	movsbl (%ecx),%edx[m
[32m+[m[32m 30d:	8d 5a d0             	lea    -0x30(%edx),%ebx[m
[32m+[m[32m 310:	80 fb 09             	cmp    $0x9,%bl[m
[32m+[m[32m 313:	76 eb                	jbe    300 <atoi+0x20>[m
[32m+[m[32m    n = n*10 + *s++ - '0';[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
[32m+[m[32m 315:	5b                   	pop    %ebx[m
[32m+[m[32m 316:	5d                   	pop    %ebp[m
[32m+[m[32m 317:	c3                   	ret[m[41m    [m
[32m+[m[32m 318:	90                   	nop[m
[32m+[m[32m 319:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m
[32m+[m[32m00000320 <memmove>:[m
[32m+[m
[32m+[m[32mvoid*[m
[32m+[m[32mmemmove(void *vdst, void *vsrc, int n)[m
[32m+[m[32m{[m
[32m+[m[32m 320:	55                   	push   %ebp[m
[32m+[m[32m 321:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 323:	56                   	push   %esi[m
[32m+[m[32m 324:	53                   	push   %ebx[m
[32m+[m[32m 325:	8b 5d 10             	mov    0x10(%ebp),%ebx[m
[32m+[m[32m 328:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m 32b:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[32m+[m[32m  char *dst, *src;[m
[32m+[m
[32m+[m[32m  dst = vdst;[m
[32m+[m[32m  src = vsrc;[m
[32m+[m[32m  while(n-- > 0)[m
[32m+[m[32m 32e:	85 db                	test   %ebx,%ebx[m
[32m+[m[32m 330:	7e 14                	jle    346 <memmove+0x26>[m
[32m+[m[32m 332:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m 334:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    *dst++ = *src++;[m
[32m+[m[32m 338:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx[m
[32m+[m[32m 33c:	88 0c 10             	mov    %cl,(%eax,%edx,1)[m
[32m+[m[32m 33f:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m{[m
[32m+[m[32m  char *dst, *src;[m
[32m+[m
[32m+[m[32m  dst = vdst;[m
[32m+[m[32m  src = vsrc;[m
[32m+[m[32m  while(n-- > 0)[m
[32m+[m[32m 342:	39 da                	cmp    %ebx,%edx[m
[32m+[m[32m 344:	75 f2                	jne    338 <memmove+0x18>[m
[32m+[m[32m    *dst++ = *src++;[m
[32m+[m[32m  return vdst;[m
[32m+[m[32m}[m
[32m+[m[32m 346:	5b                   	pop    %ebx[m
[32m+[m[32m 347:	5e                   	pop    %esi[m
[32m+[m[32m 348:	5d                   	pop    %ebp[m
  349:	c3                   	ret    [m
 [m
[31m-0000034a <wait>:[m
[31m- 34a:	b8 03 00 00 00       	mov    $0x3,%eax[m
[32m+[m[32m0000034a <fork>:[m
[32m+[m[32m 34a:	b8 01 00 00 00       	mov    $0x1,%eax[m
  34f:	cd 40                	int    $0x40[m
  351:	c3                   	ret    [m
 [m
[31m-00000352 <pipe>:[m
[31m- 352:	b8 04 00 00 00       	mov    $0x4,%eax[m
[32m+[m[32m00000352 <exit>:[m
[32m+[m[32m 352:	b8 02 00 00 00       	mov    $0x2,%eax[m
  357:	cd 40                	int    $0x40[m
  359:	c3                   	ret    [m
 [m
[31m-0000035a <read>:[m
[31m- 35a:	b8 05 00 00 00       	mov    $0x5,%eax[m
[32m+[m[32m0000035a <wait>:[m
[32m+[m[32m 35a:	b8 03 00 00 00       	mov    $0x3,%eax[m
  35f:	cd 40                	int    $0x40[m
  361:	c3                   	ret    [m
 [m
[31m-00000362 <write>:[m
[31m- 362:	b8 10 00 00 00       	mov    $0x10,%eax[m
[32m+[m[32m00000362 <pipe>:[m
[32m+[m[32m 362:	b8 04 00 00 00       	mov    $0x4,%eax[m
  367:	cd 40                	int    $0x40[m
  369:	c3                   	ret    [m
 [m
[31m-0000036a <close>:[m
[31m- 36a:	b8 15 00 00 00       	mov    $0x15,%eax[m
[32m+[m[32m0000036a <read>:[m
[32m+[m[32m 36a:	b8 05 00 00 00       	mov    $0x5,%eax[m
  36f:	cd 40                	int    $0x40[m
  371:	c3                   	ret    [m
 [m
[31m-00000372 <kill>:[m
[31m- 372:	b8 06 00 00 00       	mov    $0x6,%eax[m
[32m+[m[32m00000372 <write>:[m
[32m+[m[32m 372:	b8 10 00 00 00       	mov    $0x10,%eax[m
  377:	cd 40                	int    $0x40[m
  379:	c3                   	ret    [m
 [m
[31m-0000037a <exec>:[m
[31m- 37a:	b8 07 00 00 00       	mov    $0x7,%eax[m
[32m+[m[32m0000037a <close>:[m
[32m+[m[32m 37a:	b8 15 00 00 00       	mov    $0x15,%eax[m
  37f:	cd 40                	int    $0x40[m
  381:	c3                   	ret    [m
 [m
[31m-00000382 <open>:[m
[31m- 382:	b8 0f 00 00 00       	mov    $0xf,%eax[m
[32m+[m[32m00000382 <kill>:[m
[32m+[m[32m 382:	b8 06 00 00 00       	mov    $0x6,%eax[m
  387:	cd 40                	int    $0x40[m
  389:	c3                   	ret    [m
 [m
[31m-0000038a <mknod>:[m
[31m- 38a:	b8 11 00 00 00       	mov    $0x11,%eax[m
[32m+[m[32m0000038a <exec>:[m
[32m+[m[32m 38a:	b8 07 00 00 00       	mov    $0x7,%eax[m
  38f:	cd 40                	int    $0x40[m
  391:	c3                   	ret    [m
 [m
[31m-00000392 <unlink>:[m
[31m- 392:	b8 12 00 00 00       	mov    $0x12,%eax[m
[32m+[m[32m00000392 <open>:[m
[32m+[m[32m 392:	b8 0f 00 00 00       	mov    $0xf,%eax[m
  397:	cd 40                	int    $0x40[m
  399:	c3                   	ret    [m
 [m
[31m-0000039a <fstat>:[m
[31m- 39a:	b8 08 00 00 00       	mov    $0x8,%eax[m
[32m+[m[32m0000039a <mknod>:[m
[32m+[m[32m 39a:	b8 11 00 00 00       	mov    $0x11,%eax[m
  39f:	cd 40                	int    $0x40[m
  3a1:	c3                   	ret    [m
 [m
[31m-000003a2 <link>:[m
[31m- 3a2:	b8 13 00 00 00       	mov    $0x13,%eax[m
[32m+[m[32m000003a2 <unlink>:[m
[32m+[m[32m 3a2:	b8 12 00 00 00       	mov    $0x12,%eax[m
  3a7:	cd 40                	int    $0x40[m
  3a9:	c3                   	ret    [m
 [m
[31m-000003aa <mkdir>:[m
[31m- 3aa:	b8 14 00 00 00       	mov    $0x14,%eax[m
[32m+[m[32m000003aa <fstat>:[m
[32m+[m[32m 3aa:	b8 08 00 00 00       	mov    $0x8,%eax[m
  3af:	cd 40                	int    $0x40[m
  3b1:	c3                   	ret    [m
 [m
[31m-000003b2 <chdir>:[m
[31m- 3b2:	b8 09 00 00 00       	mov    $0x9,%eax[m
[32m+[m[32m000003b2 <link>:[m
[32m+[m[32m 3b2:	b8 13 00 00 00       	mov    $0x13,%eax[m
  3b7:	cd 40                	int    $0x40[m
  3b9:	c3                   	ret    [m
 [m
[31m-000003ba <dup>:[m
[31m- 3ba:	b8 0a 00 00 00       	mov    $0xa,%eax[m
[32m+[m[32m000003ba <mkdir>:[m
[32m+[m[32m 3ba:	b8 14 00 00 00       	mov    $0x14,%eax[m
  3bf:	cd 40                	int    $0x40[m
  3c1:	c3                   	ret    [m
 [m
[31m-000003c2 <getpid>:[m
[31m- 3c2:	b8 0b 00 00 00       	mov    $0xb,%eax[m
[32m+[m[32m000003c2 <chdir>:[m
[32m+[m[32m 3c2:	b8 09 00 00 00       	mov    $0x9,%eax[m
  3c7:	cd 40                	int    $0x40[m
  3c9:	c3                   	ret    [m
 [m
[31m-000003ca <sbrk>:[m
[31m- 3ca:	b8 0c 00 00 00       	mov    $0xc,%eax[m
[32m+[m[32m000003ca <dup>:[m
[32m+[m[32m 3ca:	b8 0a 00 00 00       	mov    $0xa,%eax[m
  3cf:	cd 40                	int    $0x40[m
  3d1:	c3                   	ret    [m
 [m
[31m-000003d2 <sleep>:[m
[31m- 3d2:	b8 0d 00 00 00       	mov    $0xd,%eax[m
[32m+[m[32m000003d2 <getpid>:[m
[32m+[m[32m 3d2:	b8 0b 00 00 00       	mov    $0xb,%eax[m
  3d7:	cd 40                	int    $0x40[m
  3d9:	c3                   	ret    [m
 [m
[31m-000003da <uptime>:[m
[31m- 3da:	b8 0e 00 00 00       	mov    $0xe,%eax[m
[32m+[m[32m000003da <sbrk>:[m
[32m+[m[32m 3da:	b8 0c 00 00 00       	mov    $0xc,%eax[m
  3df:	cd 40                	int    $0x40[m
  3e1:	c3                   	ret    [m
[31m- 3e2:	66 90                	xchg   %ax,%ax[m
[31m- 3e4:	66 90                	xchg   %ax,%ax[m
[31m- 3e6:	66 90                	xchg   %ax,%ax[m
[31m- 3e8:	66 90                	xchg   %ax,%ax[m
[31m- 3ea:	66 90                	xchg   %ax,%ax[m
[31m- 3ec:	66 90                	xchg   %ax,%ax[m
[31m- 3ee:	66 90                	xchg   %ax,%ax[m
[31m-[m
[31m-000003f0 <printint>:[m
[31m- 3f0:	55                   	push   %ebp[m
[31m- 3f1:	89 e5                	mov    %esp,%ebp[m
[31m- 3f3:	57                   	push   %edi[m
[31m- 3f4:	56                   	push   %esi[m
[31m- 3f5:	53                   	push   %ebx[m
[31m- 3f6:	89 c6                	mov    %eax,%esi[m
[31m- 3f8:	83 ec 3c             	sub    $0x3c,%esp[m
[31m- 3fb:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[31m- 3fe:	85 db                	test   %ebx,%ebx[m
[31m- 400:	74 7e                	je     480 <printint+0x90>[m
[31m- 402:	89 d0                	mov    %edx,%eax[m
[31m- 404:	c1 e8 1f             	shr    $0x1f,%eax[m
[31m- 407:	84 c0                	test   %al,%al[m
[31m- 409:	74 75                	je     480 <printint+0x90>[m
[31m- 40b:	89 d0                	mov    %edx,%eax[m
[31m- 40d:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)[m
[31m- 414:	f7 d8                	neg    %eax[m
[31m- 416:	89 75 c0             	mov    %esi,-0x40(%ebp)[m
[31m- 419:	31 ff                	xor    %edi,%edi[m
[31m- 41b:	8d 5d d7             	lea    -0x29(%ebp),%ebx[m
[31m- 41e:	89 ce                	mov    %ecx,%esi[m
[31m- 420:	eb 08                	jmp    42a <printint+0x3a>[m
[31m- 422:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m- 428:	89 cf                	mov    %ecx,%edi[m
[31m- 42a:	31 d2                	xor    %edx,%edx[m
[31m- 42c:	8d 4f 01             	lea    0x1(%edi),%ecx[m
[31m- 42f:	f7 f6                	div    %esi[m
[31m- 431:	0f b6 92 08 08 00 00 	movzbl 0x808(%edx),%edx[m
[31m- 438:	85 c0                	test   %eax,%eax[m
[31m- 43a:	88 14 0b             	mov    %dl,(%ebx,%ecx,1)[m
[31m- 43d:	75 e9                	jne    428 <printint+0x38>[m
[31m- 43f:	8b 45 c4             	mov    -0x3c(%ebp),%eax[m
[31m- 442:	8b 75 c0             	mov    -0x40(%ebp),%esi[m
[31m- 445:	85 c0                	test   %eax,%eax[m
[31m- 447:	74 08                	je     451 <printint+0x61>[m
[31m- 449:	c6 44 0d d8 2d       	movb   $0x2d,-0x28(%ebp,%ecx,1)[m
[31m- 44e:	8d 4f 02             	lea    0x2(%edi),%ecx[m
[31m- 451:	8d 7c 0d d7          	lea    -0x29(%ebp,%ecx,1),%edi[m
[31m- 455:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m- 458:	0f b6 07             	movzbl (%edi),%eax[m
[31m- 45b:	83 ec 04             	sub    $0x4,%esp[m
[31m- 45e:	83 ef 01             	sub    $0x1,%edi[m
[31m- 461:	6a 01                	push   $0x1[m
[31m- 463:	53                   	push   %ebx[m
[31m- 464:	56                   	push   %esi[m
[31m- 465:	88 45 d7             	mov    %al,-0x29(%ebp)[m
[31m- 468:	e8 f5 fe ff ff       	call   362 <write>[m
[31m- 46d:	83 c4 10             	add    $0x10,%esp[m
[31m- 470:	39 df                	cmp    %ebx,%edi[m
[31m- 472:	75 e4                	jne    458 <printint+0x68>[m
[31m- 474:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m- 477:	5b                   	pop    %ebx[m
[31m- 478:	5e                   	pop    %esi[m
[31m- 479:	5f                   	pop    %edi[m
[31m- 47a:	5d                   	pop    %ebp[m
[31m- 47b:	c3                   	ret    [m
[31m- 47c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m- 480:	89 d0                	mov    %edx,%eax[m
[31m- 482:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)[m
[31m- 489:	eb 8b                	jmp    416 <printint+0x26>[m
[31m- 48b:	90                   	nop[m
[32m+[m
[32m+[m[32m000003e2 <sleep>:[m
[32m+[m[32m 3e2:	b8 0d 00 00 00       	mov    $0xd,%eax[m
[32m+[m[32m 3e7:	cd 40                	int    $0x40[m
[32m+[m[32m 3e9:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m000003ea <uptime>:[m
[32m+[m[32m 3ea:	b8 0e 00 00 00       	mov    $0xe,%eax[m
[32m+[m[32m 3ef:	cd 40                	int    $0x40[m
[32m+[m[32m 3f1:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m000003f2 <set>:[m
[32m+[m[32m 3f2:	b8 16 00 00 00       	mov    $0x16,%eax[m
[32m+[m[32m 3f7:	cd 40                	int    $0x40[m
[32m+[m[32m 3f9:	c3                   	ret[m[41m    [m
[32m+[m[32m 3fa:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 3fc:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 3fe:	66 90                	xchg   %ax,%ax[m
[32m+[m
[32m+[m[32m00000400 <printint>:[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mprintint(int fd, int xx, int base, int sgn)[m
[32m+[m[32m{[m
[32m+[m[32m 400:	55                   	push   %ebp[m
[32m+[m[32m 401:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 403:	57                   	push   %edi[m
[32m+[m[32m 404:	56                   	push   %esi[m
[32m+[m[32m 405:	53                   	push   %ebx[m
[32m+[m[32m 406:	89 c6                	mov    %eax,%esi[m
[32m+[m[32m 408:	83 ec 3c             	sub    $0x3c,%esp[m
[32m+[m[32m  char buf[16];[m
[32m+[m[32m  int i, neg;[m
[32m+[m[32m  uint x;[m
[32m+[m
[32m+[m[32m  neg = 0;[m
[32m+[m[32m  if(sgn && xx < 0){[m
[32m+[m[32m 40b:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m 40e:	85 db                	test   %ebx,%ebx[m
[32m+[m[32m 410:	74 7e                	je     490 <printint+0x90>[m
[32m+[m[32m 412:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m 414:	c1 e8 1f             	shr    $0x1f,%eax[m
[32m+[m[32m 417:	84 c0                	test   %al,%al[m
[32m+[m[32m 419:	74 75                	je     490 <printint+0x90>[m
[32m+[m[32m    neg = 1;[m
[32m+[m[32m    x = -xx;[m
[32m+[m[32m 41b:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m  int i, neg;[m
[32m+[m[32m  uint x;[m
[32m+[m
[32m+[m[32m  neg = 0;[m
[32m+[m[32m  if(sgn && xx < 0){[m
[32m+[m[32m    neg = 1;[m
[32m+[m[32m 41d:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)[m
[32m+[m[32m    x = -xx;[m
[32m+[m[32m 424:	f7 d8                	neg    %eax[m
[32m+[m[32m 426:	89 75 c0             	mov    %esi,-0x40(%ebp)[m
[32m+[m[32m  } else {[m
[32m+[m[32m    x = xx;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  i = 0;[m
[32m+[m[32m 429:	31 ff                	xor    %edi,%edi[m
[32m+[m[32m 42b:	8d 5d d7             	lea    -0x29(%ebp),%ebx[m
[32m+[m[32m 42e:	89 ce                	mov    %ecx,%esi[m
[32m+[m[32m 430:	eb 08                	jmp    43a <printint+0x3a>[m
[32m+[m[32m 432:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m  do{[m
[32m+[m[32m    buf[i++] = digits[x % base];[m
[32m+[m[32m 438:	89 cf                	mov    %ecx,%edi[m
[32m+[m[32m 43a:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m 43c:	8d 4f 01             	lea    0x1(%edi),%ecx[m
[32m+[m[32m 43f:	f7 f6                	div    %esi[m
[32m+[m[32m 441:	0f b6 92 18 08 00 00 	movzbl 0x818(%edx),%edx[m
[32m+[m[32m  }while((x /= base) != 0);[m
[32m+[m[32m 448:	85 c0                	test   %eax,%eax[m
[32m+[m[32m    x = xx;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  i = 0;[m
[32m+[m[32m  do{[m
[32m+[m[32m    buf[i++] = digits[x % base];[m
[32m+[m[32m 44a:	88 14 0b             	mov    %dl,(%ebx,%ecx,1)[m
[32m+[m[32m  }while((x /= base) != 0);[m
[32m+[m[32m 44d:	75 e9                	jne    438 <printint+0x38>[m
[32m+[m[32m  if(neg)[m
[32m+[m[32m 44f:	8b 45 c4             	mov    -0x3c(%ebp),%eax[m
[32m+[m[32m 452:	8b 75 c0             	mov    -0x40(%ebp),%esi[m
[32m+[m[32m 455:	85 c0                	test   %eax,%eax[m
[32m+[m[32m 457:	74 08                	je     461 <printint+0x61>[m
[32m+[m[32m    buf[i++] = '-';[m
[32m+[m[32m 459:	c6 44 0d d8 2d       	movb   $0x2d,-0x28(%ebp,%ecx,1)[m
[32m+[m[32m 45e:	8d 4f 02             	lea    0x2(%edi),%ecx[m
[32m+[m[32m 461:	8d 7c 0d d7          	lea    -0x29(%ebp,%ecx,1),%edi[m
[32m+[m[32m 465:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m 468:	0f b6 07             	movzbl (%edi),%eax[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m 46b:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m 46e:	83 ef 01             	sub    $0x1,%edi[m
[32m+[m[32m 471:	6a 01                	push   $0x1[m
[32m+[m[32m 473:	53                   	push   %ebx[m
[32m+[m[32m 474:	56                   	push   %esi[m
[32m+[m[32m 475:	88 45 d7             	mov    %al,-0x29(%ebp)[m
[32m+[m[32m 478:	e8 f5 fe ff ff       	call   372 <write>[m
[32m+[m[32m    buf[i++] = digits[x % base];[m
[32m+[m[32m  }while((x /= base) != 0);[m
[32m+[m[32m  if(neg)[m
[32m+[m[32m    buf[i++] = '-';[m
[32m+[m
[32m+[m[32m  while(--i >= 0)[m
[32m+[m[32m 47d:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 480:	39 df                	cmp    %ebx,%edi[m
[32m+[m[32m 482:	75 e4                	jne    468 <printint+0x68>[m
[32m+[m[32m    putc(fd, buf[i]);[m
[32m+[m[32m}[m
[32m+[m[32m 484:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m 487:	5b                   	pop    %ebx[m
[32m+[m[32m 488:	5e                   	pop    %esi[m
[32m+[m[32m 489:	5f                   	pop    %edi[m
[32m+[m[32m 48a:	5d                   	pop    %ebp[m
[32m+[m[32m 48b:	c3                   	ret[m[41m    [m
  48c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  neg = 0;[m
[32m+[m[32m  if(sgn && xx < 0){[m
[32m+[m[32m    neg = 1;[m
[32m+[m[32m    x = -xx;[m
[32m+[m[32m  } else {[m
[32m+[m[32m    x = xx;[m
[32m+[m[32m 490:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m  static char digits[] = "0123456789ABCDEF";[m
[32m+[m[32m  char buf[16];[m
[32m+[m[32m  int i, neg;[m
[32m+[m[32m  uint x;[m
[32m+[m
[32m+[m[32m  neg = 0;[m
[32m+[m[32m 492:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)[m
[32m+[m[32m 499:	eb 8b                	jmp    426 <printint+0x26>[m
[32m+[m[32m 49b:	90                   	nop[m
[32m+[m[32m 49c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m
[32m+[m[32m000004a0 <printf>:[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Print to the given fd. Only understands %d, %x, %p, %s.[m
[32m+[m[32mvoid[m
[32m+[m[32mprintf(int fd, char *fmt, ...)[m
[32m+[m[32m{[m
[32m+[m[32m 4a0:	55                   	push   %ebp[m
[32m+[m[32m 4a1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 4a3:	57                   	push   %edi[m
[32m+[m[32m 4a4:	56                   	push   %esi[m
[32m+[m[32m 4a5:	53                   	push   %ebx[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m 4a6:	8d 45 10             	lea    0x10(%ebp),%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Print to the given fd. Only understands %d, %x, %p, %s.[m
[32m+[m[32mvoid[m
[32m+[m[32mprintf(int fd, char *fmt, ...)[m
[32m+[m[32m{[m
[32m+[m[32m 4a9:	83 ec 2c             	sub    $0x2c,%esp[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m 4ac:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Print to the given fd. Only understands %d, %x, %p, %s.[m
[32m+[m[32mvoid[m
[32m+[m[32mprintf(int fd, char *fmt, ...)[m
[32m+[m[32m{[m
[32m+[m[32m 4af:	8b 7d 08             	mov    0x8(%ebp),%edi[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m 4b2:	89 45 d0             	mov    %eax,-0x30(%ebp)[m
[32m+[m[32m 4b5:	0f b6 1e             	movzbl (%esi),%ebx[m
[32m+[m[32m 4b8:	83 c6 01             	add    $0x1,%esi[m
[32m+[m[32m 4bb:	84 db                	test   %bl,%bl[m
[32m+[m[32m 4bd:	0f 84 b0 00 00 00    	je     573 <printf+0xd3>[m
[32m+[m[32m 4c3:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m 4c5:	eb 39                	jmp    500 <printf+0x60>[m
[32m+[m[32m 4c7:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m 4c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    c = fmt[i] & 0xff;[m
[32m+[m[32m    if(state == 0){[m
[32m+[m[32m      if(c == '%'){[m
[32m+[m[32m 4d0:	83 f8 25             	cmp    $0x25,%eax[m
[32m+[m[32m 4d3:	89 55 d4             	mov    %edx,-0x2c(%ebp)[m
[32m+[m[32m        state = '%';[m
[32m+[m[32m 4d6:	ba 25 00 00 00       	mov    $0x25,%edx[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m    c = fmt[i] & 0xff;[m
[32m+[m[32m    if(state == 0){[m
[32m+[m[32m      if(c == '%'){[m
[32m+[m[32m 4db:	74 18                	je     4f5 <printf+0x55>[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m 4dd:	8d 45 e2             	lea    -0x1e(%ebp),%eax[m
[32m+[m[32m 4e0:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m 4e3:	88 5d e2             	mov    %bl,-0x1e(%ebp)[m
[32m+[m[32m 4e6:	6a 01                	push   $0x1[m
[32m+[m[32m 4e8:	50                   	push   %eax[m
[32m+[m[32m 4e9:	57                   	push   %edi[m
[32m+[m[32m 4ea:	e8 83 fe ff ff       	call   372 <write>[m
[32m+[m[32m 4ef:	8b 55 d4             	mov    -0x2c(%ebp),%edx[m
[32m+[m[32m 4f2:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 4f5:	83 c6 01             	add    $0x1,%esi[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m 4f8:	0f b6 5e ff          	movzbl -0x1(%esi),%ebx[m
[32m+[m[32m 4fc:	84 db                	test   %bl,%bl[m
[32m+[m[32m 4fe:	74 73                	je     573 <printf+0xd3>[m
[32m+[m[32m    c = fmt[i] & 0xff;[m
[32m+[m[32m    if(state == 0){[m
[32m+[m[32m 500:	85 d2                	test   %edx,%edx[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m    c = fmt[i] & 0xff;[m
[32m+[m[32m 502:	0f be cb             	movsbl %bl,%ecx[m
[32m+[m[32m 505:	0f b6 c3             	movzbl %bl,%eax[m
[32m+[m[32m    if(state == 0){[m
[32m+[m[32m 508:	74 c6                	je     4d0 <printf+0x30>[m
[32m+[m[32m      if(c == '%'){[m
[32m+[m[32m        state = '%';[m
[32m+[m[32m      } else {[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m    } else if(state == '%'){[m
[32m+[m[32m 50a:	83 fa 25             	cmp    $0x25,%edx[m
[32m+[m[32m 50d:	75 e6                	jne    4f5 <printf+0x55>[m
[32m+[m[32m      if(c == 'd'){[m
[32m+[m[32m 50f:	83 f8 64             	cmp    $0x64,%eax[m
[32m+[m[32m 512:	0f 84 f8 00 00 00    	je     610 <printf+0x170>[m
[32m+[m[32m        printint(fd, *ap, 10, 1);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == 'x' || c == 'p'){[m
[32m+[m[32m 518:	81 e1 f7 00 00 00    	and    $0xf7,%ecx[m
[32m+[m[32m 51e:	83 f9 70             	cmp    $0x70,%ecx[m
[32m+[m[32m 521:	74 5d                	je     580 <printf+0xe0>[m
[32m+[m[32m        printint(fd, *ap, 16, 0);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == 's'){[m
[32m+[m[32m 523:	83 f8 73             	cmp    $0x73,%eax[m
[32m+[m[32m 526:	0f 84 84 00 00 00    	je     5b0 <printf+0x110>[m
[32m+[m[32m          s = "(null)";[m
[32m+[m[32m        while(*s != 0){[m
[32m+[m[32m          putc(fd, *s);[m
[32m+[m[32m          s++;[m
[32m+[m[32m        }[m
[32m+[m[32m      } else if(c == 'c'){[m
[32m+[m[32m 52c:	83 f8 63             	cmp    $0x63,%eax[m
[32m+[m[32m 52f:	0f 84 ea 00 00 00    	je     61f <printf+0x17f>[m
[32m+[m[32m        putc(fd, *ap);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == '%'){[m
[32m+[m[32m 535:	83 f8 25             	cmp    $0x25,%eax[m
[32m+[m[32m 538:	0f 84 c2 00 00 00    	je     600 <printf+0x160>[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m 53e:	8d 45 e7             	lea    -0x19(%ebp),%eax[m
[32m+[m[32m 541:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m 544:	c6 45 e7 25          	movb   $0x25,-0x19(%ebp)[m
[32m+[m[32m 548:	6a 01                	push   $0x1[m
[32m+[m[32m 54a:	50                   	push   %eax[m
[32m+[m[32m 54b:	57                   	push   %edi[m
[32m+[m[32m 54c:	e8 21 fe ff ff       	call   372 <write>[m
[32m+[m[32m 551:	83 c4 0c             	add    $0xc,%esp[m
[32m+[m[32m 554:	8d 45 e6             	lea    -0x1a(%ebp),%eax[m
[32m+[m[32m 557:	88 5d e6             	mov    %bl,-0x1a(%ebp)[m
[32m+[m[32m 55a:	6a 01                	push   $0x1[m
[32m+[m[32m 55c:	50                   	push   %eax[m
[32m+[m[32m 55d:	57                   	push   %edi[m
[32m+[m[32m 55e:	83 c6 01             	add    $0x1,%esi[m
[32m+[m[32m 561:	e8 0c fe ff ff       	call   372 <write>[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m 566:	0f b6 5e ff          	movzbl -0x1(%esi),%ebx[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m 56a:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // Unknown % sequence.  Print it to draw attention.[m
[32m+[m[32m        putc(fd, '%');[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m      state = 0;[m
[32m+[m[32m 56d:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m  int c, i, state;[m
[32m+[m[32m  uint *ap;[m
[32m+[m
[32m+[m[32m  state = 0;[m
[32m+[m[32m  ap = (uint*)(void*)&fmt + 1;[m
[32m+[m[32m  for(i = 0; fmt[i]; i++){[m
[32m+[m[32m 56f:	84 db                	test   %bl,%bl[m
[32m+[m[32m 571:	75 8d                	jne    500 <printf+0x60>[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m      state = 0;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[32m 573:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m 576:	5b                   	pop    %ebx[m
[32m+[m[32m 577:	5e                   	pop    %esi[m
[32m+[m[32m 578:	5f                   	pop    %edi[m
[32m+[m[32m 579:	5d                   	pop    %ebp[m
[32m+[m[32m 57a:	c3                   	ret[m[41m    [m
[32m+[m[32m 57b:	90                   	nop[m
[32m+[m[32m 57c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    } else if(state == '%'){[m
[32m+[m[32m      if(c == 'd'){[m
[32m+[m[32m        printint(fd, *ap, 10, 1);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == 'x' || c == 'p'){[m
[32m+[m[32m        printint(fd, *ap, 16, 0);[m
[32m+[m[32m 580:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m 583:	b9 10 00 00 00       	mov    $0x10,%ecx[m
[32m+[m[32m 588:	6a 00                	push   $0x0[m
[32m+[m[32m 58a:	8b 5d d0             	mov    -0x30(%ebp),%ebx[m
[32m+[m[32m 58d:	89 f8                	mov    %edi,%eax[m
[32m+[m[32m 58f:	8b 13                	mov    (%ebx),%edx[m
[32m+[m[32m 591:	e8 6a fe ff ff       	call   400 <printint>[m
[32m+[m[32m        ap++;[m
[32m+[m[32m 596:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m 598:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // Unknown % sequence.  Print it to draw attention.[m
[32m+[m[32m        putc(fd, '%');[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m      state = 0;[m
[32m+[m[32m 59b:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m      if(c == 'd'){[m
[32m+[m[32m        printint(fd, *ap, 10, 1);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m      } else if(c == 'x' || c == 'p'){[m
[32m+[m[32m        printint(fd, *ap, 16, 0);[m
[32m+[m[32m        ap++;[m
[32m+[m[32m 59d:	83 c0 04             	add    $0x4,%eax[m
[32m+[m[32m 5a0:	89 45 d0             	mov    %eax,-0x30(%ebp)[m
[32m+[m[32m 5a3:	e9 4d ff ff ff       	jmp    4f5 <printf+0x55>[m
[32m+[m[32m 5a8:	90                   	nop[m
[32m+[m[32m 5a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m      } else if(c == 's'){[m
[32m+[m[32m        s = (char*)*ap;[m
[32m+[m[32m 5b0:	8b 45 d0             	mov    -0x30(%ebp),%eax[m
[32m+[m[32m 5b3:	8b 18                	mov    (%eax),%ebx[m
[32m+[m[32m        ap++;[m
[32m+[m[32m 5b5:	83 c0 04             	add    $0x4,%eax[m
[32m+[m[32m 5b8:	89 45 d0             	mov    %eax,-0x30(%ebp)[m
[32m+[m[32m        if(s == 0)[m
[32m+[m[32m          s = "(null)";[m
[32m+[m[32m 5bb:	b8 10 08 00 00       	mov    $0x810,%eax[m
[32m+[m[32m 5c0:	85 db                	test   %ebx,%ebx[m
[32m+[m[32m 5c2:	0f 44 d8             	cmove  %eax,%ebx[m
[32m+[m[32m        while(*s != 0){[m
[32m+[m[32m 5c5:	0f b6 03             	movzbl (%ebx),%eax[m
[32m+[m[32m 5c8:	84 c0                	test   %al,%al[m
[32m+[m[32m 5ca:	74 23                	je     5ef <printf+0x14f>[m
[32m+[m[32m 5cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m 5d0:	88 45 e3             	mov    %al,-0x1d(%ebp)[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m 5d3:	8d 45 e3             	lea    -0x1d(%ebp),%eax[m
[32m+[m[32m 5d6:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m 5d9:	6a 01                	push   $0x1[m
[32m+[m[32m        ap++;[m
[32m+[m[32m        if(s == 0)[m
[32m+[m[32m          s = "(null)";[m
[32m+[m[32m        while(*s != 0){[m
[32m+[m[32m          putc(fd, *s);[m
[32m+[m[32m          s++;[m
[32m+[m[32m 5db:	83 c3 01             	add    $0x1,%ebx[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m 5de:	50                   	push   %eax[m
[32m+[m[32m 5df:	57                   	push   %edi[m
[32m+[m[32m 5e0:	e8 8d fd ff ff       	call   372 <write>[m
[32m+[m[32m      } else if(c == 's'){[m
[32m+[m[32m        s = (char*)*ap;[m
[32m+[m[32m        ap++;[m
[32m+[m[32m        if(s == 0)[m
[32m+[m[32m          s = "(null)";[m
[32m+[m[32m        while(*s != 0){[m
[32m+[m[32m 5e5:	0f b6 03             	movzbl (%ebx),%eax[m
[32m+[m[32m 5e8:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 5eb:	84 c0                	test   %al,%al[m
[32m+[m[32m 5ed:	75 e1                	jne    5d0 <printf+0x130>[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // Unknown % sequence.  Print it to draw attention.[m
[32m+[m[32m        putc(fd, '%');[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m      state = 0;[m
[32m+[m[32m 5ef:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m 5f1:	e9 ff fe ff ff       	jmp    4f5 <printf+0x55>[m
[32m+[m[32m 5f6:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m 5f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m 600:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m 603:	88 5d e5             	mov    %bl,-0x1b(%ebp)[m
[32m+[m[32m 606:	8d 45 e5             	lea    -0x1b(%ebp),%eax[m
[32m+[m[32m 609:	6a 01                	push   $0x1[m
[32m+[m[32m 60b:	e9 4c ff ff ff       	jmp    55c <printf+0xbc>[m
[32m+[m[32m      } else {[m
[32m+[m[32m        putc(fd, c);[m
[32m+[m[32m      }[m
[32m+[m[32m    } else if(state == '%'){[m
[32m+[m[32m      if(c == 'd'){[m
[32m+[m[32m        printint(fd, *ap, 10, 1);[m
[32m+[m[32m 610:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m 613:	b9 0a 00 00 00       	mov    $0xa,%ecx[m
[32m+[m[32m 618:	6a 01                	push   $0x1[m
[32m+[m[32m 61a:	e9 6b ff ff ff       	jmp    58a <printf+0xea>[m
[32m+[m[32m 61f:	8b 5d d0             	mov    -0x30(%ebp),%ebx[m
[32m+[m[32m#include "user.h"[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mputc(int fd, char c)[m
[32m+[m[32m{[m
[32m+[m[32m  write(fd, &c, 1);[m
[32m+[m[32m 622:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m 625:	8b 03                	mov    (%ebx),%eax[m
[32m+[m[32m 627:	6a 01                	push   $0x1[m
[32m+[m[32m 629:	88 45 e4             	mov    %al,-0x1c(%ebp)[m
[32m+[m[32m 62c:	8d 45 e4             	lea    -0x1c(%ebp),%eax[m
[32m+[m[32m 62f:	50                   	push   %eax[m
[32m+[m[32m 630:	57                   	push   %edi[m
[32m+[m[32m 631:	e8 3c fd ff ff       	call   372 <write>[m
[32m+[m[32m 636:	e9 5b ff ff ff       	jmp    596 <printf+0xf6>[m
[32m+[m[32m 63b:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 63d:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m 63f:	90                   	nop[m
[32m+[m
[32m+[m[32m00000640 <free>:[m
[32m+[m[32mstatic Header base;[m
[32m+[m[32mstatic Header *freep;[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
[32m+[m[32m 640:	55                   	push   %ebp[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
[32m+[m[32m 641:	a1 bc 0a 00 00       	mov    0xabc,%eax[m
[32m+[m[32mstatic Header base;[m
[32m+[m[32mstatic Header *freep;[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
[32m+[m[32m 646:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 648:	57                   	push   %edi[m
[32m+[m[32m 649:	56                   	push   %esi[m
[32m+[m[32m 64a:	53                   	push   %ebx[m
[32m+[m[32m 64b:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
[32m+[m[32m 64e:	8b 10                	mov    (%eax),%edx[m
[32m+[m[32mvoid[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m 650:	8d 4b f8             	lea    -0x8(%ebx),%ecx[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
[32m+[m[32m 653:	39 c8                	cmp    %ecx,%eax[m
[32m+[m[32m 655:	73 19                	jae    670 <free+0x30>[m
[32m+[m[32m 657:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m 659:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m 660:	39 d1                	cmp    %edx,%ecx[m
[32m+[m[32m 662:	72 1c                	jb     680 <free+0x40>[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
[32m+[m[32m 664:	39 d0                	cmp    %edx,%eax[m
[32m+[m[32m 666:	73 18                	jae    680 <free+0x40>[m
[32m+[m[32mstatic Header base;[m
[32m+[m[32mstatic Header *freep;[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
[32m+[m[32m 668:	89 d0                	mov    %edx,%eax[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
[32m+[m[32m 66a:	39 c8                	cmp    %ecx,%eax[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
[32m+[m[32m 66c:	8b 10                	mov    (%eax),%edx[m
[32m+[m[32mfree(void *ap)[m
[32m+[m[32m{[m
[32m+[m[32m  Header *bp, *p;[m
[32m+[m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
[32m+[m[32m 66e:	72 f0                	jb     660 <free+0x20>[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
[32m+[m[32m 670:	39 d0                	cmp    %edx,%eax[m
[32m+[m[32m 672:	72 f4                	jb     668 <free+0x28>[m
[32m+[m[32m 674:	39 d1                	cmp    %edx,%ecx[m
[32m+[m[32m 676:	73 f0                	jae    668 <free+0x28>[m
[32m+[m[32m 678:	90                   	nop[m
[32m+[m[32m 679:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m      break;[m
[32m+[m[32m  if(bp + bp->s.size == p->s.ptr){[m
[32m+[m[32m 680:	8b 73 fc             	mov    -0x4(%ebx),%esi[m
[32m+[m[32m 683:	8d 3c f1             	lea    (%ecx,%esi,8),%edi[m
[32m+[m[32m 686:	39 d7                	cmp    %edx,%edi[m
[32m+[m[32m 688:	74 19                	je     6a3 <free+0x63>[m
[32m+[m[32m    bp->s.size += p->s.ptr->s.size;[m
[32m+[m[32m    bp->s.ptr = p->s.ptr->s.ptr;[m
[32m+[m[32m  } else[m
[32m+[m[32m    bp->s.ptr = p->s.ptr;[m
[32m+[m[32m 68a:	89 53 f8             	mov    %edx,-0x8(%ebx)[m
[32m+[m[32m  if(p + p->s.size == bp){[m
[32m+[m[32m 68d:	8b 50 04             	mov    0x4(%eax),%edx[m
[32m+[m[32m 690:	8d 34 d0             	lea    (%eax,%edx,8),%esi[m
[32m+[m[32m 693:	39 f1                	cmp    %esi,%ecx[m
[32m+[m[32m 695:	74 23                	je     6ba <free+0x7a>[m
[32m+[m[32m    p->s.size += bp->s.size;[m
[32m+[m[32m    p->s.ptr = bp->s.ptr;[m
[32m+[m[32m  } else[m
[32m+[m[32m    p->s.ptr = bp;[m
[32m+[m[32m 697:	89 08                	mov    %ecx,(%eax)[m
[32m+[m[32m  freep = p;[m
[32m+[m[32m 699:	a3 bc 0a 00 00       	mov    %eax,0xabc[m
[32m+[m[32m}[m
[32m+[m[32m 69e:	5b                   	pop    %ebx[m
[32m+[m[32m 69f:	5e                   	pop    %esi[m
[32m+[m[32m 6a0:	5f                   	pop    %edi[m
[32m+[m[32m 6a1:	5d                   	pop    %ebp[m
[32m+[m[32m 6a2:	c3                   	ret[m[41m    [m
[32m+[m[32m  bp = (Header*)ap - 1;[m
[32m+[m[32m  for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)[m
[32m+[m[32m    if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))[m
[32m+[m[32m      break;[m
[32m+[m[32m  if(bp + bp->s.size == p->s.ptr){[m
[32m+[m[32m    bp->s.size += p->s.ptr->s.size;[m
[32m+[m[32m 6a3:	03 72 04             	add    0x4(%edx),%esi[m
[32m+[m[32m 6a6:	89 73 fc             	mov    %esi,-0x4(%ebx)[m
[32m+[m[32m    bp->s.ptr = p->s.ptr->s.ptr;[m
[32m+[m[32m 6a9:	8b 10                	mov    (%eax),%edx[m
[32m+[m[32m 6ab:	8b 12                	mov    (%edx),%edx[m
[32m+[m[32m 6ad:	89 53 f8             	mov    %edx,-0x8(%ebx)[m
[32m+[m[32m  } else[m
[32m+[m[32m    bp->s.ptr = p->s.ptr;[m
[32m+[m[32m  if(p + p->s.size == bp){[m
[32m+[m[32m 6b0:	8b 50 04             	mov    0x4(%eax),%edx[m
[32m+[m[32m 6b3:	8d 34 d0             	lea    (%eax,%edx,8),%esi[m
[32m+[m[32m 6b6:	39 f1                	cmp    %esi,%ecx[m
[32m+[m[32m 6b8:	75 dd                	jne    697 <free+0x57>[m
[32m+[m[32m    p->s.size += bp->s.size;[m
[32m+[m[32m 6ba:	03 53 fc             	add    -0x4(%ebx),%edx[m
[32m+[m[32m    p->s.ptr = bp->s.ptr;[m
[32m+[m[32m  } else[m
[32m+[m[32m    p->s.ptr = bp;[m
[32m+[m[32m  freep = p;[m
[32m+[m[32m 6bd:	a3 bc 0a 00 00       	mov    %eax,0xabc[m
[32m+[m[32m    bp->s.size += p->s.ptr->s.size;[m
[32m+[m[32m    bp->s.ptr = p->s.ptr->s.ptr;[m
[32m+[m[32m  } else[m
[32m+[m[32m    bp->s.ptr = p->s.ptr;[m
[32m+[m[32m  if(p + p->s.size == bp){[m
[32m+[m[32m    p->s.size += bp->s.size;[m
[32m+[m[32m 6c2:	89 50 04             	mov    %edx,0x4(%eax)[m
[32m+[m[32m    p->s.ptr = bp->s.ptr;[m
[32m+[m[32m 6c5:	8b 53 f8             	mov    -0x8(%ebx),%edx[m
[32m+[m[32m 6c8:	89 10                	mov    %edx,(%eax)[m
[32m+[m[32m  } else[m
[32m+[m[32m    p->s.ptr = bp;[m
[32m+[m[32m  freep = p;[m
[32m+[m[32m}[m
[32m+[m[32m 6ca:	5b                   	pop    %ebx[m
[32m+[m[32m 6cb:	5e                   	pop    %esi[m
[32m+[m[32m 6cc:	5f                   	pop    %edi[m
[32m+[m[32m 6cd:	5d                   	pop    %ebp[m
[32m+[m[32m 6ce:	c3                   	ret[m[41m    [m
[32m+[m[32m 6cf:	90                   	nop[m
[32m+[m
[32m+[m[32m000006d0 <malloc>:[m
[32m+[m[32m  return freep;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid*[m
[32m+[m[32mmalloc(uint nbytes)[m
[32m+[m[32m{[m
[32m+[m[32m 6d0:	55                   	push   %ebp[m
[32m+[m[32m 6d1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m 6d3:	57                   	push   %edi[m
[32m+[m[32m 6d4:	56                   	push   %esi[m
[32m+[m[32m 6d5:	53                   	push   %ebx[m
[32m+[m[32m 6d6:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m  Header *p, *prevp;[m
[32m+[m[32m  uint nunits;[m
[32m+[m
[32m+[m[32m  nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;[m
[32m+[m[32m 6d9:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m  if((prevp = freep) == 0){[m
[32m+[m[32m 6dc:	8b 15 bc 0a 00 00    	mov    0xabc,%edx[m
[32m+[m[32mmalloc(uint nbytes)[m
[32m+[m[32m{[m
[32m+[m[32m  Header *p, *prevp;[m
[32m+[m[32m  uint nunits;[m
[32m+[m
[32m+[m[32m  nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;[m
[32m+[m[32m 6e2:	8d 78 07             	lea    0x7(%eax),%edi[m
[32m+[m[32m 6e5:	c1 ef 03             	shr    $0x3,%edi[m
[32m+[m[32m 6e8:	83 c7 01             	add    $0x1,%edi[m
[32m+[m[32m  if((prevp = freep) == 0){[m
[32m+[m[32m 6eb:	85 d2                	test   %edx,%edx[m
[32m+[m[32m 6ed:	0f 84 a3 00 00 00    	je     796 <malloc+0xc6>[m
[32m+[m[32m 6f3:	8b 02                	mov    (%edx),%eax[m
[32m+[m[32m 6f5:	8b 48 04             	mov    0x4(%eax),%ecx[m
[32m+[m[32m    base.s.ptr = freep = prevp = &base;[m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){[m
[32m+[m[32m    if(p->s.size >= nunits){[m
[32m+[m[32m 6f8:	39 cf                	cmp    %ecx,%edi[m
[32m+[m[32m 6fa:	76 74                	jbe    770 <malloc+0xa0>[m
[32m+[m[32m 6fc:	81 ff 00 10 00 00    	cmp    $0x1000,%edi[m
[32m+[m[32m 702:	be 00 10 00 00       	mov    $0x1000,%esi[m
[32m+[m[32m 707:	8d 1c fd 00 00 00 00 	lea    0x0(,%edi,8),%ebx[m
[32m+[m[32m 70e:	0f 43 f7             	cmovae %edi,%esi[m
[32m+[m[32m 711:	ba 00 80 00 00       	mov    $0x8000,%edx[m
[32m+[m[32m 716:	81 ff ff 0f 00 00    	cmp    $0xfff,%edi[m
[32m+[m[32m 71c:	0f 46 da             	cmovbe %edx,%ebx[m
[32m+[m[32m 71f:	eb 10                	jmp    731 <malloc+0x61>[m
[32m+[m[32m 721:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;[m
[32m+[m[32m  if((prevp = freep) == 0){[m
[32m+[m[32m    base.s.ptr = freep = prevp = &base;[m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){[m
[32m+[m[32m 728:	8b 02                	mov    (%edx),%eax[m
[32m+[m[32m    if(p->s.size >= nunits){[m
[32m+[m[32m 72a:	8b 48 04             	mov    0x4(%eax),%ecx[m
[32m+[m[32m 72d:	39 cf                	cmp    %ecx,%edi[m
[32m+[m[32m 72f:	76 3f                	jbe    770 <malloc+0xa0>[m
[32m+[m[32m        p->s.size = nunits;[m
[32m+[m[32m      }[m
[32m+[m[32m      freep = prevp;[m
[32m+[m[32m      return (void*)(p + 1);[m
[32m+[m[32m    }[m
[32m+[m[32m    if(p == freep)[m
[32m+[m[32m 731:	39 05 bc 0a 00 00    	cmp    %eax,0xabc[m
[32m+[m[32m 737:	89 c2                	mov    %eax,%edx[m
[32m+[m[32m 739:	75 ed                	jne    728 <malloc+0x58>[m
[32m+[m[32m  char *p;[m
[32m+[m[32m  Header *hp;[m
[32m+[m
[32m+[m[32m  if(nu < 4096)[m
[32m+[m[32m    nu = 4096;[m
[32m+[m[32m  p = sbrk(nu * sizeof(Header));[m
[32m+[m[32m 73b:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m 73e:	53                   	push   %ebx[m
[32m+[m[32m 73f:	e8 96 fc ff ff       	call   3da <sbrk>[m
[32m+[m[32m  if(p == (char*)-1)[m
[32m+[m[32m 744:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 747:	83 f8 ff             	cmp    $0xffffffff,%eax[m
[32m+[m[32m 74a:	74 1c                	je     768 <malloc+0x98>[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  hp = (Header*)p;[m
[32m+[m[32m  hp->s.size = nu;[m
[32m+[m[32m 74c:	89 70 04             	mov    %esi,0x4(%eax)[m
[32m+[m[32m  free((void*)(hp + 1));[m
[32m+[m[32m 74f:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m 752:	83 c0 08             	add    $0x8,%eax[m
[32m+[m[32m 755:	50                   	push   %eax[m
[32m+[m[32m 756:	e8 e5 fe ff ff       	call   640 <free>[m
[32m+[m[32m  return freep;[m
[32m+[m[32m 75b:	8b 15 bc 0a 00 00    	mov    0xabc,%edx[m
[32m+[m[32m      }[m
[32m+[m[32m      freep = prevp;[m
[32m+[m[32m      return (void*)(p + 1);[m
[32m+[m[32m    }[m
[32m+[m[32m    if(p == freep)[m
[32m+[m[32m      if((p = morecore(nunits)) == 0)[m
[32m+[m[32m 761:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m 764:	85 d2                	test   %edx,%edx[m
[32m+[m[32m 766:	75 c0                	jne    728 <malloc+0x58>[m
[32m+[m[32m        return 0;[m
[32m+[m[32m 768:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m 76a:	eb 1c                	jmp    788 <malloc+0xb8>[m
[32m+[m[32m 76c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    base.s.ptr = freep = prevp = &base;[m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){[m
[32m+[m[32m    if(p->s.size >= nunits){[m
[32m+[m[32m      if(p->s.size == nunits)[m
[32m+[m[32m 770:	39 cf                	cmp    %ecx,%edi[m
[32m+[m[32m 772:	74 1c                	je     790 <malloc+0xc0>[m
[32m+[m[32m        prevp->s.ptr = p->s.ptr;[m
[32m+[m[32m      else {[m
[32m+[m[32m        p->s.size -= nunits;[m
[32m+[m[32m 774:	29 f9                	sub    %edi,%ecx[m
[32m+[m[32m 776:	89 48 04             	mov    %ecx,0x4(%eax)[m
[32m+[m[32m        p += p->s.size;[m
[32m+[m[32m 779:	8d 04 c8             	lea    (%eax,%ecx,8),%eax[m
[32m+[m[32m        p->s.size = nunits;[m
[32m+[m[32m 77c:	89 78 04             	mov    %edi,0x4(%eax)[m
[32m+[m[32m      }[m
[32m+[m[32m      freep = prevp;[m
[32m+[m[32m 77f:	89 15 bc 0a 00 00    	mov    %edx,0xabc[m
[32m+[m[32m      return (void*)(p + 1);[m
[32m+[m[32m 785:	83 c0 08             	add    $0x8,%eax[m
[32m+[m[32m    }[m
[32m+[m[32m    if(p == freep)[m
[32m+[m[32m      if((p = morecore(nunits)) == 0)[m
[32m+[m[32m        return 0;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[32m 788:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m 78b:	5b                   	pop    %ebx[m
[32m+[m[32m 78c:	5e                   	pop    %esi[m
[32m+[m[32m 78d:	5f                   	pop    %edi[m
[32m+[m[32m 78e:	5d                   	pop    %ebp[m
[32m+[m[32m 78f:	c3                   	ret[m[41m    [m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){[m
[32m+[m[32m    if(p->s.size >= nunits){[m
[32m+[m[32m      if(p->s.size == nunits)[m
[32m+[m[32m        prevp->s.ptr = p->s.ptr;[m
[32m+[m[32m 790:	8b 08                	mov    (%eax),%ecx[m
[32m+[m[32m 792:	89 0a                	mov    %ecx,(%edx)[m
[32m+[m[32m 794:	eb e9                	jmp    77f <malloc+0xaf>[m
[32m+[m[32m  Header *p, *prevp;[m
[32m+[m[32m  uint nunits;[m
 [m
[31m-00000490 <printf>:[m
[31m- 490:	55                   	push   %ebp[m
[31m- 491:	89 e5                	mov    %esp,%ebp[m
[31m- 493:	57                   	push   %edi[m
[31m- 494:	56                   	push   %esi[m
[31m- 495:	53                   	push   %ebx[m
[31m- 496:	8d 45 10             	lea    0x10(%ebp),%eax[m
[31m- 499:	83 ec 2c             	sub    $0x2c,%esp[m
[31m- 49c:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[31m- 49f:	8b 7d 08             	mov    0x8(%ebp),%edi[m
[31m- 4a2:	89 45 d0             	mov    %eax,-0x30(%ebp)[m
[31m- 4a5:	0f b6 1e             	movzbl (%esi),%ebx[m
[31m- 4a8:	83 c6 01             	add    $0x1,%esi[m
[31m- 4ab:	84 db                	test   %bl,%bl[m
[31m- 4ad:	0f 84 b0 00 00 00    	je     563 <printf+0xd3>[m
[31m- 4b3:	31 d2                	xor    %edx,%edx[m
[31m- 4b5:	eb 39                	jmp    4f0 <printf+0x60>[m
[31m- 4b7:	89 f6                	mov    %esi,%esi[m
[31m- 4b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m- 4c0:	83 f8 25             	cmp    $0x25,%eax[m
[31m- 4c3:	89 55 d4             	mov    %edx,-0x2c(%ebp)[m
[31m- 4c6:	ba 25 00 00 00       	mov    $0x25,%edx[m
[31m- 4cb:	74 18                	je     4e5 <printf+0x55>[m
[31m- 4cd:	8d 45 e2             	lea    -0x1e(%ebp),%eax[m
[31m- 4d0:	83 ec 04             	sub    $0x4,%esp[m
[31m- 4d3:	88 5d e2             	mov    %bl,-0x1e(%ebp)[m
[31m- 4d6:	6a 01                	push   $0x1[m
[31m- 4d8:	50                   	push   %eax[m
[31m- 4d9:	57                   	push   %edi[m
[31m- 4da:	e8 83 fe ff ff       	call   362 <write>[m
[31m- 4df:	8b 55 d4             	mov    -0x2c(%ebp),%edx[m
[31m- 4e2:	83 c4 10             	add    $0x10,%esp[m
[31m- 4e5:	83 c6 01             	add    $0x1,%esi[m
[31m- 4e8:	0f b6 5e ff          	movzbl -0x1(%esi),%ebx[m
[31m- 4ec:	84 db                	test   %bl,%bl[m
[31m- 4ee:	74 73                	je     563 <printf+0xd3>[m
[31m- 4f0:	85 d2                	test   %edx,%edx[m
[31m- 4f2:	0f be cb             	movsbl %bl,%ecx[m
[31m- 4f5:	0f b6 c3             	movzbl %bl,%eax[m
[31m- 4f8:	74 c6                	je     4c0 <printf+0x30>[m
[31m- 4fa:	83 fa 25             	cmp    $0x25,%edx[m
[31m- 4fd:	75 e6                	jne    4e5 <printf+0x55>[m
[31m- 4ff:	83 f8 64             	cmp    $0x64,%eax[m
[31m- 502:	0f 84 f8 00 00 00    	je     600 <printf+0x170>[m
[31m- 508:	81 e1 f7 00 00 00    	and    $0xf7,%ecx[m
[31m- 50e:	83 f9 70             	cmp    $0x70,%ecx[m
[31m- 511:	74 5d                	je     570 <printf+0xe0>[m
[31m- 513:	83 f8 73             	cmp    $0x73,%eax[m
[31m- 516:	0f 84 84 00 00 00    	je     5a0 <printf+0x110>[m
[31m- 51c:	83 f8 63             	cmp    $0x63,%eax[m
[31m- 51f:	0f 84 ea 00 00 00    	je     60f <printf+0x17f>[m
[31m- 525:	83 f8 25             	cmp    $0x25,%eax[m
[31m- 528:	0f 84 c2 00 00 00    	je     5f0 <printf+0x160>[m
[31m- 52e:	8d 45 e7             	lea    -0x19(%ebp),%eax[m
[31m- 531:	83 ec 04             	sub    $0x4,%esp[m
[31m- 534:	c6 45 e7 25          	movb   $0x25,-0x19(%ebp)[m
[31m- 538:	6a 01                	push   $0x1[m
[31m- 53a:	50                   	push   %eax[m
[31m- 53b:	57                   	push   %edi[m
[31m- 53c:	e8 21 fe ff ff       	call   362 <write>[m
[31m- 541:	83 c4 0c             	add    $0xc,%esp[m
[31m- 544:	8d 45 e6             	lea    -0x1a(%ebp),%eax[m
[31m- 547:	88 5d e6             	mov    %bl,-0x1a(%ebp)[m
[31m- 54a:	6a 01                	push   $0x1[m
[31m- 54c:	50                   	push   %eax[m
[31m- 54d:	57                   	push   %edi[m
[31m- 54e:	83 c6 01             	add    $0x1,%esi[m
[31m- 551:	e8 0c fe ff ff       	call   362 <write>[m
[31m- 556:	0f b6 5e ff          	movzbl -0x1(%esi),%ebx[m
[31m- 55a:	83 c4 10             	add    $0x10,%esp[m
[31m- 55d:	31 d2                	xor    %edx,%edx[m
[31m- 55f:	84 db                	test   %bl,%bl[m
[31m- 561:	75 8d                	jne    4f0 <printf+0x60>[m
[31m- 563:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m- 566:	5b                   	pop    %ebx[m
[31m- 567:	5e                   	pop    %esi[m
[31m- 568:	5f                   	pop    %edi[m
[31m- 569:	5d                   	pop    %ebp[m
[31m- 56a:	c3                   	ret    [m
[31m- 56b:	90                   	nop[m
[31m- 56c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m- 570:	83 ec 0c             	sub    $0xc,%esp[m
[31m- 573:	b9 10 00 00 00       	mov    $0x10,%ecx[m
[31m- 578:	6a 00                	push   $0x0[m
[31m- 57a:	8b 5d d0             	mov    -0x30(%ebp),%ebx[m
[31m- 57d:	89 f8                	mov    %edi,%eax[m
[31m- 57f:	8b 13                	mov    (%ebx),%edx[m
[31m- 581:	e8 6a fe ff ff       	call   3f0 <printint>[m
[31m- 586:	89 d8                	mov    %ebx,%eax[m
[31m- 588:	83 c4 10             	add    $0x10,%esp[m
[31m- 58b:	31 d2                	xor    %edx,%edx[m
[31m- 58d:	83 c0 04             	add    $0x4,%eax[m
[31m- 590:	89 45 d0             	mov    %eax,-0x30(%ebp)[m
[31m- 593:	e9 4d ff ff ff       	jmp    4e5 <printf+0x55>[m
[31m- 598:	90                   	nop[m
[31m- 599:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m- 5a0:	8b 45 d0             	mov    -0x30(%ebp),%eax[m
[31m- 5a3:	8b 18                	mov    (%eax),%ebx[m
[31m- 5a5:	83 c0 04             	add    $0x4,%eax[m
[31m- 5a8:	89 45 d0             	mov    %eax,-0x30(%ebp)[m
[31m- 5ab:	b8 00 08 00 00       	mov    $0x800,%eax[m
[31m- 5b0:	85 db                	test   %ebx,%ebx[m
[31m- 5b2:	0f 44 d8             	cmove  %eax,%ebx[m
[31m- 5b5:	0f b6 03             	movzbl (%ebx),%eax[m
[31m- 5b8:	84 c0                	test   %al,%al[m
[31m- 5ba:	74 23                	je     5df <printf+0x14f>[m
[31m- 5bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m- 5c0:	88 45 e3             	mov    %al,-0x1d(%ebp)[m
[31m- 5c3:	8d 45 e3             	lea    -0x1d(%ebp),%eax[m
[31m- 5c6:	83 ec 04             	sub    $0x4,%esp[m
[31m- 5c9:	6a 01                	push   $0x1[m
[31m- 5cb:	83 c3 01             	add    $0x1,%ebx[m
[31m- 5ce:	50                   	push   %eax[m
[31m- 5cf:	57                   	push   %edi[m
[31m- 5d0:	e8 8d fd ff ff       	call   362 <write>[m
[31m- 5d5:	0f b6 03             	movzbl (%ebx),%eax[m
[31m- 5d8:	83 c4 10             	add    $0x10,%esp[m
[31m- 5db:	84 c0                	test   %al,%al[m
[31m- 5dd:	75 e1                	jne    5c0 <printf+0x130>[m
[31m- 5df:	31 d2                	xor    %edx,%edx[m
[31m- 5e1:	e9 ff fe ff ff       	jmp    4e5 <printf+0x55>[m
[31m- 5e6:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m- 5e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m- 5f0:	83 ec 04             	sub    $0x4,%esp[m
[31m- 5f3:	88 5d e5             	mov    %bl,-0x1b(%ebp)[m
[31m- 5f6:	8d 45 e5             	lea    -0x1b(%ebp),%eax[m
[31m- 5f9:	6a 01                	push   $0x1[m
[31m- 5fb:	e9 4c ff ff ff       	jmp    54c <printf+0xbc>[m
[31m- 600:	83 ec 0c             	sub    $0xc,%esp[m
[31m- 603:	b9 0a 00 00 00       	mov    $0xa,%ecx[m
[31m- 608:	6a 01                	push   $0x1[m
[31m- 60a:	e9 6b ff ff ff       	jmp    57a <printf+0xea>[m
[31m- 60f:	8b 5d d0             	mov    -0x30(%ebp),%ebx[m
[31m- 612:	83 ec 04             	sub    $0x4,%esp[m
[31m- 615:	8b 03                	mov    (%ebx),%eax[m
[31m- 617:	6a 01                	push   $0x1[m
[31m- 619:	88 45 e4             	mov    %al,-0x1c(%ebp)[m
[31m- 61c:	8d 45 e4             	lea    -0x1c(%ebp),%eax[m
[31m- 61f:	50                   	push   %eax[m
[31m- 620:	57                   	push   %edi[m
[31m- 621:	e8 3c fd ff ff       	call   362 <write>[m
[31m- 626:	e9 5b ff ff ff       	jmp    586 <printf+0xf6>[m
[31m- 62b:	66 90                	xchg   %ax,%ax[m
[31m- 62d:	66 90                	xchg   %ax,%ax[m
[31m- 62f:	90                   	nop[m
[31m-[m
[31m-00000630 <free>:[m
[31m- 630:	55                   	push   %ebp[m
[31m- 631:	a1 ac 0a 00 00       	mov    0xaac,%eax[m
[31m- 636:	89 e5                	mov    %esp,%ebp[m
[31m- 638:	57                   	push   %edi[m
[31m- 639:	56                   	push   %esi[m
[31m- 63a:	53                   	push   %ebx[m
[31m- 63b:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[31m- 63e:	8b 10                	mov    (%eax),%edx[m
[31m- 640:	8d 4b f8             	lea    -0x8(%ebx),%ecx[m
[31m- 643:	39 c8                	cmp    %ecx,%eax[m
[31m- 645:	73 19                	jae    660 <free+0x30>[m
[31m- 647:	89 f6                	mov    %esi,%esi[m
[31m- 649:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m- 650:	39 d1                	cmp    %edx,%ecx[m
[31m- 652:	72 1c                	jb     670 <free+0x40>[m
[31m- 654:	39 d0                	cmp    %edx,%eax[m
[31m- 656:	73 18                	jae    670 <free+0x40>[m
[31m- 658:	89 d0                	mov    %edx,%eax[m
[31m- 65a:	39 c8                	cmp    %ecx,%eax[m
[31m- 65c:	8b 10                	mov    (%eax),%edx[m
[31m- 65e:	72 f0                	jb     650 <free+0x20>[m
[31m- 660:	39 d0                	cmp    %edx,%eax[m
[31m- 662:	72 f4                	jb     658 <free+0x28>[m
[31m- 664:	39 d1                	cmp    %edx,%ecx[m
[31m- 666:	73 f0                	jae    658 <free+0x28>[m
[31m- 668:	90                   	nop[m
[31m- 669:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m- 670:	8b 73 fc             	mov    -0x4(%ebx),%esi[m
[31m- 673:	8d 3c f1             	lea    (%ecx,%esi,8),%edi[m
[31m- 676:	39 d7                	cmp    %edx,%edi[m
[31m- 678:	74 19                	je     693 <free+0x63>[m
[31m- 67a:	89 53 f8             	mov    %edx,-0x8(%ebx)[m
[31m- 67d:	8b 50 04             	mov    0x4(%eax),%edx[m
[31m- 680:	8d 34 d0             	lea    (%eax,%edx,8),%esi[m
[31m- 683:	39 f1                	cmp    %esi,%ecx[m
[31m- 685:	74 23                	je     6aa <free+0x7a>[m
[31m- 687:	89 08                	mov    %ecx,(%eax)[m
[31m- 689:	a3 ac 0a 00 00       	mov    %eax,0xaac[m
[31m- 68e:	5b                   	pop    %ebx[m
[31m- 68f:	5e                   	pop    %esi[m
[31m- 690:	5f                   	pop    %edi[m
[31m- 691:	5d                   	pop    %ebp[m
[31m- 692:	c3                   	ret    [m
[31m- 693:	03 72 04             	add    0x4(%edx),%esi[m
[31m- 696:	89 73 fc             	mov    %esi,-0x4(%ebx)[m
[31m- 699:	8b 10                	mov    (%eax),%edx[m
[31m- 69b:	8b 12                	mov    (%edx),%edx[m
[31m- 69d:	89 53 f8             	mov    %edx,-0x8(%ebx)[m
[31m- 6a0:	8b 50 04             	mov    0x4(%eax),%edx[m
[31m- 6a3:	8d 34 d0             	lea    (%eax,%edx,8),%esi[m
[31m- 6a6:	39 f1                	cmp    %esi,%ecx[m
[31m- 6a8:	75 dd                	jne    687 <free+0x57>[m
[31m- 6aa:	03 53 fc             	add    -0x4(%ebx),%edx[m
[31m- 6ad:	a3 ac 0a 00 00       	mov    %eax,0xaac[m
[31m- 6b2:	89 50 04             	mov    %edx,0x4(%eax)[m
[31m- 6b5:	8b 53 f8             	mov    -0x8(%ebx),%edx[m
[31m- 6b8:	89 10                	mov    %edx,(%eax)[m
[31m- 6ba:	5b                   	pop    %ebx[m
[31m- 6bb:	5e                   	pop    %esi[m
[31m- 6bc:	5f                   	pop    %edi[m
[31m- 6bd:	5d                   	pop    %ebp[m
[31m- 6be:	c3                   	ret    [m
[31m- 6bf:	90                   	nop[m
[31m-[m
[31m-000006c0 <malloc>:[m
[31m- 6c0:	55                   	push   %ebp[m
[31m- 6c1:	89 e5                	mov    %esp,%ebp[m
[31m- 6c3:	57                   	push   %edi[m
[31m- 6c4:	56                   	push   %esi[m
[31m- 6c5:	53                   	push   %ebx[m
[31m- 6c6:	83 ec 0c             	sub    $0xc,%esp[m
[31m- 6c9:	8b 45 08             	mov    0x8(%ebp),%eax[m
[31m- 6cc:	8b 15 ac 0a 00 00    	mov    0xaac,%edx[m
[31m- 6d2:	8d 78 07             	lea    0x7(%eax),%edi[m
[31m- 6d5:	c1 ef 03             	shr    $0x3,%edi[m
[31m- 6d8:	83 c7 01             	add    $0x1,%edi[m
[31m- 6db:	85 d2                	test   %edx,%edx[m
[31m- 6dd:	0f 84 a3 00 00 00    	je     786 <malloc+0xc6>[m
[31m- 6e3:	8b 02                	mov    (%edx),%eax[m
[31m- 6e5:	8b 48 04             	mov    0x4(%eax),%ecx[m
[31m- 6e8:	39 cf                	cmp    %ecx,%edi[m
[31m- 6ea:	76 74                	jbe    760 <malloc+0xa0>[m
[31m- 6ec:	81 ff 00 10 00 00    	cmp    $0x1000,%edi[m
[31m- 6f2:	be 00 10 00 00       	mov    $0x1000,%esi[m
[31m- 6f7:	8d 1c fd 00 00 00 00 	lea    0x0(,%edi,8),%ebx[m
[31m- 6fe:	0f 43 f7             	cmovae %edi,%esi[m
[31m- 701:	ba 00 80 00 00       	mov    $0x8000,%edx[m
[31m- 706:	81 ff ff 0f 00 00    	cmp    $0xfff,%edi[m
[31m- 70c:	0f 46 da             	cmovbe %edx,%ebx[m
[31m- 70f:	eb 10                	jmp    721 <malloc+0x61>[m
[31m- 711:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m- 718:	8b 02                	mov    (%edx),%eax[m
[31m- 71a:	8b 48 04             	mov    0x4(%eax),%ecx[m
[31m- 71d:	39 cf                	cmp    %ecx,%edi[m
[31m- 71f:	76 3f                	jbe    760 <malloc+0xa0>[m
[31m- 721:	39 05 ac 0a 00 00    	cmp    %eax,0xaac[m
[31m- 727:	89 c2                	mov    %eax,%edx[m
[31m- 729:	75 ed                	jne    718 <malloc+0x58>[m
[31m- 72b:	83 ec 0c             	sub    $0xc,%esp[m
[31m- 72e:	53                   	push   %ebx[m
[31m- 72f:	e8 96 fc ff ff       	call   3ca <sbrk>[m
[31m- 734:	83 c4 10             	add    $0x10,%esp[m
[31m- 737:	83 f8 ff             	cmp    $0xffffffff,%eax[m
[31m- 73a:	74 1c                	je     758 <malloc+0x98>[m
[31m- 73c:	89 70 04             	mov    %esi,0x4(%eax)[m
[31m- 73f:	83 ec 0c             	sub    $0xc,%esp[m
[31m- 742:	83 c0 08             	add    $0x8,%eax[m
[31m- 745:	50                   	push   %eax[m
[31m- 746:	e8 e5 fe ff ff       	call   630 <free>[m
[31m- 74b:	8b 15 ac 0a 00 00    	mov    0xaac,%edx[m
[31m- 751:	83 c4 10             	add    $0x10,%esp[m
[31m- 754:	85 d2                	test   %edx,%edx[m
[31m- 756:	75 c0                	jne    718 <malloc+0x58>[m
[31m- 758:	31 c0                	xor    %eax,%eax[m
[31m- 75a:	eb 1c                	jmp    778 <malloc+0xb8>[m
[31m- 75c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m- 760:	39 cf                	cmp    %ecx,%edi[m
[31m- 762:	74 1c                	je     780 <malloc+0xc0>[m
[31m- 764:	29 f9                	sub    %edi,%ecx[m
[31m- 766:	89 48 04             	mov    %ecx,0x4(%eax)[m
[31m- 769:	8d 04 c8             	lea    (%eax,%ecx,8),%eax[m
[31m- 76c:	89 78 04             	mov    %edi,0x4(%eax)[m
[31m- 76f:	89 15 ac 0a 00 00    	mov    %edx,0xaac[m
[31m- 775:	83 c0 08             	add    $0x8,%eax[m
[31m- 778:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m- 77b:	5b                   	pop    %ebx[m
[31m- 77c:	5e                   	pop    %esi[m
[31m- 77d:	5f                   	pop    %edi[m
[31m- 77e:	5d                   	pop    %ebp[m
[31m- 77f:	c3                   	ret    [m
[31m- 780:	8b 08                	mov    (%eax),%ecx[m
[31m- 782:	89 0a                	mov    %ecx,(%edx)[m
[31m- 784:	eb e9                	jmp    76f <malloc+0xaf>[m
[31m- 786:	c7 05 ac 0a 00 00 b0 	movl   $0xab0,0xaac[m
[31m- 78d:	0a 00 00 [m
[31m- 790:	c7 05 b0 0a 00 00 b0 	movl   $0xab0,0xab0[m
[31m- 797:	0a 00 00 [m
[31m- 79a:	b8 b0 0a 00 00       	mov    $0xab0,%eax[m
[31m- 79f:	c7 05 b4 0a 00 00 00 	movl   $0x0,0xab4[m
[31m- 7a6:	00 00 00 [m
[31m- 7a9:	e9 3e ff ff ff       	jmp    6ec <malloc+0x2c>[m
[32m+[m[32m  nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;[m
[32m+[m[32m  if((prevp = freep) == 0){[m
[32m+[m[32m    base.s.ptr = freep = prevp = &base;[m
[32m+[m[32m 796:	c7 05 bc 0a 00 00 c0 	movl   $0xac0,0xabc[m
[32m+[m[32m 79d:	0a 00 00[m[41m [m
[32m+[m[32m 7a0:	c7 05 c0 0a 00 00 c0 	movl   $0xac0,0xac0[m
[32m+[m[32m 7a7:	0a 00 00[m[41m [m
[32m+[m[32m    base.s.size = 0;[m
[32m+[m[32m 7aa:	b8 c0 0a 00 00       	mov    $0xac0,%eax[m
[32m+[m[32m 7af:	c7 05 c4 0a 00 00 00 	movl   $0x0,0xac4[m
[32m+[m[32m 7b6:	00 00 00[m[41m [m
[32m+[m[32m 7b9:	e9 3e ff ff ff       	jmp    6fc <malloc+0x2c>[m
[1mdiff --git a/init.c b/init.c[m
[1mindex bc2331c..8da3b90 100644[m
[1m--- a/init.c[m
[1m+++ b/init.c[m
[36m@@ -24,14 +24,14 @@[m [mmain(void)[m
     pid = fork();[m
     if(pid < 0){[m
       printf(1, "init: fork failed\n");[m
[31m-      exit(11);[m
[32m+[m[32m      exit(0);[m
     }[m
     if(pid == 0){[m
       exec("sh", argv);[m
       printf(1, "init: exec sh failed\n");[m
[31m-      exit(11);[m
[32m+[m[32m      exit(0);[m
     }[m
[31m-    while((wpid=wait()) >= 0 && wpid != pid)[m
[32m+[m[32m    while((wpid=wait(0)) >= 0 && wpid != pid)[m
       printf(1, "zombie!\n");[m
   }[m
 }[m
[1mdiff --git a/init.o b/init.o[m
[1mindex e3b73da..e4c8076 100644[m
Binary files a/init.o and b/init.o differ
[1mdiff --git a/init.sym b/init.sym[m
[1mindex 44c4c53..4e9f927 100644[m
[1m--- a/init.sym[m
[1m+++ b/init.sym[m
[36m@@ -1,8 +1,8 @@[m
 00000000 .text[m
[31m-000007b0 .rodata[m
[31m-0000081c .eh_frame[m
[31m-00000aa4 .data[m
[31m-00000aac .bss[m
[32m+[m[32m000007c0 .rodata[m
[32m+[m[32m0000082c .eh_frame[m
[32m+[m[32m00000ab4 .data[m
[32m+[m[32m00000abc .bss[m
 00000000 .comment[m
 00000000 .debug_aranges[m
 00000000 .debug_info[m
[36m@@ -14,46 +14,47 @@[m
 00000000 init.c[m
 00000000 ulib.c[m
 00000000 printf.c[m
[31m-000003f0 printint[m
[31m-00000808 digits.1107[m
[32m+[m[32m00000400 printint[m
[32m+[m[32m00000818 digits.1110[m
 00000000 umalloc.c[m
[31m-00000aac freep[m
[31m-00000ab0 base[m
[31m-00000100 strcpy[m
[31m-00000490 printf[m
[31m-00000aa4 argv[m
[31m-00000310 memmove[m
[31m-0000038a mknod[m
[31m-00000210 gets[m
[31m-000003c2 getpid[m
[31m-000006c0 malloc[m
[31m-000003d2 sleep[m
[31m-00000352 pipe[m
[31m-00000362 write[m
[31m-0000039a fstat[m
[31m-00000372 kill[m
[31m-000003b2 chdir[m
[31m-0000037a exec[m
[31m-0000034a wait[m
[31m-0000035a read[m
[31m-00000392 unlink[m
[31m-0000033a fork[m
[31m-000003ca sbrk[m
[31m-000003da uptime[m
[31m-00000aac __bss_start[m
[31m-000001b0 memset[m
[32m+[m[32m00000abc freep[m
[32m+[m[32m00000ac0 base[m
[32m+[m[32m00000110 strcpy[m
[32m+[m[32m000004a0 printf[m
[32m+[m[32m00000ab4 argv[m
[32m+[m[32m00000320 memmove[m
[32m+[m[32m0000039a mknod[m
[32m+[m[32m00000220 gets[m
[32m+[m[32m000003d2 getpid[m
[32m+[m[32m000006d0 malloc[m
[32m+[m[32m000003e2 sleep[m
[32m+[m[32m00000362 pipe[m
[32m+[m[32m00000372 write[m
[32m+[m[32m000003aa fstat[m
[32m+[m[32m00000382 kill[m
[32m+[m[32m000003c2 chdir[m
[32m+[m[32m0000038a exec[m
[32m+[m[32m0000035a wait[m
[32m+[m[32m0000036a read[m
[32m+[m[32m000003a2 unlink[m
[32m+[m[32m0000034a fork[m
[32m+[m[32m000003da sbrk[m
[32m+[m[32m000003ea uptime[m
[32m+[m[32m00000abc __bss_start[m
[32m+[m[32m000001c0 memset[m
 00000000 main[m
[31m-00000130 strcmp[m
[31m-000003ba dup[m
[31m-00000280 stat[m
[31m-00000aac _edata[m
[31m-00000ab8 _end[m
[31m-000003a2 link[m
[31m-00000342 exit[m
[31m-000002d0 atoi[m
[31m-00000180 strlen[m
[31m-00000382 open[m
[31m-000001d0 strchr[m
[31m-000003aa mkdir[m
[31m-0000036a close[m
[31m-00000630 free[m
[32m+[m[32m00000140 strcmp[m
[32m+[m[32m000003ca dup[m
[32m+[m[32m00000290 stat[m
[32m+[m[32m00000abc _edata[m
[32m+[m[32m00000ac8 _end[m
[32m+[m[32m000003b2 link[m
[32m+[m[32m00000352 exit[m
[32m+[m[32m000002e0 atoi[m
[32m+[m[32m00000190 strlen[m
[32m+[m[32m00000392 open[m
[32m+[m[32m000003f2 set[m
[32m+[m[32m000001e0 strchr[m
[32m+[m[32m000003ba mkdir[m
[32m+[m[32m0000037a close[m
[32m+[m[32m00000640 free[m
[1mdiff --git a/initcode.S b/initcode.S[m
[1mindex eb72610..b8229b8 100644[m
[1m--- a/initcode.S[m
[1m+++ b/initcode.S[m
[36m@@ -14,7 +14,7 @@[m [mstart:[m
   movl $SYS_exec, %eax[m
   int $T_SYSCALL[m
 [m
[31m-# for(;;) exit(11);[m
[32m+[m[32m# for(;;) exit(0);[m
 exit:[m
   movl $SYS_exit, %eax[m
   int $T_SYSCALL[m
[1mdiff --git a/initcode.asm b/initcode.asm[m
[1mindex 09091d1..a07f9ee 100644[m
[1m--- a/initcode.asm[m
[1m+++ b/initcode.asm[m
[36m@@ -23,7 +23,7 @@[m [mstart:[m
 [m
 00000013 <exit>:[m
 [m
[31m-# for(;;) exit(11);[m
[32m+[m[32m# for(;;) exit(0);[m
 exit:[m
   movl $SYS_exit, %eax[m
   13:	b8 02 00 00 00       	mov    $0x2,%eax[m
[1mdiff --git a/initcode.o b/initcode.o[m
[1mindex c531bc7..e14ce79 100644[m
Binary files a/initcode.o and b/initcode.o differ
[1mdiff --git a/initcode.out b/initcode.out[m
[1mindex bcbd54d..91dc2c7 100755[m
Binary files a/initcode.out and b/initcode.out differ
[1mdiff --git a/ioapic.o b/ioapic.o[m
[1mindex 9e50ea6..27ee237 100644[m
Binary files a/ioapic.o and b/ioapic.o differ
[1mdiff --git a/kalloc.o b/kalloc.o[m
[1mindex 28146ad..06ea733 100644[m
Binary files a/kalloc.o and b/kalloc.o differ
[1mdiff --git a/kbd.o b/kbd.o[m
[1mindex 2f2cb70..5ccced6 100644[m
Binary files a/kbd.o and b/kbd.o differ
[1mdiff --git a/kernel b/kernel[m
[1mindex 180197c..5c1e985 100755[m
Binary files a/kernel and b/kernel differ
[1mdiff --git a/kernel.asm b/kernel.asm[m
[1mindex 265112c..2c7b8ad 100644[m
[1m--- a/kernel.asm[m
[1m+++ b/kernel.asm[m
[36m@@ -20,7 +20,7 @@[m [mDisassembly of section .text:[m
 80100020:	0d 00 00 01 80       	or     $0x80010000,%eax[m
 80100025:	0f 22 c0             	mov    %eax,%cr0[m
 80100028:	bc d0 b5 10 80       	mov    $0x8010b5d0,%esp[m
[31m-8010002d:	b8 20 2f 10 80       	mov    $0x80102f20,%eax[m
[32m+[m[32m8010002d:	b8 20 30 10 80       	mov    $0x80103020,%eax[m
 80100032:	ff e0                	jmp    *%eax[m
 80100034:	66 90                	xchg   %ax,%ax[m
 80100036:	66 90                	xchg   %ax,%ax[m
[36m@@ -30,16 +30,42 @@[m [mDisassembly of section .text:[m
 8010003e:	66 90                	xchg   %ax,%ax[m
 [m
 80100040 <binit>:[m
[32m+[m[32m  struct buf head;[m
[32m+[m[32m} bcache;[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mbinit(void)[m
[32m+[m[32m{[m
 80100040:	55                   	push   %ebp[m
 80100041:	89 e5                	mov    %esp,%ebp[m
 80100043:	53                   	push   %ebx[m
[32m+[m
[32m+[m[32m//PAGEBREAK![m
[32m+[m[32m  // Create linked list of buffers[m
[32m+[m[32m  bcache.head.prev = &bcache.head;[m
[32m+[m[32m  bcache.head.next = &bcache.head;[m
[32m+[m[32m  for(b = bcache.buf; b < bcache.buf+NBUF; b++){[m
 80100044:	bb 14 b6 10 80       	mov    $0x8010b614,%ebx[m
[32m+[m[32m  struct buf head;[m
[32m+[m[32m} bcache;[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mbinit(void)[m
[32m+[m[32m{[m
 80100049:	83 ec 0c             	sub    $0xc,%esp[m
[31m-8010004c:	68 c0 6f 10 80       	push   $0x80106fc0[m
[32m+[m[32m  struct buf *b;[m
[32m+[m
[32m+[m[32m  initlock(&bcache.lock, "bcache");[m
[32m+[m[32m8010004c:	68 40 72 10 80       	push   $0x80107240[m
 80100051:	68 e0 b5 10 80       	push   $0x8010b5e0[m
[31m-80100056:	e8 45 42 00 00       	call   801042a0 <initlock>[m
[32m+[m[32m80100056:	e8 55 43 00 00       	call   801043b0 <initlock>[m
[32m+[m
[32m+[m[32m//PAGEBREAK![m
[32m+[m[32m  // Create linked list of buffers[m
[32m+[m[32m  bcache.head.prev = &bcache.head;[m
 8010005b:	c7 05 2c fd 10 80 dc 	movl   $0x8010fcdc,0x8010fd2c[m
 80100062:	fc 10 80 [m
[32m+[m[32m  bcache.head.next = &bcache.head;[m
 80100065:	c7 05 30 fd 10 80 dc 	movl   $0x8010fcdc,0x8010fd30[m
 8010006c:	fc 10 80 [m
 8010006f:	83 c4 10             	add    $0x10,%esp[m
[36m@@ -47,21 +73,67 @@[m [mDisassembly of section .text:[m
 80100077:	eb 09                	jmp    80100082 <binit+0x42>[m
 80100079:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
 80100080:	89 c3                	mov    %eax,%ebx[m
[32m+[m[32m  for(b = bcache.buf; b < bcache.buf+NBUF; b++){[m
[32m+[m[32m    b->next = bcache.head.next;[m
[32m+[m[32m    b->prev = &bcache.head;[m
[32m+[m[32m    initsleeplock(&b->lock, "buffer");[m
 80100082:	8d 43 0c             	lea    0xc(%ebx),%eax[m
 80100085:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m//PAGEBREAK![m
[32m+[m[32m  // Create linked list of buffers[m
[32m+[m[32m  bcache.head.prev = &bcache.head;[m
[32m+[m[32m  bcache.head.next = &bcache.head;[m
[32m+[m[32m  for(b = bcache.buf; b < bcache.buf+NBUF; b++){[m
[32m+[m[32m    b->next = bcache.head.next;[m
 80100088:	89 53 54             	mov    %edx,0x54(%ebx)[m
[32m+[m[32m    b->prev = &bcache.head;[m
 8010008b:	c7 43 50 dc fc 10 80 	movl   $0x8010fcdc,0x50(%ebx)[m
[31m-80100092:	68 c7 6f 10 80       	push   $0x80106fc7[m
[32m+[m[32m    initsleeplock(&b->lock, "buffer");[m
[32m+[m[32m80100092:	68 47 72 10 80       	push   $0x80107247[m
 80100097:	50                   	push   %eax[m
[31m-80100098:	e8 f3 40 00 00       	call   80104190 <initsleeplock>[m
[32m+[m[32m80100098:	e8 03 42 00 00       	call   801042a0 <initsleeplock>[m
[32m+[m[32m    bcache.head.next->prev = b;[m
 8010009d:	a1 30 fd 10 80       	mov    0x8010fd30,%eax[m
[32m+[m
[32m+[m[32m//PAGEBREAK![m
[32m+[m[32m  // Create linked list of buffers[m
[32m+[m[32m  bcache.head.prev = &bcache.head;[m
[32m+[m[32m  bcache.head.next = &bcache.head;[m
[32m+[m[32m  for(b = bcache.buf; b < bcache.buf+NBUF; b++){[m
 801000a2:	83 c4 10             	add    $0x10,%esp[m
 801000a5:	89 da                	mov    %ebx,%edx[m
[32m+[m[32m    b->next = bcache.head.next;[m
[32m+[m[32m    b->prev = &bcache.head;[m
[32m+[m[32m    initsleeplock(&b->lock, "buffer");[m
[32m+[m[32m    bcache.head.next->prev = b;[m
 801000a7:	89 58 50             	mov    %ebx,0x50(%eax)[m
[32m+[m
[32m+[m[32m//PAGEBREAK![m
[32m+[m[32m  // Create linked list of buffers[m
[32m+[m[32m  bcache.head.prev = &bcache.head;[m
[32m+[m[32m  bcache.head.next = &bcache.head;[m
[32m+[m[32m  for(b = bcache.buf; b < bcache.buf+NBUF; b++){[m
 801000aa:	8d 83 5c 02 00 00    	lea    0x25c(%ebx),%eax[m
[32m+[m[32m    b->next = bcache.head.next;[m
[32m+[m[32m    b->prev = &bcache.head;[m
[32m+[m[32m    initsleeplock(&b->lock, "buffer");[m
[32m+[m[32m    bcache.head.next->prev = b;[m
[32m+[m[32m    bcache.head.next = b;[m
 801000b0:	89 1d 30 fd 10 80    	mov    %ebx,0x8010fd30[m
[32m+[m
[32m+[m[32m//PAGEBREAK![m
[32m+[m[32m  // Create linked list of buffers[m
[32m+[m[32m  bcache.head.prev = &bcache.head;[m
[32m+[m[32m  bcache.head.next = &bcache.head;[m
[32m+[m[32m  for(b = bcache.buf; b < bcache.buf+NBUF; b++){[m
 801000b6:	3d dc fc 10 80       	cmp    $0x8010fcdc,%eax[m
 801000bb:	75 c3                	jne    80100080 <binit+0x40>[m
[32m+[m[32m    b->prev = &bcache.head;[m
[32m+[m[32m    initsleeplock(&b->lock, "buffer");[m
[32m+[m[32m    bcache.head.next->prev = b;[m
[32m+[m[32m    bcache.head.next = b;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
 801000bd:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
 801000c0:	c9                   	leave  [m
 801000c1:	c3                   	ret    [m
[36m@@ -69,6 +141,12 @@[m [mDisassembly of section .text:[m
 801000c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
 801000d0 <bread>:[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Return a locked buf with the contents of the indicated block.[m
[32m+[m[32mstruct buf*[m
[32m+[m[32mbread(uint dev, uint blockno)[m
[32m+[m[32m{[m
 801000d0:	55                   	push   %ebp[m
 801000d1:	89 e5                	mov    %esp,%ebp[m
 801000d3:	57                   	push   %edi[m
[36m@@ -77,8 +155,17 @@[m [mDisassembly of section .text:[m
 801000d6:	83 ec 18             	sub    $0x18,%esp[m
 801000d9:	8b 75 08             	mov    0x8(%ebp),%esi[m
 801000dc:	8b 7d 0c             	mov    0xc(%ebp),%edi[m
[32m+[m[32mstatic struct buf*[m
[32m+[m[32mbget(uint dev, uint blockno)[m
[32m+[m[32m{[m
[32m+[m[32m  struct buf *b;[m
[32m+[m
[32m+[m[32m  acquire(&bcache.lock);[m
 801000df:	68 e0 b5 10 80       	push   $0x8010b5e0[m
[31m-801000e4:	e8 d7 41 00 00       	call   801042c0 <acquire>[m
[32m+[m[32m801000e4:	e8 e7 42 00 00       	call   801043d0 <acquire>[m
[32m+[m
[32m+[m[32m  // Is the block already cached?[m
[32m+[m[32m  for(b = bcache.head.next; b != &bcache.head; b = b->next){[m
 801000e9:	8b 1d 30 fd 10 80    	mov    0x8010fd30,%ebx[m
 801000ef:	83 c4 10             	add    $0x10,%esp[m
 801000f2:	81 fb dc fc 10 80    	cmp    $0x8010fcdc,%ebx[m
[36m@@ -88,14 +175,22 @@[m [mDisassembly of section .text:[m
 80100100:	8b 5b 54             	mov    0x54(%ebx),%ebx[m
 80100103:	81 fb dc fc 10 80    	cmp    $0x8010fcdc,%ebx[m
 80100109:	74 15                	je     80100120 <bread+0x50>[m
[32m+[m[32m    if(b->dev == dev && b->blockno == blockno){[m
 8010010b:	3b 73 04             	cmp    0x4(%ebx),%esi[m
 8010010e:	75 f0                	jne    80100100 <bread+0x30>[m
 80100110:	3b 7b 08             	cmp    0x8(%ebx),%edi[m
 80100113:	75 eb                	jne    80100100 <bread+0x30>[m
[32m+[m[32m      b->refcnt++;[m
 80100115:	83 43 4c 01          	addl   $0x1,0x4c(%ebx)[m
 80100119:	eb 3f                	jmp    8010015a <bread+0x8a>[m
 8010011b:	90                   	nop[m
 8010011c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Not cached; recycle some unused buffer and clean buffer[m
[32m+[m[32m  // "clean" because B_DIRTY and not locked means log.c[m
[32m+[m[32m  // hasn't yet committed the changes to the buffer.[m
[32m+[m[32m  for(b = bcache.head.prev; b != &bcache.head; b = b->prev){[m
 80100120:	8b 1d 2c fd 10 80    	mov    0x8010fd2c,%ebx[m
 80100126:	81 fb dc fc 10 80    	cmp    $0x8010fcdc,%ebx[m
 8010012c:	75 0d                	jne    8010013b <bread+0x6b>[m
[36m@@ -103,28 +198,45 @@[m [mDisassembly of section .text:[m
 80100130:	8b 5b 50             	mov    0x50(%ebx),%ebx[m
 80100133:	81 fb dc fc 10 80    	cmp    $0x8010fcdc,%ebx[m
 80100139:	74 55                	je     80100190 <bread+0xc0>[m
[32m+[m[32m    if(b->refcnt == 0 && (b->flags & B_DIRTY) == 0) {[m
 8010013b:	8b 43 4c             	mov    0x4c(%ebx),%eax[m
 8010013e:	85 c0                	test   %eax,%eax[m
 80100140:	75 ee                	jne    80100130 <bread+0x60>[m
 80100142:	f6 03 04             	testb  $0x4,(%ebx)[m
 80100145:	75 e9                	jne    80100130 <bread+0x60>[m
[32m+[m[32m      b->dev = dev;[m
 80100147:	89 73 04             	mov    %esi,0x4(%ebx)[m
[32m+[m[32m      b->blockno = blockno;[m
 8010014a:	89 7b 08             	mov    %edi,0x8(%ebx)[m
[32m+[m[32m      b->flags = 0;[m
 8010014d:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)[m
[32m+[m[32m      b->refcnt = 1;[m
 80100153:	c7 43 4c 01 00 00 00 	movl   $0x1,0x4c(%ebx)[m
[32m+[m[32m      release(&bcache.lock);[m
 8010015a:	83 ec 0c             	sub    $0xc,%esp[m
 8010015d:	68 e0 b5 10 80       	push   $0x8010b5e0[m
[31m-80100162:	e8 39 43 00 00       	call   801044a0 <release>[m
[32m+[m[32m80100162:	e8 49 44 00 00       	call   801045b0 <release>[m
[32m+[m[32m      acquiresleep(&b->lock);[m
 80100167:	8d 43 0c             	lea    0xc(%ebx),%eax[m
 8010016a:	89 04 24             	mov    %eax,(%esp)[m
[31m-8010016d:	e8 5e 40 00 00       	call   801041d0 <acquiresleep>[m
[32m+[m[32m8010016d:	e8 6e 41 00 00       	call   801042e0 <acquiresleep>[m
 80100172:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32mbread(uint dev, uint blockno)[m
[32m+[m[32m{[m
[32m+[m[32m  struct buf *b;[m
[32m+[m
[32m+[m[32m  b = bget(dev, blockno);[m
[32m+[m[32m  if(!(b->flags & B_VALID)) {[m
 80100175:	f6 03 02             	testb  $0x2,(%ebx)[m
 80100178:	75 0c                	jne    80100186 <bread+0xb6>[m
[32m+[m[32m    iderw(b);[m
 8010017a:	83 ec 0c             	sub    $0xc,%esp[m
 8010017d:	53                   	push   %ebx[m
[31m-8010017e:	e8 9d 1f 00 00       	call   80102120 <iderw>[m
[32m+[m[32m8010017e:	e8 9d 20 00 00       	call   80102220 <iderw>[m
 80100183:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m  }[m
[32m+[m[32m  return b;[m
[32m+[m[32m}[m
 80100186:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
 80100189:	89 d8                	mov    %ebx,%eax[m
 8010018b:	5b                   	pop    %ebx[m
[36m@@ -132,82 +244,175 @@[m [mDisassembly of section .text:[m
 8010018d:	5f                   	pop    %edi[m
 8010018e:	5d                   	pop    %ebp[m
 8010018f:	c3                   	ret    [m
[32m+[m[32m      release(&bcache.lock);[m
[32m+[m[32m      acquiresleep(&b->lock);[m
[32m+[m[32m      return b;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  panic("bget: no buffers");[m
 80100190:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100193:	68 ce 6f 10 80       	push   $0x80106fce[m
[32m+[m[32m80100193:	68 4e 72 10 80       	push   $0x8010724e[m
 80100198:	e8 d3 01 00 00       	call   80100370 <panic>[m
 8010019d:	8d 76 00             	lea    0x0(%esi),%esi[m
 [m
 801001a0 <bwrite>:[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Write b's contents to disk.  Must be locked.[m
[32m+[m[32mvoid[m
[32m+[m[32mbwrite(struct buf *b)[m
[32m+[m[32m{[m
 801001a0:	55                   	push   %ebp[m
 801001a1:	89 e5                	mov    %esp,%ebp[m
 801001a3:	53                   	push   %ebx[m
 801001a4:	83 ec 10             	sub    $0x10,%esp[m
 801001a7:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m  if(!holdingsleep(&b->lock))[m
 801001aa:	8d 43 0c             	lea    0xc(%ebx),%eax[m
 801001ad:	50                   	push   %eax[m
[31m-801001ae:	e8 bd 40 00 00       	call   80104270 <holdingsleep>[m
[32m+[m[32m801001ae:	e8 cd 41 00 00       	call   80104380 <holdingsleep>[m
 801001b3:	83 c4 10             	add    $0x10,%esp[m
 801001b6:	85 c0                	test   %eax,%eax[m
 801001b8:	74 0f                	je     801001c9 <bwrite+0x29>[m
[32m+[m[32m    panic("bwrite");[m
[32m+[m[32m  b->flags |= B_DIRTY;[m
 801001ba:	83 0b 04             	orl    $0x4,(%ebx)[m
[32m+[m[32m  iderw(b);[m
 801001bd:	89 5d 08             	mov    %ebx,0x8(%ebp)[m
[32m+[m[32m}[m
 801001c0:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
 801001c3:	c9                   	leave  [m
[31m-801001c4:	e9 57 1f 00 00       	jmp    80102120 <iderw>[m
[32m+[m[32mbwrite(struct buf *b)[m
[32m+[m[32m{[m
[32m+[m[32m  if(!holdingsleep(&b->lock))[m
[32m+[m[32m    panic("bwrite");[m
[32m+[m[32m  b->flags |= B_DIRTY;[m
[32m+[m[32m  iderw(b);[m
[32m+[m[32m801001c4:	e9 57 20 00 00       	jmp    80102220 <iderw>[m
[32m+[m[32m// Write b's contents to disk.  Must be locked.[m
[32m+[m[32mvoid[m
[32m+[m[32mbwrite(struct buf *b)[m
[32m+[m[32m{[m
[32m+[m[32m  if(!holdingsleep(&b->lock))[m
[32m+[m[32m    panic("bwrite");[m
 801001c9:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801001cc:	68 df 6f 10 80       	push   $0x80106fdf[m
[32m+[m[32m801001cc:	68 5f 72 10 80       	push   $0x8010725f[m
 801001d1:	e8 9a 01 00 00       	call   80100370 <panic>[m
 801001d6:	8d 76 00             	lea    0x0(%esi),%esi[m
 801001d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
 801001e0 <brelse>:[m
[32m+[m
[32m+[m[32m// Release a locked buffer.[m
[32m+[m[32m// Move to the head of the MRU list.[m
[32m+[m[32mvoid[m
[32m+[m[32mbrelse(struct buf *b)[m
[32m+[m[32m{[m
 801001e0:	55                   	push   %ebp[m
 801001e1:	89 e5                	mov    %esp,%ebp[m
 801001e3:	56                   	push   %esi[m
 801001e4:	53                   	push   %ebx[m
 801001e5:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m  if(!holdingsleep(&b->lock))[m
 801001e8:	83 ec 0c             	sub    $0xc,%esp[m
 801001eb:	8d 73 0c             	lea    0xc(%ebx),%esi[m
 801001ee:	56                   	push   %esi[m
[31m-801001ef:	e8 7c 40 00 00       	call   80104270 <holdingsleep>[m
[32m+[m[32m801001ef:	e8 8c 41 00 00       	call   80104380 <holdingsleep>[m
 801001f4:	83 c4 10             	add    $0x10,%esp[m
 801001f7:	85 c0                	test   %eax,%eax[m
 801001f9:	74 66                	je     80100261 <brelse+0x81>[m
[32m+[m[32m    panic("brelse");[m
[32m+[m
[32m+[m[32m  releasesleep(&b->lock);[m
 801001fb:	83 ec 0c             	sub    $0xc,%esp[m
 801001fe:	56                   	push   %esi[m
[31m-801001ff:	e8 2c 40 00 00       	call   80104230 <releasesleep>[m
[32m+[m[32m801001ff:	e8 3c 41 00 00       	call   80104340 <releasesleep>[m
[32m+[m
[32m+[m[32m  acquire(&bcache.lock);[m
 80100204:	c7 04 24 e0 b5 10 80 	movl   $0x8010b5e0,(%esp)[m
[31m-8010020b:	e8 b0 40 00 00       	call   801042c0 <acquire>[m
[32m+[m[32m8010020b:	e8 c0 41 00 00       	call   801043d0 <acquire>[m
[32m+[m[32m  b->refcnt--;[m
 80100210:	8b 43 4c             	mov    0x4c(%ebx),%eax[m
[32m+[m[32m  if (b->refcnt == 0) {[m
 80100213:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m    panic("brelse");[m
[32m+[m
[32m+[m[32m  releasesleep(&b->lock);[m
[32m+[m
[32m+[m[32m  acquire(&bcache.lock);[m
[32m+[m[32m  b->refcnt--;[m
 80100216:	83 e8 01             	sub    $0x1,%eax[m
[32m+[m[32m  if (b->refcnt == 0) {[m
 80100219:	85 c0                	test   %eax,%eax[m
[32m+[m[32m    panic("brelse");[m
[32m+[m
[32m+[m[32m  releasesleep(&b->lock);[m
[32m+[m
[32m+[m[32m  acquire(&bcache.lock);[m
[32m+[m[32m  b->refcnt--;[m
 8010021b:	89 43 4c             	mov    %eax,0x4c(%ebx)[m
[32m+[m[32m  if (b->refcnt == 0) {[m
 8010021e:	75 2f                	jne    8010024f <brelse+0x6f>[m
[32m+[m[32m    // no one is waiting for it.[m
[32m+[m[32m    b->next->prev = b->prev;[m
 80100220:	8b 43 54             	mov    0x54(%ebx),%eax[m
 80100223:	8b 53 50             	mov    0x50(%ebx),%edx[m
 80100226:	89 50 50             	mov    %edx,0x50(%eax)[m
[32m+[m[32m    b->prev->next = b->next;[m
 80100229:	8b 43 50             	mov    0x50(%ebx),%eax[m
 8010022c:	8b 53 54             	mov    0x54(%ebx),%edx[m
 8010022f:	89 50 54             	mov    %edx,0x54(%eax)[m
[32m+[m[32m    b->next = bcache.head.next;[m
 80100232:	a1 30 fd 10 80       	mov    0x8010fd30,%eax[m
[32m+[m[32m    b->prev = &bcache.head;[m
 80100237:	c7 43 50 dc fc 10 80 	movl   $0x8010fcdc,0x50(%ebx)[m
[32m+[m[32m  b->refcnt--;[m
[32m+[m[32m  if (b->refcnt == 0) {[m
[32m+[m[32m    // no one is waiting for it.[m
[32m+[m[32m    b->next->prev = b->prev;[m
[32m+[m[32m    b->prev->next = b->next;[m
[32m+[m[32m    b->next = bcache.head.next;[m
 8010023e:	89 43 54             	mov    %eax,0x54(%ebx)[m
[32m+[m[32m    b->prev = &bcache.head;[m
[32m+[m[32m    bcache.head.next->prev = b;[m
 80100241:	a1 30 fd 10 80       	mov    0x8010fd30,%eax[m
 80100246:	89 58 50             	mov    %ebx,0x50(%eax)[m
[32m+[m[32m    bcache.head.next = b;[m
 80100249:	89 1d 30 fd 10 80    	mov    %ebx,0x8010fd30[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  release(&bcache.lock);[m
 8010024f:	c7 45 08 e0 b5 10 80 	movl   $0x8010b5e0,0x8(%ebp)[m
[32m+[m[32m}[m
 80100256:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
 80100259:	5b                   	pop    %ebx[m
 8010025a:	5e                   	pop    %esi[m
 8010025b:	5d                   	pop    %ebp[m
[31m-8010025c:	e9 3f 42 00 00       	jmp    801044a0 <release>[m
[32m+[m[32m    b->prev = &bcache.head;[m
[32m+[m[32m    bcache.head.next->prev = b;[m
[32m+[m[32m    bcache.head.next = b;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  release(&bcache.lock);[m
[32m+[m[32m8010025c:	e9 4f 43 00 00       	jmp    801045b0 <release>[m
[32m+[m[32m// Move to the head of the MRU list.[m
[32m+[m[32mvoid[m
[32m+[m[32mbrelse(struct buf *b)[m
[32m+[m[32m{[m
[32m+[m[32m  if(!holdingsleep(&b->lock))[m
[32m+[m[32m    panic("brelse");[m
 80100261:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100264:	68 e6 6f 10 80       	push   $0x80106fe6[m
[32m+[m[32m80100264:	68 66 72 10 80       	push   $0x80107266[m
 80100269:	e8 02 01 00 00       	call   80100370 <panic>[m
 8010026e:	66 90                	xchg   %ax,%ax[m
 [m
 80100270 <consoleread>:[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mconsoleread(struct inode *ip, char *dst, int n)[m
[32m+[m[32m{[m
 80100270:	55                   	push   %ebp[m
 80100271:	89 e5                	mov    %esp,%ebp[m
 80100273:	57                   	push   %edi[m
[36m@@ -216,38 +421,68 @@[m [mDisassembly of section .text:[m
 80100276:	83 ec 28             	sub    $0x28,%esp[m
 80100279:	8b 7d 08             	mov    0x8(%ebp),%edi[m
 8010027c:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[32m+[m[32m  uint target;[m
[32m+[m[32m  int c;[m
[32m+[m
[32m+[m[32m  iunlock(ip);[m
 8010027f:	57                   	push   %edi[m
[31m-80100280:	e8 0b 15 00 00       	call   80101790 <iunlock>[m
[32m+[m[32m80100280:	e8 0b 16 00 00       	call   80101890 <iunlock>[m
[32m+[m[32m  target = n;[m
[32m+[m[32m  acquire(&cons.lock);[m
 80100285:	c7 04 24 20 a5 10 80 	movl   $0x8010a520,(%esp)[m
[31m-8010028c:	e8 2f 40 00 00       	call   801042c0 <acquire>[m
[32m+[m[32m8010028c:	e8 3f 41 00 00       	call   801043d0 <acquire>[m
[32m+[m[32m  while(n > 0){[m
 80100291:	8b 5d 10             	mov    0x10(%ebp),%ebx[m
 80100294:	83 c4 10             	add    $0x10,%esp[m
 80100297:	31 c0                	xor    %eax,%eax[m
 80100299:	85 db                	test   %ebx,%ebx[m
 8010029b:	0f 8e 9a 00 00 00    	jle    8010033b <consoleread+0xcb>[m
[32m+[m[32m    while(input.r == input.w){[m
 801002a1:	a1 c0 ff 10 80       	mov    0x8010ffc0,%eax[m
 801002a6:	3b 05 c4 ff 10 80    	cmp    0x8010ffc4,%eax[m
 801002ac:	74 24                	je     801002d2 <consoleread+0x62>[m
 801002ae:	eb 58                	jmp    80100308 <consoleread+0x98>[m
[32m+[m[32m      if(proc->killed){[m
[32m+[m[32m        release(&cons.lock);[m
[32m+[m[32m        ilock(ip);[m
[32m+[m[32m        return -1;[m
[32m+[m[32m      }[m
[32m+[m[32m      sleep(&input.r, &cons.lock);[m
 801002b0:	83 ec 08             	sub    $0x8,%esp[m
 801002b3:	68 20 a5 10 80       	push   $0x8010a520[m
 801002b8:	68 c0 ff 10 80       	push   $0x8010ffc0[m
[31m-801002bd:	e8 7e 3b 00 00       	call   80103e40 <sleep>[m
[32m+[m[32m801002bd:	e8 7e 3c 00 00       	call   80103f40 <sleep>[m
[32m+[m
[32m+[m[32m  iunlock(ip);[m
[32m+[m[32m  target = n;[m
[32m+[m[32m  acquire(&cons.lock);[m
[32m+[m[32m  while(n > 0){[m
[32m+[m[32m    while(input.r == input.w){[m
 801002c2:	a1 c0 ff 10 80       	mov    0x8010ffc0,%eax[m
 801002c7:	83 c4 10             	add    $0x10,%esp[m
 801002ca:	3b 05 c4 ff 10 80    	cmp    0x8010ffc4,%eax[m
 801002d0:	75 36                	jne    80100308 <consoleread+0x98>[m
[32m+[m[32m      if(proc->killed){[m
 801002d2:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
 801002d8:	8b 40 24             	mov    0x24(%eax),%eax[m
 801002db:	85 c0                	test   %eax,%eax[m
 801002dd:	74 d1                	je     801002b0 <consoleread+0x40>[m
[32m+[m[32m        release(&cons.lock);[m
 801002df:	83 ec 0c             	sub    $0xc,%esp[m
 801002e2:	68 20 a5 10 80       	push   $0x8010a520[m
[31m-801002e7:	e8 b4 41 00 00       	call   801044a0 <release>[m
[32m+[m[32m801002e7:	e8 c4 42 00 00       	call   801045b0 <release>[m
[32m+[m[32m        ilock(ip);[m
 801002ec:	89 3c 24             	mov    %edi,(%esp)[m
[31m-801002ef:	e8 bc 13 00 00       	call   801016b0 <ilock>[m
[32m+[m[32m801002ef:	e8 bc 14 00 00       	call   801017b0 <ilock>[m
[32m+[m[32m        return -1;[m
 801002f4:	83 c4 10             	add    $0x10,%esp[m
 801002f7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[32m+[m[32m  }[m
[32m+[m[32m  release(&cons.lock);[m
[32m+[m[32m  ilock(ip);[m
[32m+[m
[32m+[m[32m  return target - n;[m
[32m+[m[32m}[m
 801002fc:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
 801002ff:	5b                   	pop    %ebx[m
 80100300:	5e                   	pop    %esi[m
[36m@@ -255,32 +490,79 @@[m [mDisassembly of section .text:[m
 80100302:	5d                   	pop    %ebp[m
 80100303:	c3                   	ret    [m
 80100304:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m        ilock(ip);[m
[32m+[m[32m        return -1;[m
[32m+[m[32m      }[m
[32m+[m[32m      sleep(&input.r, &cons.lock);[m
[32m+[m[32m    }[m
[32m+[m[32m    c = input.buf[input.r++ % INPUT_BUF];[m
 80100308:	8d 50 01             	lea    0x1(%eax),%edx[m
 8010030b:	89 15 c0 ff 10 80    	mov    %edx,0x8010ffc0[m
 80100311:	89 c2                	mov    %eax,%edx[m
 80100313:	83 e2 7f             	and    $0x7f,%edx[m
 80100316:	0f be 92 40 ff 10 80 	movsbl -0x7fef00c0(%edx),%edx[m
[32m+[m[32m    if(c == C('D')){  // EOF[m
 8010031d:	83 fa 04             	cmp    $0x4,%edx[m
 80100320:	74 39                	je     8010035b <consoleread+0xeb>[m
[32m+[m[32m        // caller gets a 0-byte result.[m
[32m+[m[32m        input.r--;[m
[32m+[m[32m      }[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m[32m    *dst++ = c;[m
 80100322:	83 c6 01             	add    $0x1,%esi[m
[32m+[m[32m    --n;[m
 80100325:	83 eb 01             	sub    $0x1,%ebx[m
[32m+[m[32m    if(c == '\n')[m
 80100328:	83 fa 0a             	cmp    $0xa,%edx[m
[32m+[m[32m        // caller gets a 0-byte result.[m
[32m+[m[32m        input.r--;[m
[32m+[m[32m      }[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m[32m    *dst++ = c;[m
 8010032b:	88 56 ff             	mov    %dl,-0x1(%esi)[m
[32m+[m[32m    --n;[m
[32m+[m[32m    if(c == '\n')[m
 8010032e:	74 35                	je     80100365 <consoleread+0xf5>[m
[32m+[m[32m  int c;[m
[32m+[m
[32m+[m[32m  iunlock(ip);[m
[32m+[m[32m  target = n;[m
[32m+[m[32m  acquire(&cons.lock);[m
[32m+[m[32m  while(n > 0){[m
 80100330:	85 db                	test   %ebx,%ebx[m
 80100332:	0f 85 69 ff ff ff    	jne    801002a1 <consoleread+0x31>[m
 80100338:	8b 45 10             	mov    0x10(%ebp),%eax[m
[32m+[m[32m    *dst++ = c;[m
[32m+[m[32m    --n;[m
[32m+[m[32m    if(c == '\n')[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m[32m  release(&cons.lock);[m
 8010033b:	83 ec 0c             	sub    $0xc,%esp[m
 8010033e:	89 45 e4             	mov    %eax,-0x1c(%ebp)[m
 80100341:	68 20 a5 10 80       	push   $0x8010a520[m
[31m-80100346:	e8 55 41 00 00       	call   801044a0 <release>[m
[32m+[m[32m80100346:	e8 65 42 00 00       	call   801045b0 <release>[m
[32m+[m[32m  ilock(ip);[m
 8010034b:	89 3c 24             	mov    %edi,(%esp)[m
[31m-8010034e:	e8 5d 13 00 00       	call   801016b0 <ilock>[m
[32m+[m[32m8010034e:	e8 5d 14 00 00       	call   801017b0 <ilock>[m
[32m+[m
[32m+[m[32m  return target - n;[m
 80100353:	83 c4 10             	add    $0x10,%esp[m
 80100356:	8b 45 e4             	mov    -0x1c(%ebp),%eax[m
 80100359:	eb a1                	jmp    801002fc <consoleread+0x8c>[m
[32m+[m[32m      }[m
[32m+[m[32m      sleep(&input.r, &cons.lock);[m
[32m+[m[32m    }[m
[32m+[m[32m    c = input.buf[input.r++ % INPUT_BUF];[m
[32m+[m[32m    if(c == C('D')){  // EOF[m
[32m+[m[32m      if(n < target){[m
 8010035b:	39 5d 10             	cmp    %ebx,0x10(%ebp)[m
 8010035e:	76 05                	jbe    80100365 <consoleread+0xf5>[m
[32m+[m[32m        // Save ^D for next time, to make sure[m
[32m+[m[32m        // caller gets a 0-byte result.[m
[32m+[m[32m        input.r--;[m
 80100360:	a3 c0 ff 10 80       	mov    %eax,0x8010ffc0[m
 80100365:	8b 45 10             	mov    0x10(%ebp),%eax[m
 80100368:	29 d8                	sub    %ebx,%eax[m
[36m@@ -288,54 +570,113 @@[m [mDisassembly of section .text:[m
 8010036c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
 [m
 80100370 <panic>:[m
[32m+[m[32m    release(&cons.lock);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mpanic(char *s)[m
[32m+[m[32m{[m
 80100370:	55                   	push   %ebp[m
 80100371:	89 e5                	mov    %esp,%ebp[m
 80100373:	56                   	push   %esi[m
 80100374:	53                   	push   %ebx[m
 80100375:	83 ec 38             	sub    $0x38,%esp[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32mcli(void)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("cli");[m
 80100378:	fa                   	cli    [m
[32m+[m[32m  int i;[m
[32m+[m[32m  uint pcs[10];[m
[32m+[m
[32m+[m[32m  cli();[m
[32m+[m[32m  cons.locking = 0;[m
[32m+[m[32m  cprintf("cpu with apicid %d: panic: ", cpu->apicid);[m
 80100379:	65 a1 00 00 00 00    	mov    %gs:0x0,%eax[m
[32m+[m[32m{[m
[32m+[m[32m  int i;[m
[32m+[m[32m  uint pcs[10];[m
[32m+[m
[32m+[m[32m  cli();[m
[32m+[m[32m  cons.locking = 0;[m
 8010037f:	c7 05 54 a5 10 80 00 	movl   $0x0,0x8010a554[m
 80100386:	00 00 00 [m
[32m+[m[32m  cprintf("cpu with apicid %d: panic: ", cpu->apicid);[m
[32m+[m[32m  cprintf(s);[m
[32m+[m[32m  cprintf("\n");[m
[32m+[m[32m  getcallerpcs(&s, pcs);[m
 80100389:	8d 5d d0             	lea    -0x30(%ebp),%ebx[m
 8010038c:	8d 75 f8             	lea    -0x8(%ebp),%esi[m
[32m+[m[32m  int i;[m
[32m+[m[32m  uint pcs[10];[m
[32m+[m
[32m+[m[32m  cli();[m
[32m+[m[32m  cons.locking = 0;[m
[32m+[m[32m  cprintf("cpu with apicid %d: panic: ", cpu->apicid);[m
 8010038f:	0f b6 00             	movzbl (%eax),%eax[m
 80100392:	50                   	push   %eax[m
[31m-80100393:	68 ed 6f 10 80       	push   $0x80106fed[m
[32m+[m[32m80100393:	68 6d 72 10 80       	push   $0x8010726d[m
 80100398:	e8 c3 02 00 00       	call   80100660 <cprintf>[m
[32m+[m[32m  cprintf(s);[m
 8010039d:	58                   	pop    %eax[m
 8010039e:	ff 75 08             	pushl  0x8(%ebp)[m
 801003a1:	e8 ba 02 00 00       	call   80100660 <cprintf>[m
[31m-801003a6:	c7 04 24 e6 74 10 80 	movl   $0x801074e6,(%esp)[m
[32m+[m[32m  cprintf("\n");[m
[32m+[m[32m801003a6:	c7 04 24 66 77 10 80 	movl   $0x80107766,(%esp)[m
 801003ad:	e8 ae 02 00 00       	call   80100660 <cprintf>[m
[32m+[m[32m  getcallerpcs(&s, pcs);[m
 801003b2:	5a                   	pop    %edx[m
 801003b3:	8d 45 08             	lea    0x8(%ebp),%eax[m
 801003b6:	59                   	pop    %ecx[m
 801003b7:	53                   	push   %ebx[m
 801003b8:	50                   	push   %eax[m
[31m-801003b9:	e8 d2 3f 00 00       	call   80104390 <getcallerpcs>[m
[32m+[m[32m801003b9:	e8 e2 40 00 00       	call   801044a0 <getcallerpcs>[m
 801003be:	83 c4 10             	add    $0x10,%esp[m
 801003c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  for(i=0; i<10; i++)[m
[32m+[m[32m    cprintf(" %p", pcs[i]);[m
 801003c8:	83 ec 08             	sub    $0x8,%esp[m
 801003cb:	ff 33                	pushl  (%ebx)[m
 801003cd:	83 c3 04             	add    $0x4,%ebx[m
[31m-801003d0:	68 09 70 10 80       	push   $0x80107009[m
[32m+[m[32m801003d0:	68 89 72 10 80       	push   $0x80107289[m
 801003d5:	e8 86 02 00 00       	call   80100660 <cprintf>[m
[32m+[m[32m  cons.locking = 0;[m
[32m+[m[32m  cprintf("cpu with apicid %d: panic: ", cpu->apicid);[m
[32m+[m[32m  cprintf(s);[m
[32m+[m[32m  cprintf("\n");[m
[32m+[m[32m  getcallerpcs(&s, pcs);[m
[32m+[m[32m  for(i=0; i<10; i++)[m
 801003da:	83 c4 10             	add    $0x10,%esp[m
 801003dd:	39 f3                	cmp    %esi,%ebx[m
 801003df:	75 e7                	jne    801003c8 <panic+0x58>[m
[32m+[m[32m    cprintf(" %p", pcs[i]);[m
[32m+[m[32m  panicked = 1; // freeze other CPU[m
 801003e1:	c7 05 58 a5 10 80 01 	movl   $0x1,0x8010a558[m
 801003e8:	00 00 00 [m
 801003eb:	eb fe                	jmp    801003eb <panic+0x7b>[m
 801003ed:	8d 76 00             	lea    0x0(%esi),%esi[m
 [m
 801003f0 <consputc>:[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mconsputc(int c)[m
[32m+[m[32m{[m
[32m+[m[32m  if(panicked){[m
 801003f0:	8b 15 58 a5 10 80    	mov    0x8010a558,%edx[m
 801003f6:	85 d2                	test   %edx,%edx[m
 801003f8:	74 06                	je     80100400 <consputc+0x10>[m
 801003fa:	fa                   	cli    [m
 801003fb:	eb fe                	jmp    801003fb <consputc+0xb>[m
 801003fd:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m  crt[pos] = ' ' | 0x0700;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mconsputc(int c)[m
[32m+[m[32m{[m
 80100400:	55                   	push   %ebp[m
 80100401:	89 e5                	mov    %esp,%ebp[m
 80100403:	57                   	push   %edi[m
[36m@@ -343,40 +684,93 @@[m [mDisassembly of section .text:[m
 80100405:	53                   	push   %ebx[m
 80100406:	89 c3                	mov    %eax,%ebx[m
 80100408:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m    cli();[m
[32m+[m[32m    for(;;)[m
[32m+[m[32m      ;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if(c == BACKSPACE){[m
 8010040b:	3d 00 01 00 00       	cmp    $0x100,%eax[m
 80100410:	0f 84 b8 00 00 00    	je     801004ce <consputc+0xde>[m
[32m+[m[32m    uartputc('\b'); uartputc(' '); uartputc('\b');[m
[32m+[m[32m  } else[m
[32m+[m[32m    uartputc(c);[m
 80100416:	83 ec 0c             	sub    $0xc,%esp[m
 80100419:	50                   	push   %eax[m
[31m-8010041a:	e8 a1 57 00 00       	call   80105bc0 <uartputc>[m
[32m+[m[32m8010041a:	e8 11 5a 00 00       	call   80105e30 <uartputc>[m
 8010041f:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutb(ushort port, uchar data)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("out %0,%1" : : "a" (data), "d" (port));[m
 80100422:	bf d4 03 00 00       	mov    $0x3d4,%edi[m
 80100427:	b8 0e 00 00 00       	mov    $0xe,%eax[m
 8010042c:	89 fa                	mov    %edi,%edx[m
 8010042e:	ee                   	out    %al,(%dx)[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
[32m+[m[32m{[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
 8010042f:	be d5 03 00 00       	mov    $0x3d5,%esi[m
 80100434:	89 f2                	mov    %esi,%edx[m
 80100436:	ec                   	in     (%dx),%al[m
[32m+[m[32m{[m
[32m+[m[32m  int pos;[m
[32m+[m
[32m+[m[32m  // Cursor position: col + 80*row.[m
[32m+[m[32m  outb(CRTPORT, 14);[m
[32m+[m[32m  pos = inb(CRTPORT+1) << 8;[m
 80100437:	0f b6 c0             	movzbl %al,%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutb(ushort port, uchar data)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("out %0,%1" : : "a" (data), "d" (port));[m
 8010043a:	89 fa                	mov    %edi,%edx[m
 8010043c:	c1 e0 08             	shl    $0x8,%eax[m
 8010043f:	89 c1                	mov    %eax,%ecx[m
 80100441:	b8 0f 00 00 00       	mov    $0xf,%eax[m
 80100446:	ee                   	out    %al,(%dx)[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
[32m+[m[32m{[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
 80100447:	89 f2                	mov    %esi,%edx[m
 80100449:	ec                   	in     (%dx),%al[m
[32m+[m[32m  outb(CRTPORT, 15);[m
[32m+[m[32m  pos |= inb(CRTPORT+1);[m
 8010044a:	0f b6 c0             	movzbl %al,%eax[m
 8010044d:	09 c8                	or     %ecx,%eax[m
[32m+[m
[32m+[m[32m  if(c == '\n')[m
 8010044f:	83 fb 0a             	cmp    $0xa,%ebx[m
 80100452:	0f 84 0b 01 00 00    	je     80100563 <consputc+0x173>[m
[32m+[m[32m    pos += 80 - pos%80;[m
[32m+[m[32m  else if(c == BACKSPACE){[m
 80100458:	81 fb 00 01 00 00    	cmp    $0x100,%ebx[m
 8010045e:	0f 84 e6 00 00 00    	je     8010054a <consputc+0x15a>[m
[32m+[m[32m    if(pos > 0) --pos;[m
[32m+[m[32m  } else[m
[32m+[m[32m    crt[pos++] = (c&0xff) | 0x0700;  // black on white[m
 80100464:	0f b6 d3             	movzbl %bl,%edx[m
 80100467:	8d 78 01             	lea    0x1(%eax),%edi[m
 8010046a:	80 ce 07             	or     $0x7,%dh[m
 8010046d:	66 89 94 00 00 80 0b 	mov    %dx,-0x7ff48000(%eax,%eax,1)[m
 80100474:	80 [m
[32m+[m
[32m+[m[32m  if(pos < 0 || pos > 25*80)[m
 80100475:	81 ff d0 07 00 00    	cmp    $0x7d0,%edi[m
 8010047b:	0f 8f bc 00 00 00    	jg     8010053d <consputc+0x14d>[m
[32m+[m[32m    panic("pos under/overflow");[m
[32m+[m
[32m+[m[32m  if((pos/80) >= 24){  // Scroll up.[m
 80100481:	81 ff 7f 07 00 00    	cmp    $0x77f,%edi[m
 80100487:	7f 6f                	jg     801004f8 <consputc+0x108>[m
 80100489:	89 f8                	mov    %edi,%eax[m
[36m@@ -384,6 +778,12 @@[m [mDisassembly of section .text:[m
 80100492:	89 fb                	mov    %edi,%ebx[m
 80100494:	c1 e8 08             	shr    $0x8,%eax[m
 80100497:	89 c6                	mov    %eax,%esi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutb(ushort port, uchar data)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("out %0,%1" : : "a" (data), "d" (port));[m
 80100499:	bf d4 03 00 00       	mov    $0x3d4,%edi[m
 8010049e:	b8 0e 00 00 00       	mov    $0xe,%eax[m
 801004a3:	89 fa                	mov    %edi,%edx[m
[36m@@ -397,30 +797,71 @@[m [mDisassembly of section .text:[m
 801004b6:	ba d5 03 00 00       	mov    $0x3d5,%edx[m
 801004bb:	89 d8                	mov    %ebx,%eax[m
 801004bd:	ee                   	out    %al,(%dx)[m
[32m+[m
[32m+[m[32m  outb(CRTPORT, 14);[m
[32m+[m[32m  outb(CRTPORT+1, pos>>8);[m
[32m+[m[32m  outb(CRTPORT, 15);[m
[32m+[m[32m  outb(CRTPORT+1, pos);[m
[32m+[m[32m  crt[pos] = ' ' | 0x0700;[m
 801004be:	b8 20 07 00 00       	mov    $0x720,%eax[m
 801004c3:	66 89 01             	mov    %ax,(%ecx)[m
[32m+[m[32m  if(c == BACKSPACE){[m
[32m+[m[32m    uartputc('\b'); uartputc(' '); uartputc('\b');[m
[32m+[m[32m  } else[m
[32m+[m[32m    uartputc(c);[m
[32m+[m[32m  cgaputc(c);[m
[32m+[m[32m}[m
 801004c6:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
 801004c9:	5b                   	pop    %ebx[m
 801004ca:	5e                   	pop    %esi[m
 801004cb:	5f                   	pop    %edi[m
 801004cc:	5d                   	pop    %ebp[m
 801004cd:	c3                   	ret    [m
[32m+[m[32m    for(;;)[m
[32m+[m[32m      ;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if(c == BACKSPACE){[m
[32m+[m[32m    uartputc('\b'); uartputc(' '); uartputc('\b');[m
 801004ce:	83 ec 0c             	sub    $0xc,%esp[m
 801004d1:	6a 08                	push   $0x8[m
[31m-801004d3:	e8 e8 56 00 00       	call   80105bc0 <uartputc>[m
[32m+[m[32m801004d3:	e8 58 59 00 00       	call   80105e30 <uartputc>[m
 801004d8:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)[m
[31m-801004df:	e8 dc 56 00 00       	call   80105bc0 <uartputc>[m
[32m+[m[32m801004df:	e8 4c 59 00 00       	call   80105e30 <uartputc>[m
 801004e4:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)[m
[31m-801004eb:	e8 d0 56 00 00       	call   80105bc0 <uartputc>[m
[32m+[m[32m801004eb:	e8 40 59 00 00       	call   80105e30 <uartputc>[m
 801004f0:	83 c4 10             	add    $0x10,%esp[m
 801004f3:	e9 2a ff ff ff       	jmp    80100422 <consputc+0x32>[m
[32m+[m
[32m+[m[32m  if(pos < 0 || pos > 25*80)[m
[32m+[m[32m    panic("pos under/overflow");[m
[32m+[m
[32m+[m[32m  if((pos/80) >= 24){  // Scroll up.[m
[32m+[m[32m    memmove(crt, crt+80, sizeof(crt[0])*23*80);[m
 801004f8:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m    pos -= 80;[m
 801004fb:	8d 5f b0             	lea    -0x50(%edi),%ebx[m
[32m+[m
[32m+[m[32m  if(pos < 0 || pos > 25*80)[m
[32m+[m[32m    panic("pos under/overflow");[m
[32m+[m
[32m+[m[32m  if((pos/80) >= 24){  // Scroll up.[m
[32m+[m[32m    memmove(crt, crt+80, sizeof(crt[0])*23*80);[m
 801004fe:	68 60 0e 00 00       	push   $0xe60[m
 80100503:	68 a0 80 0b 80       	push   $0x800b80a0[m
 80100508:	68 00 80 0b 80       	push   $0x800b8000[m
[32m+[m[32m    pos -= 80;[m
[32m+[m[32m    memset(crt+pos, 0, sizeof(crt[0])*(24*80 - pos));[m
 8010050d:	8d b4 1b 00 80 0b 80 	lea    -0x7ff48000(%ebx,%ebx,1),%esi[m
[31m-80100514:	e8 87 40 00 00       	call   801045a0 <memmove>[m
[32m+[m
[32m+[m[32m  if(pos < 0 || pos > 25*80)[m
[32m+[m[32m    panic("pos under/overflow");[m
[32m+[m
[32m+[m[32m  if((pos/80) >= 24){  // Scroll up.[m
[32m+[m[32m    memmove(crt, crt+80, sizeof(crt[0])*23*80);[m
[32m+[m[32m80100514:	e8 97 41 00 00       	call   801046b0 <memmove>[m
[32m+[m[32m    pos -= 80;[m
[32m+[m[32m    memset(crt+pos, 0, sizeof(crt[0])*(24*80 - pos));[m
 80100519:	b8 80 07 00 00       	mov    $0x780,%eax[m
 8010051e:	83 c4 0c             	add    $0xc,%esp[m
 80100521:	29 d8                	sub    %ebx,%eax[m
[36m@@ -428,14 +869,26 @@[m [mDisassembly of section .text:[m
 80100525:	50                   	push   %eax[m
 80100526:	6a 00                	push   $0x0[m
 80100528:	56                   	push   %esi[m
[31m-80100529:	e8 c2 3f 00 00       	call   801044f0 <memset>[m
[32m+[m[32m80100529:	e8 d2 40 00 00       	call   80104600 <memset>[m
 8010052e:	89 f1                	mov    %esi,%ecx[m
 80100530:	83 c4 10             	add    $0x10,%esp[m
 80100533:	be 07 00 00 00       	mov    $0x7,%esi[m
 80100538:	e9 5c ff ff ff       	jmp    80100499 <consputc+0xa9>[m
[32m+[m[32m    if(pos > 0) --pos;[m
[32m+[m[32m  } else[m
[32m+[m[32m    crt[pos++] = (c&0xff) | 0x0700;  // black on white[m
[32m+[m
[32m+[m[32m  if(pos < 0 || pos > 25*80)[m
[32m+[m[32m    panic("pos under/overflow");[m
 8010053d:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100540:	68 0d 70 10 80       	push   $0x8010700d[m
[32m+[m[32m80100540:	68 8d 72 10 80       	push   $0x8010728d[m
 80100545:	e8 26 fe ff ff       	call   80100370 <panic>[m
[32m+[m[32m  pos |= inb(CRTPORT+1);[m
[32m+[m
[32m+[m[32m  if(c == '\n')[m
[32m+[m[32m    pos += 80 - pos%80;[m
[32m+[m[32m  else if(c == BACKSPACE){[m
[32m+[m[32m    if(pos > 0) --pos;[m
 8010054a:	85 c0                	test   %eax,%eax[m
 8010054c:	8d 78 ff             	lea    -0x1(%eax),%edi[m
 8010054f:	0f 85 20 ff ff ff    	jne    80100475 <consputc+0x85>[m
[36m@@ -443,6 +896,12 @@[m [mDisassembly of section .text:[m
 8010055a:	31 db                	xor    %ebx,%ebx[m
 8010055c:	31 f6                	xor    %esi,%esi[m
 8010055e:	e9 36 ff ff ff       	jmp    80100499 <consputc+0xa9>[m
[32m+[m[32m  pos = inb(CRTPORT+1) << 8;[m
[32m+[m[32m  outb(CRTPORT, 15);[m
[32m+[m[32m  pos |= inb(CRTPORT+1);[m
[32m+[m
[32m+[m[32m  if(c == '\n')[m
[32m+[m[32m    pos += 80 - pos%80;[m
 80100563:	ba 67 66 66 66       	mov    $0x66666667,%edx[m
 80100568:	f7 ea                	imul   %edx[m
 8010056a:	89 d0                	mov    %edx,%eax[m
[36m@@ -454,6 +913,12 @@[m [mDisassembly of section .text:[m
 8010057d:	8d 76 00             	lea    0x0(%esi),%esi[m
 [m
 80100580 <printint>:[m
[32m+[m[32m  int locking;[m
[32m+[m[32m} cons;[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mprintint(int xx, int base, int sign)[m
[32m+[m[32m{[m
 80100580:	55                   	push   %ebp[m
 80100581:	89 e5                	mov    %esp,%ebp[m
 80100583:	57                   	push   %edi[m
[36m@@ -461,78 +926,164 @@[m [mDisassembly of section .text:[m
 80100585:	53                   	push   %ebx[m
 80100586:	89 d6                	mov    %edx,%esi[m
 80100588:	83 ec 2c             	sub    $0x2c,%esp[m
[32m+[m[32m  static char digits[] = "0123456789abcdef";[m
[32m+[m[32m  char buf[16];[m
[32m+[m[32m  int i;[m
[32m+[m[32m  uint x;[m
[32m+[m
[32m+[m[32m  if(sign && (sign = xx < 0))[m
 8010058b:	85 c9                	test   %ecx,%ecx[m
[32m+[m[32m  int locking;[m
[32m+[m[32m} cons;[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mprintint(int xx, int base, int sign)[m
[32m+[m[32m{[m
 8010058d:	89 4d d4             	mov    %ecx,-0x2c(%ebp)[m
[32m+[m[32m  static char digits[] = "0123456789abcdef";[m
[32m+[m[32m  char buf[16];[m
[32m+[m[32m  int i;[m
[32m+[m[32m  uint x;[m
[32m+[m
[32m+[m[32m  if(sign && (sign = xx < 0))[m
 80100590:	74 0c                	je     8010059e <printint+0x1e>[m
 80100592:	89 c7                	mov    %eax,%edi[m
 80100594:	c1 ef 1f             	shr    $0x1f,%edi[m
 80100597:	85 c0                	test   %eax,%eax[m
 80100599:	89 7d d4             	mov    %edi,-0x2c(%ebp)[m
 8010059c:	78 51                	js     801005ef <printint+0x6f>[m
[32m+[m[32m    x = -xx;[m
[32m+[m[32m  else[m
[32m+[m[32m    x = xx;[m
[32m+[m
[32m+[m[32m  i = 0;[m
 8010059e:	31 ff                	xor    %edi,%edi[m
 801005a0:	8d 5d d7             	lea    -0x29(%ebp),%ebx[m
 801005a3:	eb 05                	jmp    801005aa <printint+0x2a>[m
 801005a5:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m  do{[m
[32m+[m[32m    buf[i++] = digits[x % base];[m
 801005a8:	89 cf                	mov    %ecx,%edi[m
 801005aa:	31 d2                	xor    %edx,%edx[m
 801005ac:	8d 4f 01             	lea    0x1(%edi),%ecx[m
 801005af:	f7 f6                	div    %esi[m
[31m-801005b1:	0f b6 92 38 70 10 80 	movzbl -0x7fef8fc8(%edx),%edx[m
[32m+[m[32m801005b1:	0f b6 92 b8 72 10 80 	movzbl -0x7fef8d48(%edx),%edx[m
[32m+[m[32m  }while((x /= base) != 0);[m
 801005b8:	85 c0                	test   %eax,%eax[m
[32m+[m[32m  else[m
[32m+[m[32m    x = xx;[m
[32m+[m
[32m+[m[32m  i = 0;[m
[32m+[m[32m  do{[m
[32m+[m[32m    buf[i++] = digits[x % base];[m
 801005ba:	88 14 0b             	mov    %dl,(%ebx,%ecx,1)[m
[32m+[m[32m  }while((x /= base) != 0);[m
 801005bd:	75 e9                	jne    801005a8 <printint+0x28>[m
[32m+[m
[32m+[m[32m  if(sign)[m
 801005bf:	8b 45 d4             	mov    -0x2c(%ebp),%eax[m
 801005c2:	85 c0                	test   %eax,%eax[m
 801005c4:	74 08                	je     801005ce <printint+0x4e>[m
[32m+[m[32m    buf[i++] = '-';[m
 801005c6:	c6 44 0d d8 2d       	movb   $0x2d,-0x28(%ebp,%ecx,1)[m
 801005cb:	8d 4f 02             	lea    0x2(%edi),%ecx[m
 801005ce:	8d 74 0d d7          	lea    -0x29(%ebp,%ecx,1),%esi[m
 801005d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m
[32m+[m[32m  while(--i >= 0)[m
[32m+[m[32m    consputc(buf[i]);[m
 801005d8:	0f be 06             	movsbl (%esi),%eax[m
 801005db:	83 ee 01             	sub    $0x1,%esi[m
 801005de:	e8 0d fe ff ff       	call   801003f0 <consputc>[m
[32m+[m[32m  }while((x /= base) != 0);[m
[32m+[m
[32m+[m[32m  if(sign)[m
[32m+[m[32m    buf[i++] = '-';[m
[32m+[m
[32m+[m[32m  while(--i >= 0)[m
 801005e3:	39 de                	cmp    %ebx,%esi[m
 801005e5:	75 f1                	jne    801005d8 <printint+0x58>[m
[32m+[m[32m    consputc(buf[i]);[m
[32m+[m[32m}[m
 801005e7:	83 c4 2c             	add    $0x2c,%esp[m
 801005ea:	5b                   	pop    %ebx[m
 801005eb:	5e                   	pop    %esi[m
 801005ec:	5f                   	pop    %edi[m
 801005ed:	5d                   	pop    %ebp[m
 801005ee:	c3                   	ret    [m
[32m+[m[32m  char buf[16];[m
[32m+[m[32m  int i;[m
[32m+[m[32m  uint x;[m
[32m+[m
[32m+[m[32m  if(sign && (sign = xx < 0))[m
[32m+[m[32m    x = -xx;[m
 801005ef:	f7 d8                	neg    %eax[m
 801005f1:	eb ab                	jmp    8010059e <printint+0x1e>[m
 801005f3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
 801005f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
 80100600 <consolewrite>:[m
[32m+[m[32m  return target - n;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mconsolewrite(struct inode *ip, char *buf, int n)[m
[32m+[m[32m{[m
 80100600:	55                   	push   %ebp[m
 80100601:	89 e5                	mov    %esp,%ebp[m
 80100603:	57                   	push   %edi[m
 80100604:	56                   	push   %esi[m
 80100605:	53                   	push   %ebx[m
 80100606:	83 ec 18             	sub    $0x18,%esp[m
[32m+[m[32m  int i;[m
[32m+[m
[32m+[m[32m  iunlock(ip);[m
 80100609:	ff 75 08             	pushl  0x8(%ebp)[m
[32m+[m[32m  return target - n;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mconsolewrite(struct inode *ip, char *buf, int n)[m
[32m+[m[32m{[m
 8010060c:	8b 75 10             	mov    0x10(%ebp),%esi[m
[31m-8010060f:	e8 7c 11 00 00       	call   80101790 <iunlock>[m
[32m+[m[32m  int i;[m
[32m+[m
[32m+[m[32m  iunlock(ip);[m
[32m+[m[32m8010060f:	e8 7c 12 00 00       	call   80101890 <iunlock>[m
[32m+[m[32m  acquire(&cons.lock);[m
 80100614:	c7 04 24 20 a5 10 80 	movl   $0x8010a520,(%esp)[m
[31m-8010061b:	e8 a0 3c 00 00       	call   801042c0 <acquire>[m
[32m+[m[32m8010061b:	e8 b0 3d 00 00       	call   801043d0 <acquire>[m
 80100620:	8b 7d 0c             	mov    0xc(%ebp),%edi[m
[32m+[m[32m  for(i = 0; i < n; i++)[m
 80100623:	83 c4 10             	add    $0x10,%esp[m
 80100626:	85 f6                	test   %esi,%esi[m
 80100628:	8d 1c 37             	lea    (%edi,%esi,1),%ebx[m
 8010062b:	7e 12                	jle    8010063f <consolewrite+0x3f>[m
 8010062d:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m    consputc(buf[i] & 0xff);[m
 80100630:	0f b6 07             	movzbl (%edi),%eax[m
 80100633:	83 c7 01             	add    $0x1,%edi[m
 80100636:	e8 b5 fd ff ff       	call   801003f0 <consputc>[m
[32m+[m[32m{[m
[32m+[m[32m  int i;[m
[32m+[m
[32m+[m[32m  iunlock(ip);[m
[32m+[m[32m  acquire(&cons.lock);[m
[32m+[m[32m  for(i = 0; i < n; i++)[m
 8010063b:	39 df                	cmp    %ebx,%edi[m
 8010063d:	75 f1                	jne    80100630 <consolewrite+0x30>[m
[32m+[m[32m    consputc(buf[i] & 0xff);[m
[32m+[m[32m  release(&cons.lock);[m
 8010063f:	83 ec 0c             	sub    $0xc,%esp[m
 80100642:	68 20 a5 10 80       	push   $0x8010a520[m
[31m-80100647:	e8 54 3e 00 00       	call   801044a0 <release>[m
[32m+[m[32m80100647:	e8 64 3f 00 00       	call   801045b0 <release>[m
[32m+[m[32m  ilock(ip);[m
 8010064c:	58                   	pop    %eax[m
 8010064d:	ff 75 08             	pushl  0x8(%ebp)[m
[31m-80100650:	e8 5b 10 00 00       	call   801016b0 <ilock>[m
[32m+[m[32m80100650:	e8 5b 11 00 00       	call   801017b0 <ilock>[m
[32m+[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
 80100655:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
 80100658:	89 f0                	mov    %esi,%eax[m
 8010065a:	5b                   	pop    %ebx[m
[36m@@ -543,20 +1094,46 @@[m [mDisassembly of section .text:[m
 8010065f:	90                   	nop[m
 [m
 80100660 <cprintf>:[m
[32m+[m[32m//PAGEBREAK: 50[m
[32m+[m
[32m+[m[32m// Print to the console. only understands %d, %x, %p, %s.[m
[32m+[m[32mvoid[m
[32m+[m[32mcprintf(char *fmt, ...)[m
[32m+[m[32m{[m
 80100660:	55                   	push   %ebp[m
 80100661:	89 e5                	mov    %esp,%ebp[m
 80100663:	57                   	push   %edi[m
 80100664:	56                   	push   %esi[m
 80100665:	53                   	push   %ebx[m
 80100666:	83 ec 1c             	sub    $0x1c,%esp[m
[32m+[m[32m  int i, c, locking;[m
[32m+[m[32m  uint *argp;[m
[32m+[m[32m  char *s;[m
[32m+[m
[32m+[m[32m  locking = cons.locking;[m
 80100669:	a1 54 a5 10 80       	mov    0x8010a554,%eax[m
[32m+[m[32m  if(locking)[m
 8010066e:	85 c0                	test   %eax,%eax[m
[32m+[m[32m{[m
[32m+[m[32m  int i, c, locking;[m
[32m+[m[32m  uint *argp;[m
[32m+[m[32m  char *s;[m
[32m+[m
[32m+[m[32m  locking = cons.locking;[m
 80100670:	89 45 e0             	mov    %eax,-0x20(%ebp)[m
[32m+[m[32m  if(locking)[m
 80100673:	0f 85 47 01 00 00    	jne    801007c0 <cprintf+0x160>[m
[32m+[m[32m    acquire(&cons.lock);[m
[32m+[m
[32m+[m[32m  if (fmt == 0)[m
 80100679:	8b 45 08             	mov    0x8(%ebp),%eax[m
 8010067c:	85 c0                	test   %eax,%eax[m
 8010067e:	89 c1                	mov    %eax,%ecx[m
 80100680:	0f 84 4f 01 00 00    	je     801007d5 <cprintf+0x175>[m
[32m+[m[32m    panic("null fmt");[m
[32m+[m
[32m+[m[32m  argp = (uint*)(void*)(&fmt + 1);[m
[32m+[m[32m  for(i = 0; (c = fmt[i] & 0xff) != 0; i++){[m
 80100686:	0f b6 00             	movzbl (%eax),%eax[m
 80100689:	31 db                	xor    %ebx,%ebx[m
 8010068b:	8d 75 0c             	lea    0xc(%ebp),%esi[m
[36m@@ -566,10 +1143,18 @@[m [mDisassembly of section .text:[m
 80100694:	eb 68                	jmp    801006fe <cprintf+0x9e>[m
 80100696:	8d 76 00             	lea    0x0(%esi),%esi[m
 80100699:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    if(c != '%'){[m
[32m+[m[32m      consputc(c);[m
[32m+[m[32m      continue;[m
[32m+[m[32m    }[m
[32m+[m[32m    c = fmt[++i] & 0xff;[m
 801006a0:	83 c3 01             	add    $0x1,%ebx[m
 801006a3:	0f b6 14 1f          	movzbl (%edi,%ebx,1),%edx[m
[32m+[m[32m    if(c == 0)[m
 801006a7:	85 d2                	test   %edx,%edx[m
 801006a9:	74 53                	je     801006fe <cprintf+0x9e>[m
[32m+[m[32m      break;[m
[32m+[m[32m    switch(c){[m
 801006ab:	83 fa 70             	cmp    $0x70,%edx[m
 801006ae:	74 7a                	je     8010072a <cprintf+0xca>[m
 801006b0:	7f 6e                	jg     80100720 <cprintf+0xc0>[m
[36m@@ -577,6 +1162,8 @@[m [mDisassembly of section .text:[m
 801006b5:	0f 84 ad 00 00 00    	je     80100768 <cprintf+0x108>[m
 801006bb:	83 fa 64             	cmp    $0x64,%edx[m
 801006be:	0f 85 84 00 00 00    	jne    80100748 <cprintf+0xe8>[m
[32m+[m[32m    case 'd':[m
[32m+[m[32m      printint(*argp++, 10, 1);[m
 801006c4:	8d 46 04             	lea    0x4(%esi),%eax[m
 801006c7:	b9 01 00 00 00       	mov    $0x1,%ecx[m
 801006cc:	ba 0a 00 00 00       	mov    $0xa,%edx[m
[36m@@ -584,24 +1171,51 @@[m [mDisassembly of section .text:[m
 801006d4:	8b 06                	mov    (%esi),%eax[m
 801006d6:	e8 a5 fe ff ff       	call   80100580 <printint>[m
 801006db:	8b 75 e4             	mov    -0x1c(%ebp),%esi[m
[32m+[m
[32m+[m[32m  if (fmt == 0)[m
[32m+[m[32m    panic("null fmt");[m
[32m+[m
[32m+[m[32m  argp = (uint*)(void*)(&fmt + 1);[m
[32m+[m[32m  for(i = 0; (c = fmt[i] & 0xff) != 0; i++){[m
 801006de:	83 c3 01             	add    $0x1,%ebx[m
 801006e1:	0f b6 04 1f          	movzbl (%edi,%ebx,1),%eax[m
 801006e5:	85 c0                	test   %eax,%eax[m
 801006e7:	74 15                	je     801006fe <cprintf+0x9e>[m
[32m+[m[32m    if(c != '%'){[m
 801006e9:	83 f8 25             	cmp    $0x25,%eax[m
 801006ec:	74 b2                	je     801006a0 <cprintf+0x40>[m
[32m+[m[32m        s = "(null)";[m
[32m+[m[32m      for(; *s; s++)[m
[32m+[m[32m        consputc(*s);[m
[32m+[m[32m      break;[m
[32m+[m[32m    case '%':[m
[32m+[m[32m      consputc('%');[m
 801006ee:	e8 fd fc ff ff       	call   801003f0 <consputc>[m
[32m+[m
[32m+[m[32m  if (fmt == 0)[m
[32m+[m[32m    panic("null fmt");[m
[32m+[m
[32m+[m[32m  argp = (uint*)(void*)(&fmt + 1);[m
[32m+[m[32m  for(i = 0; (c = fmt[i] & 0xff) != 0; i++){[m
 801006f3:	83 c3 01             	add    $0x1,%ebx[m
 801006f6:	0f b6 04 1f          	movzbl (%edi,%ebx,1),%eax[m
 801006fa:	85 c0                	test   %eax,%eax[m
 801006fc:	75 eb                	jne    801006e9 <cprintf+0x89>[m
[32m+[m[32m      consputc(c);[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if(locking)[m
 801006fe:	8b 45 e0             	mov    -0x20(%ebp),%eax[m
 80100701:	85 c0                	test   %eax,%eax[m
 80100703:	74 10                	je     80100715 <cprintf+0xb5>[m
[32m+[m[32m    release(&cons.lock);[m
 80100705:	83 ec 0c             	sub    $0xc,%esp[m
 80100708:	68 20 a5 10 80       	push   $0x8010a520[m
[31m-8010070d:	e8 8e 3d 00 00       	call   801044a0 <release>[m
[32m+[m[32m8010070d:	e8 9e 3e 00 00       	call   801045b0 <release>[m
 80100712:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m}[m
 80100715:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
 80100718:	5b                   	pop    %ebx[m
 80100719:	5e                   	pop    %esi[m
[36m@@ -609,10 +1223,22 @@[m [mDisassembly of section .text:[m
 8010071b:	5d                   	pop    %ebp[m
 8010071c:	c3                   	ret    [m
 8010071d:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m      continue;[m
[32m+[m[32m    }[m
[32m+[m[32m    c = fmt[++i] & 0xff;[m
[32m+[m[32m    if(c == 0)[m
[32m+[m[32m      break;[m
[32m+[m[32m    switch(c){[m
 80100720:	83 fa 73             	cmp    $0x73,%edx[m
 80100723:	74 5b                	je     80100780 <cprintf+0x120>[m
 80100725:	83 fa 78             	cmp    $0x78,%edx[m
 80100728:	75 1e                	jne    80100748 <cprintf+0xe8>[m
[32m+[m[32m    case 'd':[m
[32m+[m[32m      printint(*argp++, 10, 1);[m
[32m+[m[32m      break;[m
[32m+[m[32m    case 'x':[m
[32m+[m[32m    case 'p':[m
[32m+[m[32m      printint(*argp++, 16, 0);[m
 8010072a:	8d 46 04             	lea    0x4(%esi),%eax[m
 8010072d:	31 c9                	xor    %ecx,%ecx[m
 8010072f:	ba 10 00 00 00       	mov    $0x10,%edx[m
[36m@@ -620,63 +1246,125 @@[m [mDisassembly of section .text:[m
 80100737:	8b 06                	mov    (%esi),%eax[m
 80100739:	e8 42 fe ff ff       	call   80100580 <printint>[m
 8010073e:	8b 75 e4             	mov    -0x1c(%ebp),%esi[m
[32m+[m[32m      break;[m
 80100741:	eb 9b                	jmp    801006de <cprintf+0x7e>[m
 80100743:	90                   	nop[m
 80100744:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    case '%':[m
[32m+[m[32m      consputc('%');[m
[32m+[m[32m      break;[m
[32m+[m[32m    default:[m
[32m+[m[32m      // Print unknown % sequence to draw attention.[m
[32m+[m[32m      consputc('%');[m
 80100748:	b8 25 00 00 00       	mov    $0x25,%eax[m
 8010074d:	89 55 e4             	mov    %edx,-0x1c(%ebp)[m
 80100750:	e8 9b fc ff ff       	call   801003f0 <consputc>[m
[32m+[m[32m      consputc(c);[m
 80100755:	8b 55 e4             	mov    -0x1c(%ebp),%edx[m
 80100758:	89 d0                	mov    %edx,%eax[m
 8010075a:	e8 91 fc ff ff       	call   801003f0 <consputc>[m
[32m+[m[32m      break;[m
 8010075f:	e9 7a ff ff ff       	jmp    801006de <cprintf+0x7e>[m
 80100764:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m        s = "(null)";[m
[32m+[m[32m      for(; *s; s++)[m
[32m+[m[32m        consputc(*s);[m
[32m+[m[32m      break;[m
[32m+[m[32m    case '%':[m
[32m+[m[32m      consputc('%');[m
 80100768:	b8 25 00 00 00       	mov    $0x25,%eax[m
 8010076d:	e8 7e fc ff ff       	call   801003f0 <consputc>[m
 80100772:	e9 7c ff ff ff       	jmp    801006f3 <cprintf+0x93>[m
 80100777:	89 f6                	mov    %esi,%esi[m
 80100779:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    case 'x':[m
[32m+[m[32m    case 'p':[m
[32m+[m[32m      printint(*argp++, 16, 0);[m
[32m+[m[32m      break;[m
[32m+[m[32m    case 's':[m
[32m+[m[32m      if((s = (char*)*argp++) == 0)[m
 80100780:	8d 46 04             	lea    0x4(%esi),%eax[m
 80100783:	8b 36                	mov    (%esi),%esi[m
 80100785:	89 45 e4             	mov    %eax,-0x1c(%ebp)[m
[31m-80100788:	b8 20 70 10 80       	mov    $0x80107020,%eax[m
[32m+[m[32m        s = "(null)";[m
[32m+[m[32m80100788:	b8 a0 72 10 80       	mov    $0x801072a0,%eax[m
 8010078d:	85 f6                	test   %esi,%esi[m
 8010078f:	0f 44 f0             	cmove  %eax,%esi[m
[32m+[m[32m      for(; *s; s++)[m
 80100792:	0f be 06             	movsbl (%esi),%eax[m
 80100795:	84 c0                	test   %al,%al[m
 80100797:	74 16                	je     801007af <cprintf+0x14f>[m
 80100799:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
 801007a0:	83 c6 01             	add    $0x1,%esi[m
[32m+[m[32m        consputc(*s);[m
 801007a3:	e8 48 fc ff ff       	call   801003f0 <consputc>[m
[32m+[m[32m      printint(*argp++, 16, 0);[m
[32m+[m[32m      break;[m
[32m+[m[32m    case 's':[m
[32m+[m[32m      if((s = (char*)*argp++) == 0)[m
[32m+[m[32m        s = "(null)";[m
[32m+[m[32m      for(; *s; s++)[m
 801007a8:	0f be 06             	movsbl (%esi),%eax[m
 801007ab:	84 c0                	test   %al,%al[m
 801007ad:	75 f1                	jne    801007a0 <cprintf+0x140>[m
[32m+[m[32m    case 'x':[m
[32m+[m[32m    case 'p':[m
[32m+[m[32m      printint(*argp++, 16, 0);[m
[32m+[m[32m      break;[m
[32m+[m[32m    case 's':[m
[32m+[m[32m      if((s = (char*)*argp++) == 0)[m
 801007af:	8b 75 e4             	mov    -0x1c(%ebp),%esi[m
 801007b2:	e9 27 ff ff ff       	jmp    801006de <cprintf+0x7e>[m
 801007b7:	89 f6                	mov    %esi,%esi[m
 801007b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m  uint *argp;[m
[32m+[m[32m  char *s;[m
[32m+[m
[32m+[m[32m  locking = cons.locking;[m
[32m+[m[32m  if(locking)[m
[32m+[m[32m    acquire(&cons.lock);[m
 801007c0:	83 ec 0c             	sub    $0xc,%esp[m
 801007c3:	68 20 a5 10 80       	push   $0x8010a520[m
[31m-801007c8:	e8 f3 3a 00 00       	call   801042c0 <acquire>[m
[32m+[m[32m801007c8:	e8 03 3c 00 00       	call   801043d0 <acquire>[m
 801007cd:	83 c4 10             	add    $0x10,%esp[m
 801007d0:	e9 a4 fe ff ff       	jmp    80100679 <cprintf+0x19>[m
[32m+[m
[32m+[m[32m  if (fmt == 0)[m
[32m+[m[32m    panic("null fmt");[m
 801007d5:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801007d8:	68 27 70 10 80       	push   $0x80107027[m
[32m+[m[32m801007d8:	68 a7 72 10 80       	push   $0x801072a7[m
 801007dd:	e8 8e fb ff ff       	call   80100370 <panic>[m
 801007e2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
 801007e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
 801007f0 <consoleintr>:[m
[32m+[m
[32m+[m[32m#define C(x)  ((x)-'@')  // Control-x[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mconsoleintr(int (*getc)(void))[m
[32m+[m[32m{[m
 801007f0:	55                   	push   %ebp[m
 801007f1:	89 e5                	mov    %esp,%ebp[m
 801007f3:	57                   	push   %edi[m
 801007f4:	56                   	push   %esi[m
 801007f5:	53                   	push   %ebx[m
[32m+[m[32m  int c, doprocdump = 0;[m
 801007f6:	31 f6                	xor    %esi,%esi[m
[32m+[m
[32m+[m[32m#define C(x)  ((x)-'@')  // Control-x[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mconsoleintr(int (*getc)(void))[m
[32m+[m[32m{[m
 801007f8:	83 ec 18             	sub    $0x18,%esp[m
 801007fb:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m  int c, doprocdump = 0;[m
[32m+[m
[32m+[m[32m  acquire(&cons.lock);[m
 801007fe:	68 20 a5 10 80       	push   $0x8010a520[m
[31m-80100803:	e8 b8 3a 00 00       	call   801042c0 <acquire>[m
[32m+[m[32m80100803:	e8 c8 3b 00 00       	call   801043d0 <acquire>[m
[32m+[m[32m  while((c = getc()) >= 0){[m
 80100808:	83 c4 10             	add    $0x10,%esp[m
 8010080b:	90                   	nop[m
 8010080c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[36m@@ -684,6 +1372,7 @@[m [mDisassembly of section .text:[m
 80100812:	85 c0                	test   %eax,%eax[m
 80100814:	89 c7                	mov    %eax,%edi[m
 80100816:	78 48                	js     80100860 <consoleintr+0x70>[m
[32m+[m[32m    switch(c){[m
 80100818:	83 ff 10             	cmp    $0x10,%edi[m
 8010081b:	0f 84 3f 01 00 00    	je     80100960 <consoleintr+0x170>[m
 80100821:	7e 5d                	jle    80100880 <consoleintr+0x90>[m
[36m@@ -691,33 +1380,69 @@[m [mDisassembly of section .text:[m
 80100826:	0f 84 dc 00 00 00    	je     80100908 <consoleintr+0x118>[m
 8010082c:	83 ff 7f             	cmp    $0x7f,%edi[m
 8010082f:	75 54                	jne    80100885 <consoleintr+0x95>[m
[32m+[m[32m        input.e--;[m
[32m+[m[32m        consputc(BACKSPACE);[m
[32m+[m[32m      }[m
[32m+[m[32m      break;[m
[32m+[m[32m    case C('H'): case '\x7f':  // Backspace[m
[32m+[m[32m      if(input.e != input.w){[m
 80100831:	a1 c8 ff 10 80       	mov    0x8010ffc8,%eax[m
 80100836:	3b 05 c4 ff 10 80    	cmp    0x8010ffc4,%eax[m
 8010083c:	74 d2                	je     80100810 <consoleintr+0x20>[m
[32m+[m[32m        input.e--;[m
 8010083e:	83 e8 01             	sub    $0x1,%eax[m
 80100841:	a3 c8 ff 10 80       	mov    %eax,0x8010ffc8[m
[32m+[m[32m        consputc(BACKSPACE);[m
 80100846:	b8 00 01 00 00       	mov    $0x100,%eax[m
 8010084b:	e8 a0 fb ff ff       	call   801003f0 <consputc>[m
[32m+[m[32mconsoleintr(int (*getc)(void))[m
[32m+[m[32m{[m
[32m+[m[32m  int c, doprocdump = 0;[m
[32m+[m
[32m+[m[32m  acquire(&cons.lock);[m
[32m+[m[32m  while((c = getc()) >= 0){[m
 80100850:	ff d3                	call   *%ebx[m
 80100852:	85 c0                	test   %eax,%eax[m
 80100854:	89 c7                	mov    %eax,%edi[m
 80100856:	79 c0                	jns    80100818 <consoleintr+0x28>[m
 80100858:	90                   	nop[m
 80100859:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  release(&cons.lock);[m
 80100860:	83 ec 0c             	sub    $0xc,%esp[m
 80100863:	68 20 a5 10 80       	push   $0x8010a520[m
[31m-80100868:	e8 33 3c 00 00       	call   801044a0 <release>[m
[32m+[m[32m80100868:	e8 43 3d 00 00       	call   801045b0 <release>[m
[32m+[m[32m  if(doprocdump) {[m
 8010086d:	83 c4 10             	add    $0x10,%esp[m
 80100870:	85 f6                	test   %esi,%esi[m
 80100872:	0f 85 f8 00 00 00    	jne    80100970 <consoleintr+0x180>[m
[32m+[m[32m    procdump();  // now call procdump() wo. cons.lock held[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
 80100878:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
 8010087b:	5b                   	pop    %ebx[m
 8010087c:	5e                   	pop    %esi[m
 8010087d:	5f                   	pop    %edi[m
 8010087e:	5d                   	pop    %ebp[m
 8010087f:	c3                   	ret    [m
[32m+[m[32m{[m
[32m+[m[32m  int c, doprocdump = 0;[m
[32m+[m
[32m+[m[32m  acquire(&cons.lock);[m
[32m+[m[32m  while((c = getc()) >= 0){[m
[32m+[m[32m    switch(c){[m
 80100880:	83 ff 08             	cmp    $0x8,%edi[m
 80100883:	74 ac                	je     80100831 <consoleintr+0x41>[m
[32m+[m[32m        input.e--;[m
[32m+[m[32m        consputc(BACKSPACE);[m
[32m+[m[32m      }[m
[32m+[m[32m      break;[m
[32m+[m[32m    default:[m
[32m+[m[32m      if(c != 0 && input.e-input.r < INPUT_BUF){[m
 80100885:	85 ff                	test   %edi,%edi[m
 80100887:	74 87                	je     80100810 <consoleintr+0x20>[m
 80100889:	a1 c8 ff 10 80       	mov    0x8010ffc8,%eax[m
[36m@@ -725,15 +1450,33 @@[m [mDisassembly of section .text:[m
 80100890:	2b 15 c0 ff 10 80    	sub    0x8010ffc0,%edx[m
 80100896:	83 fa 7f             	cmp    $0x7f,%edx[m
 80100899:	0f 87 71 ff ff ff    	ja     80100810 <consoleintr+0x20>[m
[32m+[m[32m        c = (c == '\r') ? '\n' : c;[m
[32m+[m[32m        input.buf[input.e++ % INPUT_BUF] = c;[m
 8010089f:	8d 50 01             	lea    0x1(%eax),%edx[m
 801008a2:	83 e0 7f             	and    $0x7f,%eax[m
[32m+[m[32m        consputc(BACKSPACE);[m
[32m+[m[32m      }[m
[32m+[m[32m      break;[m
[32m+[m[32m    default:[m
[32m+[m[32m      if(c != 0 && input.e-input.r < INPUT_BUF){[m
[32m+[m[32m        c = (c == '\r') ? '\n' : c;[m
 801008a5:	83 ff 0d             	cmp    $0xd,%edi[m
[32m+[m[32m        input.buf[input.e++ % INPUT_BUF] = c;[m
 801008a8:	89 15 c8 ff 10 80    	mov    %edx,0x8010ffc8[m
[32m+[m[32m        consputc(BACKSPACE);[m
[32m+[m[32m      }[m
[32m+[m[32m      break;[m
[32m+[m[32m    default:[m
[32m+[m[32m      if(c != 0 && input.e-input.r < INPUT_BUF){[m
[32m+[m[32m        c = (c == '\r') ? '\n' : c;[m
 801008ae:	0f 84 c8 00 00 00    	je     8010097c <consoleintr+0x18c>[m
[32m+[m[32m        input.buf[input.e++ % INPUT_BUF] = c;[m
 801008b4:	89 f9                	mov    %edi,%ecx[m
 801008b6:	88 88 40 ff 10 80    	mov    %cl,-0x7fef00c0(%eax)[m
[32m+[m[32m        consputc(c);[m
 801008bc:	89 f8                	mov    %edi,%eax[m
 801008be:	e8 2d fb ff ff       	call   801003f0 <consputc>[m
[32m+[m[32m        if(c == '\n' || c == C('D') || input.e == input.r+INPUT_BUF){[m
 801008c3:	83 ff 0a             	cmp    $0xa,%edi[m
 801008c6:	0f 84 c1 00 00 00    	je     8010098d <consoleintr+0x19d>[m
 801008cc:	83 ff 04             	cmp    $0x4,%edi[m
[36m@@ -742,43 +1485,99 @@[m [mDisassembly of section .text:[m
 801008da:	83 e8 80             	sub    $0xffffff80,%eax[m
 801008dd:	39 05 c8 ff 10 80    	cmp    %eax,0x8010ffc8[m
 801008e3:	0f 85 27 ff ff ff    	jne    80100810 <consoleintr+0x20>[m
[32m+[m[32m          input.w = input.e;[m
[32m+[m[32m          wakeup(&input.r);[m
 801008e9:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m      if(c != 0 && input.e-input.r < INPUT_BUF){[m
[32m+[m[32m        c = (c == '\r') ? '\n' : c;[m
[32m+[m[32m        input.buf[input.e++ % INPUT_BUF] = c;[m
[32m+[m[32m        consputc(c);[m
[32m+[m[32m        if(c == '\n' || c == C('D') || input.e == input.r+INPUT_BUF){[m
[32m+[m[32m          input.w = input.e;[m
 801008ec:	a3 c4 ff 10 80       	mov    %eax,0x8010ffc4[m
[32m+[m[32m          wakeup(&input.r);[m
 801008f1:	68 c0 ff 10 80       	push   $0x8010ffc0[m
[31m-801008f6:	e8 e5 36 00 00       	call   80103fe0 <wakeup>[m
[32m+[m[32m801008f6:	e8 f5 37 00 00       	call   801040f0 <wakeup>[m
 801008fb:	83 c4 10             	add    $0x10,%esp[m
 801008fe:	e9 0d ff ff ff       	jmp    80100810 <consoleintr+0x20>[m
 80100903:	90                   	nop[m
 80100904:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    case C('P'):  // Process listing.[m
[32m+[m[32m      // procdump() locks cons.lock indirectly; invoke later[m
[32m+[m[32m      doprocdump = 1;[m
[32m+[m[32m      break;[m
[32m+[m[32m    case C('U'):  // Kill line.[m
[32m+[m[32m      while(input.e != input.w &&[m
 80100908:	a1 c8 ff 10 80       	mov    0x8010ffc8,%eax[m
 8010090d:	39 05 c4 ff 10 80    	cmp    %eax,0x8010ffc4[m
 80100913:	75 2b                	jne    80100940 <consoleintr+0x150>[m
 80100915:	e9 f6 fe ff ff       	jmp    80100810 <consoleintr+0x20>[m
 8010091a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m            input.buf[(input.e-1) % INPUT_BUF] != '\n'){[m
[32m+[m[32m        input.e--;[m
 80100920:	a3 c8 ff 10 80       	mov    %eax,0x8010ffc8[m
[32m+[m[32m        consputc(BACKSPACE);[m
 80100925:	b8 00 01 00 00       	mov    $0x100,%eax[m
 8010092a:	e8 c1 fa ff ff       	call   801003f0 <consputc>[m
[32m+[m[32m    case C('P'):  // Process listing.[m
[32m+[m[32m      // procdump() locks cons.lock indirectly; invoke later[m
[32m+[m[32m      doprocdump = 1;[m
[32m+[m[32m      break;[m
[32m+[m[32m    case C('U'):  // Kill line.[m
[32m+[m[32m      while(input.e != input.w &&[m
 8010092f:	a1 c8 ff 10 80       	mov    0x8010ffc8,%eax[m
 80100934:	3b 05 c4 ff 10 80    	cmp    0x8010ffc4,%eax[m
 8010093a:	0f 84 d0 fe ff ff    	je     80100810 <consoleintr+0x20>[m
[32m+[m[32m            input.buf[(input.e-1) % INPUT_BUF] != '\n'){[m
 80100940:	83 e8 01             	sub    $0x1,%eax[m
 80100943:	89 c2                	mov    %eax,%edx[m
 80100945:	83 e2 7f             	and    $0x7f,%edx[m
[32m+[m[32m    case C('P'):  // Process listing.[m
[32m+[m[32m      // procdump() locks cons.lock indirectly; invoke later[m
[32m+[m[32m      doprocdump = 1;[m
[32m+[m[32m      break;[m
[32m+[m[32m    case C('U'):  // Kill line.[m
[32m+[m[32m      while(input.e != input.w &&[m
 80100948:	80 ba 40 ff 10 80 0a 	cmpb   $0xa,-0x7fef00c0(%edx)[m
 8010094f:	75 cf                	jne    80100920 <consoleintr+0x130>[m
 80100951:	e9 ba fe ff ff       	jmp    80100810 <consoleintr+0x20>[m
 80100956:	8d 76 00             	lea    0x0(%esi),%esi[m
 80100959:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m  acquire(&cons.lock);[m
[32m+[m[32m  while((c = getc()) >= 0){[m
[32m+[m[32m    switch(c){[m
[32m+[m[32m    case C('P'):  // Process listing.[m
[32m+[m[32m      // procdump() locks cons.lock indirectly; invoke later[m
[32m+[m[32m      doprocdump = 1;[m
 80100960:	be 01 00 00 00       	mov    $0x1,%esi[m
 80100965:	e9 a6 fe ff ff       	jmp    80100810 <consoleintr+0x20>[m
 8010096a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m  }[m
[32m+[m[32m  release(&cons.lock);[m
[32m+[m[32m  if(doprocdump) {[m
[32m+[m[32m    procdump();  // now call procdump() wo. cons.lock held[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
 80100970:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
 80100973:	5b                   	pop    %ebx[m
 80100974:	5e                   	pop    %esi[m
 80100975:	5f                   	pop    %edi[m
 80100976:	5d                   	pop    %ebp[m
[31m-80100977:	e9 54 37 00 00       	jmp    801040d0 <procdump>[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  release(&cons.lock);[m
[32m+[m[32m  if(doprocdump) {[m
[32m+[m[32m    procdump();  // now call procdump() wo. cons.lock held[m
[32m+[m[32m80100977:	e9 64 38 00 00       	jmp    801041e0 <procdump>[m
[32m+[m[32m      }[m
[32m+[m[32m      break;[m
[32m+[m[32m    default:[m
[32m+[m[32m      if(c != 0 && input.e-input.r < INPUT_BUF){[m
[32m+[m[32m        c = (c == '\r') ? '\n' : c;[m
[32m+[m[32m        input.buf[input.e++ % INPUT_BUF] = c;[m
 8010097c:	c6 80 40 ff 10 80 0a 	movb   $0xa,-0x7fef00c0(%eax)[m
[32m+[m[32m        consputc(c);[m
 80100983:	b8 0a 00 00 00       	mov    $0xa,%eax[m
 80100988:	e8 63 fa ff ff       	call   801003f0 <consputc>[m
 8010098d:	a1 c8 ff 10 80       	mov    0x8010ffc8,%eax[m
[36m@@ -787,34 +1586,59 @@[m [mDisassembly of section .text:[m
 80100999:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
 801009a0 <consoleinit>:[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mconsoleinit(void)[m
[32m+[m[32m{[m
 801009a0:	55                   	push   %ebp[m
 801009a1:	89 e5                	mov    %esp,%ebp[m
 801009a3:	83 ec 10             	sub    $0x10,%esp[m
[31m-801009a6:	68 30 70 10 80       	push   $0x80107030[m
[32m+[m[32m  initlock(&cons.lock, "console");[m
[32m+[m[32m801009a6:	68 b0 72 10 80       	push   $0x801072b0[m
 801009ab:	68 20 a5 10 80       	push   $0x8010a520[m
[31m-801009b0:	e8 eb 38 00 00       	call   801042a0 <initlock>[m
[32m+[m[32m801009b0:	e8 fb 39 00 00       	call   801043b0 <initlock>[m
[32m+[m
[32m+[m[32m  devsw[CONSOLE].write = consolewrite;[m
[32m+[m[32m  devsw[CONSOLE].read = consoleread;[m
[32m+[m[32m  cons.locking = 1;[m
[32m+[m
[32m+[m[32m  picenable(IRQ_KBD);[m
 801009b5:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)[m
[32m+[m[32mvoid[m
[32m+[m[32mconsoleinit(void)[m
[32m+[m[32m{[m
[32m+[m[32m  initlock(&cons.lock, "console");[m
[32m+[m
[32m+[m[32m  devsw[CONSOLE].write = consolewrite;[m
 801009bc:	c7 05 8c 09 11 80 00 	movl   $0x80100600,0x8011098c[m
 801009c3:	06 10 80 [m
[32m+[m[32m  devsw[CONSOLE].read = consoleread;[m
 801009c6:	c7 05 88 09 11 80 70 	movl   $0x80100270,0x80110988[m
 801009cd:	02 10 80 [m
[32m+[m[32m  cons.locking = 1;[m
 801009d0:	c7 05 54 a5 10 80 01 	movl   $0x1,0x8010a554[m
 801009d7:	00 00 00 [m
[31m-801009da:	e8 01 29 00 00       	call   801032e0 <picenable>[m
[32m+[m
[32m+[m[32m  picenable(IRQ_KBD);[m
[32m+[m[32m801009da:	e8 01 2a 00 00       	call   801033e0 <picenable>[m
[32m+[m[32m  ioapicenable(IRQ_KBD, 0);[m
 801009df:	58                   	pop    %eax[m
 801009e0:	5a                   	pop    %edx[m
 801009e1:	6a 00                	push   $0x0[m
 801009e3:	6a 01                	push   $0x1[m
[31m-801009e5:	e8 f6 18 00 00       	call   801022e0 <ioapicenable>[m
[32m+[m[32m801009e5:	e8 f6 19 00 00       	call   801023e0 <ioapicenable>[m
[32m+[m[32m}[m
 801009ea:	83 c4 10             	add    $0x10,%esp[m
 801009ed:	c9                   	leave  [m
 801009ee:	c3                   	ret    [m
 801009ef:	90                   	nop[m
 [m
 801009f0 <exitf>:[m
[31m-#include "traps.h"[m
[32m+[m[32m/* assembly function to push exit syscall to stack */[m
[32m+[m[32m/***************************************************/[m
 [m
[31m-/* assembly function to push syscall to stack */[m
 void[m
 exitf()[m
 {[m
[36m@@ -847,10896 +1671,18451 @@[m [mexitf()[m
 80100a0f:	90                   	nop[m
 [m
 80100a10 <exec>:[m
[32m+[m[32m/***************************************************/[m
[32m+[m
 [m
 int[m
 exec(char *path, char **argv)[m
 {[m
 80100a10:	55                   	push   %ebp[m
[31m-80100a11:	89 e5                	mov    %esp,%ebp[m
[31m-80100a13:	57                   	push   %edi[m
[31m-80100a14:	56                   	push   %esi[m
[31m-80100a15:	53                   	push   %ebx[m
[31m-80100a16:	81 ec 0c 01 00 00    	sub    $0x10c,%esp[m
[31m-  struct proghdr ph;[m
[31m-  /* exit syscall size (byte) */[m
[32m+[m[32m    /* exit syscall size (byte) */[m
   int exitsz = (int)exec - (int)exitf;[m
   pde_t *pgdir, *oldpgdir;[m
 [m
[31m-  begin_op();[m
[31m-80100a1c:	e8 ef 21 00 00       	call   80102c10 <begin_op>[m
[31m-[m
[31m-  if((ip = namei(path)) == 0){[m
[31m-80100a21:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100a24:	ff 75 08             	pushl  0x8(%ebp)[m
[31m-80100a27:	e8 b4 14 00 00       	call   80101ee0 <namei>[m
[31m-80100a2c:	83 c4 10             	add    $0x10,%esp[m
[31m-80100a2f:	85 c0                	test   %eax,%eax[m
[31m-80100a31:	0f 84 a3 01 00 00    	je     80100bda <exec+0x1ca>[m
[31m-    end_op();[m
[31m-    return -1;[m
[31m-  }[m
[31m-  ilock(ip);[m
[31m-80100a37:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100a3a:	89 c3                	mov    %eax,%ebx[m
[31m-80100a3c:	50                   	push   %eax[m
[31m-80100a3d:	e8 6e 0c 00 00       	call   801016b0 <ilock>[m
[31m-  pgdir = 0;[m
 [m
[31m-  // Check ELF header[m
[31m-  if(readi(ip, (char*)&elf, 0, sizeof(elf)) < sizeof(elf))[m
[31m-80100a42:	8d 85 24 ff ff ff    	lea    -0xdc(%ebp),%eax[m
[31m-80100a48:	6a 34                	push   $0x34[m
[31m-80100a4a:	6a 00                	push   $0x0[m
[31m-80100a4c:	50                   	push   %eax[m
[31m-80100a4d:	53                   	push   %ebx[m
[31m-80100a4e:	e8 1d 0f 00 00       	call   80101970 <readi>[m
[31m-80100a53:	83 c4 20             	add    $0x20,%esp[m
[31m-80100a56:	83 f8 33             	cmp    $0x33,%eax[m
[31m-80100a59:	77 25                	ja     80100a80 <exec+0x70>[m
[32m+[m[32mchar newOpPath[1024]={'\0'};[m
[32m+[m[32m80100a11:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m80100a13:	b9 00 01 00 00       	mov    $0x100,%ecx[m
[32m+[m[32m/***************************************************/[m
 [m
[31m- bad:[m
[31m-  if(pgdir)[m
[31m-    freevm(pgdir);[m
[31m-  if(ip){[m
[31m-    iunlockput(ip);[m
[31m-80100a5b:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100a5e:	53                   	push   %ebx[m
[31m-80100a5f:	e8 bc 0e 00 00       	call   80101920 <iunlockput>[m
[31m-    end_op();[m
[31m-80100a64:	e8 17 22 00 00       	call   80102c80 <end_op>[m
[31m-80100a69:	83 c4 10             	add    $0x10,%esp[m
[31m-  }[m
[31m-  return -1;[m
[31m-80100a6c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[31m-}[m
[31m-80100a71:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80100a74:	5b                   	pop    %ebx[m
[31m-80100a75:	5e                   	pop    %esi[m
[31m-80100a76:	5f                   	pop    %edi[m
[31m-80100a77:	5d                   	pop    %ebp[m
[31m-80100a78:	c3                   	ret    [m
[31m-80100a79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-  pgdir = 0;[m
 [m
[31m-  // Check ELF header[m
[31m-  if(readi(ip, (char*)&elf, 0, sizeof(elf)) < sizeof(elf))[m
[31m-    goto bad;[m
[31m-  if(elf.magic != ELF_MAGIC)[m
[31m-80100a80:	81 bd 24 ff ff ff 7f 	cmpl   $0x464c457f,-0xdc(%ebp)[m
[31m-80100a87:	45 4c 46 [m
[31m-80100a8a:	75 cf                	jne    80100a5b <exec+0x4b>[m
[31m-    goto bad;[m
[32m+[m[32mint[m
[32m+[m[32mexec(char *path, char **argv)[m
[32m+[m[32m{[m
[32m+[m[32m80100a18:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80100a1a:	57                   	push   %edi[m
[32m+[m[32m80100a1b:	56                   	push   %esi[m
[32m+[m[32m80100a1c:	53                   	push   %ebx[m
[32m+[m[32m    /* exit syscall size (byte) */[m
[32m+[m[32m  int exitsz = (int)exec - (int)exitf;[m
[32m+[m[32m  pde_t *pgdir, *oldpgdir;[m
[32m+[m
[32m+[m
[32m+[m[32mchar newOpPath[1024]={'\0'};[m
[32m+[m[32m80100a1d:	8d bd e8 fb ff ff    	lea    -0x418(%ebp),%edi[m
[32m+[m[32m/***************************************************/[m
[32m+[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mexec(char *path, char **argv)[m
[32m+[m[32m{[m
[32m+[m[32m80100a23:	81 ec 1c 05 00 00    	sub    $0x51c,%esp[m
[32m+[m[32m80100a29:	8b 75 08             	mov    0x8(%ebp),%esi[m
[32m+[m[32m    /* exit syscall size (byte) */[m
[32m+[m[32m  int exitsz = (int)exec - (int)exitf;[m
[32m+[m[32m  pde_t *pgdir, *oldpgdir;[m
[32m+[m
[32m+[m
[32m+[m[32mchar newOpPath[1024]={'\0'};[m
[32m+[m[32m80100a2c:	f3 ab                	rep stos %eax,%es:(%edi)[m
[32m+[m[32mint j;[m
[32m+[m[32mbegin_op();[m
[32m+[m[32m80100a2e:	e8 dd 22 00 00       	call   80102d10 <begin_op>[m
[32m+[m[32m80100a33:	c7 85 f4 fa ff ff 00 	movl   $0x0,-0x50c(%ebp)[m
[32m+[m[32m80100a3a:	00 00 00[m[41m [m
[32m+[m[32m80100a3d:	c7 85 f0 fa ff ff 00 	movl   $0x0,-0x510(%ebp)[m
[32m+[m[32m80100a44:	00 00 00[m[41m [m
[32m+[m[32m80100a47:	8b 85 f4 fa ff ff    	mov    -0x50c(%ebp),%eax[m
[32m+[m[32m/***************************************************/[m
[32m+[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mexec(char *path, char **argv)[m
[32m+[m[32m{[m
[32m+[m[32m80100a4d:	31 db                	xor    %ebx,%ebx[m
[32m+[m[32m80100a4f:	89 75 08             	mov    %esi,0x8(%ebp)[m
[32m+[m[32m80100a52:	89 de                	mov    %ebx,%esi[m
[32m+[m[32m80100a54:	8d b8 a0 2d 11 80    	lea    -0x7feed260(%eax),%edi[m
[32m+[m[32m80100a5a:	89 c3                	mov    %eax,%ebx[m
[32m+[m[32m80100a5c:	eb 14                	jmp    80100a72 <exec+0x62>[m
[32m+[m[32m80100a5e:	66 90                	xchg   %ax,%ax[m
[32m+[m[32mint found=0;[m
[32m+[m
[32m+[m
[32m+[m[32mwhile(n<10 && found==0){[m
[32m+[m[32m  for(j=0;j<strlen(gPath[n]);j++){[m
[32m+[m[32m    newOpPath[j]=(gPath[n])[j];[m
[32m+[m[32m80100a60:	0f b6 84 33 a0 2d 11 	movzbl -0x7feed260(%ebx,%esi,1),%eax[m
[32m+[m[32m80100a67:	80[m[41m [m
[32m+[m[32m80100a68:	88 84 35 e8 fb ff ff 	mov    %al,-0x418(%ebp,%esi,1)[m
[32m+[m[32mint Failed=0;[m
[32m+[m[32mint found=0;[m
[32m+[m
[32m+[m
[32m+[m[32mwhile(n<10 && found==0){[m
[32m+[m[32m  for(j=0;j<strlen(gPath[n]);j++){[m
[32m+[m[32m80100a6f:	83 c6 01             	add    $0x1,%esi[m
[32m+[m[32m80100a72:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80100a75:	57                   	push   %edi[m
[32m+[m[32m80100a76:	e8 c5 3d 00 00       	call   80104840 <strlen>[m
[32m+[m[32m80100a7b:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80100a7e:	39 c6                	cmp    %eax,%esi[m
[32m+[m[32m80100a80:	7c de                	jl     80100a60 <exec+0x50>[m
[32m+[m[32m    newOpPath[j]=(gPath[n])[j];[m
[32m+[m
[32m+[m[32m  }[m[41m [m
[32m+[m[32m  for(int k=j;(k-j)<strlen(path);k++){[m
[32m+[m[32m      newOpPath[k]=path[k-j];[m
[32m+[m[32m80100a82:	8d 85 e8 fb ff ff    	lea    -0x418(%ebp),%eax[m
[32m+[m[32m80100a88:	89 f3                	mov    %esi,%ebx[m
[32m+[m[32m80100a8a:	31 ff                	xor    %edi,%edi[m
[32m+[m[32m80100a8c:	8b 75 08             	mov    0x8(%ebp),%esi[m
[32m+[m[32m80100a8f:	01 c3                	add    %eax,%ebx[m
[32m+[m[32m80100a91:	eb 0f                	jmp    80100aa2 <exec+0x92>[m
[32m+[m[32m80100a93:	90                   	nop[m
[32m+[m[32m80100a94:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m80100a98:	0f b6 04 3e          	movzbl (%esi,%edi,1),%eax[m
[32m+[m[32m80100a9c:	88 04 3b             	mov    %al,(%ebx,%edi,1)[m
[32m+[m[32m80100a9f:	83 c7 01             	add    $0x1,%edi[m
[32m+[m[32mwhile(n<10 && found==0){[m
[32m+[m[32m  for(j=0;j<strlen(gPath[n]);j++){[m
[32m+[m[32m    newOpPath[j]=(gPath[n])[j];[m
[32m+[m
[32m+[m[32m  }[m[41m [m
[32m+[m[32m  for(int k=j;(k-j)<strlen(path);k++){[m
[32m+[m[32m80100aa2:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80100aa5:	56                   	push   %esi[m
[32m+[m[32m80100aa6:	e8 95 3d 00 00       	call   80104840 <strlen>[m
[32m+[m[32m80100aab:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80100aae:	39 c7                	cmp    %eax,%edi[m
[32m+[m[32m80100ab0:	7c e6                	jl     80100a98 <exec+0x88>[m
[32m+[m[32m      newOpPath[k]=path[k-j];[m
[32m+[m[32m  }[m[41m   [m
[32m+[m
[32m+[m[32m  if((ip = namei(newOpPath)) == 0){  //operate failed[m
[32m+[m[32m80100ab2:	8d 85 e8 fb ff ff    	lea    -0x418(%ebp),%eax[m
[32m+[m[32m80100ab8:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80100abb:	50                   	push   %eax[m
[32m+[m[32m80100abc:	e8 1f 15 00 00       	call   80101fe0 <namei>[m
[32m+[m[32m80100ac1:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80100ac4:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80100ac6:	74 4e                	je     80100b16 <exec+0x106>[m
[32m+[m[32m}[m
[32m+[m[32m if(Failed==10){   //failed 10 times[m
[32m+[m[32m    end_op();[m
[32m+[m[32m    return -1;[m
[32m+[m[32m}[m
[32m+[m[32m  ilock(ip);[m
[32m+[m[32m80100ac8:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80100acb:	89 c3                	mov    %eax,%ebx[m
[32m+[m[32m80100acd:	50                   	push   %eax[m
[32m+[m[32m80100ace:	e8 dd 0c 00 00       	call   801017b0 <ilock>[m
[32m+[m[32m  pgdir = 0;[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m
[32m+[m[32m  // Check ELF header[m
[32m+[m[32m  if(readi(ip, (char*)&elf, 0, sizeof(elf)) < sizeof(elf))[m
[32m+[m[32m80100ad3:	8d 85 24 fb ff ff    	lea    -0x4dc(%ebp),%eax[m
[32m+[m[32m80100ad9:	6a 34                	push   $0x34[m
[32m+[m[32m80100adb:	6a 00                	push   $0x0[m
[32m+[m[32m80100add:	50                   	push   %eax[m
[32m+[m[32m80100ade:	53                   	push   %ebx[m
[32m+[m[32m80100adf:	e8 8c 0f 00 00       	call   80101a70 <readi>[m
[32m+[m[32m80100ae4:	83 c4 20             	add    $0x20,%esp[m
[32m+[m[32m80100ae7:	83 f8 33             	cmp    $0x33,%eax[m
[32m+[m[32m80100aea:	76 0c                	jbe    80100af8 <exec+0xe8>[m
[32m+[m[32m    goto bad;[m
[32m+[m[32m  if(elf.magic != ELF_MAGIC)[m
[32m+[m[32m80100aec:	81 bd 24 fb ff ff 7f 	cmpl   $0x464c457f,-0x4dc(%ebp)[m
[32m+[m[32m80100af3:	45 4c 46[m[41m [m
[32m+[m[32m80100af6:	74 50                	je     80100b48 <exec+0x138>[m
[32m+[m
[32m+[m[32m bad:[m
[32m+[m[32m  if(pgdir)[m
[32m+[m[32m    freevm(pgdir);[m
[32m+[m[32m  if(ip){[m
[32m+[m[32m    iunlockput(ip);[m
[32m+[m[32m80100af8:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80100afb:	53                   	push   %ebx[m
[32m+[m[32m80100afc:	e8 1f 0f 00 00       	call   80101a20 <iunlockput>[m
[32m+[m[32m    end_op();[m
[32m+[m[32m80100b01:	e8 7a 22 00 00       	call   80102d80 <end_op>[m
[32m+[m[32m80100b06:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m  }[m
[32m+[m[32m  return -1;[m
[32m+[m[32m80100b09:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[32m+[m[32m}[m
[32m+[m[32m80100b0e:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m80100b11:	5b                   	pop    %ebx[m
[32m+[m[32m80100b12:	5e                   	pop    %esi[m
[32m+[m[32m80100b13:	5f                   	pop    %edi[m
[32m+[m[32m80100b14:	5d                   	pop    %ebp[m
[32m+[m[32m80100b15:	c3                   	ret[m[41m    [m
[32m+[m[32m  for(int k=j;(k-j)<strlen(path);k++){[m
[32m+[m[32m      newOpPath[k]=path[k-j];[m
[32m+[m[32m  }[m[41m   [m
[32m+[m
[32m+[m[32m  if((ip = namei(newOpPath)) == 0){  //operate failed[m
[32m+[m[32m     Failed++;[m
[32m+[m[32m80100b16:	83 85 f0 fa ff ff 01 	addl   $0x1,-0x510(%ebp)[m
[32m+[m[32m80100b1d:	81 85 f4 fa ff ff e8 	addl   $0x3e8,-0x50c(%ebp)[m
[32m+[m[32m80100b24:	03 00 00[m[41m [m
[32m+[m[32m80100b27:	8b 85 f0 fa ff ff    	mov    -0x510(%ebp),%eax[m
[32m+[m[32mint n=0;[m
[32m+[m[32mint Failed=0;[m
[32m+[m[32mint found=0;[m
[32m+[m
[32m+[m
[32m+[m[32mwhile(n<10 && found==0){[m
[32m+[m[32m80100b2d:	83 f8 0a             	cmp    $0xa,%eax[m
[32m+[m[32m80100b30:	0f 85 11 ff ff ff    	jne    80100a47 <exec+0x37>[m
[32m+[m[32m    found=1;[m
[32m+[m[32m   }[m[41m	[m
[32m+[m[32m  n++;[m
[32m+[m[32m}[m
[32m+[m[32m if(Failed==10){   //failed 10 times[m
[32m+[m[32m    end_op();[m
[32m+[m[32m80100b36:	e8 45 22 00 00       	call   80102d80 <end_op>[m
[32m+[m[32m    return -1;[m
[32m+[m[32m80100b3b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[32m+[m[32m80100b40:	eb cc                	jmp    80100b0e <exec+0xfe>[m
[32m+[m[32m80100b42:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m  if(readi(ip, (char*)&elf, 0, sizeof(elf)) < sizeof(elf))[m
[32m+[m[32m    goto bad;[m
[32m+[m[32m  if(elf.magic != ELF_MAGIC)[m
[32m+[m[32m    goto bad;[m
 [m
   if((pgdir = setupkvm()) == 0)[m
[31m-80100a8c:	e8 ef 5e 00 00       	call   80106980 <setupkvm>[m
[31m-80100a91:	85 c0                	test   %eax,%eax[m
[31m-80100a93:	89 85 f4 fe ff ff    	mov    %eax,-0x10c(%ebp)[m
[31m-80100a99:	74 c0                	je     80100a5b <exec+0x4b>[m
[32m+[m[32m80100b48:	e8 a3 60 00 00       	call   80106bf0 <setupkvm>[m
[32m+[m[32m80100b4d:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80100b4f:	89 85 f4 fa ff ff    	mov    %eax,-0x50c(%ebp)[m
[32m+[m[32m80100b55:	74 a1                	je     80100af8 <exec+0xe8>[m
     goto bad;[m
 [m
   // Load program into memory.[m
   sz = 0;[m
   for(i=0, off=elf.phoff; i<elf.phnum; i++, off+=sizeof(ph)){[m
[31m-80100a9b:	66 83 bd 50 ff ff ff 	cmpw   $0x0,-0xb0(%ebp)[m
[31m-80100aa2:	00 [m
[31m-80100aa3:	8b b5 40 ff ff ff    	mov    -0xc0(%ebp),%esi[m
[31m-80100aa9:	0f 84 d1 02 00 00    	je     80100d80 <exec+0x370>[m
[31m-80100aaf:	c7 85 f0 fe ff ff 00 	movl   $0x0,-0x110(%ebp)[m
[31m-80100ab6:	00 00 00 [m
[31m-80100ab9:	31 ff                	xor    %edi,%edi[m
[31m-80100abb:	eb 18                	jmp    80100ad5 <exec+0xc5>[m
[31m-80100abd:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-80100ac0:	0f b7 85 50 ff ff ff 	movzwl -0xb0(%ebp),%eax[m
[31m-80100ac7:	83 c7 01             	add    $0x1,%edi[m
[31m-80100aca:	83 c6 20             	add    $0x20,%esi[m
[31m-80100acd:	39 f8                	cmp    %edi,%eax[m
[31m-80100acf:	0f 8e ab 00 00 00    	jle    80100b80 <exec+0x170>[m
[32m+[m[32m80100b57:	66 83 bd 50 fb ff ff 	cmpw   $0x0,-0x4b0(%ebp)[m
[32m+[m[32m80100b5e:	00[m[41m [m
[32m+[m[32m80100b5f:	8b 85 40 fb ff ff    	mov    -0x4c0(%ebp),%eax[m
[32m+[m[32m80100b65:	89 85 ec fa ff ff    	mov    %eax,-0x514(%ebp)[m
[32m+[m[32m80100b6b:	0f 84 e0 00 00 00    	je     80100c51 <exec+0x241>[m
[32m+[m[32m80100b71:	31 ff                	xor    %edi,%edi[m
[32m+[m[32m80100b73:	c7 85 f0 fa ff ff 00 	movl   $0x0,-0x510(%ebp)[m
[32m+[m[32m80100b7a:	00 00 00[m[41m [m
[32m+[m[32m80100b7d:	eb 23                	jmp    80100ba2 <exec+0x192>[m
[32m+[m[32m80100b7f:	83 85 f0 fa ff ff 01 	addl   $0x1,-0x510(%ebp)[m
[32m+[m[32m80100b86:	0f b7 85 50 fb ff ff 	movzwl -0x4b0(%ebp),%eax[m
[32m+[m[32m80100b8d:	8b 8d f0 fa ff ff    	mov    -0x510(%ebp),%ecx[m
[32m+[m[32m80100b93:	83 85 ec fa ff ff 20 	addl   $0x20,-0x514(%ebp)[m
[32m+[m[32m80100b9a:	39 c8                	cmp    %ecx,%eax[m
[32m+[m[32m80100b9c:	0f 8e ed 00 00 00    	jle    80100c8f <exec+0x27f>[m
     if(readi(ip, (char*)&ph, off, sizeof(ph)) != sizeof(ph))[m
[31m-80100ad5:	8d 85 04 ff ff ff    	lea    -0xfc(%ebp),%eax[m
[31m-80100adb:	6a 20                	push   $0x20[m
[31m-80100add:	56                   	push   %esi[m
[31m-80100ade:	50                   	push   %eax[m
[31m-80100adf:	53                   	push   %ebx[m
[31m-80100ae0:	e8 8b 0e 00 00       	call   80101970 <readi>[m
[31m-80100ae5:	83 c4 10             	add    $0x10,%esp[m
[31m-80100ae8:	83 f8 20             	cmp    $0x20,%eax[m
[31m-80100aeb:	75 7b                	jne    80100b68 <exec+0x158>[m
[32m+[m[32m80100ba2:	8d 85 04 fb ff ff    	lea    -0x4fc(%ebp),%eax[m
[32m+[m[32m80100ba8:	6a 20                	push   $0x20[m
[32m+[m[32m80100baa:	ff b5 ec fa ff ff    	pushl  -0x514(%ebp)[m
[32m+[m[32m80100bb0:	50                   	push   %eax[m
[32m+[m[32m80100bb1:	53                   	push   %ebx[m
[32m+[m[32m80100bb2:	e8 b9 0e 00 00       	call   80101a70 <readi>[m
[32m+[m[32m80100bb7:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80100bba:	83 f8 20             	cmp    $0x20,%eax[m
[32m+[m[32m80100bbd:	75 6c                	jne    80100c2b <exec+0x21b>[m
       goto bad;[m
     if(ph.type != ELF_PROG_LOAD)[m
[31m-80100aed:	83 bd 04 ff ff ff 01 	cmpl   $0x1,-0xfc(%ebp)[m
[31m-80100af4:	75 ca                	jne    80100ac0 <exec+0xb0>[m
[32m+[m[32m80100bbf:	83 bd 04 fb ff ff 01 	cmpl   $0x1,-0x4fc(%ebp)[m
[32m+[m[32m80100bc6:	75 b7                	jne    80100b7f <exec+0x16f>[m
       continue;[m
     if(ph.memsz < ph.filesz)[m
[31m-80100af6:	8b 85 18 ff ff ff    	mov    -0xe8(%ebp),%eax[m
[31m-80100afc:	3b 85 14 ff ff ff    	cmp    -0xec(%ebp),%eax[m
[31m-80100b02:	72 64                	jb     80100b68 <exec+0x158>[m
[32m+[m[32m80100bc8:	8b 85 18 fb ff ff    	mov    -0x4e8(%ebp),%eax[m
[32m+[m[32m80100bce:	3b 85 14 fb ff ff    	cmp    -0x4ec(%ebp),%eax[m
[32m+[m[32m80100bd4:	72 55                	jb     80100c2b <exec+0x21b>[m
       goto bad;[m
     if(ph.vaddr + ph.memsz < ph.vaddr)[m
[31m-80100b04:	03 85 0c ff ff ff    	add    -0xf4(%ebp),%eax[m
[31m-80100b0a:	72 5c                	jb     80100b68 <exec+0x158>[m
[32m+[m[32m80100bd6:	03 85 0c fb ff ff    	add    -0x4f4(%ebp),%eax[m
[32m+[m[32m80100bdc:	72 4d                	jb     80100c2b <exec+0x21b>[m
       goto bad;[m
     if((sz = allocuvm(pgdir, sz, ph.vaddr + ph.memsz)) == 0)[m
[31m-80100b0c:	83 ec 04             	sub    $0x4,%esp[m
[31m-80100b0f:	50                   	push   %eax[m
[31m-80100b10:	ff b5 f0 fe ff ff    	pushl  -0x110(%ebp)[m
[31m-80100b16:	ff b5 f4 fe ff ff    	pushl  -0x10c(%ebp)[m
[31m-80100b1c:	e8 ef 60 00 00       	call   80106c10 <allocuvm>[m
[31m-80100b21:	83 c4 10             	add    $0x10,%esp[m
[31m-80100b24:	85 c0                	test   %eax,%eax[m
[31m-80100b26:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%ebp)[m
[31m-80100b2c:	74 3a                	je     80100b68 <exec+0x158>[m
[32m+[m[32m80100bde:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m80100be1:	50                   	push   %eax[m
[32m+[m[32m80100be2:	57                   	push   %edi[m
[32m+[m[32m80100be3:	ff b5 f4 fa ff ff    	pushl  -0x50c(%ebp)[m
[32m+[m[32m80100be9:	e8 92 62 00 00       	call   80106e80 <allocuvm>[m
[32m+[m[32m80100bee:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80100bf1:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80100bf3:	89 c7                	mov    %eax,%edi[m
[32m+[m[32m80100bf5:	74 34                	je     80100c2b <exec+0x21b>[m
       goto bad;[m
     if(ph.vaddr % PGSIZE != 0)[m
[31m-80100b2e:	8b 85 0c ff ff ff    	mov    -0xf4(%ebp),%eax[m
[31m-80100b34:	a9 ff 0f 00 00       	test   $0xfff,%eax[m
[31m-80100b39:	75 2d                	jne    80100b68 <exec+0x158>[m
[32m+[m[32m80100bf7:	8b 85 0c fb ff ff    	mov    -0x4f4(%ebp),%eax[m
[32m+[m[32m80100bfd:	a9 ff 0f 00 00       	test   $0xfff,%eax[m
[32m+[m[32m80100c02:	75 27                	jne    80100c2b <exec+0x21b>[m
       goto bad;[m
     if(loaduvm(pgdir, (char*)ph.vaddr, ip, ph.off, ph.filesz) < 0)[m
[31m-80100b3b:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100b3e:	ff b5 14 ff ff ff    	pushl  -0xec(%ebp)[m
[31m-80100b44:	ff b5 08 ff ff ff    	pushl  -0xf8(%ebp)[m
[31m-80100b4a:	53                   	push   %ebx[m
[31m-80100b4b:	50                   	push   %eax[m
[31m-80100b4c:	ff b5 f4 fe ff ff    	pushl  -0x10c(%ebp)[m
[31m-80100b52:	e8 f9 5f 00 00       	call   80106b50 <loaduvm>[m
[31m-80100b57:	83 c4 20             	add    $0x20,%esp[m
[31m-80100b5a:	85 c0                	test   %eax,%eax[m
[31m-80100b5c:	0f 89 5e ff ff ff    	jns    80100ac0 <exec+0xb0>[m
[31m-80100b62:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m80100c04:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80100c07:	ff b5 14 fb ff ff    	pushl  -0x4ec(%ebp)[m
[32m+[m[32m80100c0d:	ff b5 08 fb ff ff    	pushl  -0x4f8(%ebp)[m
[32m+[m[32m80100c13:	53                   	push   %ebx[m
[32m+[m[32m80100c14:	50                   	push   %eax[m
[32m+[m[32m80100c15:	ff b5 f4 fa ff ff    	pushl  -0x50c(%ebp)[m
[32m+[m[32m80100c1b:	e8 a0 61 00 00       	call   80106dc0 <loaduvm>[m
[32m+[m[32m80100c20:	83 c4 20             	add    $0x20,%esp[m
[32m+[m[32m80100c23:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80100c25:	0f 89 54 ff ff ff    	jns    80100b7f <exec+0x16f>[m
   freevm(oldpgdir);[m
   return 0;[m
 [m
  bad:[m
   if(pgdir)[m
     freevm(pgdir);[m
[31m-80100b68:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100b6b:	ff b5 f4 fe ff ff    	pushl  -0x10c(%ebp)[m
[31m-80100b71:	e8 ca 61 00 00       	call   80106d40 <freevm>[m
[31m-80100b76:	83 c4 10             	add    $0x10,%esp[m
[31m-80100b79:	e9 dd fe ff ff       	jmp    80100a5b <exec+0x4b>[m
[31m-80100b7e:	66 90                	xchg   %ax,%ax[m
[31m-80100b80:	8b b5 f0 fe ff ff    	mov    -0x110(%ebp),%esi[m
[31m-80100b86:	81 c6 ff 0f 00 00    	add    $0xfff,%esi[m
[31m-80100b8c:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi[m
[31m-80100b92:	8d be 00 20 00 00    	lea    0x2000(%esi),%edi[m
[32m+[m[32m80100c2b:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80100c2e:	ff b5 f4 fa ff ff    	pushl  -0x50c(%ebp)[m
[32m+[m[32m80100c34:	e8 77 63 00 00       	call   80106fb0 <freevm>[m
[32m+[m[32m  if(ip){[m
[32m+[m[32m80100c39:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80100c3c:	85 db                	test   %ebx,%ebx[m
[32m+[m[32m80100c3e:	0f 85 b4 fe ff ff    	jne    80100af8 <exec+0xe8>[m
[32m+[m[32m    iunlockput(ip);[m
[32m+[m[32m    end_op();[m
[32m+[m[32m  }[m
[32m+[m[32m  return -1;[m
[32m+[m[32m}[m
[32m+[m[32m80100c44:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m    freevm(pgdir);[m
[32m+[m[32m  if(ip){[m
[32m+[m[32m    iunlockput(ip);[m
[32m+[m[32m    end_op();[m
[32m+[m[32m  }[m
[32m+[m[32m  return -1;[m
[32m+[m[32m80100c47:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[32m+[m[32m}[m
[32m+[m[32m80100c4c:	5b                   	pop    %ebx[m
[32m+[m[32m80100c4d:	5e                   	pop    %esi[m
[32m+[m[32m80100c4e:	5f                   	pop    %edi[m
[32m+[m[32m80100c4f:	5d                   	pop    %ebp[m
[32m+[m[32m80100c50:	c3                   	ret[m[41m    [m
[32m+[m[32m  if((pgdir = setupkvm()) == 0)[m
[32m+[m[32m    goto bad;[m
[32m+[m
[32m+[m[32m  // Load program into memory.[m
[32m+[m[32m  sz = 0;[m
[32m+[m[32m  for(i=0, off=elf.phoff; i<elf.phnum; i++, off+=sizeof(ph)){[m
[32m+[m[32m80100c51:	bf 00 20 00 00       	mov    $0x2000,%edi[m
[32m+[m[32m80100c56:	31 c0                	xor    %eax,%eax[m
     if(ph.vaddr % PGSIZE != 0)[m
       goto bad;[m
     if(loaduvm(pgdir, (char*)ph.vaddr, ip, ph.off, ph.filesz) < 0)[m
       goto bad;[m
   }[m
   iunlockput(ip);[m
[31m-80100b98:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100b9b:	53                   	push   %ebx[m
[31m-80100b9c:	e8 7f 0d 00 00       	call   80101920 <iunlockput>[m
[32m+[m[32m80100c58:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80100c5b:	89 85 f0 fa ff ff    	mov    %eax,-0x510(%ebp)[m
[32m+[m[32m80100c61:	53                   	push   %ebx[m
[32m+[m[32m80100c62:	e8 b9 0d 00 00       	call   80101a20 <iunlockput>[m
   end_op();[m
[31m-80100ba1:	e8 da 20 00 00       	call   80102c80 <end_op>[m
[32m+[m[32m80100c67:	e8 14 21 00 00       	call   80102d80 <end_op>[m
   ip = 0;[m
 [m
   // Allocate two pages at the next page boundary.[m
   // Make the first inaccessible.  Use the second as the user stack.[m
   sz = PGROUNDUP(sz);[m
   if((sz = allocuvm(pgdir, sz, sz + 2*PGSIZE)) == 0)[m
[31m-80100ba6:	83 c4 0c             	add    $0xc,%esp[m
[31m-80100ba9:	57                   	push   %edi[m
[31m-80100baa:	56                   	push   %esi[m
[31m-80100bab:	ff b5 f4 fe ff ff    	pushl  -0x10c(%ebp)[m
[31m-80100bb1:	e8 5a 60 00 00       	call   80106c10 <allocuvm>[m
[31m-80100bb6:	83 c4 10             	add    $0x10,%esp[m
[31m-80100bb9:	85 c0                	test   %eax,%eax[m
[31m-80100bbb:	89 c6                	mov    %eax,%esi[m
[31m-80100bbd:	75 2a                	jne    80100be9 <exec+0x1d9>[m
[31m-  freevm(oldpgdir);[m
[31m-  return 0;[m
[31m-[m
[31m- bad:[m
[31m-  if(pgdir)[m
[31m-    freevm(pgdir);[m
[31m-80100bbf:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100bc2:	ff b5 f4 fe ff ff    	pushl  -0x10c(%ebp)[m
[31m-80100bc8:	e8 73 61 00 00       	call   80106d40 <freevm>[m
[31m-80100bcd:	83 c4 10             	add    $0x10,%esp[m
[31m-  if(ip){[m
[31m-    iunlockput(ip);[m
[31m-    end_op();[m
[32m+[m[32m80100c6c:	8b 85 f0 fa ff ff    	mov    -0x510(%ebp),%eax[m
[32m+[m[32m80100c72:	83 c4 0c             	add    $0xc,%esp[m
[32m+[m[32m80100c75:	57                   	push   %edi[m
[32m+[m[32m80100c76:	50                   	push   %eax[m
[32m+[m[32m80100c77:	ff b5 f4 fa ff ff    	pushl  -0x50c(%ebp)[m
[32m+[m[32m80100c7d:	e8 fe 61 00 00       	call   80106e80 <allocuvm>[m
[32m+[m[32m80100c82:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80100c85:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80100c87:	89 c7                	mov    %eax,%edi[m
[32m+[m[32m80100c89:	75 19                	jne    80100ca4 <exec+0x294>[m
[32m+[m[32m    if(loaduvm(pgdir, (char*)ph.vaddr, ip, ph.off, ph.filesz) < 0)[m
[32m+[m[32m      goto bad;[m
   }[m
[31m-  return -1;[m
[31m-80100bd0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[31m-80100bd5:	e9 97 fe ff ff       	jmp    80100a71 <exec+0x61>[m
[31m-  pde_t *pgdir, *oldpgdir;[m
[31m-[m
[31m-  begin_op();[m
[31m-[m
[31m-  if((ip = namei(path)) == 0){[m
[31m-    end_op();[m
[31m-80100bda:	e8 a1 20 00 00       	call   80102c80 <end_op>[m
[31m-    return -1;[m
[31m-80100bdf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[31m-80100be4:	e9 88 fe ff ff       	jmp    80100a71 <exec+0x61>[m
[32m+[m[32m  iunlockput(ip);[m
[32m+[m[32m  end_op();[m
[32m+[m[32m  ip = 0;[m
[32m+[m[32m80100c8b:	31 db                	xor    %ebx,%ebx[m
[32m+[m[32m80100c8d:	eb 9c                	jmp    80100c2b <exec+0x21b>[m
[32m+[m[32m80100c8f:	8d 8f ff 0f 00 00    	lea    0xfff(%edi),%ecx[m
[32m+[m[32m80100c95:	89 c8                	mov    %ecx,%eax[m
[32m+[m[32m80100c97:	25 00 f0 ff ff       	and    $0xfffff000,%eax[m
[32m+[m[32m80100c9c:	8d b8 00 20 00 00    	lea    0x2000(%eax),%edi[m
[32m+[m[32m80100ca2:	eb b4                	jmp    80100c58 <exec+0x248>[m
   // Allocate two pages at the next page boundary.[m
   // Make the first inaccessible.  Use the second as the user stack.[m
   sz = PGROUNDUP(sz);[m
   if((sz = allocuvm(pgdir, sz, sz + 2*PGSIZE)) == 0)[m
     goto bad;[m
   clearpteu(pgdir, (char*)(sz - 2*PGSIZE));[m
[31m-80100be9:	8d 80 00 e0 ff ff    	lea    -0x2000(%eax),%eax[m
[31m-80100bef:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m80100ca4:	8d 80 00 e0 ff ff    	lea    -0x2000(%eax),%eax[m
[32m+[m[32m80100caa:	83 ec 08             	sub    $0x8,%esp[m
   sp = sz;[m
 [m
   // Push argument strings, prepare rest of stack in ustack.[m
   for(argc = 0; argv[argc]; argc++) {[m
[31m-80100bf2:	31 ff                	xor    %edi,%edi[m
[31m-80100bf4:	89 f3                	mov    %esi,%ebx[m
[32m+[m[32m80100cad:	31 db                	xor    %ebx,%ebx[m
   // Allocate two pages at the next page boundary.[m
   // Make the first inaccessible.  Use the second as the user stack.[m
   sz = PGROUNDUP(sz);[m
   if((sz = allocuvm(pgdir, sz, sz + 2*PGSIZE)) == 0)[m
     goto bad;[m
   clearpteu(pgdir, (char*)(sz - 2*PGSIZE));[m
[31m-80100bf6:	50                   	push   %eax[m
[31m-80100bf7:	ff b5 f4 fe ff ff    	pushl  -0x10c(%ebp)[m
[31m-80100bfd:	e8 be 61 00 00       	call   80106dc0 <clearpteu>[m
[32m+[m[32m80100caf:	50                   	push   %eax[m
[32m+[m[32m80100cb0:	ff b5 f4 fa ff ff    	pushl  -0x50c(%ebp)[m
[32m+[m[32m80100cb6:	e8 75 63 00 00       	call   80107030 <clearpteu>[m
   sp = sz;[m
 [m
   // Push argument strings, prepare rest of stack in ustack.[m
   for(argc = 0; argv[argc]; argc++) {[m
[31m-80100c02:	8b 45 0c             	mov    0xc(%ebp),%eax[m
[31m-80100c05:	83 c4 10             	add    $0x10,%esp[m
[31m-80100c08:	8d 95 58 ff ff ff    	lea    -0xa8(%ebp),%edx[m
[31m-80100c0e:	8b 00                	mov    (%eax),%eax[m
[31m-80100c10:	85 c0                	test   %eax,%eax[m
[31m-80100c12:	74 71                	je     80100c85 <exec+0x275>[m
[31m-80100c14:	89 b5 f0 fe ff ff    	mov    %esi,-0x110(%ebp)[m
[31m-80100c1a:	8b b5 f4 fe ff ff    	mov    -0x10c(%ebp),%esi[m
[31m-80100c20:	eb 0b                	jmp    80100c2d <exec+0x21d>[m
[31m-80100c22:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-    if(argc >= MAXARG)[m
[31m-80100c28:	83 ff 20             	cmp    $0x20,%edi[m
[31m-80100c2b:	74 92                	je     80100bbf <exec+0x1af>[m
[31m-      goto bad;[m
[31m-    sp = (sp - (strlen(argv[argc]) + 1)) & ~3;[m
[31m-80100c2d:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100c30:	50                   	push   %eax[m
[31m-80100c31:	e8 fa 3a 00 00       	call   80104730 <strlen>[m
[31m-80100c36:	f7 d0                	not    %eax[m
[31m-80100c38:	01 c3                	add    %eax,%ebx[m
[31m-    if(copyout(pgdir, sp, argv[argc], strlen(argv[argc]) + 1) < 0)[m
[31m-80100c3a:	58                   	pop    %eax[m
[31m-80100c3b:	8b 45 0c             	mov    0xc(%ebp),%eax[m
[31m-[m
[31m-  // Push argument strings, prepare rest of stack in ustack.[m
[31m-  for(argc = 0; argv[argc]; argc++) {[m
[32m+[m[32m80100cbb:	8b 45 0c             	mov    0xc(%ebp),%eax[m
[32m+[m[32m80100cbe:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80100cc1:	8b 00                	mov    (%eax),%eax[m
[32m+[m[32m80100cc3:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80100cc5:	0f 84 8f 00 00 00    	je     80100d5a <exec+0x34a>[m
[32m+[m[32m80100ccb:	89 75 08             	mov    %esi,0x8(%ebp)[m
[32m+[m[32m80100cce:	89 fe                	mov    %edi,%esi[m
[32m+[m[32m80100cd0:	eb 0d                	jmp    80100cdf <exec+0x2cf>[m
[32m+[m[32m80100cd2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
     if(argc >= MAXARG)[m
[32m+[m[32m80100cd8:	83 fa 20             	cmp    $0x20,%edx[m
[32m+[m[32m80100cdb:	74 ae                	je     80100c8b <exec+0x27b>[m
[32m+[m[32m80100cdd:	89 d3                	mov    %edx,%ebx[m
       goto bad;[m
     sp = (sp - (strlen(argv[argc]) + 1)) & ~3;[m
[31m-80100c3e:	83 e3 fc             	and    $0xfffffffc,%ebx[m
[32m+[m[32m80100cdf:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80100ce2:	50                   	push   %eax[m
[32m+[m[32m80100ce3:	e8 58 3b 00 00       	call   80104840 <strlen>[m
[32m+[m[32m80100ce8:	f7 d0                	not    %eax[m
[32m+[m[32m80100cea:	01 c6                	add    %eax,%esi[m
     if(copyout(pgdir, sp, argv[argc], strlen(argv[argc]) + 1) < 0)[m
[31m-80100c41:	ff 34 b8             	pushl  (%eax,%edi,4)[m
[31m-80100c44:	e8 e7 3a 00 00       	call   80104730 <strlen>[m
[31m-80100c49:	83 c0 01             	add    $0x1,%eax[m
[31m-80100c4c:	50                   	push   %eax[m
[31m-80100c4d:	8b 45 0c             	mov    0xc(%ebp),%eax[m
[31m-80100c50:	ff 34 b8             	pushl  (%eax,%edi,4)[m
[31m-80100c53:	53                   	push   %ebx[m
[31m-80100c54:	56                   	push   %esi[m
[31m-80100c55:	e8 c6 62 00 00       	call   80106f20 <copyout>[m
[31m-80100c5a:	83 c4 20             	add    $0x20,%esp[m
[31m-80100c5d:	85 c0                	test   %eax,%eax[m
[31m-80100c5f:	0f 88 5a ff ff ff    	js     80100bbf <exec+0x1af>[m
[31m-    goto bad;[m
[31m-  clearpteu(pgdir, (char*)(sz - 2*PGSIZE));[m
[31m-  sp = sz;[m
[32m+[m[32m80100cec:	58                   	pop    %eax[m
[32m+[m[32m80100ced:	8b 45 0c             	mov    0xc(%ebp),%eax[m
 [m
   // Push argument strings, prepare rest of stack in ustack.[m
   for(argc = 0; argv[argc]; argc++) {[m
[31m-80100c65:	8b 45 0c             	mov    0xc(%ebp),%eax[m
     if(argc >= MAXARG)[m
       goto bad;[m
     sp = (sp - (strlen(argv[argc]) + 1)) & ~3;[m
[32m+[m[32m80100cf0:	83 e6 fc             	and    $0xfffffffc,%esi[m
     if(copyout(pgdir, sp, argv[argc], strlen(argv[argc]) + 1) < 0)[m
[32m+[m[32m80100cf3:	ff 34 98             	pushl  (%eax,%ebx,4)[m
[32m+[m[32m80100cf6:	e8 45 3b 00 00       	call   80104840 <strlen>[m
[32m+[m[32m80100cfb:	83 c0 01             	add    $0x1,%eax[m
[32m+[m[32m80100cfe:	50                   	push   %eax[m
[32m+[m[32m80100cff:	8b 45 0c             	mov    0xc(%ebp),%eax[m
[32m+[m[32m80100d02:	ff 34 98             	pushl  (%eax,%ebx,4)[m
[32m+[m[32m80100d05:	56                   	push   %esi[m
[32m+[m[32m80100d06:	ff b5 f4 fa ff ff    	pushl  -0x50c(%ebp)[m
[32m+[m[32m80100d0c:	e8 7f 64 00 00       	call   80107190 <copyout>[m
[32m+[m[32m80100d11:	83 c4 20             	add    $0x20,%esp[m
[32m+[m[32m80100d14:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80100d16:	0f 88 6f ff ff ff    	js     80100c8b <exec+0x27b>[m
       goto bad;[m
     ustack[3+argc] = sp;[m
[31m-80100c68:	89 9c bd 64 ff ff ff 	mov    %ebx,-0x9c(%ebp,%edi,4)[m
[32m+[m[32m80100d1c:	8d 85 58 fb ff ff    	lea    -0x4a8(%ebp),%eax[m
     goto bad;[m
   clearpteu(pgdir, (char*)(sz - 2*PGSIZE));[m
   sp = sz;[m
 [m
   // Push argument strings, prepare rest of stack in ustack.[m
   for(argc = 0; argv[argc]; argc++) {[m
[31m-80100c6f:	83 c7 01             	add    $0x1,%edi[m
[32m+[m[32m80100d22:	8d 53 01             	lea    0x1(%ebx),%edx[m
     if(argc >= MAXARG)[m
       goto bad;[m
     sp = (sp - (strlen(argv[argc]) + 1)) & ~3;[m
     if(copyout(pgdir, sp, argv[argc], strlen(argv[argc]) + 1) < 0)[m
       goto bad;[m
     ustack[3+argc] = sp;[m
[31m-80100c72:	8d 95 58 ff ff ff    	lea    -0xa8(%ebp),%edx[m
[32m+[m[32m80100d25:	89 b4 9d 64 fb ff ff 	mov    %esi,-0x49c(%ebp,%ebx,4)[m
[32m+[m[32m80100d2c:	89 85 e8 fa ff ff    	mov    %eax,-0x518(%ebp)[m
     goto bad;[m
   clearpteu(pgdir, (char*)(sz - 2*PGSIZE));[m
   sp = sz;[m
 [m
   // Push argument strings, prepare rest of stack in ustack.[m
   for(argc = 0; argv[argc]; argc++) {[m
[31m-80100c78:	8b 04 b8             	mov    (%eax,%edi,4),%eax[m
[31m-80100c7b:	85 c0                	test   %eax,%eax[m
[31m-80100c7d:	75 a9                	jne    80100c28 <exec+0x218>[m
[31m-80100c7f:	8b b5 f0 fe ff ff    	mov    -0x110(%ebp),%esi[m
[32m+[m[32m80100d32:	8b 45 0c             	mov    0xc(%ebp),%eax[m
[32m+[m[32m80100d35:	8b 04 90             	mov    (%eax,%edx,4),%eax[m
[32m+[m[32m80100d38:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80100d3a:	75 9c                	jne    80100cd8 <exec+0x2c8>[m
[32m+[m[32m80100d3c:	8d 43 04             	lea    0x4(%ebx),%eax[m
[32m+[m[32m80100d3f:	8b 75 08             	mov    0x8(%ebp),%esi[m
[32m+[m[32m80100d42:	89 85 ec fa ff ff    	mov    %eax,-0x514(%ebp)[m
[32m+[m[32m80100d48:	8d 04 9d 08 00 00 00 	lea    0x8(,%ebx,4),%eax[m
[32m+[m[32m80100d4f:	89 85 f0 fa ff ff    	mov    %eax,-0x510(%ebp)[m
[32m+[m[32m80100d55:	8d 58 0c             	lea    0xc(%eax),%ebx[m
[32m+[m[32m80100d58:	eb 27                	jmp    80100d81 <exec+0x371>[m
[32m+[m[32m80100d5a:	8d 85 58 fb ff ff    	lea    -0x4a8(%ebp),%eax[m
[32m+[m[32m80100d60:	bb 10 00 00 00       	mov    $0x10,%ebx[m
[32m+[m[32m80100d65:	c7 85 f0 fa ff ff 04 	movl   $0x4,-0x510(%ebp)[m
[32m+[m[32m80100d6c:	00 00 00[m[41m [m
[32m+[m[32m80100d6f:	c7 85 ec fa ff ff 03 	movl   $0x3,-0x514(%ebp)[m
[32m+[m[32m80100d76:	00 00 00[m[41m [m
[32m+[m[32m80100d79:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m80100d7b:	89 85 e8 fa ff ff    	mov    %eax,-0x518(%ebp)[m
     if(copyout(pgdir, sp, argv[argc], strlen(argv[argc]) + 1) < 0)[m
       goto bad;[m
     ustack[3+argc] = sp;[m
   }[m
[31m-  /* stack pointer update */[m
[32m+[m[32m    /* stack pointer update */[m
[32m+[m[32m  sp = sz - exitsz;[m
[32m+[m[32m80100d81:	b8 10 0a 10 80       	mov    $0x80100a10,%eax[m
[32m+[m[32m80100d86:	89 f9                	mov    %edi,%ecx[m
[32m+[m[32m80100d88:	89 95 e0 fa ff ff    	mov    %edx,-0x520(%ebp)[m
[32m+[m[32m80100d8e:	2d f0 09 10 80       	sub    $0x801009f0,%eax[m
[32m+[m[32m80100d93:	29 c1                	sub    %eax,%ecx[m
[32m+[m[32m  /* copy page from sp to exitf */[m
[32m+[m[32m  copyout(pgdir,sp,exitf,exitsz);[m
[32m+[m[32m80100d95:	50                   	push   %eax[m
[32m+[m[32m80100d96:	68 f0 09 10 80       	push   $0x801009f0[m
[32m+[m[32m80100d9b:	51                   	push   %ecx[m
[32m+[m[32m80100d9c:	ff b5 f4 fa ff ff    	pushl  -0x50c(%ebp)[m
[32m+[m[32m80100da2:	89 8d e4 fa ff ff    	mov    %ecx,-0x51c(%ebp)[m
[32m+[m[32m80100da8:	e8 e3 63 00 00       	call   80107190 <copyout>[m
[32m+[m
[32m+[m[32m  ustack[3+argc] = 0;[m
[32m+[m
[32m+[m[32m  /* return address of user space program */[m
[32m+[m[32m  ustack[0] = sz - exitsz;  // fake return PC[m
[32m+[m[32m80100dad:	8b 8d e4 fa ff ff    	mov    -0x51c(%ebp),%ecx[m
[32m+[m[32m    /* stack pointer update */[m
   sp = sz - exitsz;[m
[31m-80100c85:	b8 10 0a 10 80       	mov    $0x80100a10,%eax[m
[31m-80100c8a:	89 f3                	mov    %esi,%ebx[m
[31m-80100c8c:	89 95 f0 fe ff ff    	mov    %edx,-0x110(%ebp)[m
[31m-80100c92:	2d f0 09 10 80       	sub    $0x801009f0,%eax[m
[31m-80100c97:	29 c3                	sub    %eax,%ebx[m
   /* copy page from sp to exitf */[m
   copyout(pgdir,sp,exitf,exitsz);[m
[31m-80100c99:	50                   	push   %eax[m
[31m-80100c9a:	68 f0 09 10 80       	push   $0x801009f0[m
[31m-80100c9f:	53                   	push   %ebx[m
[31m-80100ca0:	ff b5 f4 fe ff ff    	pushl  -0x10c(%ebp)[m
[31m-80100ca6:	e8 75 62 00 00       	call   80106f20 <copyout>[m
[32m+[m
   ustack[3+argc] = 0;[m
[32m+[m[32m80100db3:	8b 85 ec fa ff ff    	mov    -0x514(%ebp),%eax[m
 [m
   /* return address of user space program */[m
   ustack[0] = sz - exitsz;  // fake return PC[m
   ustack[1] = argc;[m
[32m+[m[32m80100db9:	8b 95 e0 fa ff ff    	mov    -0x520(%ebp),%edx[m
   ustack[2] = sp - (argc+1)*4;  // argv pointer[m
[31m-80100cab:	8d 04 bd 04 00 00 00 	lea    0x4(,%edi,4),%eax[m
[31m-80100cb2:	89 d9                	mov    %ebx,%ecx[m
[31m-[m
 [m
   sp -= (3+argc+1) * 4;[m
   if(copyout(pgdir, sp, ustack, (3+argc+1)*4) < 0)[m
[31m-80100cb4:	8b 95 f0 fe ff ff    	mov    -0x110(%ebp),%edx[m
[31m-  /* stack pointer update */[m
[32m+[m[32m80100dbf:	53                   	push   %ebx[m
[32m+[m[32m80100dc0:	ff b5 e8 fa ff ff    	pushl  -0x518(%ebp)[m
[32m+[m[32m    /* stack pointer update */[m
   sp = sz - exitsz;[m
   /* copy page from sp to exitf */[m
   copyout(pgdir,sp,exitf,exitsz);[m
 [m
   ustack[3+argc] = 0;[m
[31m-80100cba:	c7 84 bd 64 ff ff ff 	movl   $0x0,-0x9c(%ebp,%edi,4)[m
[31m-80100cc1:	00 00 00 00 [m
[32m+[m[32m80100dc6:	c7 84 85 58 fb ff ff 	movl   $0x0,-0x4a8(%ebp,%eax,4)[m
[32m+[m[32m80100dcd:	00 00 00 00[m[41m [m
 [m
   /* return address of user space program */[m
   ustack[0] = sz - exitsz;  // fake return PC[m
[31m-80100cc5:	89 9d 58 ff ff ff    	mov    %ebx,-0xa8(%ebp)[m
   ustack[1] = argc;[m
   ustack[2] = sp - (argc+1)*4;  // argv pointer[m
[31m-80100ccb:	29 c1                	sub    %eax,%ecx[m
[32m+[m[32m80100dd1:	89 c8                	mov    %ecx,%eax[m
[32m+[m[32m80100dd3:	2b 85 f0 fa ff ff    	sub    -0x510(%ebp),%eax[m
[32m+[m[32m  copyout(pgdir,sp,exitf,exitsz);[m
[32m+[m
[32m+[m[32m  ustack[3+argc] = 0;[m
 [m
[32m+[m[32m  /* return address of user space program */[m
[32m+[m[32m  ustack[0] = sz - exitsz;  // fake return PC[m
[32m+[m[32m80100dd9:	89 8d 58 fb ff ff    	mov    %ecx,-0x4a8(%ebp)[m
[32m+[m[32m  ustack[1] = argc;[m
[32m+[m[32m  ustack[2] = sp - (argc+1)*4;  // argv pointer[m
 [m
   sp -= (3+argc+1) * 4;[m
[31m-80100ccd:	83 c0 0c             	add    $0xc,%eax[m
[32m+[m[32m80100ddf:	29 d9                	sub    %ebx,%ecx[m
 [m
   ustack[3+argc] = 0;[m
 [m
   /* return address of user space program */[m
   ustack[0] = sz - exitsz;  // fake return PC[m
   ustack[1] = argc;[m
[31m-80100cd0:	89 bd 5c ff ff ff    	mov    %edi,-0xa4(%ebp)[m
[32m+[m[32m80100de1:	89 95 5c fb ff ff    	mov    %edx,-0x4a4(%ebp)[m
   ustack[2] = sp - (argc+1)*4;  // argv pointer[m
 [m
[31m-[m
   sp -= (3+argc+1) * 4;[m
[31m-80100cd6:	29 c3                	sub    %eax,%ebx[m
   if(copyout(pgdir, sp, ustack, (3+argc+1)*4) < 0)[m
[31m-80100cd8:	50                   	push   %eax[m
[31m-80100cd9:	52                   	push   %edx[m
[31m-80100cda:	53                   	push   %ebx[m
[31m-80100cdb:	ff b5 f4 fe ff ff    	pushl  -0x10c(%ebp)[m
[32m+[m[32m80100de7:	51                   	push   %ecx[m
[32m+[m[32m80100de8:	ff b5 f4 fa ff ff    	pushl  -0x50c(%ebp)[m
[32m+[m[32m  /* return address of user space program */[m
[32m+[m[32m  ustack[0] = sz - exitsz;  // fake return PC[m
[32m+[m[32m  ustack[1] = argc;[m
[32m+[m[32m  ustack[2] = sp - (argc+1)*4;  // argv pointer[m
[32m+[m
[32m+[m[32m  sp -= (3+argc+1) * 4;[m
[32m+[m[32m80100dee:	89 8d f0 fa ff ff    	mov    %ecx,-0x510(%ebp)[m
   ustack[3+argc] = 0;[m
 [m
   /* return address of user space program */[m
   ustack[0] = sz - exitsz;  // fake return PC[m
   ustack[1] = argc;[m
   ustack[2] = sp - (argc+1)*4;  // argv pointer[m
[31m-80100ce1:	89 8d 60 ff ff ff    	mov    %ecx,-0xa0(%ebp)[m
[31m-[m
[32m+[m[32m80100df4:	89 85 60 fb ff ff    	mov    %eax,-0x4a0(%ebp)[m
 [m
   sp -= (3+argc+1) * 4;[m
   if(copyout(pgdir, sp, ustack, (3+argc+1)*4) < 0)[m
[31m-80100ce7:	e8 34 62 00 00       	call   80106f20 <copyout>[m
[31m-80100cec:	83 c4 20             	add    $0x20,%esp[m
[31m-80100cef:	85 c0                	test   %eax,%eax[m
[31m-80100cf1:	0f 88 c8 fe ff ff    	js     80100bbf <exec+0x1af>[m
[32m+[m[32m80100dfa:	e8 91 63 00 00       	call   80107190 <copyout>[m
[32m+[m[32m80100dff:	83 c4 20             	add    $0x20,%esp[m
[32m+[m[32m80100e02:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80100e04:	0f 88 81 fe ff ff    	js     80100c8b <exec+0x27b>[m
     goto bad;[m
 [m
   // Save program name for debugging.[m
   for(last=s=path; *s; s++)[m
[31m-80100cf7:	8b 45 08             	mov    0x8(%ebp),%eax[m
[31m-80100cfa:	0f b6 10             	movzbl (%eax),%edx[m
[31m-80100cfd:	84 d2                	test   %dl,%dl[m
[31m-80100cff:	74 22                	je     80100d23 <exec+0x313>[m
[31m-80100d01:	8b 4d 08             	mov    0x8(%ebp),%ecx[m
[31m-80100d04:	83 c0 01             	add    $0x1,%eax[m
[31m-80100d07:	89 f6                	mov    %esi,%esi[m
[31m-80100d09:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m80100e0a:	0f b6 16             	movzbl (%esi),%edx[m
[32m+[m[32m80100e0d:	84 d2                	test   %dl,%dl[m
[32m+[m[32m80100e0f:	74 13                	je     80100e24 <exec+0x414>[m
[32m+[m[32m80100e11:	8d 46 01             	lea    0x1(%esi),%eax[m
     if(*s == '/')[m
       last = s+1;[m
[31m-80100d10:	80 fa 2f             	cmp    $0x2f,%dl[m
[32m+[m[32m80100e14:	80 fa 2f             	cmp    $0x2f,%dl[m
   sp -= (3+argc+1) * 4;[m
   if(copyout(pgdir, sp, ustack, (3+argc+1)*4) < 0)[m
     goto bad;[m
 [m
   // Save program name for debugging.[m
   for(last=s=path; *s; s++)[m
[31m-80100d13:	0f b6 10             	movzbl (%eax),%edx[m
[32m+[m[32m80100e17:	0f b6 10             	movzbl (%eax),%edx[m
     if(*s == '/')[m
       last = s+1;[m
[31m-80100d16:	0f 44 c8             	cmove  %eax,%ecx[m
[31m-80100d19:	83 c0 01             	add    $0x1,%eax[m
[32m+[m[32m80100e1a:	0f 44 f0             	cmove  %eax,%esi[m
[32m+[m[32m80100e1d:	83 c0 01             	add    $0x1,%eax[m
   sp -= (3+argc+1) * 4;[m
   if(copyout(pgdir, sp, ustack, (3+argc+1)*4) < 0)[m
     goto bad;[m
 [m
   // Save program name for debugging.[m
   for(last=s=path; *s; s++)[m
[31m-80100d1c:	84 d2                	test   %dl,%dl[m
[31m-80100d1e:	75 f0                	jne    80100d10 <exec+0x300>[m
[31m-80100d20:	89 4d 08             	mov    %ecx,0x8(%ebp)[m
[32m+[m[32m80100e20:	84 d2                	test   %dl,%dl[m
[32m+[m[32m80100e22:	75 f0                	jne    80100e14 <exec+0x404>[m
     if(*s == '/')[m
       last = s+1;[m
   safestrcpy(proc->name, last, sizeof(proc->name));[m
[31m-80100d23:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[31m-80100d29:	83 ec 04             	sub    $0x4,%esp[m
[31m-80100d2c:	6a 10                	push   $0x10[m
[31m-80100d2e:	ff 75 08             	pushl  0x8(%ebp)[m
[31m-80100d31:	83 c0 6c             	add    $0x6c,%eax[m
[31m-80100d34:	50                   	push   %eax[m
[31m-80100d35:	e8 b6 39 00 00       	call   801046f0 <safestrcpy>[m
[32m+[m[32m80100e24:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[32m+[m[32m80100e2a:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m80100e2d:	6a 10                	push   $0x10[m
[32m+[m[32m80100e2f:	56                   	push   %esi[m
[32m+[m[32m80100e30:	83 c0 6c             	add    $0x6c,%eax[m
[32m+[m[32m80100e33:	50                   	push   %eax[m
[32m+[m[32m80100e34:	e8 c7 39 00 00       	call   80104800 <safestrcpy>[m
 [m
   // Commit to the user image.[m
   oldpgdir = proc->pgdir;[m
[31m-80100d3a:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[32m+[m[32m80100e39:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
   proc->pgdir = pgdir;[m
[31m-80100d40:	8b 8d f4 fe ff ff    	mov    -0x10c(%ebp),%ecx[m
[32m+[m[32m80100e3f:	8b 95 f4 fa ff ff    	mov    -0x50c(%ebp),%edx[m
     if(*s == '/')[m
       last = s+1;[m
   safestrcpy(proc->name, last, sizeof(proc->name));[m
 [m
   // Commit to the user image.[m
   oldpgdir = proc->pgdir;[m
[31m-80100d46:	8b 78 04             	mov    0x4(%eax),%edi[m
[32m+[m[32m80100e45:	8b 58 04             	mov    0x4(%eax),%ebx[m
   proc->pgdir = pgdir;[m
   proc->sz = sz;[m
[31m-80100d49:	89 30                	mov    %esi,(%eax)[m
[32m+[m[32m80100e48:	89 38                	mov    %edi,(%eax)[m
       last = s+1;[m
   safestrcpy(proc->name, last, sizeof(proc->name));[m
 [m
   // Commit to the user image.[m
   oldpgdir = proc->pgdir;[m
   proc->pgdir = pgdir;[m
[31m-80100d4b:	89 48 04             	mov    %ecx,0x4(%eax)[m
[32m+[m[32m80100e4a:	89 50 04             	mov    %edx,0x4(%eax)[m
   proc->sz = sz;[m
   proc->tf->eip = elf.entry;  // main[m
[31m-80100d4e:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[31m-80100d54:	8b 8d 3c ff ff ff    	mov    -0xc4(%ebp),%ecx[m
[31m-80100d5a:	8b 50 18             	mov    0x18(%eax),%edx[m
[31m-80100d5d:	89 4a 38             	mov    %ecx,0x38(%edx)[m
[32m+[m[32m80100e4d:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[32m+[m[32m80100e53:	8b 95 3c fb ff ff    	mov    -0x4c4(%ebp),%edx[m
[32m+[m[32m80100e59:	8b 48 18             	mov    0x18(%eax),%ecx[m
[32m+[m[32m80100e5c:	89 51 38             	mov    %edx,0x38(%ecx)[m
   proc->tf->esp = sp;[m
[31m-80100d60:	8b 50 18             	mov    0x18(%eax),%edx[m
[31m-80100d63:	89 5a 44             	mov    %ebx,0x44(%edx)[m
[32m+[m[32m80100e5f:	8b 95 f0 fa ff ff    	mov    -0x510(%ebp),%edx[m
[32m+[m[32m80100e65:	8b 48 18             	mov    0x18(%eax),%ecx[m
[32m+[m[32m80100e68:	89 51 44             	mov    %edx,0x44(%ecx)[m
   switchuvm(proc);[m
[31m-80100d66:	89 04 24             	mov    %eax,(%esp)[m
[31m-80100d69:	e8 c2 5c 00 00       	call   80106a30 <switchuvm>[m
[32m+[m[32m80100e6b:	89 04 24             	mov    %eax,(%esp)[m
[32m+[m[32m80100e6e:	e8 2d 5e 00 00       	call   80106ca0 <switchuvm>[m
   freevm(oldpgdir);[m
[31m-80100d6e:	89 3c 24             	mov    %edi,(%esp)[m
[31m-80100d71:	e8 ca 5f 00 00       	call   80106d40 <freevm>[m
[32m+[m[32m80100e73:	89 1c 24             	mov    %ebx,(%esp)[m
[32m+[m[32m80100e76:	e8 35 61 00 00       	call   80106fb0 <freevm>[m
   return 0;[m
[31m-80100d76:	83 c4 10             	add    $0x10,%esp[m
[31m-80100d79:	31 c0                	xor    %eax,%eax[m
[31m-80100d7b:	e9 f1 fc ff ff       	jmp    80100a71 <exec+0x61>[m
[31m-  if((pgdir = setupkvm()) == 0)[m
[31m-    goto bad;[m
[31m-[m
[31m-  // Load program into memory.[m
[31m-  sz = 0;[m
[31m-  for(i=0, off=elf.phoff; i<elf.phnum; i++, off+=sizeof(ph)){[m
[31m-80100d80:	bf 00 20 00 00       	mov    $0x2000,%edi[m
[31m-80100d85:	31 f6                	xor    %esi,%esi[m
[31m-80100d87:	e9 0c fe ff ff       	jmp    80100b98 <exec+0x188>[m
[31m-80100d8c:	66 90                	xchg   %ax,%ax[m
[31m-80100d8e:	66 90                	xchg   %ax,%ax[m
[31m-[m
[31m-80100d90 <fileinit>:[m
[31m-80100d90:	55                   	push   %ebp[m
[31m-80100d91:	89 e5                	mov    %esp,%ebp[m
[31m-80100d93:	83 ec 10             	sub    $0x10,%esp[m
[31m-80100d96:	68 49 70 10 80       	push   $0x80107049[m
[31m-80100d9b:	68 e0 ff 10 80       	push   $0x8010ffe0[m
[31m-80100da0:	e8 fb 34 00 00       	call   801042a0 <initlock>[m
[31m-80100da5:	83 c4 10             	add    $0x10,%esp[m
[31m-80100da8:	c9                   	leave  [m
[31m-80100da9:	c3                   	ret    [m
[31m-80100daa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-[m
[31m-80100db0 <filealloc>:[m
[31m-80100db0:	55                   	push   %ebp[m
[31m-80100db1:	89 e5                	mov    %esp,%ebp[m
[31m-80100db3:	53                   	push   %ebx[m
[31m-80100db4:	bb 14 00 11 80       	mov    $0x80110014,%ebx[m
[31m-80100db9:	83 ec 10             	sub    $0x10,%esp[m
[31m-80100dbc:	68 e0 ff 10 80       	push   $0x8010ffe0[m
[31m-80100dc1:	e8 fa 34 00 00       	call   801042c0 <acquire>[m
[31m-80100dc6:	83 c4 10             	add    $0x10,%esp[m
[31m-80100dc9:	eb 10                	jmp    80100ddb <filealloc+0x2b>[m
[31m-80100dcb:	90                   	nop[m
[31m-80100dcc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80100dd0:	83 c3 18             	add    $0x18,%ebx[m
[31m-80100dd3:	81 fb 74 09 11 80    	cmp    $0x80110974,%ebx[m
[31m-80100dd9:	74 25                	je     80100e00 <filealloc+0x50>[m
[31m-80100ddb:	8b 43 04             	mov    0x4(%ebx),%eax[m
[31m-80100dde:	85 c0                	test   %eax,%eax[m
[31m-80100de0:	75 ee                	jne    80100dd0 <filealloc+0x20>[m
[31m-80100de2:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100de5:	c7 43 04 01 00 00 00 	movl   $0x1,0x4(%ebx)[m
[31m-80100dec:	68 e0 ff 10 80       	push   $0x8010ffe0[m
[31m-80100df1:	e8 aa 36 00 00       	call   801044a0 <release>[m
[31m-80100df6:	89 d8                	mov    %ebx,%eax[m
[31m-80100df8:	83 c4 10             	add    $0x10,%esp[m
[31m-80100dfb:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[31m-80100dfe:	c9                   	leave  [m
[31m-80100dff:	c3                   	ret    [m
[31m-80100e00:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100e03:	68 e0 ff 10 80       	push   $0x8010ffe0[m
[31m-80100e08:	e8 93 36 00 00       	call   801044a0 <release>[m
[31m-80100e0d:	83 c4 10             	add    $0x10,%esp[m
[31m-80100e10:	31 c0                	xor    %eax,%eax[m
[31m-80100e12:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[31m-80100e15:	c9                   	leave  [m
[31m-80100e16:	c3                   	ret    [m
[31m-80100e17:	89 f6                	mov    %esi,%esi[m
[31m-80100e19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-80100e20 <filedup>:[m
[31m-80100e20:	55                   	push   %ebp[m
[31m-80100e21:	89 e5                	mov    %esp,%ebp[m
[31m-80100e23:	53                   	push   %ebx[m
[31m-80100e24:	83 ec 10             	sub    $0x10,%esp[m
[31m-80100e27:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[31m-80100e2a:	68 e0 ff 10 80       	push   $0x8010ffe0[m
[31m-80100e2f:	e8 8c 34 00 00       	call   801042c0 <acquire>[m
[31m-80100e34:	8b 43 04             	mov    0x4(%ebx),%eax[m
[31m-80100e37:	83 c4 10             	add    $0x10,%esp[m
[31m-80100e3a:	85 c0                	test   %eax,%eax[m
[31m-80100e3c:	7e 1a                	jle    80100e58 <filedup+0x38>[m
[31m-80100e3e:	83 c0 01             	add    $0x1,%eax[m
[31m-80100e41:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100e44:	89 43 04             	mov    %eax,0x4(%ebx)[m
[31m-80100e47:	68 e0 ff 10 80       	push   $0x8010ffe0[m
[31m-80100e4c:	e8 4f 36 00 00       	call   801044a0 <release>[m
[31m-80100e51:	89 d8                	mov    %ebx,%eax[m
[31m-80100e53:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[31m-80100e56:	c9                   	leave  [m
[31m-80100e57:	c3                   	ret    [m
[31m-80100e58:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100e5b:	68 50 70 10 80       	push   $0x80107050[m
[31m-80100e60:	e8 0b f5 ff ff       	call   80100370 <panic>[m
[31m-80100e65:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80100e69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-80100e70 <fileclose>:[m
[31m-80100e70:	55                   	push   %ebp[m
[31m-80100e71:	89 e5                	mov    %esp,%ebp[m
[31m-80100e73:	57                   	push   %edi[m
[31m-80100e74:	56                   	push   %esi[m
[31m-80100e75:	53                   	push   %ebx[m
[31m-80100e76:	83 ec 28             	sub    $0x28,%esp[m
[31m-80100e79:	8b 7d 08             	mov    0x8(%ebp),%edi[m
[31m-80100e7c:	68 e0 ff 10 80       	push   $0x8010ffe0[m
[31m-80100e81:	e8 3a 34 00 00       	call   801042c0 <acquire>[m
[31m-80100e86:	8b 47 04             	mov    0x4(%edi),%eax[m
[31m-80100e89:	83 c4 10             	add    $0x10,%esp[m
[31m-80100e8c:	85 c0                	test   %eax,%eax[m
[31m-80100e8e:	0f 8e 9b 00 00 00    	jle    80100f2f <fileclose+0xbf>[m
[31m-80100e94:	83 e8 01             	sub    $0x1,%eax[m
[31m-80100e97:	85 c0                	test   %eax,%eax[m
[31m-80100e99:	89 47 04             	mov    %eax,0x4(%edi)[m
[31m-80100e9c:	74 1a                	je     80100eb8 <fileclose+0x48>[m
[31m-80100e9e:	c7 45 08 e0 ff 10 80 	movl   $0x8010ffe0,0x8(%ebp)[m
[31m-80100ea5:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80100ea8:	5b                   	pop    %ebx[m
[31m-80100ea9:	5e                   	pop    %esi[m
[31m-80100eaa:	5f                   	pop    %edi[m
[31m-80100eab:	5d                   	pop    %ebp[m
[31m-80100eac:	e9 ef 35 00 00       	jmp    801044a0 <release>[m
[31m-80100eb1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80100eb8:	0f b6 47 09          	movzbl 0x9(%edi),%eax[m
[31m-80100ebc:	8b 1f                	mov    (%edi),%ebx[m
[31m-80100ebe:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100ec1:	8b 77 0c             	mov    0xc(%edi),%esi[m
[31m-80100ec4:	c7 07 00 00 00 00    	movl   $0x0,(%edi)[m
[31m-80100eca:	88 45 e7             	mov    %al,-0x19(%ebp)[m
[31m-80100ecd:	8b 47 10             	mov    0x10(%edi),%eax[m
[31m-80100ed0:	68 e0 ff 10 80       	push   $0x8010ffe0[m
[31m-80100ed5:	89 45 e0             	mov    %eax,-0x20(%ebp)[m
[31m-80100ed8:	e8 c3 35 00 00       	call   801044a0 <release>[m
[31m-80100edd:	83 c4 10             	add    $0x10,%esp[m
[31m-80100ee0:	83 fb 01             	cmp    $0x1,%ebx[m
[31m-80100ee3:	74 13                	je     80100ef8 <fileclose+0x88>[m
[31m-80100ee5:	83 fb 02             	cmp    $0x2,%ebx[m
[31m-80100ee8:	74 26                	je     80100f10 <fileclose+0xa0>[m
[31m-80100eea:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80100eed:	5b                   	pop    %ebx[m
[31m-80100eee:	5e                   	pop    %esi[m
[31m-80100eef:	5f                   	pop    %edi[m
[31m-80100ef0:	5d                   	pop    %ebp[m
[31m-80100ef1:	c3                   	ret    [m
[31m-80100ef2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-80100ef8:	0f be 5d e7          	movsbl -0x19(%ebp),%ebx[m
[31m-80100efc:	83 ec 08             	sub    $0x8,%esp[m
[31m-80100eff:	53                   	push   %ebx[m
[31m-80100f00:	56                   	push   %esi[m
[31m-80100f01:	e8 aa 25 00 00       	call   801034b0 <pipeclose>[m
[31m-80100f06:	83 c4 10             	add    $0x10,%esp[m
[31m-80100f09:	eb df                	jmp    80100eea <fileclose+0x7a>[m
[31m-80100f0b:	90                   	nop[m
[31m-80100f0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80100f10:	e8 fb 1c 00 00       	call   80102c10 <begin_op>[m
[31m-80100f15:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100f18:	ff 75 e0             	pushl  -0x20(%ebp)[m
[31m-80100f1b:	e8 c0 08 00 00       	call   801017e0 <iput>[m
[31m-80100f20:	83 c4 10             	add    $0x10,%esp[m
[31m-80100f23:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80100f26:	5b                   	pop    %ebx[m
[31m-80100f27:	5e                   	pop    %esi[m
[31m-80100f28:	5f                   	pop    %edi[m
[31m-80100f29:	5d                   	pop    %ebp[m
[31m-80100f2a:	e9 51 1d 00 00       	jmp    80102c80 <end_op>[m
[31m-80100f2f:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100f32:	68 58 70 10 80       	push   $0x80107058[m
[31m-80100f37:	e8 34 f4 ff ff       	call   80100370 <panic>[m
[31m-80100f3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-[m
[31m-80100f40 <filestat>:[m
[31m-80100f40:	55                   	push   %ebp[m
[31m-80100f41:	89 e5                	mov    %esp,%ebp[m
[31m-80100f43:	53                   	push   %ebx[m
[31m-80100f44:	83 ec 04             	sub    $0x4,%esp[m
[31m-80100f47:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[31m-80100f4a:	83 3b 02             	cmpl   $0x2,(%ebx)[m
[31m-80100f4d:	75 31                	jne    80100f80 <filestat+0x40>[m
[31m-80100f4f:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100f52:	ff 73 10             	pushl  0x10(%ebx)[m
[31m-80100f55:	e8 56 07 00 00       	call   801016b0 <ilock>[m
[31m-80100f5a:	58                   	pop    %eax[m
[31m-80100f5b:	5a                   	pop    %edx[m
[31m-80100f5c:	ff 75 0c             	pushl  0xc(%ebp)[m
[31m-80100f5f:	ff 73 10             	pushl  0x10(%ebx)[m
[31m-80100f62:	e8 d9 09 00 00       	call   80101940 <stati>[m
[31m-80100f67:	59                   	pop    %ecx[m
[31m-80100f68:	ff 73 10             	pushl  0x10(%ebx)[m
[31m-80100f6b:	e8 20 08 00 00       	call   80101790 <iunlock>[m
[31m-80100f70:	83 c4 10             	add    $0x10,%esp[m
[31m-80100f73:	31 c0                	xor    %eax,%eax[m
[31m-80100f75:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[31m-80100f78:	c9                   	leave  [m
[31m-80100f79:	c3                   	ret    [m
[31m-80100f7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-80100f80:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[31m-80100f85:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[31m-80100f88:	c9                   	leave  [m
[31m-80100f89:	c3                   	ret    [m
[31m-80100f8a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-[m
[31m-80100f90 <fileread>:[m
[31m-80100f90:	55                   	push   %ebp[m
[31m-80100f91:	89 e5                	mov    %esp,%ebp[m
[31m-80100f93:	57                   	push   %edi[m
[31m-80100f94:	56                   	push   %esi[m
[31m-80100f95:	53                   	push   %ebx[m
[31m-80100f96:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100f99:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[31m-80100f9c:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[31m-80100f9f:	8b 7d 10             	mov    0x10(%ebp),%edi[m
[31m-80100fa2:	80 7b 08 00          	cmpb   $0x0,0x8(%ebx)[m
[31m-80100fa6:	74 60                	je     80101008 <fileread+0x78>[m
[31m-80100fa8:	8b 03                	mov    (%ebx),%eax[m
[31m-80100faa:	83 f8 01             	cmp    $0x1,%eax[m
[31m-80100fad:	74 41                	je     80100ff0 <fileread+0x60>[m
[31m-80100faf:	83 f8 02             	cmp    $0x2,%eax[m
[31m-80100fb2:	75 5b                	jne    8010100f <fileread+0x7f>[m
[31m-80100fb4:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100fb7:	ff 73 10             	pushl  0x10(%ebx)[m
[31m-80100fba:	e8 f1 06 00 00       	call   801016b0 <ilock>[m
[31m-80100fbf:	57                   	push   %edi[m
[31m-80100fc0:	ff 73 14             	pushl  0x14(%ebx)[m
[31m-80100fc3:	56                   	push   %esi[m
[31m-80100fc4:	ff 73 10             	pushl  0x10(%ebx)[m
[31m-80100fc7:	e8 a4 09 00 00       	call   80101970 <readi>[m
[31m-80100fcc:	83 c4 20             	add    $0x20,%esp[m
[31m-80100fcf:	85 c0                	test   %eax,%eax[m
[31m-80100fd1:	89 c6                	mov    %eax,%esi[m
[31m-80100fd3:	7e 03                	jle    80100fd8 <fileread+0x48>[m
[31m-80100fd5:	01 43 14             	add    %eax,0x14(%ebx)[m
[31m-80100fd8:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80100fdb:	ff 73 10             	pushl  0x10(%ebx)[m
[31m-80100fde:	e8 ad 07 00 00       	call   80101790 <iunlock>[m
[31m-80100fe3:	83 c4 10             	add    $0x10,%esp[m
[31m-80100fe6:	89 f0                	mov    %esi,%eax[m
[31m-80100fe8:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80100feb:	5b                   	pop    %ebx[m
[31m-80100fec:	5e                   	pop    %esi[m
[31m-80100fed:	5f                   	pop    %edi[m
[31m-80100fee:	5d                   	pop    %ebp[m
[31m-80100fef:	c3                   	ret    [m
[31m-80100ff0:	8b 43 0c             	mov    0xc(%ebx),%eax[m
[31m-80100ff3:	89 45 08             	mov    %eax,0x8(%ebp)[m
[31m-80100ff6:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80100ff9:	5b                   	pop    %ebx[m
[31m-80100ffa:	5e                   	pop    %esi[m
[31m-80100ffb:	5f                   	pop    %edi[m
[31m-80100ffc:	5d                   	pop    %ebp[m
[31m-80100ffd:	e9 7e 26 00 00       	jmp    80103680 <piperead>[m
[31m-80101002:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-80101008:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[31m-8010100d:	eb d9                	jmp    80100fe8 <fileread+0x58>[m
[31m-8010100f:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101012:	68 62 70 10 80       	push   $0x80107062[m
[31m-80101017:	e8 54 f3 ff ff       	call   80100370 <panic>[m
[31m-8010101c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-[m
[31m-80101020 <filewrite>:[m
[31m-80101020:	55                   	push   %ebp[m
[31m-80101021:	89 e5                	mov    %esp,%ebp[m
[31m-80101023:	57                   	push   %edi[m
[31m-80101024:	56                   	push   %esi[m
[31m-80101025:	53                   	push   %ebx[m
[31m-80101026:	83 ec 1c             	sub    $0x1c,%esp[m
[31m-80101029:	8b 75 08             	mov    0x8(%ebp),%esi[m
[31m-8010102c:	8b 45 0c             	mov    0xc(%ebp),%eax[m
[31m-8010102f:	80 7e 09 00          	cmpb   $0x0,0x9(%esi)[m
[31m-80101033:	89 45 dc             	mov    %eax,-0x24(%ebp)[m
[31m-80101036:	8b 45 10             	mov    0x10(%ebp),%eax[m
[31m-80101039:	89 45 e4             	mov    %eax,-0x1c(%ebp)[m
[31m-8010103c:	0f 84 aa 00 00 00    	je     801010ec <filewrite+0xcc>[m
[31m-80101042:	8b 06                	mov    (%esi),%eax[m
[31m-80101044:	83 f8 01             	cmp    $0x1,%eax[m
[31m-80101047:	0f 84 c2 00 00 00    	je     8010110f <filewrite+0xef>[m
[31m-8010104d:	83 f8 02             	cmp    $0x2,%eax[m
[31m-80101050:	0f 85 d8 00 00 00    	jne    8010112e <filewrite+0x10e>[m
[31m-80101056:	8b 45 e4             	mov    -0x1c(%ebp),%eax[m
[31m-80101059:	31 ff                	xor    %edi,%edi[m
[31m-8010105b:	85 c0                	test   %eax,%eax[m
[31m-8010105d:	7f 34                	jg     80101093 <filewrite+0x73>[m
[31m-8010105f:	e9 9c 00 00 00       	jmp    80101100 <filewrite+0xe0>[m
[31m-80101064:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80101068:	01 46 14             	add    %eax,0x14(%esi)[m
[31m-8010106b:	83 ec 0c             	sub    $0xc,%esp[m
[31m-8010106e:	ff 76 10             	pushl  0x10(%esi)[m
[31m-80101071:	89 45 e0             	mov    %eax,-0x20(%ebp)[m
[31m-80101074:	e8 17 07 00 00       	call   80101790 <iunlock>[m
[31m-80101079:	e8 02 1c 00 00       	call   80102c80 <end_op>[m
[31m-8010107e:	8b 45 e0             	mov    -0x20(%ebp),%eax[m
[31m-80101081:	83 c4 10             	add    $0x10,%esp[m
[31m-80101084:	39 d8                	cmp    %ebx,%eax[m
[31m-80101086:	0f 85 95 00 00 00    	jne    80101121 <filewrite+0x101>[m
[31m-8010108c:	01 c7                	add    %eax,%edi[m
[31m-8010108e:	39 7d e4             	cmp    %edi,-0x1c(%ebp)[m
[31m-80101091:	7e 6d                	jle    80101100 <filewrite+0xe0>[m
[31m-80101093:	8b 5d e4             	mov    -0x1c(%ebp),%ebx[m
[31m-80101096:	b8 00 1a 00 00       	mov    $0x1a00,%eax[m
[31m-8010109b:	29 fb                	sub    %edi,%ebx[m
[31m-8010109d:	81 fb 00 1a 00 00    	cmp    $0x1a00,%ebx[m
[31m-801010a3:	0f 4f d8             	cmovg  %eax,%ebx[m
[31m-801010a6:	e8 65 1b 00 00       	call   80102c10 <begin_op>[m
[31m-801010ab:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801010ae:	ff 76 10             	pushl  0x10(%esi)[m
[31m-801010b1:	e8 fa 05 00 00       	call   801016b0 <ilock>[m
[31m-801010b6:	8b 45 dc             	mov    -0x24(%ebp),%eax[m
[31m-801010b9:	53                   	push   %ebx[m
[31m-801010ba:	ff 76 14             	pushl  0x14(%esi)[m
[31m-801010bd:	01 f8                	add    %edi,%eax[m
[31m-801010bf:	50                   	push   %eax[m
[31m-801010c0:	ff 76 10             	pushl  0x10(%esi)[m
[31m-801010c3:	e8 a8 09 00 00       	call   80101a70 <writei>[m
[31m-801010c8:	83 c4 20             	add    $0x20,%esp[m
[31m-801010cb:	85 c0                	test   %eax,%eax[m
[31m-801010cd:	7f 99                	jg     80101068 <filewrite+0x48>[m
[31m-801010cf:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801010d2:	ff 76 10             	pushl  0x10(%esi)[m
[31m-801010d5:	89 45 e0             	mov    %eax,-0x20(%ebp)[m
[31m-801010d8:	e8 b3 06 00 00       	call   80101790 <iunlock>[m
[31m-801010dd:	e8 9e 1b 00 00       	call   80102c80 <end_op>[m
[31m-801010e2:	8b 45 e0             	mov    -0x20(%ebp),%eax[m
[31m-801010e5:	83 c4 10             	add    $0x10,%esp[m
[31m-801010e8:	85 c0                	test   %eax,%eax[m
[31m-801010ea:	74 98                	je     80101084 <filewrite+0x64>[m
[31m-801010ec:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-801010ef:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[31m-801010f4:	5b                   	pop    %ebx[m
[31m-801010f5:	5e                   	pop    %esi[m
[31m-801010f6:	5f                   	pop    %edi[m
[31m-801010f7:	5d                   	pop    %ebp[m
[31m-801010f8:	c3                   	ret    [m
[31m-801010f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80101100:	3b 7d e4             	cmp    -0x1c(%ebp),%edi[m
[31m-80101103:	75 e7                	jne    801010ec <filewrite+0xcc>[m
[31m-80101105:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80101108:	89 f8                	mov    %edi,%eax[m
[31m-8010110a:	5b                   	pop    %ebx[m
[31m-8010110b:	5e                   	pop    %esi[m
[31m-8010110c:	5f                   	pop    %edi[m
[31m-8010110d:	5d                   	pop    %ebp[m
[31m-8010110e:	c3                   	ret    [m
[31m-8010110f:	8b 46 0c             	mov    0xc(%esi),%eax[m
[31m-80101112:	89 45 08             	mov    %eax,0x8(%ebp)[m
[31m-80101115:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80101118:	5b                   	pop    %ebx[m
[31m-80101119:	5e                   	pop    %esi[m
[31m-8010111a:	5f                   	pop    %edi[m
[31m-8010111b:	5d                   	pop    %ebp[m
[31m-8010111c:	e9 2f 24 00 00       	jmp    80103550 <pipewrite>[m
[31m-80101121:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101124:	68 6b 70 10 80       	push   $0x8010706b[m
[31m-80101129:	e8 42 f2 ff ff       	call   80100370 <panic>[m
[31m-8010112e:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101131:	68 71 70 10 80       	push   $0x80107071[m
[31m-80101136:	e8 35 f2 ff ff       	call   80100370 <panic>[m
[31m-8010113b:	66 90                	xchg   %ax,%ax[m
[31m-8010113d:	66 90                	xchg   %ax,%ax[m
[31m-8010113f:	90                   	nop[m
[31m-[m
[31m-80101140 <balloc>:[m
[31m-80101140:	55                   	push   %ebp[m
[31m-80101141:	89 e5                	mov    %esp,%ebp[m
[31m-80101143:	57                   	push   %edi[m
[31m-80101144:	56                   	push   %esi[m
[31m-80101145:	53                   	push   %ebx[m
[31m-80101146:	83 ec 1c             	sub    $0x1c,%esp[m
[31m-80101149:	8b 0d e0 09 11 80    	mov    0x801109e0,%ecx[m
[31m-8010114f:	89 45 d8             	mov    %eax,-0x28(%ebp)[m
[31m-80101152:	85 c9                	test   %ecx,%ecx[m
[31m-80101154:	0f 84 85 00 00 00    	je     801011df <balloc+0x9f>[m
[31m-8010115a:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)[m
[31m-80101161:	8b 75 dc             	mov    -0x24(%ebp),%esi[m
[31m-80101164:	83 ec 08             	sub    $0x8,%esp[m
[31m-80101167:	89 f0                	mov    %esi,%eax[m
[31m-80101169:	c1 f8 0c             	sar    $0xc,%eax[m
[31m-8010116c:	03 05 f8 09 11 80    	add    0x801109f8,%eax[m
[31m-80101172:	50                   	push   %eax[m
[31m-80101173:	ff 75 d8             	pushl  -0x28(%ebp)[m
[31m-80101176:	e8 55 ef ff ff       	call   801000d0 <bread>[m
[31m-8010117b:	89 45 e4             	mov    %eax,-0x1c(%ebp)[m
[31m-8010117e:	a1 e0 09 11 80       	mov    0x801109e0,%eax[m
[31m-80101183:	83 c4 10             	add    $0x10,%esp[m
[31m-80101186:	89 45 e0             	mov    %eax,-0x20(%ebp)[m
[31m-80101189:	31 c0                	xor    %eax,%eax[m
[31m-8010118b:	eb 2d                	jmp    801011ba <balloc+0x7a>[m
[31m-8010118d:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-80101190:	89 c1                	mov    %eax,%ecx[m
[31m-80101192:	ba 01 00 00 00       	mov    $0x1,%edx[m
[31m-80101197:	8b 5d e4             	mov    -0x1c(%ebp),%ebx[m
[31m-8010119a:	83 e1 07             	and    $0x7,%ecx[m
[31m-8010119d:	d3 e2                	shl    %cl,%edx[m
[31m-8010119f:	89 c1                	mov    %eax,%ecx[m
[31m-801011a1:	c1 f9 03             	sar    $0x3,%ecx[m
[31m-801011a4:	0f b6 7c 0b 5c       	movzbl 0x5c(%ebx,%ecx,1),%edi[m
[31m-801011a9:	85 d7                	test   %edx,%edi[m
[31m-801011ab:	74 43                	je     801011f0 <balloc+0xb0>[m
[31m-801011ad:	83 c0 01             	add    $0x1,%eax[m
[31m-801011b0:	83 c6 01             	add    $0x1,%esi[m
[31m-801011b3:	3d 00 10 00 00       	cmp    $0x1000,%eax[m
[31m-801011b8:	74 05                	je     801011bf <balloc+0x7f>[m
[31m-801011ba:	3b 75 e0             	cmp    -0x20(%ebp),%esi[m
[31m-801011bd:	72 d1                	jb     80101190 <balloc+0x50>[m
[31m-801011bf:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801011c2:	ff 75 e4             	pushl  -0x1c(%ebp)[m
[31m-801011c5:	e8 16 f0 ff ff       	call   801001e0 <brelse>[m
[31m-801011ca:	81 45 dc 00 10 00 00 	addl   $0x1000,-0x24(%ebp)[m
[31m-801011d1:	83 c4 10             	add    $0x10,%esp[m
[31m-801011d4:	8b 45 dc             	mov    -0x24(%ebp),%eax[m
[31m-801011d7:	39 05 e0 09 11 80    	cmp    %eax,0x801109e0[m
[31m-801011dd:	77 82                	ja     80101161 <balloc+0x21>[m
[31m-801011df:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801011e2:	68 7b 70 10 80       	push   $0x8010707b[m
[31m-801011e7:	e8 84 f1 ff ff       	call   80100370 <panic>[m
[31m-801011ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-801011f0:	09 fa                	or     %edi,%edx[m
[31m-801011f2:	8b 7d e4             	mov    -0x1c(%ebp),%edi[m
[31m-801011f5:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801011f8:	88 54 0f 5c          	mov    %dl,0x5c(%edi,%ecx,1)[m
[31m-801011fc:	57                   	push   %edi[m
[31m-801011fd:	e8 ee 1b 00 00       	call   80102df0 <log_write>[m
[31m-80101202:	89 3c 24             	mov    %edi,(%esp)[m
[31m-80101205:	e8 d6 ef ff ff       	call   801001e0 <brelse>[m
[31m-8010120a:	58                   	pop    %eax[m
[31m-8010120b:	5a                   	pop    %edx[m
[31m-8010120c:	56                   	push   %esi[m
[31m-8010120d:	ff 75 d8             	pushl  -0x28(%ebp)[m
[31m-80101210:	e8 bb ee ff ff       	call   801000d0 <bread>[m
[31m-80101215:	89 c3                	mov    %eax,%ebx[m
[31m-80101217:	8d 40 5c             	lea    0x5c(%eax),%eax[m
[31m-8010121a:	83 c4 0c             	add    $0xc,%esp[m
[31m-8010121d:	68 00 02 00 00       	push   $0x200[m
[31m-80101222:	6a 00                	push   $0x0[m
[31m-80101224:	50                   	push   %eax[m
[31m-80101225:	e8 c6 32 00 00       	call   801044f0 <memset>[m
[31m-8010122a:	89 1c 24             	mov    %ebx,(%esp)[m
[31m-8010122d:	e8 be 1b 00 00       	call   80102df0 <log_write>[m
[31m-80101232:	89 1c 24             	mov    %ebx,(%esp)[m
[31m-80101235:	e8 a6 ef ff ff       	call   801001e0 <brelse>[m
[31m-8010123a:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-8010123d:	89 f0                	mov    %esi,%eax[m
[31m-8010123f:	5b                   	pop    %ebx[m
[31m-80101240:	5e                   	pop    %esi[m
[31m-80101241:	5f                   	pop    %edi[m
[31m-80101242:	5d                   	pop    %ebp[m
[31m-80101243:	c3                   	ret    [m
[31m-80101244:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-8010124a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi[m
[31m-[m
[31m-80101250 <iget>:[m
[31m-80101250:	55                   	push   %ebp[m
[31m-80101251:	89 e5                	mov    %esp,%ebp[m
[31m-80101253:	57                   	push   %edi[m
[31m-80101254:	56                   	push   %esi[m
[31m-80101255:	53                   	push   %ebx[m
[31m-80101256:	89 c7                	mov    %eax,%edi[m
[31m-80101258:	31 f6                	xor    %esi,%esi[m
[31m-8010125a:	bb 34 0a 11 80       	mov    $0x80110a34,%ebx[m
[31m-8010125f:	83 ec 28             	sub    $0x28,%esp[m
[31m-80101262:	89 55 e4             	mov    %edx,-0x1c(%ebp)[m
[31m-80101265:	68 00 0a 11 80       	push   $0x80110a00[m
[31m-8010126a:	e8 51 30 00 00       	call   801042c0 <acquire>[m
[31m-8010126f:	83 c4 10             	add    $0x10,%esp[m
[31m-80101272:	8b 55 e4             	mov    -0x1c(%ebp),%edx[m
[31m-80101275:	eb 1b                	jmp    80101292 <iget+0x42>[m
[31m-80101277:	89 f6                	mov    %esi,%esi[m
[31m-80101279:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-80101280:	85 f6                	test   %esi,%esi[m
[31m-80101282:	74 44                	je     801012c8 <iget+0x78>[m
[31m-80101284:	81 c3 90 00 00 00    	add    $0x90,%ebx[m
[31m-8010128a:	81 fb 54 26 11 80    	cmp    $0x80112654,%ebx[m
[31m-80101290:	74 4e                	je     801012e0 <iget+0x90>[m
[31m-80101292:	8b 4b 08             	mov    0x8(%ebx),%ecx[m
[31m-80101295:	85 c9                	test   %ecx,%ecx[m
[31m-80101297:	7e e7                	jle    80101280 <iget+0x30>[m
[31m-80101299:	39 3b                	cmp    %edi,(%ebx)[m
[31m-8010129b:	75 e3                	jne    80101280 <iget+0x30>[m
[31m-8010129d:	39 53 04             	cmp    %edx,0x4(%ebx)[m
[31m-801012a0:	75 de                	jne    80101280 <iget+0x30>[m
[31m-801012a2:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801012a5:	83 c1 01             	add    $0x1,%ecx[m
[31m-801012a8:	89 de                	mov    %ebx,%esi[m
[31m-801012aa:	68 00 0a 11 80       	push   $0x80110a00[m
[31m-801012af:	89 4b 08             	mov    %ecx,0x8(%ebx)[m
[31m-801012b2:	e8 e9 31 00 00       	call   801044a0 <release>[m
[31m-801012b7:	83 c4 10             	add    $0x10,%esp[m
[31m-801012ba:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-801012bd:	89 f0                	mov    %esi,%eax[m
[31m-801012bf:	5b                   	pop    %ebx[m
[31m-801012c0:	5e                   	pop    %esi[m
[31m-801012c1:	5f                   	pop    %edi[m
[31m-801012c2:	5d                   	pop    %ebp[m
[31m-801012c3:	c3                   	ret    [m
[31m-801012c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-801012c8:	85 c9                	test   %ecx,%ecx[m
[31m-801012ca:	0f 44 f3             	cmove  %ebx,%esi[m
[31m-801012cd:	81 c3 90 00 00 00    	add    $0x90,%ebx[m
[31m-801012d3:	81 fb 54 26 11 80    	cmp    $0x80112654,%ebx[m
[31m-801012d9:	75 b7                	jne    80101292 <iget+0x42>[m
[31m-801012db:	90                   	nop[m
[31m-801012dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-801012e0:	85 f6                	test   %esi,%esi[m
[31m-801012e2:	74 2d                	je     80101311 <iget+0xc1>[m
[31m-801012e4:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801012e7:	89 3e                	mov    %edi,(%esi)[m
[31m-801012e9:	89 56 04             	mov    %edx,0x4(%esi)[m
[31m-801012ec:	c7 46 08 01 00 00 00 	movl   $0x1,0x8(%esi)[m
[31m-801012f3:	c7 46 4c 00 00 00 00 	movl   $0x0,0x4c(%esi)[m
[31m-801012fa:	68 00 0a 11 80       	push   $0x80110a00[m
[31m-801012ff:	e8 9c 31 00 00       	call   801044a0 <release>[m
[31m-80101304:	83 c4 10             	add    $0x10,%esp[m
[31m-80101307:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-8010130a:	89 f0                	mov    %esi,%eax[m
[31m-8010130c:	5b                   	pop    %ebx[m
[31m-8010130d:	5e                   	pop    %esi[m
[31m-8010130e:	5f                   	pop    %edi[m
[31m-8010130f:	5d                   	pop    %ebp[m
[31m-80101310:	c3                   	ret    [m
[31m-80101311:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101314:	68 91 70 10 80       	push   $0x80107091[m
[31m-80101319:	e8 52 f0 ff ff       	call   80100370 <panic>[m
[31m-8010131e:	66 90                	xchg   %ax,%ax[m
[31m-[m
[31m-80101320 <bmap>:[m
[31m-80101320:	55                   	push   %ebp[m
[31m-80101321:	89 e5                	mov    %esp,%ebp[m
[31m-80101323:	57                   	push   %edi[m
[31m-80101324:	56                   	push   %esi[m
[31m-80101325:	53                   	push   %ebx[m
[31m-80101326:	89 c6                	mov    %eax,%esi[m
[31m-80101328:	83 ec 1c             	sub    $0x1c,%esp[m
[31m-8010132b:	83 fa 0b             	cmp    $0xb,%edx[m
[31m-8010132e:	77 18                	ja     80101348 <bmap+0x28>[m
[31m-80101330:	8d 1c 90             	lea    (%eax,%edx,4),%ebx[m
[31m-80101333:	8b 43 5c             	mov    0x5c(%ebx),%eax[m
[31m-80101336:	85 c0                	test   %eax,%eax[m
[31m-80101338:	74 76                	je     801013b0 <bmap+0x90>[m
[31m-8010133a:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-8010133d:	5b                   	pop    %ebx[m
[31m-8010133e:	5e                   	pop    %esi[m
[31m-8010133f:	5f                   	pop    %edi[m
[31m-80101340:	5d                   	pop    %ebp[m
[31m-80101341:	c3                   	ret    [m
[31m-80101342:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-80101348:	8d 5a f4             	lea    -0xc(%edx),%ebx[m
[31m-8010134b:	83 fb 7f             	cmp    $0x7f,%ebx[m
[31m-8010134e:	0f 87 83 00 00 00    	ja     801013d7 <bmap+0xb7>[m
[31m-80101354:	8b 80 8c 00 00 00    	mov    0x8c(%eax),%eax[m
[31m-8010135a:	85 c0                	test   %eax,%eax[m
[31m-8010135c:	74 6a                	je     801013c8 <bmap+0xa8>[m
[31m-8010135e:	83 ec 08             	sub    $0x8,%esp[m
[31m-80101361:	50                   	push   %eax[m
[31m-80101362:	ff 36                	pushl  (%esi)[m
[31m-80101364:	e8 67 ed ff ff       	call   801000d0 <bread>[m
[31m-80101369:	8d 54 98 5c          	lea    0x5c(%eax,%ebx,4),%edx[m
[31m-8010136d:	83 c4 10             	add    $0x10,%esp[m
[31m-80101370:	89 c7                	mov    %eax,%edi[m
[31m-80101372:	8b 1a                	mov    (%edx),%ebx[m
[31m-80101374:	85 db                	test   %ebx,%ebx[m
[31m-80101376:	75 1d                	jne    80101395 <bmap+0x75>[m
[31m-80101378:	8b 06                	mov    (%esi),%eax[m
[31m-8010137a:	89 55 e4             	mov    %edx,-0x1c(%ebp)[m
[31m-8010137d:	e8 be fd ff ff       	call   80101140 <balloc>[m
[31m-80101382:	8b 55 e4             	mov    -0x1c(%ebp),%edx[m
[31m-80101385:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101388:	89 c3                	mov    %eax,%ebx[m
[31m-8010138a:	89 02                	mov    %eax,(%edx)[m
[31m-8010138c:	57                   	push   %edi[m
[31m-8010138d:	e8 5e 1a 00 00       	call   80102df0 <log_write>[m
[31m-80101392:	83 c4 10             	add    $0x10,%esp[m
[31m-80101395:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101398:	57                   	push   %edi[m
[31m-80101399:	e8 42 ee ff ff       	call   801001e0 <brelse>[m
[31m-8010139e:	83 c4 10             	add    $0x10,%esp[m
[31m-801013a1:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-801013a4:	89 d8                	mov    %ebx,%eax[m
[31m-801013a6:	5b                   	pop    %ebx[m
[31m-801013a7:	5e                   	pop    %esi[m
[31m-801013a8:	5f                   	pop    %edi[m
[31m-801013a9:	5d                   	pop    %ebp[m
[31m-801013aa:	c3                   	ret    [m
[31m-801013ab:	90                   	nop[m
[31m-801013ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-801013b0:	8b 06                	mov    (%esi),%eax[m
[31m-801013b2:	e8 89 fd ff ff       	call   80101140 <balloc>[m
[31m-801013b7:	89 43 5c             	mov    %eax,0x5c(%ebx)[m
[31m-801013ba:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-801013bd:	5b                   	pop    %ebx[m
[31m-801013be:	5e                   	pop    %esi[m
[31m-801013bf:	5f                   	pop    %edi[m
[31m-801013c0:	5d                   	pop    %ebp[m
[31m-801013c1:	c3                   	ret    [m
[31m-801013c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-801013c8:	8b 06                	mov    (%esi),%eax[m
[31m-801013ca:	e8 71 fd ff ff       	call   80101140 <balloc>[m
[31m-801013cf:	89 86 8c 00 00 00    	mov    %eax,0x8c(%esi)[m
[31m-801013d5:	eb 87                	jmp    8010135e <bmap+0x3e>[m
[31m-801013d7:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801013da:	68 a1 70 10 80       	push   $0x801070a1[m
[31m-801013df:	e8 8c ef ff ff       	call   80100370 <panic>[m
[31m-801013e4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-801013ea:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi[m
[31m-[m
[31m-801013f0 <readsb>:[m
[31m-801013f0:	55                   	push   %ebp[m
[31m-801013f1:	89 e5                	mov    %esp,%ebp[m
[31m-801013f3:	56                   	push   %esi[m
[31m-801013f4:	53                   	push   %ebx[m
[31m-801013f5:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[31m-801013f8:	83 ec 08             	sub    $0x8,%esp[m
[31m-801013fb:	6a 01                	push   $0x1[m
[31m-801013fd:	ff 75 08             	pushl  0x8(%ebp)[m
[31m-80101400:	e8 cb ec ff ff       	call   801000d0 <bread>[m
[31m-80101405:	89 c3                	mov    %eax,%ebx[m
[31m-80101407:	8d 40 5c             	lea    0x5c(%eax),%eax[m
[31m-8010140a:	83 c4 0c             	add    $0xc,%esp[m
[31m-8010140d:	6a 1c                	push   $0x1c[m
[31m-8010140f:	50                   	push   %eax[m
[31m-80101410:	56                   	push   %esi[m
[31m-80101411:	e8 8a 31 00 00       	call   801045a0 <memmove>[m
[31m-80101416:	89 5d 08             	mov    %ebx,0x8(%ebp)[m
[31m-80101419:	83 c4 10             	add    $0x10,%esp[m
[31m-8010141c:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m-8010141f:	5b                   	pop    %ebx[m
[31m-80101420:	5e                   	pop    %esi[m
[31m-80101421:	5d                   	pop    %ebp[m
[31m-80101422:	e9 b9 ed ff ff       	jmp    801001e0 <brelse>[m
[31m-80101427:	89 f6                	mov    %esi,%esi[m
[31m-80101429:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-80101430 <bfree>:[m
[31m-80101430:	55                   	push   %ebp[m
[31m-80101431:	89 e5                	mov    %esp,%ebp[m
[31m-80101433:	56                   	push   %esi[m
[31m-80101434:	53                   	push   %ebx[m
[31m-80101435:	89 d3                	mov    %edx,%ebx[m
[31m-80101437:	89 c6                	mov    %eax,%esi[m
[31m-80101439:	83 ec 08             	sub    $0x8,%esp[m
[31m-8010143c:	68 e0 09 11 80       	push   $0x801109e0[m
[31m-80101441:	50                   	push   %eax[m
[31m-80101442:	e8 a9 ff ff ff       	call   801013f0 <readsb>[m
[31m-80101447:	58                   	pop    %eax[m
[31m-80101448:	5a                   	pop    %edx[m
[31m-80101449:	89 da                	mov    %ebx,%edx[m
[31m-8010144b:	c1 ea 0c             	shr    $0xc,%edx[m
[31m-8010144e:	03 15 f8 09 11 80    	add    0x801109f8,%edx[m
[31m-80101454:	52                   	push   %edx[m
[31m-80101455:	56                   	push   %esi[m
[31m-80101456:	e8 75 ec ff ff       	call   801000d0 <bread>[m
[31m-8010145b:	89 d9                	mov    %ebx,%ecx[m
[31m-8010145d:	81 e3 ff 0f 00 00    	and    $0xfff,%ebx[m
[31m-80101463:	ba 01 00 00 00       	mov    $0x1,%edx[m
[31m-80101468:	83 e1 07             	and    $0x7,%ecx[m
[31m-8010146b:	c1 fb 03             	sar    $0x3,%ebx[m
[31m-8010146e:	83 c4 10             	add    $0x10,%esp[m
[31m-80101471:	d3 e2                	shl    %cl,%edx[m
[31m-80101473:	0f b6 4c 18 5c       	movzbl 0x5c(%eax,%ebx,1),%ecx[m
[31m-80101478:	85 d1                	test   %edx,%ecx[m
[31m-8010147a:	74 27                	je     801014a3 <bfree+0x73>[m
[31m-8010147c:	89 c6                	mov    %eax,%esi[m
[31m-8010147e:	f7 d2                	not    %edx[m
[31m-80101480:	89 c8                	mov    %ecx,%eax[m
[31m-80101482:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101485:	21 d0                	and    %edx,%eax[m
[31m-80101487:	88 44 1e 5c          	mov    %al,0x5c(%esi,%ebx,1)[m
[31m-8010148b:	56                   	push   %esi[m
[31m-8010148c:	e8 5f 19 00 00       	call   80102df0 <log_write>[m
[31m-80101491:	89 34 24             	mov    %esi,(%esp)[m
[31m-80101494:	e8 47 ed ff ff       	call   801001e0 <brelse>[m
[31m-80101499:	83 c4 10             	add    $0x10,%esp[m
[31m-8010149c:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m-8010149f:	5b                   	pop    %ebx[m
[31m-801014a0:	5e                   	pop    %esi[m
[31m-801014a1:	5d                   	pop    %ebp[m
[31m-801014a2:	c3                   	ret    [m
[31m-801014a3:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801014a6:	68 b4 70 10 80       	push   $0x801070b4[m
[31m-801014ab:	e8 c0 ee ff ff       	call   80100370 <panic>[m
[31m-[m
[31m-801014b0 <iinit>:[m
[31m-801014b0:	55                   	push   %ebp[m
[31m-801014b1:	89 e5                	mov    %esp,%ebp[m
[31m-801014b3:	53                   	push   %ebx[m
[31m-801014b4:	bb 40 0a 11 80       	mov    $0x80110a40,%ebx[m
[31m-801014b9:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801014bc:	68 c7 70 10 80       	push   $0x801070c7[m
[31m-801014c1:	68 00 0a 11 80       	push   $0x80110a00[m
[31m-801014c6:	e8 d5 2d 00 00       	call   801042a0 <initlock>[m
[31m-801014cb:	83 c4 10             	add    $0x10,%esp[m
[31m-801014ce:	66 90                	xchg   %ax,%ax[m
[31m-801014d0:	83 ec 08             	sub    $0x8,%esp[m
[31m-801014d3:	68 ce 70 10 80       	push   $0x801070ce[m
[31m-801014d8:	53                   	push   %ebx[m
[31m-801014d9:	81 c3 90 00 00 00    	add    $0x90,%ebx[m
[31m-801014df:	e8 ac 2c 00 00       	call   80104190 <initsleeplock>[m
[31m-801014e4:	83 c4 10             	add    $0x10,%esp[m
[31m-801014e7:	81 fb 60 26 11 80    	cmp    $0x80112660,%ebx[m
[31m-801014ed:	75 e1                	jne    801014d0 <iinit+0x20>[m
[31m-801014ef:	83 ec 08             	sub    $0x8,%esp[m
[31m-801014f2:	68 e0 09 11 80       	push   $0x801109e0[m
[31m-801014f7:	ff 75 08             	pushl  0x8(%ebp)[m
[31m-801014fa:	e8 f1 fe ff ff       	call   801013f0 <readsb>[m
[31m-801014ff:	ff 35 f8 09 11 80    	pushl  0x801109f8[m
[31m-80101505:	ff 35 f4 09 11 80    	pushl  0x801109f4[m
[31m-8010150b:	ff 35 f0 09 11 80    	pushl  0x801109f0[m
[31m-80101511:	ff 35 ec 09 11 80    	pushl  0x801109ec[m
[31m-80101517:	ff 35 e8 09 11 80    	pushl  0x801109e8[m
[31m-8010151d:	ff 35 e4 09 11 80    	pushl  0x801109e4[m
[31m-80101523:	ff 35 e0 09 11 80    	pushl  0x801109e0[m
[31m-80101529:	68 24 71 10 80       	push   $0x80107124[m
[31m-8010152e:	e8 2d f1 ff ff       	call   80100660 <cprintf>[m
[31m-80101533:	83 c4 30             	add    $0x30,%esp[m
[31m-80101536:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[31m-80101539:	c9                   	leave  [m
[31m-8010153a:	c3                   	ret    [m
[31m-8010153b:	90                   	nop[m
[31m-8010153c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-[m
[31m-80101540 <ialloc>:[m
[31m-80101540:	55                   	push   %ebp[m
[31m-80101541:	89 e5                	mov    %esp,%ebp[m
[31m-80101543:	57                   	push   %edi[m
[31m-80101544:	56                   	push   %esi[m
[31m-80101545:	53                   	push   %ebx[m
[31m-80101546:	83 ec 1c             	sub    $0x1c,%esp[m
[31m-80101549:	83 3d e8 09 11 80 01 	cmpl   $0x1,0x801109e8[m
[31m-80101550:	8b 45 0c             	mov    0xc(%ebp),%eax[m
[31m-80101553:	8b 75 08             	mov    0x8(%ebp),%esi[m
[31m-80101556:	89 45 e4             	mov    %eax,-0x1c(%ebp)[m
[31m-80101559:	0f 86 91 00 00 00    	jbe    801015f0 <ialloc+0xb0>[m
[31m-8010155f:	bb 01 00 00 00       	mov    $0x1,%ebx[m
[31m-80101564:	eb 21                	jmp    80101587 <ialloc+0x47>[m
[31m-80101566:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-80101569:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-80101570:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101573:	83 c3 01             	add    $0x1,%ebx[m
[31m-80101576:	57                   	push   %edi[m
[31m-80101577:	e8 64 ec ff ff       	call   801001e0 <brelse>[m
[31m-8010157c:	83 c4 10             	add    $0x10,%esp[m
[31m-8010157f:	39 1d e8 09 11 80    	cmp    %ebx,0x801109e8[m
[31m-80101585:	76 69                	jbe    801015f0 <ialloc+0xb0>[m
[31m-80101587:	89 d8                	mov    %ebx,%eax[m
[31m-80101589:	83 ec 08             	sub    $0x8,%esp[m
[31m-8010158c:	c1 e8 03             	shr    $0x3,%eax[m
[31m-8010158f:	03 05 f4 09 11 80    	add    0x801109f4,%eax[m
[31m-80101595:	50                   	push   %eax[m
[31m-80101596:	56                   	push   %esi[m
[31m-80101597:	e8 34 eb ff ff       	call   801000d0 <bread>[m
[31m-8010159c:	89 c7                	mov    %eax,%edi[m
[31m-8010159e:	89 d8                	mov    %ebx,%eax[m
[31m-801015a0:	83 c4 10             	add    $0x10,%esp[m
[31m-801015a3:	83 e0 07             	and    $0x7,%eax[m
[31m-801015a6:	c1 e0 06             	shl    $0x6,%eax[m
[31m-801015a9:	8d 4c 07 5c          	lea    0x5c(%edi,%eax,1),%ecx[m
[31m-801015ad:	66 83 39 00          	cmpw   $0x0,(%ecx)[m
[31m-801015b1:	75 bd                	jne    80101570 <ialloc+0x30>[m
[31m-801015b3:	83 ec 04             	sub    $0x4,%esp[m
[31m-801015b6:	89 4d e0             	mov    %ecx,-0x20(%ebp)[m
[31m-801015b9:	6a 40                	push   $0x40[m
[31m-801015bb:	6a 00                	push   $0x0[m
[31m-801015bd:	51                   	push   %ecx[m
[31m-801015be:	e8 2d 2f 00 00       	call   801044f0 <memset>[m
[31m-801015c3:	0f b7 45 e4          	movzwl -0x1c(%ebp),%eax[m
[31m-801015c7:	8b 4d e0             	mov    -0x20(%ebp),%ecx[m
[31m-801015ca:	66 89 01             	mov    %ax,(%ecx)[m
[31m-801015cd:	89 3c 24             	mov    %edi,(%esp)[m
[31m-801015d0:	e8 1b 18 00 00       	call   80102df0 <log_write>[m
[31m-801015d5:	89 3c 24             	mov    %edi,(%esp)[m
[31m-801015d8:	e8 03 ec ff ff       	call   801001e0 <brelse>[m
[31m-801015dd:	83 c4 10             	add    $0x10,%esp[m
[31m-801015e0:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-801015e3:	89 da                	mov    %ebx,%edx[m
[31m-801015e5:	89 f0                	mov    %esi,%eax[m
[31m-801015e7:	5b                   	pop    %ebx[m
[31m-801015e8:	5e                   	pop    %esi[m
[31m-801015e9:	5f                   	pop    %edi[m
[31m-801015ea:	5d                   	pop    %ebp[m
[31m-801015eb:	e9 60 fc ff ff       	jmp    80101250 <iget>[m
[31m-801015f0:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801015f3:	68 d4 70 10 80       	push   $0x801070d4[m
[31m-801015f8:	e8 73 ed ff ff       	call   80100370 <panic>[m
[31m-801015fd:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-[m
[31m-80101600 <iupdate>:[m
[31m-80101600:	55                   	push   %ebp[m
[31m-80101601:	89 e5                	mov    %esp,%ebp[m
[31m-80101603:	56                   	push   %esi[m
[31m-80101604:	53                   	push   %ebx[m
[31m-80101605:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[31m-80101608:	83 ec 08             	sub    $0x8,%esp[m
[31m-8010160b:	8b 43 04             	mov    0x4(%ebx),%eax[m
[31m-8010160e:	83 c3 5c             	add    $0x5c,%ebx[m
[31m-80101611:	c1 e8 03             	shr    $0x3,%eax[m
[31m-80101614:	03 05 f4 09 11 80    	add    0x801109f4,%eax[m
[31m-8010161a:	50                   	push   %eax[m
[31m-8010161b:	ff 73 a4             	pushl  -0x5c(%ebx)[m
[31m-8010161e:	e8 ad ea ff ff       	call   801000d0 <bread>[m
[31m-80101623:	89 c6                	mov    %eax,%esi[m
[31m-80101625:	8b 43 a8             	mov    -0x58(%ebx),%eax[m
[31m-80101628:	0f b7 53 f4          	movzwl -0xc(%ebx),%edx[m
[31m-8010162c:	83 c4 0c             	add    $0xc,%esp[m
[31m-8010162f:	83 e0 07             	and    $0x7,%eax[m
[31m-80101632:	c1 e0 06             	shl    $0x6,%eax[m
[31m-80101635:	8d 44 06 5c          	lea    0x5c(%esi,%eax,1),%eax[m
[31m-80101639:	66 89 10             	mov    %dx,(%eax)[m
[31m-8010163c:	0f b7 53 f6          	movzwl -0xa(%ebx),%edx[m
[31m-80101640:	83 c0 0c             	add    $0xc,%eax[m
[31m-80101643:	66 89 50 f6          	mov    %dx,-0xa(%eax)[m
[31m-80101647:	0f b7 53 f8          	movzwl -0x8(%ebx),%edx[m
[31m-8010164b:	66 89 50 f8          	mov    %dx,-0x8(%eax)[m
[31m-8010164f:	0f b7 53 fa          	movzwl -0x6(%ebx),%edx[m
[31m-80101653:	66 89 50 fa          	mov    %dx,-0x6(%eax)[m
[31m-80101657:	8b 53 fc             	mov    -0x4(%ebx),%edx[m
[31m-8010165a:	89 50 fc             	mov    %edx,-0x4(%eax)[m
[31m-8010165d:	6a 34                	push   $0x34[m
[31m-8010165f:	53                   	push   %ebx[m
[31m-80101660:	50                   	push   %eax[m
[31m-80101661:	e8 3a 2f 00 00       	call   801045a0 <memmove>[m
[31m-80101666:	89 34 24             	mov    %esi,(%esp)[m
[31m-80101669:	e8 82 17 00 00       	call   80102df0 <log_write>[m
[31m-8010166e:	89 75 08             	mov    %esi,0x8(%ebp)[m
[31m-80101671:	83 c4 10             	add    $0x10,%esp[m
[31m-80101674:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m-80101677:	5b                   	pop    %ebx[m
[31m-80101678:	5e                   	pop    %esi[m
[31m-80101679:	5d                   	pop    %ebp[m
[31m-8010167a:	e9 61 eb ff ff       	jmp    801001e0 <brelse>[m
[31m-8010167f:	90                   	nop[m
[31m-[m
[31m-80101680 <idup>:[m
[31m-80101680:	55                   	push   %ebp[m
[31m-80101681:	89 e5                	mov    %esp,%ebp[m
[31m-80101683:	53                   	push   %ebx[m
[31m-80101684:	83 ec 10             	sub    $0x10,%esp[m
[31m-80101687:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[31m-8010168a:	68 00 0a 11 80       	push   $0x80110a00[m
[31m-8010168f:	e8 2c 2c 00 00       	call   801042c0 <acquire>[m
[31m-80101694:	83 43 08 01          	addl   $0x1,0x8(%ebx)[m
[31m-80101698:	c7 04 24 00 0a 11 80 	movl   $0x80110a00,(%esp)[m
[31m-8010169f:	e8 fc 2d 00 00       	call   801044a0 <release>[m
[31m-801016a4:	89 d8                	mov    %ebx,%eax[m
[31m-801016a6:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[31m-801016a9:	c9                   	leave  [m
[31m-801016aa:	c3                   	ret    [m
[31m-801016ab:	90                   	nop[m
[31m-801016ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-[m
[31m-801016b0 <ilock>:[m
[31m-801016b0:	55                   	push   %ebp[m
[31m-801016b1:	89 e5                	mov    %esp,%ebp[m
[31m-801016b3:	56                   	push   %esi[m
[31m-801016b4:	53                   	push   %ebx[m
[31m-801016b5:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[31m-801016b8:	85 db                	test   %ebx,%ebx[m
[31m-801016ba:	0f 84 b4 00 00 00    	je     80101774 <ilock+0xc4>[m
[31m-801016c0:	8b 43 08             	mov    0x8(%ebx),%eax[m
[31m-801016c3:	85 c0                	test   %eax,%eax[m
[31m-801016c5:	0f 8e a9 00 00 00    	jle    80101774 <ilock+0xc4>[m
[31m-801016cb:	8d 43 0c             	lea    0xc(%ebx),%eax[m
[31m-801016ce:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801016d1:	50                   	push   %eax[m
[31m-801016d2:	e8 f9 2a 00 00       	call   801041d0 <acquiresleep>[m
[31m-801016d7:	83 c4 10             	add    $0x10,%esp[m
[31m-801016da:	f6 43 4c 02          	testb  $0x2,0x4c(%ebx)[m
[31m-801016de:	74 10                	je     801016f0 <ilock+0x40>[m
[31m-801016e0:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m-801016e3:	5b                   	pop    %ebx[m
[31m-801016e4:	5e                   	pop    %esi[m
[31m-801016e5:	5d                   	pop    %ebp[m
[31m-801016e6:	c3                   	ret    [m
[31m-801016e7:	89 f6                	mov    %esi,%esi[m
[31m-801016e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-801016f0:	8b 43 04             	mov    0x4(%ebx),%eax[m
[31m-801016f3:	83 ec 08             	sub    $0x8,%esp[m
[31m-801016f6:	c1 e8 03             	shr    $0x3,%eax[m
[31m-801016f9:	03 05 f4 09 11 80    	add    0x801109f4,%eax[m
[31m-801016ff:	50                   	push   %eax[m
[31m-80101700:	ff 33                	pushl  (%ebx)[m
[31m-80101702:	e8 c9 e9 ff ff       	call   801000d0 <bread>[m
[31m-80101707:	89 c6                	mov    %eax,%esi[m
[31m-80101709:	8b 43 04             	mov    0x4(%ebx),%eax[m
[31m-8010170c:	83 c4 0c             	add    $0xc,%esp[m
[31m-8010170f:	83 e0 07             	and    $0x7,%eax[m
[31m-80101712:	c1 e0 06             	shl    $0x6,%eax[m
[31m-80101715:	8d 44 06 5c          	lea    0x5c(%esi,%eax,1),%eax[m
[31m-80101719:	0f b7 10             	movzwl (%eax),%edx[m
[31m-8010171c:	83 c0 0c             	add    $0xc,%eax[m
[31m-8010171f:	66 89 53 50          	mov    %dx,0x50(%ebx)[m
[31m-80101723:	0f b7 50 f6          	movzwl -0xa(%eax),%edx[m
[31m-80101727:	66 89 53 52          	mov    %dx,0x52(%ebx)[m
[31m-8010172b:	0f b7 50 f8          	movzwl -0x8(%eax),%edx[m
[31m-8010172f:	66 89 53 54          	mov    %dx,0x54(%ebx)[m
[31m-80101733:	0f b7 50 fa          	movzwl -0x6(%eax),%edx[m
[31m-80101737:	66 89 53 56          	mov    %dx,0x56(%ebx)[m
[31m-8010173b:	8b 50 fc             	mov    -0x4(%eax),%edx[m
[31m-8010173e:	89 53 58             	mov    %edx,0x58(%ebx)[m
[31m-80101741:	6a 34                	push   $0x34[m
[31m-80101743:	50                   	push   %eax[m
[31m-80101744:	8d 43 5c             	lea    0x5c(%ebx),%eax[m
[31m-80101747:	50                   	push   %eax[m
[31m-80101748:	e8 53 2e 00 00       	call   801045a0 <memmove>[m
[31m-8010174d:	89 34 24             	mov    %esi,(%esp)[m
[31m-80101750:	e8 8b ea ff ff       	call   801001e0 <brelse>[m
[31m-80101755:	83 4b 4c 02          	orl    $0x2,0x4c(%ebx)[m
[31m-80101759:	83 c4 10             	add    $0x10,%esp[m
[31m-8010175c:	66 83 7b 50 00       	cmpw   $0x0,0x50(%ebx)[m
[31m-80101761:	0f 85 79 ff ff ff    	jne    801016e0 <ilock+0x30>[m
[31m-80101767:	83 ec 0c             	sub    $0xc,%esp[m
[31m-8010176a:	68 ec 70 10 80       	push   $0x801070ec[m
[31m-8010176f:	e8 fc eb ff ff       	call   80100370 <panic>[m
[31m-80101774:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101777:	68 e6 70 10 80       	push   $0x801070e6[m
[31m-8010177c:	e8 ef eb ff ff       	call   80100370 <panic>[m
[31m-80101781:	eb 0d                	jmp    80101790 <iunlock>[m
[31m-80101783:	90                   	nop[m
[31m-80101784:	90                   	nop[m
[31m-80101785:	90                   	nop[m
[31m-80101786:	90                   	nop[m
[31m-80101787:	90                   	nop[m
[31m-80101788:	90                   	nop[m
[31m-80101789:	90                   	nop[m
[31m-8010178a:	90                   	nop[m
[31m-8010178b:	90                   	nop[m
[31m-8010178c:	90                   	nop[m
[31m-8010178d:	90                   	nop[m
[31m-8010178e:	90                   	nop[m
[31m-8010178f:	90                   	nop[m
[31m-[m
[31m-80101790 <iunlock>:[m
[31m-80101790:	55                   	push   %ebp[m
[31m-80101791:	89 e5                	mov    %esp,%ebp[m
[31m-80101793:	56                   	push   %esi[m
[31m-80101794:	53                   	push   %ebx[m
[31m-80101795:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[31m-80101798:	85 db                	test   %ebx,%ebx[m
[31m-8010179a:	74 28                	je     801017c4 <iunlock+0x34>[m
[31m-8010179c:	8d 73 0c             	lea    0xc(%ebx),%esi[m
[31m-8010179f:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801017a2:	56                   	push   %esi[m
[31m-801017a3:	e8 c8 2a 00 00       	call   80104270 <holdingsleep>[m
[31m-801017a8:	83 c4 10             	add    $0x10,%esp[m
[31m-801017ab:	85 c0                	test   %eax,%eax[m
[31m-801017ad:	74 15                	je     801017c4 <iunlock+0x34>[m
[31m-801017af:	8b 43 08             	mov    0x8(%ebx),%eax[m
[31m-801017b2:	85 c0                	test   %eax,%eax[m
[31m-801017b4:	7e 0e                	jle    801017c4 <iunlock+0x34>[m
[31m-801017b6:	89 75 08             	mov    %esi,0x8(%ebp)[m
[31m-801017b9:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m-801017bc:	5b                   	pop    %ebx[m
[31m-801017bd:	5e                   	pop    %esi[m
[31m-801017be:	5d                   	pop    %ebp[m
[31m-801017bf:	e9 6c 2a 00 00       	jmp    80104230 <releasesleep>[m
[31m-801017c4:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801017c7:	68 fb 70 10 80       	push   $0x801070fb[m
[31m-801017cc:	e8 9f eb ff ff       	call   80100370 <panic>[m
[31m-801017d1:	eb 0d                	jmp    801017e0 <iput>[m
[31m-801017d3:	90                   	nop[m
[31m-801017d4:	90                   	nop[m
[31m-801017d5:	90                   	nop[m
[31m-801017d6:	90                   	nop[m
[31m-801017d7:	90                   	nop[m
[31m-801017d8:	90                   	nop[m
[31m-801017d9:	90                   	nop[m
[31m-801017da:	90                   	nop[m
[31m-801017db:	90                   	nop[m
[31m-801017dc:	90                   	nop[m
[31m-801017dd:	90                   	nop[m
[31m-801017de:	90                   	nop[m
[31m-801017df:	90                   	nop[m
[31m-[m
[31m-801017e0 <iput>:[m
[31m-801017e0:	55                   	push   %ebp[m
[31m-801017e1:	89 e5                	mov    %esp,%ebp[m
[31m-801017e3:	57                   	push   %edi[m
[31m-801017e4:	56                   	push   %esi[m
[31m-801017e5:	53                   	push   %ebx[m
[31m-801017e6:	83 ec 28             	sub    $0x28,%esp[m
[31m-801017e9:	8b 75 08             	mov    0x8(%ebp),%esi[m
[31m-801017ec:	68 00 0a 11 80       	push   $0x80110a00[m
[31m-801017f1:	e8 ca 2a 00 00       	call   801042c0 <acquire>[m
[31m-801017f6:	8b 46 08             	mov    0x8(%esi),%eax[m
[31m-801017f9:	83 c4 10             	add    $0x10,%esp[m
[31m-801017fc:	83 f8 01             	cmp    $0x1,%eax[m
[31m-801017ff:	74 1f                	je     80101820 <iput+0x40>[m
[31m-80101801:	83 e8 01             	sub    $0x1,%eax[m
[31m-80101804:	89 46 08             	mov    %eax,0x8(%esi)[m
[31m-80101807:	c7 45 08 00 0a 11 80 	movl   $0x80110a00,0x8(%ebp)[m
[31m-8010180e:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80101811:	5b                   	pop    %ebx[m
[31m-80101812:	5e                   	pop    %esi[m
[31m-80101813:	5f                   	pop    %edi[m
[31m-80101814:	5d                   	pop    %ebp[m
[31m-80101815:	e9 86 2c 00 00       	jmp    801044a0 <release>[m
[31m-8010181a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-80101820:	f6 46 4c 02          	testb  $0x2,0x4c(%esi)[m
[31m-80101824:	74 db                	je     80101801 <iput+0x21>[m
[31m-80101826:	66 83 7e 56 00       	cmpw   $0x0,0x56(%esi)[m
[31m-8010182b:	75 d4                	jne    80101801 <iput+0x21>[m
[31m-8010182d:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101830:	8d 5e 5c             	lea    0x5c(%esi),%ebx[m
[31m-80101833:	8d be 8c 00 00 00    	lea    0x8c(%esi),%edi[m
[31m-80101839:	68 00 0a 11 80       	push   $0x80110a00[m
[31m-8010183e:	e8 5d 2c 00 00       	call   801044a0 <release>[m
[31m-80101843:	83 c4 10             	add    $0x10,%esp[m
[31m-80101846:	eb 0f                	jmp    80101857 <iput+0x77>[m
[31m-80101848:	90                   	nop[m
[31m-80101849:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80101850:	83 c3 04             	add    $0x4,%ebx[m
[31m-80101853:	39 fb                	cmp    %edi,%ebx[m
[31m-80101855:	74 19                	je     80101870 <iput+0x90>[m
[31m-80101857:	8b 13                	mov    (%ebx),%edx[m
[31m-80101859:	85 d2                	test   %edx,%edx[m
[31m-8010185b:	74 f3                	je     80101850 <iput+0x70>[m
[31m-8010185d:	8b 06                	mov    (%esi),%eax[m
[31m-8010185f:	e8 cc fb ff ff       	call   80101430 <bfree>[m
[31m-80101864:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)[m
[31m-8010186a:	eb e4                	jmp    80101850 <iput+0x70>[m
[31m-8010186c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80101870:	8b 86 8c 00 00 00    	mov    0x8c(%esi),%eax[m
[31m-80101876:	85 c0                	test   %eax,%eax[m
[31m-80101878:	75 46                	jne    801018c0 <iput+0xe0>[m
[31m-8010187a:	83 ec 0c             	sub    $0xc,%esp[m
[31m-8010187d:	c7 46 58 00 00 00 00 	movl   $0x0,0x58(%esi)[m
[31m-80101884:	56                   	push   %esi[m
[31m-80101885:	e8 76 fd ff ff       	call   80101600 <iupdate>[m
[31m-8010188a:	31 c0                	xor    %eax,%eax[m
[31m-8010188c:	66 89 46 50          	mov    %ax,0x50(%esi)[m
[31m-80101890:	89 34 24             	mov    %esi,(%esp)[m
[31m-80101893:	e8 68 fd ff ff       	call   80101600 <iupdate>[m
[31m-80101898:	c7 04 24 00 0a 11 80 	movl   $0x80110a00,(%esp)[m
[31m-8010189f:	e8 1c 2a 00 00       	call   801042c0 <acquire>[m
[31m-801018a4:	c7 46 4c 00 00 00 00 	movl   $0x0,0x4c(%esi)[m
[31m-801018ab:	8b 46 08             	mov    0x8(%esi),%eax[m
[31m-801018ae:	83 c4 10             	add    $0x10,%esp[m
[31m-801018b1:	e9 4b ff ff ff       	jmp    80101801 <iput+0x21>[m
[31m-801018b6:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-801018b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-801018c0:	83 ec 08             	sub    $0x8,%esp[m
[31m-801018c3:	50                   	push   %eax[m
[31m-801018c4:	ff 36                	pushl  (%esi)[m
[31m-801018c6:	e8 05 e8 ff ff       	call   801000d0 <bread>[m
[31m-801018cb:	83 c4 10             	add    $0x10,%esp[m
[31m-801018ce:	89 45 e4             	mov    %eax,-0x1c(%ebp)[m
[31m-801018d1:	8d 58 5c             	lea    0x5c(%eax),%ebx[m
[31m-801018d4:	8d b8 5c 02 00 00    	lea    0x25c(%eax),%edi[m
[31m-801018da:	eb 0b                	jmp    801018e7 <iput+0x107>[m
[31m-801018dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-801018e0:	83 c3 04             	add    $0x4,%ebx[m
[31m-801018e3:	39 df                	cmp    %ebx,%edi[m
[31m-801018e5:	74 0f                	je     801018f6 <iput+0x116>[m
[31m-801018e7:	8b 13                	mov    (%ebx),%edx[m
[31m-801018e9:	85 d2                	test   %edx,%edx[m
[31m-801018eb:	74 f3                	je     801018e0 <iput+0x100>[m
[31m-801018ed:	8b 06                	mov    (%esi),%eax[m
[31m-801018ef:	e8 3c fb ff ff       	call   80101430 <bfree>[m
[31m-801018f4:	eb ea                	jmp    801018e0 <iput+0x100>[m
[31m-801018f6:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801018f9:	ff 75 e4             	pushl  -0x1c(%ebp)[m
[31m-801018fc:	e8 df e8 ff ff       	call   801001e0 <brelse>[m
[31m-80101901:	8b 96 8c 00 00 00    	mov    0x8c(%esi),%edx[m
[31m-80101907:	8b 06                	mov    (%esi),%eax[m
[31m-80101909:	e8 22 fb ff ff       	call   80101430 <bfree>[m
[31m-8010190e:	c7 86 8c 00 00 00 00 	movl   $0x0,0x8c(%esi)[m
[31m-80101915:	00 00 00 [m
[31m-80101918:	83 c4 10             	add    $0x10,%esp[m
[31m-8010191b:	e9 5a ff ff ff       	jmp    8010187a <iput+0x9a>[m
[31m-[m
[31m-80101920 <iunlockput>:[m
[31m-80101920:	55                   	push   %ebp[m
[31m-80101921:	89 e5                	mov    %esp,%ebp[m
[31m-80101923:	53                   	push   %ebx[m
[31m-80101924:	83 ec 10             	sub    $0x10,%esp[m
[31m-80101927:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[31m-8010192a:	53                   	push   %ebx[m
[31m-8010192b:	e8 60 fe ff ff       	call   80101790 <iunlock>[m
[31m-80101930:	89 5d 08             	mov    %ebx,0x8(%ebp)[m
[31m-80101933:	83 c4 10             	add    $0x10,%esp[m
[31m-80101936:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[31m-80101939:	c9                   	leave  [m
[31m-8010193a:	e9 a1 fe ff ff       	jmp    801017e0 <iput>[m
[31m-8010193f:	90                   	nop[m
[31m-[m
[31m-80101940 <stati>:[m
[31m-80101940:	55                   	push   %ebp[m
[31m-80101941:	89 e5                	mov    %esp,%ebp[m
[31m-80101943:	8b 55 08             	mov    0x8(%ebp),%edx[m
[31m-80101946:	8b 45 0c             	mov    0xc(%ebp),%eax[m
[31m-80101949:	8b 0a                	mov    (%edx),%ecx[m
[31m-8010194b:	89 48 04             	mov    %ecx,0x4(%eax)[m
[31m-8010194e:	8b 4a 04             	mov    0x4(%edx),%ecx[m
[31m-80101951:	89 48 08             	mov    %ecx,0x8(%eax)[m
[31m-80101954:	0f b7 4a 50          	movzwl 0x50(%edx),%ecx[m
[31m-80101958:	66 89 08             	mov    %cx,(%eax)[m
[31m-8010195b:	0f b7 4a 56          	movzwl 0x56(%edx),%ecx[m
[31m-8010195f:	66 89 48 0c          	mov    %cx,0xc(%eax)[m
[31m-80101963:	8b 52 58             	mov    0x58(%edx),%edx[m
[31m-80101966:	89 50 10             	mov    %edx,0x10(%eax)[m
[31m-80101969:	5d                   	pop    %ebp[m
[31m-8010196a:	c3                   	ret    [m
[31m-8010196b:	90                   	nop[m
[31m-8010196c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-[m
[31m-80101970 <readi>:[m
[31m-80101970:	55                   	push   %ebp[m
[31m-80101971:	89 e5                	mov    %esp,%ebp[m
[31m-80101973:	57                   	push   %edi[m
[31m-80101974:	56                   	push   %esi[m
[31m-80101975:	53                   	push   %ebx[m
[31m-80101976:	83 ec 1c             	sub    $0x1c,%esp[m
[31m-80101979:	8b 45 08             	mov    0x8(%ebp),%eax[m
[31m-8010197c:	8b 7d 0c             	mov    0xc(%ebp),%edi[m
[31m-8010197f:	8b 75 10             	mov    0x10(%ebp),%esi[m
[31m-80101982:	66 83 78 50 03       	cmpw   $0x3,0x50(%eax)[m
[31m-80101987:	89 7d e0             	mov    %edi,-0x20(%ebp)[m
[31m-8010198a:	8b 7d 14             	mov    0x14(%ebp),%edi[m
[31m-8010198d:	89 45 d8             	mov    %eax,-0x28(%ebp)[m
[31m-80101990:	89 7d e4             	mov    %edi,-0x1c(%ebp)[m
[31m-80101993:	0f 84 a7 00 00 00    	je     80101a40 <readi+0xd0>[m
[31m-80101999:	8b 45 d8             	mov    -0x28(%ebp),%eax[m
[31m-8010199c:	8b 40 58             	mov    0x58(%eax),%eax[m
[31m-8010199f:	39 f0                	cmp    %esi,%eax[m
[31m-801019a1:	0f 82 c1 00 00 00    	jb     80101a68 <readi+0xf8>[m
[31m-801019a7:	8b 7d e4             	mov    -0x1c(%ebp),%edi[m
[31m-801019aa:	89 fa                	mov    %edi,%edx[m
[31m-801019ac:	01 f2                	add    %esi,%edx[m
[31m-801019ae:	0f 82 b4 00 00 00    	jb     80101a68 <readi+0xf8>[m
[31m-801019b4:	89 c1                	mov    %eax,%ecx[m
[31m-801019b6:	29 f1                	sub    %esi,%ecx[m
[31m-801019b8:	39 d0                	cmp    %edx,%eax[m
[31m-801019ba:	0f 43 cf             	cmovae %edi,%ecx[m
[31m-801019bd:	31 ff                	xor    %edi,%edi[m
[31m-801019bf:	85 c9                	test   %ecx,%ecx[m
[31m-801019c1:	89 4d e4             	mov    %ecx,-0x1c(%ebp)[m
[31m-801019c4:	74 6d                	je     80101a33 <readi+0xc3>[m
[31m-801019c6:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-801019c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-801019d0:	8b 5d d8             	mov    -0x28(%ebp),%ebx[m
[31m-801019d3:	89 f2                	mov    %esi,%edx[m
[31m-801019d5:	c1 ea 09             	shr    $0x9,%edx[m
[31m-801019d8:	89 d8                	mov    %ebx,%eax[m
[31m-801019da:	e8 41 f9 ff ff       	call   80101320 <bmap>[m
[31m-801019df:	83 ec 08             	sub    $0x8,%esp[m
[31m-801019e2:	50                   	push   %eax[m
[31m-801019e3:	ff 33                	pushl  (%ebx)[m
[31m-801019e5:	bb 00 02 00 00       	mov    $0x200,%ebx[m
[31m-801019ea:	e8 e1 e6 ff ff       	call   801000d0 <bread>[m
[31m-801019ef:	89 c2                	mov    %eax,%edx[m
[31m-801019f1:	8b 45 e4             	mov    -0x1c(%ebp),%eax[m
[31m-801019f4:	89 f1                	mov    %esi,%ecx[m
[31m-801019f6:	81 e1 ff 01 00 00    	and    $0x1ff,%ecx[m
[31m-801019fc:	83 c4 0c             	add    $0xc,%esp[m
[31m-801019ff:	89 55 dc             	mov    %edx,-0x24(%ebp)[m
[31m-80101a02:	29 cb                	sub    %ecx,%ebx[m
[31m-80101a04:	29 f8                	sub    %edi,%eax[m
[31m-80101a06:	39 c3                	cmp    %eax,%ebx[m
[31m-80101a08:	0f 47 d8             	cmova  %eax,%ebx[m
[31m-80101a0b:	8d 44 0a 5c          	lea    0x5c(%edx,%ecx,1),%eax[m
[31m-80101a0f:	53                   	push   %ebx[m
[31m-80101a10:	01 df                	add    %ebx,%edi[m
[31m-80101a12:	01 de                	add    %ebx,%esi[m
[31m-80101a14:	50                   	push   %eax[m
[31m-80101a15:	ff 75 e0             	pushl  -0x20(%ebp)[m
[31m-80101a18:	e8 83 2b 00 00       	call   801045a0 <memmove>[m
[31m-80101a1d:	8b 55 dc             	mov    -0x24(%ebp),%edx[m
[31m-80101a20:	89 14 24             	mov    %edx,(%esp)[m
[31m-80101a23:	e8 b8 e7 ff ff       	call   801001e0 <brelse>[m
[31m-80101a28:	01 5d e0             	add    %ebx,-0x20(%ebp)[m
[31m-80101a2b:	83 c4 10             	add    $0x10,%esp[m
[31m-80101a2e:	39 7d e4             	cmp    %edi,-0x1c(%ebp)[m
[31m-80101a31:	77 9d                	ja     801019d0 <readi+0x60>[m
[31m-80101a33:	8b 45 e4             	mov    -0x1c(%ebp),%eax[m
[31m-80101a36:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80101a39:	5b                   	pop    %ebx[m
[31m-80101a3a:	5e                   	pop    %esi[m
[31m-80101a3b:	5f                   	pop    %edi[m
[31m-80101a3c:	5d                   	pop    %ebp[m
[31m-80101a3d:	c3                   	ret    [m
[31m-80101a3e:	66 90                	xchg   %ax,%ax[m
[31m-80101a40:	0f bf 40 52          	movswl 0x52(%eax),%eax[m
[31m-80101a44:	66 83 f8 09          	cmp    $0x9,%ax[m
[31m-80101a48:	77 1e                	ja     80101a68 <readi+0xf8>[m
[31m-80101a4a:	8b 04 c5 80 09 11 80 	mov    -0x7feef680(,%eax,8),%eax[m
[31m-80101a51:	85 c0                	test   %eax,%eax[m
[31m-80101a53:	74 13                	je     80101a68 <readi+0xf8>[m
[31m-80101a55:	89 7d 10             	mov    %edi,0x10(%ebp)[m
[31m-80101a58:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80101a5b:	5b                   	pop    %ebx[m
[31m-80101a5c:	5e                   	pop    %esi[m
[31m-80101a5d:	5f                   	pop    %edi[m
[31m-80101a5e:	5d                   	pop    %ebp[m
[31m-80101a5f:	ff e0                	jmp    *%eax[m
[31m-80101a61:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80101a68:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[31m-80101a6d:	eb c7                	jmp    80101a36 <readi+0xc6>[m
[31m-80101a6f:	90                   	nop[m
[31m-[m
[31m-80101a70 <writei>:[m
[31m-80101a70:	55                   	push   %ebp[m
[31m-80101a71:	89 e5                	mov    %esp,%ebp[m
[31m-80101a73:	57                   	push   %edi[m
[31m-80101a74:	56                   	push   %esi[m
[31m-80101a75:	53                   	push   %ebx[m
[31m-80101a76:	83 ec 1c             	sub    $0x1c,%esp[m
[31m-80101a79:	8b 45 08             	mov    0x8(%ebp),%eax[m
[31m-80101a7c:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[31m-80101a7f:	8b 7d 14             	mov    0x14(%ebp),%edi[m
[31m-80101a82:	66 83 78 50 03       	cmpw   $0x3,0x50(%eax)[m
[31m-80101a87:	89 75 dc             	mov    %esi,-0x24(%ebp)[m
[31m-80101a8a:	89 45 d8             	mov    %eax,-0x28(%ebp)[m
[31m-80101a8d:	8b 75 10             	mov    0x10(%ebp),%esi[m
[31m-80101a90:	89 7d e0             	mov    %edi,-0x20(%ebp)[m
[31m-80101a93:	0f 84 b7 00 00 00    	je     80101b50 <writei+0xe0>[m
[31m-80101a99:	8b 45 d8             	mov    -0x28(%ebp),%eax[m
[31m-80101a9c:	39 70 58             	cmp    %esi,0x58(%eax)[m
[31m-80101a9f:	0f 82 eb 00 00 00    	jb     80101b90 <writei+0x120>[m
[31m-80101aa5:	8b 7d e0             	mov    -0x20(%ebp),%edi[m
[31m-80101aa8:	89 f8                	mov    %edi,%eax[m
[31m-80101aaa:	01 f0                	add    %esi,%eax[m
[31m-80101aac:	3d 00 18 01 00       	cmp    $0x11800,%eax[m
[31m-80101ab1:	0f 87 d9 00 00 00    	ja     80101b90 <writei+0x120>[m
[31m-80101ab7:	39 c6                	cmp    %eax,%esi[m
[31m-80101ab9:	0f 87 d1 00 00 00    	ja     80101b90 <writei+0x120>[m
[31m-80101abf:	85 ff                	test   %edi,%edi[m
[31m-80101ac1:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)[m
[31m-80101ac8:	74 78                	je     80101b42 <writei+0xd2>[m
[31m-80101aca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-80101ad0:	8b 7d d8             	mov    -0x28(%ebp),%edi[m
[31m-80101ad3:	89 f2                	mov    %esi,%edx[m
[31m-80101ad5:	bb 00 02 00 00       	mov    $0x200,%ebx[m
[31m-80101ada:	c1 ea 09             	shr    $0x9,%edx[m
[31m-80101add:	89 f8                	mov    %edi,%eax[m
[31m-80101adf:	e8 3c f8 ff ff       	call   80101320 <bmap>[m
[31m-80101ae4:	83 ec 08             	sub    $0x8,%esp[m
[31m-80101ae7:	50                   	push   %eax[m
[31m-80101ae8:	ff 37                	pushl  (%edi)[m
[31m-80101aea:	e8 e1 e5 ff ff       	call   801000d0 <bread>[m
[31m-80101aef:	89 c7                	mov    %eax,%edi[m
[31m-80101af1:	8b 45 e0             	mov    -0x20(%ebp),%eax[m
[31m-80101af4:	2b 45 e4             	sub    -0x1c(%ebp),%eax[m
[31m-80101af7:	89 f1                	mov    %esi,%ecx[m
[31m-80101af9:	83 c4 0c             	add    $0xc,%esp[m
[31m-80101afc:	81 e1 ff 01 00 00    	and    $0x1ff,%ecx[m
[31m-80101b02:	29 cb                	sub    %ecx,%ebx[m
[31m-80101b04:	39 c3                	cmp    %eax,%ebx[m
[31m-80101b06:	0f 47 d8             	cmova  %eax,%ebx[m
[31m-80101b09:	8d 44 0f 5c          	lea    0x5c(%edi,%ecx,1),%eax[m
[31m-80101b0d:	53                   	push   %ebx[m
[31m-80101b0e:	ff 75 dc             	pushl  -0x24(%ebp)[m
[31m-80101b11:	01 de                	add    %ebx,%esi[m
[31m-80101b13:	50                   	push   %eax[m
[31m-80101b14:	e8 87 2a 00 00       	call   801045a0 <memmove>[m
[31m-80101b19:	89 3c 24             	mov    %edi,(%esp)[m
[31m-80101b1c:	e8 cf 12 00 00       	call   80102df0 <log_write>[m
[31m-80101b21:	89 3c 24             	mov    %edi,(%esp)[m
[31m-80101b24:	e8 b7 e6 ff ff       	call   801001e0 <brelse>[m
[31m-80101b29:	01 5d e4             	add    %ebx,-0x1c(%ebp)[m
[31m-80101b2c:	01 5d dc             	add    %ebx,-0x24(%ebp)[m
[31m-80101b2f:	83 c4 10             	add    $0x10,%esp[m
[31m-80101b32:	8b 55 e4             	mov    -0x1c(%ebp),%edx[m
[31m-80101b35:	39 55 e0             	cmp    %edx,-0x20(%ebp)[m
[31m-80101b38:	77 96                	ja     80101ad0 <writei+0x60>[m
[31m-80101b3a:	8b 45 d8             	mov    -0x28(%ebp),%eax[m
[31m-80101b3d:	3b 70 58             	cmp    0x58(%eax),%esi[m
[31m-80101b40:	77 36                	ja     80101b78 <writei+0x108>[m
[31m-80101b42:	8b 45 e0             	mov    -0x20(%ebp),%eax[m
[31m-80101b45:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80101b48:	5b                   	pop    %ebx[m
[31m-80101b49:	5e                   	pop    %esi[m
[31m-80101b4a:	5f                   	pop    %edi[m
[31m-80101b4b:	5d                   	pop    %ebp[m
[31m-80101b4c:	c3                   	ret    [m
[31m-80101b4d:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-80101b50:	0f bf 40 52          	movswl 0x52(%eax),%eax[m
[31m-80101b54:	66 83 f8 09          	cmp    $0x9,%ax[m
[31m-80101b58:	77 36                	ja     80101b90 <writei+0x120>[m
[31m-80101b5a:	8b 04 c5 84 09 11 80 	mov    -0x7feef67c(,%eax,8),%eax[m
[31m-80101b61:	85 c0                	test   %eax,%eax[m
[31m-80101b63:	74 2b                	je     80101b90 <writei+0x120>[m
[31m-80101b65:	89 7d 10             	mov    %edi,0x10(%ebp)[m
[31m-80101b68:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80101b6b:	5b                   	pop    %ebx[m
[31m-80101b6c:	5e                   	pop    %esi[m
[31m-80101b6d:	5f                   	pop    %edi[m
[31m-80101b6e:	5d                   	pop    %ebp[m
[31m-80101b6f:	ff e0                	jmp    *%eax[m
[31m-80101b71:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80101b78:	8b 45 d8             	mov    -0x28(%ebp),%eax[m
[31m-80101b7b:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101b7e:	89 70 58             	mov    %esi,0x58(%eax)[m
[31m-80101b81:	50                   	push   %eax[m
[31m-80101b82:	e8 79 fa ff ff       	call   80101600 <iupdate>[m
[31m-80101b87:	83 c4 10             	add    $0x10,%esp[m
[31m-80101b8a:	eb b6                	jmp    80101b42 <writei+0xd2>[m
[31m-80101b8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80101b90:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[31m-80101b95:	eb ae                	jmp    80101b45 <writei+0xd5>[m
[31m-80101b97:	89 f6                	mov    %esi,%esi[m
[31m-80101b99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-80101ba0 <namecmp>:[m
[31m-80101ba0:	55                   	push   %ebp[m
[31m-80101ba1:	89 e5                	mov    %esp,%ebp[m
[31m-80101ba3:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101ba6:	6a 0e                	push   $0xe[m
[31m-80101ba8:	ff 75 0c             	pushl  0xc(%ebp)[m
[31m-80101bab:	ff 75 08             	pushl  0x8(%ebp)[m
[31m-80101bae:	e8 6d 2a 00 00       	call   80104620 <strncmp>[m
[31m-80101bb3:	c9                   	leave  [m
[31m-80101bb4:	c3                   	ret    [m
[31m-80101bb5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80101bb9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-80101bc0 <dirlookup>:[m
[31m-80101bc0:	55                   	push   %ebp[m
[31m-80101bc1:	89 e5                	mov    %esp,%ebp[m
[31m-80101bc3:	57                   	push   %edi[m
[31m-80101bc4:	56                   	push   %esi[m
[31m-80101bc5:	53                   	push   %ebx[m
[31m-80101bc6:	83 ec 1c             	sub    $0x1c,%esp[m
[31m-80101bc9:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[31m-80101bcc:	66 83 7b 50 01       	cmpw   $0x1,0x50(%ebx)[m
[31m-80101bd1:	0f 85 80 00 00 00    	jne    80101c57 <dirlookup+0x97>[m
[31m-80101bd7:	8b 53 58             	mov    0x58(%ebx),%edx[m
[31m-80101bda:	31 ff                	xor    %edi,%edi[m
[31m-80101bdc:	8d 75 d8             	lea    -0x28(%ebp),%esi[m
[31m-80101bdf:	85 d2                	test   %edx,%edx[m
[31m-80101be1:	75 0d                	jne    80101bf0 <dirlookup+0x30>[m
[31m-80101be3:	eb 5b                	jmp    80101c40 <dirlookup+0x80>[m
[31m-80101be5:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-80101be8:	83 c7 10             	add    $0x10,%edi[m
[31m-80101beb:	39 7b 58             	cmp    %edi,0x58(%ebx)[m
[31m-80101bee:	76 50                	jbe    80101c40 <dirlookup+0x80>[m
[31m-80101bf0:	6a 10                	push   $0x10[m
[31m-80101bf2:	57                   	push   %edi[m
[31m-80101bf3:	56                   	push   %esi[m
[31m-80101bf4:	53                   	push   %ebx[m
[31m-80101bf5:	e8 76 fd ff ff       	call   80101970 <readi>[m
[31m-80101bfa:	83 c4 10             	add    $0x10,%esp[m
[31m-80101bfd:	83 f8 10             	cmp    $0x10,%eax[m
[31m-80101c00:	75 48                	jne    80101c4a <dirlookup+0x8a>[m
[31m-80101c02:	66 83 7d d8 00       	cmpw   $0x0,-0x28(%ebp)[m
[31m-80101c07:	74 df                	je     80101be8 <dirlookup+0x28>[m
[31m-80101c09:	8d 45 da             	lea    -0x26(%ebp),%eax[m
[31m-80101c0c:	83 ec 04             	sub    $0x4,%esp[m
[31m-80101c0f:	6a 0e                	push   $0xe[m
[31m-80101c11:	50                   	push   %eax[m
[31m-80101c12:	ff 75 0c             	pushl  0xc(%ebp)[m
[31m-80101c15:	e8 06 2a 00 00       	call   80104620 <strncmp>[m
[31m-80101c1a:	83 c4 10             	add    $0x10,%esp[m
[31m-80101c1d:	85 c0                	test   %eax,%eax[m
[31m-80101c1f:	75 c7                	jne    80101be8 <dirlookup+0x28>[m
[31m-80101c21:	8b 45 10             	mov    0x10(%ebp),%eax[m
[31m-80101c24:	85 c0                	test   %eax,%eax[m
[31m-80101c26:	74 05                	je     80101c2d <dirlookup+0x6d>[m
[31m-80101c28:	8b 45 10             	mov    0x10(%ebp),%eax[m
[31m-80101c2b:	89 38                	mov    %edi,(%eax)[m
[31m-80101c2d:	0f b7 55 d8          	movzwl -0x28(%ebp),%edx[m
[31m-80101c31:	8b 03                	mov    (%ebx),%eax[m
[31m-80101c33:	e8 18 f6 ff ff       	call   80101250 <iget>[m
[31m-80101c38:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80101c3b:	5b                   	pop    %ebx[m
[31m-80101c3c:	5e                   	pop    %esi[m
[31m-80101c3d:	5f                   	pop    %edi[m
[31m-80101c3e:	5d                   	pop    %ebp[m
[31m-80101c3f:	c3                   	ret    [m
[31m-80101c40:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80101c43:	31 c0                	xor    %eax,%eax[m
[31m-80101c45:	5b                   	pop    %ebx[m
[31m-80101c46:	5e                   	pop    %esi[m
[31m-80101c47:	5f                   	pop    %edi[m
[31m-80101c48:	5d                   	pop    %ebp[m
[31m-80101c49:	c3                   	ret    [m
[31m-80101c4a:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101c4d:	68 15 71 10 80       	push   $0x80107115[m
[31m-80101c52:	e8 19 e7 ff ff       	call   80100370 <panic>[m
[31m-80101c57:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101c5a:	68 03 71 10 80       	push   $0x80107103[m
[31m-80101c5f:	e8 0c e7 ff ff       	call   80100370 <panic>[m
[31m-80101c64:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-80101c6a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi[m
[31m-[m
[31m-80101c70 <namex>:[m
[31m-80101c70:	55                   	push   %ebp[m
[31m-80101c71:	89 e5                	mov    %esp,%ebp[m
[31m-80101c73:	57                   	push   %edi[m
[31m-80101c74:	56                   	push   %esi[m
[31m-80101c75:	53                   	push   %ebx[m
[31m-80101c76:	89 cf                	mov    %ecx,%edi[m
[31m-80101c78:	89 c3                	mov    %eax,%ebx[m
[31m-80101c7a:	83 ec 1c             	sub    $0x1c,%esp[m
[31m-80101c7d:	80 38 2f             	cmpb   $0x2f,(%eax)[m
[31m-80101c80:	89 55 e0             	mov    %edx,-0x20(%ebp)[m
[31m-80101c83:	0f 84 53 01 00 00    	je     80101ddc <namex+0x16c>[m
[31m-80101c89:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[31m-80101c8f:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101c92:	8b 70 68             	mov    0x68(%eax),%esi[m
[31m-80101c95:	68 00 0a 11 80       	push   $0x80110a00[m
[31m-80101c9a:	e8 21 26 00 00       	call   801042c0 <acquire>[m
[31m-80101c9f:	83 46 08 01          	addl   $0x1,0x8(%esi)[m
[31m-80101ca3:	c7 04 24 00 0a 11 80 	movl   $0x80110a00,(%esp)[m
[31m-80101caa:	e8 f1 27 00 00       	call   801044a0 <release>[m
[31m-80101caf:	83 c4 10             	add    $0x10,%esp[m
[31m-80101cb2:	eb 07                	jmp    80101cbb <namex+0x4b>[m
[31m-80101cb4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80101cb8:	83 c3 01             	add    $0x1,%ebx[m
[31m-80101cbb:	0f b6 03             	movzbl (%ebx),%eax[m
[31m-80101cbe:	3c 2f                	cmp    $0x2f,%al[m
[31m-80101cc0:	74 f6                	je     80101cb8 <namex+0x48>[m
[31m-80101cc2:	84 c0                	test   %al,%al[m
[31m-80101cc4:	0f 84 e3 00 00 00    	je     80101dad <namex+0x13d>[m
[31m-80101cca:	0f b6 03             	movzbl (%ebx),%eax[m
[31m-80101ccd:	89 da                	mov    %ebx,%edx[m
[31m-80101ccf:	84 c0                	test   %al,%al[m
[31m-80101cd1:	0f 84 ac 00 00 00    	je     80101d83 <namex+0x113>[m
[31m-80101cd7:	3c 2f                	cmp    $0x2f,%al[m
[31m-80101cd9:	75 09                	jne    80101ce4 <namex+0x74>[m
[31m-80101cdb:	e9 a3 00 00 00       	jmp    80101d83 <namex+0x113>[m
[31m-80101ce0:	84 c0                	test   %al,%al[m
[31m-80101ce2:	74 0a                	je     80101cee <namex+0x7e>[m
[31m-80101ce4:	83 c2 01             	add    $0x1,%edx[m
[31m-80101ce7:	0f b6 02             	movzbl (%edx),%eax[m
[31m-80101cea:	3c 2f                	cmp    $0x2f,%al[m
[31m-80101cec:	75 f2                	jne    80101ce0 <namex+0x70>[m
[31m-80101cee:	89 d1                	mov    %edx,%ecx[m
[31m-80101cf0:	29 d9                	sub    %ebx,%ecx[m
[31m-80101cf2:	83 f9 0d             	cmp    $0xd,%ecx[m
[31m-80101cf5:	0f 8e 8d 00 00 00    	jle    80101d88 <namex+0x118>[m
[31m-80101cfb:	83 ec 04             	sub    $0x4,%esp[m
[31m-80101cfe:	89 55 e4             	mov    %edx,-0x1c(%ebp)[m
[31m-80101d01:	6a 0e                	push   $0xe[m
[31m-80101d03:	53                   	push   %ebx[m
[31m-80101d04:	57                   	push   %edi[m
[31m-80101d05:	e8 96 28 00 00       	call   801045a0 <memmove>[m
[31m-80101d0a:	8b 55 e4             	mov    -0x1c(%ebp),%edx[m
[31m-80101d0d:	83 c4 10             	add    $0x10,%esp[m
[31m-80101d10:	89 d3                	mov    %edx,%ebx[m
[31m-80101d12:	80 3a 2f             	cmpb   $0x2f,(%edx)[m
[31m-80101d15:	75 11                	jne    80101d28 <namex+0xb8>[m
[31m-80101d17:	89 f6                	mov    %esi,%esi[m
[31m-80101d19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-80101d20:	83 c3 01             	add    $0x1,%ebx[m
[31m-80101d23:	80 3b 2f             	cmpb   $0x2f,(%ebx)[m
[31m-80101d26:	74 f8                	je     80101d20 <namex+0xb0>[m
[31m-80101d28:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101d2b:	56                   	push   %esi[m
[31m-80101d2c:	e8 7f f9 ff ff       	call   801016b0 <ilock>[m
[31m-80101d31:	83 c4 10             	add    $0x10,%esp[m
[31m-80101d34:	66 83 7e 50 01       	cmpw   $0x1,0x50(%esi)[m
[31m-80101d39:	0f 85 7f 00 00 00    	jne    80101dbe <namex+0x14e>[m
[31m-80101d3f:	8b 55 e0             	mov    -0x20(%ebp),%edx[m
[31m-80101d42:	85 d2                	test   %edx,%edx[m
[31m-80101d44:	74 09                	je     80101d4f <namex+0xdf>[m
[31m-80101d46:	80 3b 00             	cmpb   $0x0,(%ebx)[m
[31m-80101d49:	0f 84 a3 00 00 00    	je     80101df2 <namex+0x182>[m
[31m-80101d4f:	83 ec 04             	sub    $0x4,%esp[m
[31m-80101d52:	6a 00                	push   $0x0[m
[31m-80101d54:	57                   	push   %edi[m
[31m-80101d55:	56                   	push   %esi[m
[31m-80101d56:	e8 65 fe ff ff       	call   80101bc0 <dirlookup>[m
[31m-80101d5b:	83 c4 10             	add    $0x10,%esp[m
[31m-80101d5e:	85 c0                	test   %eax,%eax[m
[31m-80101d60:	74 5c                	je     80101dbe <namex+0x14e>[m
[31m-80101d62:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101d65:	89 45 e4             	mov    %eax,-0x1c(%ebp)[m
[31m-80101d68:	56                   	push   %esi[m
[31m-80101d69:	e8 22 fa ff ff       	call   80101790 <iunlock>[m
[31m-80101d6e:	89 34 24             	mov    %esi,(%esp)[m
[31m-80101d71:	e8 6a fa ff ff       	call   801017e0 <iput>[m
[31m-80101d76:	8b 45 e4             	mov    -0x1c(%ebp),%eax[m
[31m-80101d79:	83 c4 10             	add    $0x10,%esp[m
[31m-80101d7c:	89 c6                	mov    %eax,%esi[m
[31m-80101d7e:	e9 38 ff ff ff       	jmp    80101cbb <namex+0x4b>[m
[31m-80101d83:	31 c9                	xor    %ecx,%ecx[m
[31m-80101d85:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-80101d88:	83 ec 04             	sub    $0x4,%esp[m
[31m-80101d8b:	89 55 dc             	mov    %edx,-0x24(%ebp)[m
[31m-80101d8e:	89 4d e4             	mov    %ecx,-0x1c(%ebp)[m
[31m-80101d91:	51                   	push   %ecx[m
[31m-80101d92:	53                   	push   %ebx[m
[31m-80101d93:	57                   	push   %edi[m
[31m-80101d94:	e8 07 28 00 00       	call   801045a0 <memmove>[m
[31m-80101d99:	8b 4d e4             	mov    -0x1c(%ebp),%ecx[m
[31m-80101d9c:	8b 55 dc             	mov    -0x24(%ebp),%edx[m
[31m-80101d9f:	83 c4 10             	add    $0x10,%esp[m
[31m-80101da2:	c6 04 0f 00          	movb   $0x0,(%edi,%ecx,1)[m
[31m-80101da6:	89 d3                	mov    %edx,%ebx[m
[31m-80101da8:	e9 65 ff ff ff       	jmp    80101d12 <namex+0xa2>[m
[31m-80101dad:	8b 45 e0             	mov    -0x20(%ebp),%eax[m
[31m-80101db0:	85 c0                	test   %eax,%eax[m
[31m-80101db2:	75 54                	jne    80101e08 <namex+0x198>[m
[31m-80101db4:	89 f0                	mov    %esi,%eax[m
[31m-80101db6:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80101db9:	5b                   	pop    %ebx[m
[31m-80101dba:	5e                   	pop    %esi[m
[31m-80101dbb:	5f                   	pop    %edi[m
[31m-80101dbc:	5d                   	pop    %ebp[m
[31m-80101dbd:	c3                   	ret    [m
[31m-80101dbe:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101dc1:	56                   	push   %esi[m
[31m-80101dc2:	e8 c9 f9 ff ff       	call   80101790 <iunlock>[m
[31m-80101dc7:	89 34 24             	mov    %esi,(%esp)[m
[31m-80101dca:	e8 11 fa ff ff       	call   801017e0 <iput>[m
[31m-80101dcf:	83 c4 10             	add    $0x10,%esp[m
[31m-80101dd2:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80101dd5:	31 c0                	xor    %eax,%eax[m
[31m-80101dd7:	5b                   	pop    %ebx[m
[31m-80101dd8:	5e                   	pop    %esi[m
[31m-80101dd9:	5f                   	pop    %edi[m
[31m-80101dda:	5d                   	pop    %ebp[m
[31m-80101ddb:	c3                   	ret    [m
[31m-80101ddc:	ba 01 00 00 00       	mov    $0x1,%edx[m
[31m-80101de1:	b8 01 00 00 00       	mov    $0x1,%eax[m
[31m-80101de6:	e8 65 f4 ff ff       	call   80101250 <iget>[m
[31m-80101deb:	89 c6                	mov    %eax,%esi[m
[31m-80101ded:	e9 c9 fe ff ff       	jmp    80101cbb <namex+0x4b>[m
[31m-80101df2:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101df5:	56                   	push   %esi[m
[31m-80101df6:	e8 95 f9 ff ff       	call   80101790 <iunlock>[m
[31m-80101dfb:	83 c4 10             	add    $0x10,%esp[m
[31m-80101dfe:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80101e01:	89 f0                	mov    %esi,%eax[m
[31m-80101e03:	5b                   	pop    %ebx[m
[31m-80101e04:	5e                   	pop    %esi[m
[31m-80101e05:	5f                   	pop    %edi[m
[31m-80101e06:	5d                   	pop    %ebp[m
[31m-80101e07:	c3                   	ret    [m
[31m-80101e08:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101e0b:	56                   	push   %esi[m
[31m-80101e0c:	e8 cf f9 ff ff       	call   801017e0 <iput>[m
[31m-80101e11:	83 c4 10             	add    $0x10,%esp[m
[31m-80101e14:	31 c0                	xor    %eax,%eax[m
[31m-80101e16:	eb 9e                	jmp    80101db6 <namex+0x146>[m
[31m-80101e18:	90                   	nop[m
[31m-80101e19:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-[m
[31m-80101e20 <dirlink>:[m
[31m-80101e20:	55                   	push   %ebp[m
[31m-80101e21:	89 e5                	mov    %esp,%ebp[m
[31m-80101e23:	57                   	push   %edi[m
[31m-80101e24:	56                   	push   %esi[m
[31m-80101e25:	53                   	push   %ebx[m
[31m-80101e26:	83 ec 20             	sub    $0x20,%esp[m
[31m-80101e29:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[31m-80101e2c:	6a 00                	push   $0x0[m
[31m-80101e2e:	ff 75 0c             	pushl  0xc(%ebp)[m
[31m-80101e31:	53                   	push   %ebx[m
[31m-80101e32:	e8 89 fd ff ff       	call   80101bc0 <dirlookup>[m
[31m-80101e37:	83 c4 10             	add    $0x10,%esp[m
[31m-80101e3a:	85 c0                	test   %eax,%eax[m
[31m-80101e3c:	75 67                	jne    80101ea5 <dirlink+0x85>[m
[31m-80101e3e:	8b 7b 58             	mov    0x58(%ebx),%edi[m
[31m-80101e41:	8d 75 d8             	lea    -0x28(%ebp),%esi[m
[31m-80101e44:	85 ff                	test   %edi,%edi[m
[31m-80101e46:	74 29                	je     80101e71 <dirlink+0x51>[m
[31m-80101e48:	31 ff                	xor    %edi,%edi[m
[31m-80101e4a:	8d 75 d8             	lea    -0x28(%ebp),%esi[m
[31m-80101e4d:	eb 09                	jmp    80101e58 <dirlink+0x38>[m
[31m-80101e4f:	90                   	nop[m
[31m-80101e50:	83 c7 10             	add    $0x10,%edi[m
[31m-80101e53:	39 7b 58             	cmp    %edi,0x58(%ebx)[m
[31m-80101e56:	76 19                	jbe    80101e71 <dirlink+0x51>[m
[31m-80101e58:	6a 10                	push   $0x10[m
[31m-80101e5a:	57                   	push   %edi[m
[31m-80101e5b:	56                   	push   %esi[m
[31m-80101e5c:	53                   	push   %ebx[m
[31m-80101e5d:	e8 0e fb ff ff       	call   80101970 <readi>[m
[31m-80101e62:	83 c4 10             	add    $0x10,%esp[m
[31m-80101e65:	83 f8 10             	cmp    $0x10,%eax[m
[31m-80101e68:	75 4e                	jne    80101eb8 <dirlink+0x98>[m
[31m-80101e6a:	66 83 7d d8 00       	cmpw   $0x0,-0x28(%ebp)[m
[31m-80101e6f:	75 df                	jne    80101e50 <dirlink+0x30>[m
[31m-80101e71:	8d 45 da             	lea    -0x26(%ebp),%eax[m
[31m-80101e74:	83 ec 04             	sub    $0x4,%esp[m
[31m-80101e77:	6a 0e                	push   $0xe[m
[31m-80101e79:	ff 75 0c             	pushl  0xc(%ebp)[m
[31m-80101e7c:	50                   	push   %eax[m
[31m-80101e7d:	e8 0e 28 00 00       	call   80104690 <strncpy>[m
[31m-80101e82:	8b 45 10             	mov    0x10(%ebp),%eax[m
[31m-80101e85:	6a 10                	push   $0x10[m
[31m-80101e87:	57                   	push   %edi[m
[31m-80101e88:	56                   	push   %esi[m
[31m-80101e89:	53                   	push   %ebx[m
[31m-80101e8a:	66 89 45 d8          	mov    %ax,-0x28(%ebp)[m
[31m-80101e8e:	e8 dd fb ff ff       	call   80101a70 <writei>[m
[31m-80101e93:	83 c4 20             	add    $0x20,%esp[m
[31m-80101e96:	83 f8 10             	cmp    $0x10,%eax[m
[31m-80101e99:	75 2a                	jne    80101ec5 <dirlink+0xa5>[m
[31m-80101e9b:	31 c0                	xor    %eax,%eax[m
[31m-80101e9d:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80101ea0:	5b                   	pop    %ebx[m
[31m-80101ea1:	5e                   	pop    %esi[m
[31m-80101ea2:	5f                   	pop    %edi[m
[31m-80101ea3:	5d                   	pop    %ebp[m
[31m-80101ea4:	c3                   	ret    [m
[31m-80101ea5:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101ea8:	50                   	push   %eax[m
[31m-80101ea9:	e8 32 f9 ff ff       	call   801017e0 <iput>[m
[31m-80101eae:	83 c4 10             	add    $0x10,%esp[m
[31m-80101eb1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[31m-80101eb6:	eb e5                	jmp    80101e9d <dirlink+0x7d>[m
[31m-80101eb8:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101ebb:	68 15 71 10 80       	push   $0x80107115[m
[31m-80101ec0:	e8 ab e4 ff ff       	call   80100370 <panic>[m
[31m-80101ec5:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101ec8:	68 de 76 10 80       	push   $0x801076de[m
[31m-80101ecd:	e8 9e e4 ff ff       	call   80100370 <panic>[m
[31m-80101ed2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80101ed9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-80101ee0 <namei>:[m
[31m-80101ee0:	55                   	push   %ebp[m
[31m-80101ee1:	31 d2                	xor    %edx,%edx[m
[31m-80101ee3:	89 e5                	mov    %esp,%ebp[m
[31m-80101ee5:	83 ec 18             	sub    $0x18,%esp[m
[31m-80101ee8:	8b 45 08             	mov    0x8(%ebp),%eax[m
[31m-80101eeb:	8d 4d ea             	lea    -0x16(%ebp),%ecx[m
[31m-80101eee:	e8 7d fd ff ff       	call   80101c70 <namex>[m
[31m-80101ef3:	c9                   	leave  [m
[31m-80101ef4:	c3                   	ret    [m
[31m-80101ef5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80101ef9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-80101f00 <nameiparent>:[m
[31m-80101f00:	55                   	push   %ebp[m
[31m-80101f01:	ba 01 00 00 00       	mov    $0x1,%edx[m
[31m-80101f06:	89 e5                	mov    %esp,%ebp[m
[31m-80101f08:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[31m-80101f0b:	8b 45 08             	mov    0x8(%ebp),%eax[m
[31m-80101f0e:	5d                   	pop    %ebp[m
[31m-80101f0f:	e9 5c fd ff ff       	jmp    80101c70 <namex>[m
[31m-80101f14:	66 90                	xchg   %ax,%ax[m
[31m-80101f16:	66 90                	xchg   %ax,%ax[m
[31m-80101f18:	66 90                	xchg   %ax,%ax[m
[31m-80101f1a:	66 90                	xchg   %ax,%ax[m
[31m-80101f1c:	66 90                	xchg   %ax,%ax[m
[31m-80101f1e:	66 90                	xchg   %ax,%ax[m
[31m-[m
[31m-80101f20 <idestart>:[m
[31m-80101f20:	55                   	push   %ebp[m
[31m-80101f21:	85 c0                	test   %eax,%eax[m
[31m-80101f23:	89 e5                	mov    %esp,%ebp[m
[31m-80101f25:	56                   	push   %esi[m
[31m-80101f26:	53                   	push   %ebx[m
[31m-80101f27:	0f 84 ad 00 00 00    	je     80101fda <idestart+0xba>[m
[31m-80101f2d:	8b 58 08             	mov    0x8(%eax),%ebx[m
[31m-80101f30:	89 c1                	mov    %eax,%ecx[m
[31m-80101f32:	81 fb e7 03 00 00    	cmp    $0x3e7,%ebx[m
[31m-80101f38:	0f 87 8f 00 00 00    	ja     80101fcd <idestart+0xad>[m
[31m-80101f3e:	ba f7 01 00 00       	mov    $0x1f7,%edx[m
[31m-80101f43:	90                   	nop[m
[31m-80101f44:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80101f48:	ec                   	in     (%dx),%al[m
[31m-80101f49:	83 e0 c0             	and    $0xffffffc0,%eax[m
[31m-80101f4c:	3c 40                	cmp    $0x40,%al[m
[31m-80101f4e:	75 f8                	jne    80101f48 <idestart+0x28>[m
[31m-80101f50:	31 f6                	xor    %esi,%esi[m
[31m-80101f52:	ba f6 03 00 00       	mov    $0x3f6,%edx[m
[31m-80101f57:	89 f0                	mov    %esi,%eax[m
[31m-80101f59:	ee                   	out    %al,(%dx)[m
[31m-80101f5a:	ba f2 01 00 00       	mov    $0x1f2,%edx[m
[31m-80101f5f:	b8 01 00 00 00       	mov    $0x1,%eax[m
[31m-80101f64:	ee                   	out    %al,(%dx)[m
[31m-80101f65:	ba f3 01 00 00       	mov    $0x1f3,%edx[m
[31m-80101f6a:	89 d8                	mov    %ebx,%eax[m
[31m-80101f6c:	ee                   	out    %al,(%dx)[m
[31m-80101f6d:	89 d8                	mov    %ebx,%eax[m
[31m-80101f6f:	ba f4 01 00 00       	mov    $0x1f4,%edx[m
[31m-80101f74:	c1 f8 08             	sar    $0x8,%eax[m
[31m-80101f77:	ee                   	out    %al,(%dx)[m
[31m-80101f78:	ba f5 01 00 00       	mov    $0x1f5,%edx[m
[31m-80101f7d:	89 f0                	mov    %esi,%eax[m
[31m-80101f7f:	ee                   	out    %al,(%dx)[m
[31m-80101f80:	0f b6 41 04          	movzbl 0x4(%ecx),%eax[m
[31m-80101f84:	ba f6 01 00 00       	mov    $0x1f6,%edx[m
[31m-80101f89:	83 e0 01             	and    $0x1,%eax[m
[31m-80101f8c:	c1 e0 04             	shl    $0x4,%eax[m
[31m-80101f8f:	83 c8 e0             	or     $0xffffffe0,%eax[m
[31m-80101f92:	ee                   	out    %al,(%dx)[m
[31m-80101f93:	f6 01 04             	testb  $0x4,(%ecx)[m
[31m-80101f96:	ba f7 01 00 00       	mov    $0x1f7,%edx[m
[31m-80101f9b:	75 13                	jne    80101fb0 <idestart+0x90>[m
[31m-80101f9d:	b8 20 00 00 00       	mov    $0x20,%eax[m
[31m-80101fa2:	ee                   	out    %al,(%dx)[m
[31m-80101fa3:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m-80101fa6:	5b                   	pop    %ebx[m
[31m-80101fa7:	5e                   	pop    %esi[m
[31m-80101fa8:	5d                   	pop    %ebp[m
[31m-80101fa9:	c3                   	ret    [m
[31m-80101faa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-80101fb0:	b8 30 00 00 00       	mov    $0x30,%eax[m
[31m-80101fb5:	ee                   	out    %al,(%dx)[m
[31m-80101fb6:	ba f0 01 00 00       	mov    $0x1f0,%edx[m
[31m-80101fbb:	8d 71 5c             	lea    0x5c(%ecx),%esi[m
[31m-80101fbe:	b9 80 00 00 00       	mov    $0x80,%ecx[m
[31m-80101fc3:	fc                   	cld    [m
[31m-80101fc4:	f3 6f                	rep outsl %ds:(%esi),(%dx)[m
[31m-80101fc6:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m-80101fc9:	5b                   	pop    %ebx[m
[31m-80101fca:	5e                   	pop    %esi[m
[31m-80101fcb:	5d                   	pop    %ebp[m
[31m-80101fcc:	c3                   	ret    [m
[31m-80101fcd:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101fd0:	68 80 71 10 80       	push   $0x80107180[m
[31m-80101fd5:	e8 96 e3 ff ff       	call   80100370 <panic>[m
[31m-80101fda:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80101fdd:	68 77 71 10 80       	push   $0x80107177[m
[31m-80101fe2:	e8 89 e3 ff ff       	call   80100370 <panic>[m
[31m-80101fe7:	89 f6                	mov    %esi,%esi[m
[31m-80101fe9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-80101ff0 <ideinit>:[m
[31m-80101ff0:	55                   	push   %ebp[m
[31m-80101ff1:	89 e5                	mov    %esp,%ebp[m
[31m-80101ff3:	83 ec 10             	sub    $0x10,%esp[m
[31m-80101ff6:	68 92 71 10 80       	push   $0x80107192[m
[31m-80101ffb:	68 80 a5 10 80       	push   $0x8010a580[m
[31m-80102000:	e8 9b 22 00 00       	call   801042a0 <initlock>[m
[31m-80102005:	c7 04 24 0e 00 00 00 	movl   $0xe,(%esp)[m
[31m-8010200c:	e8 cf 12 00 00       	call   801032e0 <picenable>[m
[31m-80102011:	58                   	pop    %eax[m
[31m-80102012:	a1 80 2d 11 80       	mov    0x80112d80,%eax[m
[31m-80102017:	5a                   	pop    %edx[m
[31m-80102018:	83 e8 01             	sub    $0x1,%eax[m
[31m-8010201b:	50                   	push   %eax[m
[31m-8010201c:	6a 0e                	push   $0xe[m
[31m-8010201e:	e8 bd 02 00 00       	call   801022e0 <ioapicenable>[m
[31m-80102023:	83 c4 10             	add    $0x10,%esp[m
[31m-80102026:	ba f7 01 00 00       	mov    $0x1f7,%edx[m
[31m-8010202b:	90                   	nop[m
[31m-8010202c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80102030:	ec                   	in     (%dx),%al[m
[31m-80102031:	83 e0 c0             	and    $0xffffffc0,%eax[m
[31m-80102034:	3c 40                	cmp    $0x40,%al[m
[31m-80102036:	75 f8                	jne    80102030 <ideinit+0x40>[m
[31m-80102038:	ba f6 01 00 00       	mov    $0x1f6,%edx[m
[31m-8010203d:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax[m
[31m-80102042:	ee                   	out    %al,(%dx)[m
[31m-80102043:	b9 e8 03 00 00       	mov    $0x3e8,%ecx[m
[31m-80102048:	ba f7 01 00 00       	mov    $0x1f7,%edx[m
[31m-8010204d:	eb 06                	jmp    80102055 <ideinit+0x65>[m
[31m-8010204f:	90                   	nop[m
[31m-80102050:	83 e9 01             	sub    $0x1,%ecx[m
[31m-80102053:	74 0f                	je     80102064 <ideinit+0x74>[m
[31m-80102055:	ec                   	in     (%dx),%al[m
[31m-80102056:	84 c0                	test   %al,%al[m
[31m-80102058:	74 f6                	je     80102050 <ideinit+0x60>[m
[31m-8010205a:	c7 05 60 a5 10 80 01 	movl   $0x1,0x8010a560[m
[31m-80102061:	00 00 00 [m
[31m-80102064:	ba f6 01 00 00       	mov    $0x1f6,%edx[m
[31m-80102069:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax[m
[31m-8010206e:	ee                   	out    %al,(%dx)[m
[31m-8010206f:	c9                   	leave  [m
[31m-80102070:	c3                   	ret    [m
[31m-80102071:	eb 0d                	jmp    80102080 <ideintr>[m
[31m-80102073:	90                   	nop[m
[31m-80102074:	90                   	nop[m
[31m-80102075:	90                   	nop[m
[31m-80102076:	90                   	nop[m
[31m-80102077:	90                   	nop[m
[31m-80102078:	90                   	nop[m
[31m-80102079:	90                   	nop[m
[31m-8010207a:	90                   	nop[m
[31m-8010207b:	90                   	nop[m
[31m-8010207c:	90                   	nop[m
[31m-8010207d:	90                   	nop[m
[31m-8010207e:	90                   	nop[m
[31m-8010207f:	90                   	nop[m
[31m-[m
[31m-80102080 <ideintr>:[m
[31m-80102080:	55                   	push   %ebp[m
[31m-80102081:	89 e5                	mov    %esp,%ebp[m
[31m-80102083:	57                   	push   %edi[m
[31m-80102084:	56                   	push   %esi[m
[31m-80102085:	53                   	push   %ebx[m
[31m-80102086:	83 ec 18             	sub    $0x18,%esp[m
[31m-80102089:	68 80 a5 10 80       	push   $0x8010a580[m
[31m-8010208e:	e8 2d 22 00 00       	call   801042c0 <acquire>[m
[31m-80102093:	8b 1d 64 a5 10 80    	mov    0x8010a564,%ebx[m
[31m-80102099:	83 c4 10             	add    $0x10,%esp[m
[31m-8010209c:	85 db                	test   %ebx,%ebx[m
[31m-8010209e:	74 34                	je     801020d4 <ideintr+0x54>[m
[31m-801020a0:	8b 43 58             	mov    0x58(%ebx),%eax[m
[31m-801020a3:	a3 64 a5 10 80       	mov    %eax,0x8010a564[m
[31m-801020a8:	8b 33                	mov    (%ebx),%esi[m
[31m-801020aa:	f7 c6 04 00 00 00    	test   $0x4,%esi[m
[31m-801020b0:	74 3e                	je     801020f0 <ideintr+0x70>[m
[31m-801020b2:	83 e6 fb             	and    $0xfffffffb,%esi[m
[31m-801020b5:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801020b8:	83 ce 02             	or     $0x2,%esi[m
[31m-801020bb:	89 33                	mov    %esi,(%ebx)[m
[31m-801020bd:	53                   	push   %ebx[m
[31m-801020be:	e8 1d 1f 00 00       	call   80103fe0 <wakeup>[m
[31m-801020c3:	a1 64 a5 10 80       	mov    0x8010a564,%eax[m
[31m-801020c8:	83 c4 10             	add    $0x10,%esp[m
[31m-801020cb:	85 c0                	test   %eax,%eax[m
[31m-801020cd:	74 05                	je     801020d4 <ideintr+0x54>[m
[31m-801020cf:	e8 4c fe ff ff       	call   80101f20 <idestart>[m
[31m-801020d4:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801020d7:	68 80 a5 10 80       	push   $0x8010a580[m
[31m-801020dc:	e8 bf 23 00 00       	call   801044a0 <release>[m
[31m-801020e1:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-801020e4:	5b                   	pop    %ebx[m
[31m-801020e5:	5e                   	pop    %esi[m
[31m-801020e6:	5f                   	pop    %edi[m
[31m-801020e7:	5d                   	pop    %ebp[m
[31m-801020e8:	c3                   	ret    [m
[31m-801020e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-801020f0:	ba f7 01 00 00       	mov    $0x1f7,%edx[m
[31m-801020f5:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-801020f8:	ec                   	in     (%dx),%al[m
[31m-801020f9:	89 c1                	mov    %eax,%ecx[m
[31m-801020fb:	83 e1 c0             	and    $0xffffffc0,%ecx[m
[31m-801020fe:	80 f9 40             	cmp    $0x40,%cl[m
[31m-80102101:	75 f5                	jne    801020f8 <ideintr+0x78>[m
[31m-80102103:	a8 21                	test   $0x21,%al[m
[31m-80102105:	75 ab                	jne    801020b2 <ideintr+0x32>[m
[31m-80102107:	8d 7b 5c             	lea    0x5c(%ebx),%edi[m
[31m-8010210a:	b9 80 00 00 00       	mov    $0x80,%ecx[m
[31m-8010210f:	ba f0 01 00 00       	mov    $0x1f0,%edx[m
[31m-80102114:	fc                   	cld    [m
[31m-80102115:	f3 6d                	rep insl (%dx),%es:(%edi)[m
[31m-80102117:	8b 33                	mov    (%ebx),%esi[m
[31m-80102119:	eb 97                	jmp    801020b2 <ideintr+0x32>[m
[31m-8010211b:	90                   	nop[m
[31m-8010211c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-[m
[31m-80102120 <iderw>:[m
[31m-80102120:	55                   	push   %ebp[m
[31m-80102121:	89 e5                	mov    %esp,%ebp[m
[31m-80102123:	53                   	push   %ebx[m
[31m-80102124:	83 ec 10             	sub    $0x10,%esp[m
[31m-80102127:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[31m-8010212a:	8d 43 0c             	lea    0xc(%ebx),%eax[m
[31m-8010212d:	50                   	push   %eax[m
[31m-8010212e:	e8 3d 21 00 00       	call   80104270 <holdingsleep>[m
[31m-80102133:	83 c4 10             	add    $0x10,%esp[m
[31m-80102136:	85 c0                	test   %eax,%eax[m
[31m-80102138:	0f 84 ad 00 00 00    	je     801021eb <iderw+0xcb>[m
[31m-8010213e:	8b 03                	mov    (%ebx),%eax[m
[31m-80102140:	83 e0 06             	and    $0x6,%eax[m
[31m-80102143:	83 f8 02             	cmp    $0x2,%eax[m
[31m-80102146:	0f 84 b9 00 00 00    	je     80102205 <iderw+0xe5>[m
[31m-8010214c:	8b 53 04             	mov    0x4(%ebx),%edx[m
[31m-8010214f:	85 d2                	test   %edx,%edx[m
[31m-80102151:	74 0d                	je     80102160 <iderw+0x40>[m
[31m-80102153:	a1 60 a5 10 80       	mov    0x8010a560,%eax[m
[31m-80102158:	85 c0                	test   %eax,%eax[m
[31m-8010215a:	0f 84 98 00 00 00    	je     801021f8 <iderw+0xd8>[m
[31m-80102160:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80102163:	68 80 a5 10 80       	push   $0x8010a580[m
[31m-80102168:	e8 53 21 00 00       	call   801042c0 <acquire>[m
[31m-8010216d:	8b 15 64 a5 10 80    	mov    0x8010a564,%edx[m
[31m-80102173:	83 c4 10             	add    $0x10,%esp[m
[31m-80102176:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)[m
[31m-8010217d:	85 d2                	test   %edx,%edx[m
[31m-8010217f:	75 09                	jne    8010218a <iderw+0x6a>[m
[31m-80102181:	eb 58                	jmp    801021db <iderw+0xbb>[m
[31m-80102183:	90                   	nop[m
[31m-80102184:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80102188:	89 c2                	mov    %eax,%edx[m
[31m-8010218a:	8b 42 58             	mov    0x58(%edx),%eax[m
[31m-8010218d:	85 c0                	test   %eax,%eax[m
[31m-8010218f:	75 f7                	jne    80102188 <iderw+0x68>[m
[31m-80102191:	83 c2 58             	add    $0x58,%edx[m
[31m-80102194:	89 1a                	mov    %ebx,(%edx)[m
[31m-80102196:	3b 1d 64 a5 10 80    	cmp    0x8010a564,%ebx[m
[31m-8010219c:	74 44                	je     801021e2 <iderw+0xc2>[m
[31m-8010219e:	8b 03                	mov    (%ebx),%eax[m
[31m-801021a0:	83 e0 06             	and    $0x6,%eax[m
[31m-801021a3:	83 f8 02             	cmp    $0x2,%eax[m
[31m-801021a6:	74 23                	je     801021cb <iderw+0xab>[m
[31m-801021a8:	90                   	nop[m
[31m-801021a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-801021b0:	83 ec 08             	sub    $0x8,%esp[m
[31m-801021b3:	68 80 a5 10 80       	push   $0x8010a580[m
[31m-801021b8:	53                   	push   %ebx[m
[31m-801021b9:	e8 82 1c 00 00       	call   80103e40 <sleep>[m
[31m-801021be:	8b 03                	mov    (%ebx),%eax[m
[31m-801021c0:	83 c4 10             	add    $0x10,%esp[m
[31m-801021c3:	83 e0 06             	and    $0x6,%eax[m
[31m-801021c6:	83 f8 02             	cmp    $0x2,%eax[m
[31m-801021c9:	75 e5                	jne    801021b0 <iderw+0x90>[m
[31m-801021cb:	c7 45 08 80 a5 10 80 	movl   $0x8010a580,0x8(%ebp)[m
[31m-801021d2:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[31m-801021d5:	c9                   	leave  [m
[31m-801021d6:	e9 c5 22 00 00       	jmp    801044a0 <release>[m
[31m-801021db:	ba 64 a5 10 80       	mov    $0x8010a564,%edx[m
[31m-801021e0:	eb b2                	jmp    80102194 <iderw+0x74>[m
[31m-801021e2:	89 d8                	mov    %ebx,%eax[m
[31m-801021e4:	e8 37 fd ff ff       	call   80101f20 <idestart>[m
[31m-801021e9:	eb b3                	jmp    8010219e <iderw+0x7e>[m
[31m-801021eb:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801021ee:	68 96 71 10 80       	push   $0x80107196[m
[31m-801021f3:	e8 78 e1 ff ff       	call   80100370 <panic>[m
[31m-801021f8:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801021fb:	68 c1 71 10 80       	push   $0x801071c1[m
[31m-80102200:	e8 6b e1 ff ff       	call   80100370 <panic>[m
[31m-80102205:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80102208:	68 ac 71 10 80       	push   $0x801071ac[m
[31m-8010220d:	e8 5e e1 ff ff       	call   80100370 <panic>[m
[31m-80102212:	66 90                	xchg   %ax,%ax[m
[31m-80102214:	66 90                	xchg   %ax,%ax[m
[31m-80102216:	66 90                	xchg   %ax,%ax[m
[31m-80102218:	66 90                	xchg   %ax,%ax[m
[31m-8010221a:	66 90                	xchg   %ax,%ax[m
[31m-8010221c:	66 90                	xchg   %ax,%ax[m
[31m-8010221e:	66 90                	xchg   %ax,%ax[m
[31m-[m
[31m-80102220 <ioapicinit>:[m
[31m-80102220:	a1 84 27 11 80       	mov    0x80112784,%eax[m
[31m-80102225:	85 c0                	test   %eax,%eax[m
[31m-80102227:	0f 84 a8 00 00 00    	je     801022d5 <ioapicinit+0xb5>[m
[31m-8010222d:	55                   	push   %ebp[m
[31m-8010222e:	c7 05 54 26 11 80 00 	movl   $0xfec00000,0x80112654[m
[31m-80102235:	00 c0 fe [m
[31m-80102238:	89 e5                	mov    %esp,%ebp[m
[31m-8010223a:	56                   	push   %esi[m
[31m-8010223b:	53                   	push   %ebx[m
[31m-8010223c:	c7 05 00 00 c0 fe 01 	movl   $0x1,0xfec00000[m
[31m-80102243:	00 00 00 [m
[31m-80102246:	8b 15 54 26 11 80    	mov    0x80112654,%edx[m
[31m-8010224c:	8b 72 10             	mov    0x10(%edx),%esi[m
[31m-8010224f:	c7 02 00 00 00 00    	movl   $0x0,(%edx)[m
[31m-80102255:	8b 0d 54 26 11 80    	mov    0x80112654,%ecx[m
[31m-8010225b:	0f b6 15 80 27 11 80 	movzbl 0x80112780,%edx[m
[31m-80102262:	89 f0                	mov    %esi,%eax[m
[31m-80102264:	c1 e8 10             	shr    $0x10,%eax[m
[31m-80102267:	0f b6 f0             	movzbl %al,%esi[m
[31m-8010226a:	8b 41 10             	mov    0x10(%ecx),%eax[m
[31m-8010226d:	c1 e8 18             	shr    $0x18,%eax[m
[31m-80102270:	39 d0                	cmp    %edx,%eax[m
[31m-80102272:	74 16                	je     8010228a <ioapicinit+0x6a>[m
[31m-80102274:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80102277:	68 e0 71 10 80       	push   $0x801071e0[m
[31m-8010227c:	e8 df e3 ff ff       	call   80100660 <cprintf>[m
[31m-80102281:	8b 0d 54 26 11 80    	mov    0x80112654,%ecx[m
[31m-80102287:	83 c4 10             	add    $0x10,%esp[m
[31m-8010228a:	83 c6 21             	add    $0x21,%esi[m
[31m-8010228d:	ba 10 00 00 00       	mov    $0x10,%edx[m
[31m-80102292:	b8 20 00 00 00       	mov    $0x20,%eax[m
[31m-80102297:	89 f6                	mov    %esi,%esi[m
[31m-80102299:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-801022a0:	89 11                	mov    %edx,(%ecx)[m
[31m-801022a2:	8b 0d 54 26 11 80    	mov    0x80112654,%ecx[m
[31m-801022a8:	89 c3                	mov    %eax,%ebx[m
[31m-801022aa:	81 cb 00 00 01 00    	or     $0x10000,%ebx[m
[31m-801022b0:	83 c0 01             	add    $0x1,%eax[m
[31m-801022b3:	89 59 10             	mov    %ebx,0x10(%ecx)[m
[31m-801022b6:	8d 5a 01             	lea    0x1(%edx),%ebx[m
[31m-801022b9:	83 c2 02             	add    $0x2,%edx[m
[31m-801022bc:	39 f0                	cmp    %esi,%eax[m
[31m-801022be:	89 19                	mov    %ebx,(%ecx)[m
[31m-801022c0:	8b 0d 54 26 11 80    	mov    0x80112654,%ecx[m
[31m-801022c6:	c7 41 10 00 00 00 00 	movl   $0x0,0x10(%ecx)[m
[31m-801022cd:	75 d1                	jne    801022a0 <ioapicinit+0x80>[m
[31m-801022cf:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m-801022d2:	5b                   	pop    %ebx[m
[31m-801022d3:	5e                   	pop    %esi[m
[31m-801022d4:	5d                   	pop    %ebp[m
[31m-801022d5:	f3 c3                	repz ret [m
[31m-801022d7:	89 f6                	mov    %esi,%esi[m
[31m-801022d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-801022e0 <ioapicenable>:[m
[31m-801022e0:	8b 15 84 27 11 80    	mov    0x80112784,%edx[m
[31m-801022e6:	55                   	push   %ebp[m
[31m-801022e7:	89 e5                	mov    %esp,%ebp[m
[31m-801022e9:	85 d2                	test   %edx,%edx[m
[31m-801022eb:	8b 45 08             	mov    0x8(%ebp),%eax[m
[31m-801022ee:	74 2b                	je     8010231b <ioapicenable+0x3b>[m
[31m-801022f0:	8b 0d 54 26 11 80    	mov    0x80112654,%ecx[m
[31m-801022f6:	8d 50 20             	lea    0x20(%eax),%edx[m
[31m-801022f9:	8d 44 00 10          	lea    0x10(%eax,%eax,1),%eax[m
[31m-801022fd:	89 01                	mov    %eax,(%ecx)[m
[31m-801022ff:	8b 0d 54 26 11 80    	mov    0x80112654,%ecx[m
[31m-80102305:	83 c0 01             	add    $0x1,%eax[m
[31m-80102308:	89 51 10             	mov    %edx,0x10(%ecx)[m
[31m-8010230b:	8b 55 0c             	mov    0xc(%ebp),%edx[m
[31m-8010230e:	89 01                	mov    %eax,(%ecx)[m
[31m-80102310:	a1 54 26 11 80       	mov    0x80112654,%eax[m
[31m-80102315:	c1 e2 18             	shl    $0x18,%edx[m
[31m-80102318:	89 50 10             	mov    %edx,0x10(%eax)[m
[31m-8010231b:	5d                   	pop    %ebp[m
[31m-8010231c:	c3                   	ret    [m
[31m-8010231d:	66 90                	xchg   %ax,%ax[m
[31m-8010231f:	90                   	nop[m
[31m-[m
[31m-80102320 <kfree>:[m
[31m-80102320:	55                   	push   %ebp[m
[31m-80102321:	89 e5                	mov    %esp,%ebp[m
[31m-80102323:	53                   	push   %ebx[m
[31m-80102324:	83 ec 04             	sub    $0x4,%esp[m
[31m-80102327:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[31m-8010232a:	f7 c3 ff 0f 00 00    	test   $0xfff,%ebx[m
[31m-80102330:	75 70                	jne    801023a2 <kfree+0x82>[m
[31m-80102332:	81 fb 28 55 11 80    	cmp    $0x80115528,%ebx[m
[31m-80102338:	72 68                	jb     801023a2 <kfree+0x82>[m
[31m-8010233a:	8d 83 00 00 00 80    	lea    -0x80000000(%ebx),%eax[m
[31m-80102340:	3d ff ff ff 0d       	cmp    $0xdffffff,%eax[m
[31m-80102345:	77 5b                	ja     801023a2 <kfree+0x82>[m
[31m-80102347:	83 ec 04             	sub    $0x4,%esp[m
[31m-8010234a:	68 00 10 00 00       	push   $0x1000[m
[31m-8010234f:	6a 01                	push   $0x1[m
[31m-80102351:	53                   	push   %ebx[m
[31m-80102352:	e8 99 21 00 00       	call   801044f0 <memset>[m
[31m-80102357:	8b 15 94 26 11 80    	mov    0x80112694,%edx[m
[31m-8010235d:	83 c4 10             	add    $0x10,%esp[m
[31m-80102360:	85 d2                	test   %edx,%edx[m
[31m-80102362:	75 2c                	jne    80102390 <kfree+0x70>[m
[31m-80102364:	a1 98 26 11 80       	mov    0x80112698,%eax[m
[31m-80102369:	89 03                	mov    %eax,(%ebx)[m
[31m-8010236b:	a1 94 26 11 80       	mov    0x80112694,%eax[m
[31m-80102370:	89 1d 98 26 11 80    	mov    %ebx,0x80112698[m
[31m-80102376:	85 c0                	test   %eax,%eax[m
[31m-80102378:	75 06                	jne    80102380 <kfree+0x60>[m
[31m-8010237a:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[31m-8010237d:	c9                   	leave  [m
[31m-8010237e:	c3                   	ret    [m
[31m-8010237f:	90                   	nop[m
[31m-80102380:	c7 45 08 60 26 11 80 	movl   $0x80112660,0x8(%ebp)[m
[31m-80102387:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[31m-8010238a:	c9                   	leave  [m
[31m-8010238b:	e9 10 21 00 00       	jmp    801044a0 <release>[m
[31m-80102390:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80102393:	68 60 26 11 80       	push   $0x80112660[m
[31m-80102398:	e8 23 1f 00 00       	call   801042c0 <acquire>[m
[31m-8010239d:	83 c4 10             	add    $0x10,%esp[m
[31m-801023a0:	eb c2                	jmp    80102364 <kfree+0x44>[m
[31m-801023a2:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801023a5:	68 12 72 10 80       	push   $0x80107212[m
[31m-801023aa:	e8 c1 df ff ff       	call   80100370 <panic>[m
[31m-801023af:	90                   	nop[m
[31m-[m
[31m-801023b0 <freerange>:[m
[31m-801023b0:	55                   	push   %ebp[m
[31m-801023b1:	89 e5                	mov    %esp,%ebp[m
[31m-801023b3:	56                   	push   %esi[m
[31m-801023b4:	53                   	push   %ebx[m
[31m-801023b5:	8b 45 08             	mov    0x8(%ebp),%eax[m
[31m-801023b8:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[31m-801023bb:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx[m
[31m-801023c1:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx[m
[31m-801023c7:	81 c3 00 10 00 00    	add    $0x1000,%ebx[m
[31m-801023cd:	39 de                	cmp    %ebx,%esi[m
[31m-801023cf:	72 23                	jb     801023f4 <freerange+0x44>[m
[31m-801023d1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-801023d8:	8d 83 00 f0 ff ff    	lea    -0x1000(%ebx),%eax[m
[31m-801023de:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801023e1:	81 c3 00 10 00 00    	add    $0x1000,%ebx[m
[31m-801023e7:	50                   	push   %eax[m
[31m-801023e8:	e8 33 ff ff ff       	call   80102320 <kfree>[m
[31m-801023ed:	83 c4 10             	add    $0x10,%esp[m
[31m-801023f0:	39 f3                	cmp    %esi,%ebx[m
[31m-801023f2:	76 e4                	jbe    801023d8 <freerange+0x28>[m
[31m-801023f4:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m-801023f7:	5b                   	pop    %ebx[m
[31m-801023f8:	5e                   	pop    %esi[m
[31m-801023f9:	5d                   	pop    %ebp[m
[31m-801023fa:	c3                   	ret    [m
[31m-801023fb:	90                   	nop[m
[31m-801023fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-[m
[31m-80102400 <kinit1>:[m
[31m-80102400:	55                   	push   %ebp[m
[31m-80102401:	89 e5                	mov    %esp,%ebp[m
[31m-80102403:	56                   	push   %esi[m
[31m-80102404:	53                   	push   %ebx[m
[31m-80102405:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[31m-80102408:	83 ec 08             	sub    $0x8,%esp[m
[31m-8010240b:	68 18 72 10 80       	push   $0x80107218[m
[31m-80102410:	68 60 26 11 80       	push   $0x80112660[m
[31m-80102415:	e8 86 1e 00 00       	call   801042a0 <initlock>[m
[31m-8010241a:	8b 45 08             	mov    0x8(%ebp),%eax[m
[31m-8010241d:	83 c4 10             	add    $0x10,%esp[m
[31m-80102420:	c7 05 94 26 11 80 00 	movl   $0x0,0x80112694[m
[31m-80102427:	00 00 00 [m
[31m-8010242a:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx[m
[31m-80102430:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx[m
[31m-80102436:	81 c3 00 10 00 00    	add    $0x1000,%ebx[m
[31m-8010243c:	39 de                	cmp    %ebx,%esi[m
[31m-8010243e:	72 1c                	jb     8010245c <kinit1+0x5c>[m
[31m-80102440:	8d 83 00 f0 ff ff    	lea    -0x1000(%ebx),%eax[m
[31m-80102446:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80102449:	81 c3 00 10 00 00    	add    $0x1000,%ebx[m
[31m-8010244f:	50                   	push   %eax[m
[31m-80102450:	e8 cb fe ff ff       	call   80102320 <kfree>[m
[31m-80102455:	83 c4 10             	add    $0x10,%esp[m
[31m-80102458:	39 de                	cmp    %ebx,%esi[m
[31m-8010245a:	73 e4                	jae    80102440 <kinit1+0x40>[m
[31m-8010245c:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m-8010245f:	5b                   	pop    %ebx[m
[31m-80102460:	5e                   	pop    %esi[m
[31m-80102461:	5d                   	pop    %ebp[m
[31m-80102462:	c3                   	ret    [m
[31m-80102463:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-80102469:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-80102470 <kinit2>:[m
[31m-80102470:	55                   	push   %ebp[m
[31m-80102471:	89 e5                	mov    %esp,%ebp[m
[31m-80102473:	56                   	push   %esi[m
[31m-80102474:	53                   	push   %ebx[m
[31m-80102475:	8b 45 08             	mov    0x8(%ebp),%eax[m
[31m-80102478:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[31m-8010247b:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx[m
[31m-80102481:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx[m
[31m-80102487:	81 c3 00 10 00 00    	add    $0x1000,%ebx[m
[31m-8010248d:	39 de                	cmp    %ebx,%esi[m
[31m-8010248f:	72 23                	jb     801024b4 <kinit2+0x44>[m
[31m-80102491:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80102498:	8d 83 00 f0 ff ff    	lea    -0x1000(%ebx),%eax[m
[31m-8010249e:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801024a1:	81 c3 00 10 00 00    	add    $0x1000,%ebx[m
[31m-801024a7:	50                   	push   %eax[m
[31m-801024a8:	e8 73 fe ff ff       	call   80102320 <kfree>[m
[31m-801024ad:	83 c4 10             	add    $0x10,%esp[m
[31m-801024b0:	39 de                	cmp    %ebx,%esi[m
[31m-801024b2:	73 e4                	jae    80102498 <kinit2+0x28>[m
[31m-801024b4:	c7 05 94 26 11 80 01 	movl   $0x1,0x80112694[m
[31m-801024bb:	00 00 00 [m
[31m-801024be:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m-801024c1:	5b                   	pop    %ebx[m
[31m-801024c2:	5e                   	pop    %esi[m
[31m-801024c3:	5d                   	pop    %ebp[m
[31m-801024c4:	c3                   	ret    [m
[31m-801024c5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-801024c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-801024d0 <kalloc>:[m
[31m-801024d0:	55                   	push   %ebp[m
[31m-801024d1:	89 e5                	mov    %esp,%ebp[m
[31m-801024d3:	53                   	push   %ebx[m
[31m-801024d4:	83 ec 04             	sub    $0x4,%esp[m
[31m-801024d7:	a1 94 26 11 80       	mov    0x80112694,%eax[m
[31m-801024dc:	85 c0                	test   %eax,%eax[m
[31m-801024de:	75 30                	jne    80102510 <kalloc+0x40>[m
[31m-801024e0:	8b 1d 98 26 11 80    	mov    0x80112698,%ebx[m
[31m-801024e6:	85 db                	test   %ebx,%ebx[m
[31m-801024e8:	74 1c                	je     80102506 <kalloc+0x36>[m
[31m-801024ea:	8b 13                	mov    (%ebx),%edx[m
[31m-801024ec:	89 15 98 26 11 80    	mov    %edx,0x80112698[m
[31m-801024f2:	85 c0                	test   %eax,%eax[m
[31m-801024f4:	74 10                	je     80102506 <kalloc+0x36>[m
[31m-801024f6:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801024f9:	68 60 26 11 80       	push   $0x80112660[m
[31m-801024fe:	e8 9d 1f 00 00       	call   801044a0 <release>[m
[31m-80102503:	83 c4 10             	add    $0x10,%esp[m
[31m-80102506:	89 d8                	mov    %ebx,%eax[m
[31m-80102508:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[31m-8010250b:	c9                   	leave  [m
[31m-8010250c:	c3                   	ret    [m
[31m-8010250d:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-80102510:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80102513:	68 60 26 11 80       	push   $0x80112660[m
[31m-80102518:	e8 a3 1d 00 00       	call   801042c0 <acquire>[m
[31m-8010251d:	8b 1d 98 26 11 80    	mov    0x80112698,%ebx[m
[31m-80102523:	83 c4 10             	add    $0x10,%esp[m
[31m-80102526:	a1 94 26 11 80       	mov    0x80112694,%eax[m
[31m-8010252b:	85 db                	test   %ebx,%ebx[m
[31m-8010252d:	75 bb                	jne    801024ea <kalloc+0x1a>[m
[31m-8010252f:	eb c1                	jmp    801024f2 <kalloc+0x22>[m
[31m-80102531:	66 90                	xchg   %ax,%ax[m
[31m-80102533:	66 90                	xchg   %ax,%ax[m
[31m-80102535:	66 90                	xchg   %ax,%ax[m
[31m-80102537:	66 90                	xchg   %ax,%ax[m
[31m-80102539:	66 90                	xchg   %ax,%ax[m
[31m-8010253b:	66 90                	xchg   %ax,%ax[m
[31m-8010253d:	66 90                	xchg   %ax,%ax[m
[31m-8010253f:	90                   	nop[m
[31m-[m
[31m-80102540 <kbdgetc>:[m
[31m-80102540:	55                   	push   %ebp[m
[31m-80102541:	ba 64 00 00 00       	mov    $0x64,%edx[m
[31m-80102546:	89 e5                	mov    %esp,%ebp[m
[31m-80102548:	ec                   	in     (%dx),%al[m
[31m-80102549:	a8 01                	test   $0x1,%al[m
[31m-8010254b:	0f 84 af 00 00 00    	je     80102600 <kbdgetc+0xc0>[m
[31m-80102551:	ba 60 00 00 00       	mov    $0x60,%edx[m
[31m-80102556:	ec                   	in     (%dx),%al[m
[31m-80102557:	0f b6 d0             	movzbl %al,%edx[m
[31m-8010255a:	81 fa e0 00 00 00    	cmp    $0xe0,%edx[m
[31m-80102560:	74 7e                	je     801025e0 <kbdgetc+0xa0>[m
[31m-80102562:	84 c0                	test   %al,%al[m
[31m-80102564:	8b 0d b4 a5 10 80    	mov    0x8010a5b4,%ecx[m
[31m-8010256a:	79 24                	jns    80102590 <kbdgetc+0x50>[m
[31m-8010256c:	f6 c1 40             	test   $0x40,%cl[m
[31m-8010256f:	75 05                	jne    80102576 <kbdgetc+0x36>[m
[31m-80102571:	89 c2                	mov    %eax,%edx[m
[31m-80102573:	83 e2 7f             	and    $0x7f,%edx[m
[31m-80102576:	0f b6 82 40 73 10 80 	movzbl -0x7fef8cc0(%edx),%eax[m
[31m-8010257d:	83 c8 40             	or     $0x40,%eax[m
[31m-80102580:	0f b6 c0             	movzbl %al,%eax[m
[31m-80102583:	f7 d0                	not    %eax[m
[31m-80102585:	21 c8                	and    %ecx,%eax[m
[31m-80102587:	a3 b4 a5 10 80       	mov    %eax,0x8010a5b4[m
[31m-8010258c:	31 c0                	xor    %eax,%eax[m
[31m-8010258e:	5d                   	pop    %ebp[m
[31m-8010258f:	c3                   	ret    [m
[31m-80102590:	f6 c1 40             	test   $0x40,%cl[m
[31m-80102593:	74 09                	je     8010259e <kbdgetc+0x5e>[m
[31m-80102595:	83 c8 80             	or     $0xffffff80,%eax[m
[31m-80102598:	83 e1 bf             	and    $0xffffffbf,%ecx[m
[31m-8010259b:	0f b6 d0             	movzbl %al,%edx[m
[31m-8010259e:	0f b6 82 40 73 10 80 	movzbl -0x7fef8cc0(%edx),%eax[m
[31m-801025a5:	09 c1                	or     %eax,%ecx[m
[31m-801025a7:	0f b6 82 40 72 10 80 	movzbl -0x7fef8dc0(%edx),%eax[m
[31m-801025ae:	31 c1                	xor    %eax,%ecx[m
[31m-801025b0:	89 c8                	mov    %ecx,%eax[m
[31m-801025b2:	89 0d b4 a5 10 80    	mov    %ecx,0x8010a5b4[m
[31m-801025b8:	83 e0 03             	and    $0x3,%eax[m
[31m-801025bb:	83 e1 08             	and    $0x8,%ecx[m
[31m-801025be:	8b 04 85 20 72 10 80 	mov    -0x7fef8de0(,%eax,4),%eax[m
[31m-801025c5:	0f b6 04 10          	movzbl (%eax,%edx,1),%eax[m
[31m-801025c9:	74 c3                	je     8010258e <kbdgetc+0x4e>[m
[31m-801025cb:	8d 50 9f             	lea    -0x61(%eax),%edx[m
[31m-801025ce:	83 fa 19             	cmp    $0x19,%edx[m
[31m-801025d1:	77 1d                	ja     801025f0 <kbdgetc+0xb0>[m
[31m-801025d3:	83 e8 20             	sub    $0x20,%eax[m
[31m-801025d6:	5d                   	pop    %ebp[m
[31m-801025d7:	c3                   	ret    [m
[31m-801025d8:	90                   	nop[m
[31m-801025d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-801025e0:	31 c0                	xor    %eax,%eax[m
[31m-801025e2:	83 0d b4 a5 10 80 40 	orl    $0x40,0x8010a5b4[m
[31m-801025e9:	5d                   	pop    %ebp[m
[31m-801025ea:	c3                   	ret    [m
[31m-801025eb:	90                   	nop[m
[31m-801025ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-801025f0:	8d 48 bf             	lea    -0x41(%eax),%ecx[m
[31m-801025f3:	8d 50 20             	lea    0x20(%eax),%edx[m
[31m-801025f6:	5d                   	pop    %ebp[m
[31m-801025f7:	83 f9 19             	cmp    $0x19,%ecx[m
[31m-801025fa:	0f 46 c2             	cmovbe %edx,%eax[m
[31m-801025fd:	c3                   	ret    [m
[31m-801025fe:	66 90                	xchg   %ax,%ax[m
[31m-80102600:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[31m-80102605:	5d                   	pop    %ebp[m
[31m-80102606:	c3                   	ret    [m
[31m-80102607:	89 f6                	mov    %esi,%esi[m
[31m-80102609:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-80102610 <kbdintr>:[m
[31m-80102610:	55                   	push   %ebp[m
[31m-80102611:	89 e5                	mov    %esp,%ebp[m
[31m-80102613:	83 ec 14             	sub    $0x14,%esp[m
[31m-80102616:	68 40 25 10 80       	push   $0x80102540[m
[31m-8010261b:	e8 d0 e1 ff ff       	call   801007f0 <consoleintr>[m
[31m-80102620:	83 c4 10             	add    $0x10,%esp[m
[31m-80102623:	c9                   	leave  [m
[31m-80102624:	c3                   	ret    [m
[31m-80102625:	66 90                	xchg   %ax,%ax[m
[31m-80102627:	66 90                	xchg   %ax,%ax[m
[31m-80102629:	66 90                	xchg   %ax,%ax[m
[31m-8010262b:	66 90                	xchg   %ax,%ax[m
[31m-8010262d:	66 90                	xchg   %ax,%ax[m
[31m-8010262f:	90                   	nop[m
[31m-[m
[31m-80102630 <lapicinit>:[m
[31m-80102630:	a1 9c 26 11 80       	mov    0x8011269c,%eax[m
[31m-80102635:	55                   	push   %ebp[m
[31m-80102636:	89 e5                	mov    %esp,%ebp[m
[31m-80102638:	85 c0                	test   %eax,%eax[m
[31m-8010263a:	0f 84 c8 00 00 00    	je     80102708 <lapicinit+0xd8>[m
[31m-80102640:	c7 80 f0 00 00 00 3f 	movl   $0x13f,0xf0(%eax)[m
[31m-80102647:	01 00 00 [m
[31m-8010264a:	8b 50 20             	mov    0x20(%eax),%edx[m
[31m-8010264d:	c7 80 e0 03 00 00 0b 	movl   $0xb,0x3e0(%eax)[m
[31m-80102654:	00 00 00 [m
[31m-80102657:	8b 50 20             	mov    0x20(%eax),%edx[m
[31m-8010265a:	c7 80 20 03 00 00 20 	movl   $0x20020,0x320(%eax)[m
[31m-80102661:	00 02 00 [m
[31m-80102664:	8b 50 20             	mov    0x20(%eax),%edx[m
[31m-80102667:	c7 80 80 03 00 00 80 	movl   $0x989680,0x380(%eax)[m
[31m-8010266e:	96 98 00 [m
[31m-80102671:	8b 50 20             	mov    0x20(%eax),%edx[m
[31m-80102674:	c7 80 50 03 00 00 00 	movl   $0x10000,0x350(%eax)[m
[31m-8010267b:	00 01 00 [m
[31m-8010267e:	8b 50 20             	mov    0x20(%eax),%edx[m
[31m-80102681:	c7 80 60 03 00 00 00 	movl   $0x10000,0x360(%eax)[m
[31m-80102688:	00 01 00 [m
[31m-8010268b:	8b 50 20             	mov    0x20(%eax),%edx[m
[31m-8010268e:	8b 50 30             	mov    0x30(%eax),%edx[m
[31m-80102691:	c1 ea 10             	shr    $0x10,%edx[m
[31m-80102694:	80 fa 03             	cmp    $0x3,%dl[m
[31m-80102697:	77 77                	ja     80102710 <lapicinit+0xe0>[m
[31m-80102699:	c7 80 70 03 00 00 33 	movl   $0x33,0x370(%eax)[m
[31m-801026a0:	00 00 00 [m
[31m-801026a3:	8b 50 20             	mov    0x20(%eax),%edx[m
[31m-801026a6:	c7 80 80 02 00 00 00 	movl   $0x0,0x280(%eax)[m
[31m-801026ad:	00 00 00 [m
[31m-801026b0:	8b 50 20             	mov    0x20(%eax),%edx[m
[31m-801026b3:	c7 80 80 02 00 00 00 	movl   $0x0,0x280(%eax)[m
[31m-801026ba:	00 00 00 [m
[31m-801026bd:	8b 50 20             	mov    0x20(%eax),%edx[m
[31m-801026c0:	c7 80 b0 00 00 00 00 	movl   $0x0,0xb0(%eax)[m
[31m-801026c7:	00 00 00 [m
[31m-801026ca:	8b 50 20             	mov    0x20(%eax),%edx[m
[31m-801026cd:	c7 80 10 03 00 00 00 	movl   $0x0,0x310(%eax)[m
[31m-801026d4:	00 00 00 [m
[31m-801026d7:	8b 50 20             	mov    0x20(%eax),%edx[m
[31m-801026da:	c7 80 00 03 00 00 00 	movl   $0x88500,0x300(%eax)[m
[31m-801026e1:	85 08 00 [m
[31m-801026e4:	8b 50 20             	mov    0x20(%eax),%edx[m
[31m-801026e7:	89 f6                	mov    %esi,%esi[m
[31m-801026e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-801026f0:	8b 90 00 03 00 00    	mov    0x300(%eax),%edx[m
[31m-801026f6:	80 e6 10             	and    $0x10,%dh[m
[31m-801026f9:	75 f5                	jne    801026f0 <lapicinit+0xc0>[m
[31m-801026fb:	c7 80 80 00 00 00 00 	movl   $0x0,0x80(%eax)[m
[31m-80102702:	00 00 00 [m
[31m-80102705:	8b 40 20             	mov    0x20(%eax),%eax[m
[31m-80102708:	5d                   	pop    %ebp[m
[31m-80102709:	c3                   	ret    [m
[31m-8010270a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-80102710:	c7 80 40 03 00 00 00 	movl   $0x10000,0x340(%eax)[m
[31m-80102717:	00 01 00 [m
[31m-8010271a:	8b 50 20             	mov    0x20(%eax),%edx[m
[31m-8010271d:	e9 77 ff ff ff       	jmp    80102699 <lapicinit+0x69>[m
[31m-80102722:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80102729:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-80102730 <cpunum>:[m
[31m-80102730:	55                   	push   %ebp[m
[31m-80102731:	89 e5                	mov    %esp,%ebp[m
[31m-80102733:	56                   	push   %esi[m
[31m-80102734:	53                   	push   %ebx[m
[31m-80102735:	9c                   	pushf  [m
[31m-80102736:	58                   	pop    %eax[m
[31m-80102737:	f6 c4 02             	test   $0x2,%ah[m
[31m-8010273a:	74 12                	je     8010274e <cpunum+0x1e>[m
[31m-8010273c:	a1 b8 a5 10 80       	mov    0x8010a5b8,%eax[m
[31m-80102741:	8d 50 01             	lea    0x1(%eax),%edx[m
[31m-80102744:	85 c0                	test   %eax,%eax[m
[31m-80102746:	89 15 b8 a5 10 80    	mov    %edx,0x8010a5b8[m
[31m-8010274c:	74 4d                	je     8010279b <cpunum+0x6b>[m
[31m-8010274e:	a1 9c 26 11 80       	mov    0x8011269c,%eax[m
[31m-80102753:	85 c0                	test   %eax,%eax[m
[31m-80102755:	74 60                	je     801027b7 <cpunum+0x87>[m
[31m-80102757:	8b 58 20             	mov    0x20(%eax),%ebx[m
[31m-8010275a:	8b 35 80 2d 11 80    	mov    0x80112d80,%esi[m
[31m-80102760:	c1 eb 18             	shr    $0x18,%ebx[m
[31m-80102763:	85 f6                	test   %esi,%esi[m
[31m-80102765:	7e 59                	jle    801027c0 <cpunum+0x90>[m
[31m-80102767:	0f b6 05 a0 27 11 80 	movzbl 0x801127a0,%eax[m
[31m-8010276e:	39 c3                	cmp    %eax,%ebx[m
[31m-80102770:	74 45                	je     801027b7 <cpunum+0x87>[m
[31m-80102772:	ba 5c 28 11 80       	mov    $0x8011285c,%edx[m
[31m-80102777:	31 c0                	xor    %eax,%eax[m
[31m-80102779:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80102780:	83 c0 01             	add    $0x1,%eax[m
[31m-80102783:	39 f0                	cmp    %esi,%eax[m
[31m-80102785:	74 39                	je     801027c0 <cpunum+0x90>[m
[31m-80102787:	0f b6 0a             	movzbl (%edx),%ecx[m
[31m-8010278a:	81 c2 bc 00 00 00    	add    $0xbc,%edx[m
[31m-80102790:	39 cb                	cmp    %ecx,%ebx[m
[31m-80102792:	75 ec                	jne    80102780 <cpunum+0x50>[m
[31m-80102794:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m-80102797:	5b                   	pop    %ebx[m
[31m-80102798:	5e                   	pop    %esi[m
[31m-80102799:	5d                   	pop    %ebp[m
[31m-8010279a:	c3                   	ret    [m
[31m-8010279b:	83 ec 08             	sub    $0x8,%esp[m
[31m-8010279e:	ff 75 04             	pushl  0x4(%ebp)[m
[31m-801027a1:	68 40 74 10 80       	push   $0x80107440[m
[31m-801027a6:	e8 b5 de ff ff       	call   80100660 <cprintf>[m
[31m-801027ab:	a1 9c 26 11 80       	mov    0x8011269c,%eax[m
[31m-801027b0:	83 c4 10             	add    $0x10,%esp[m
[31m-801027b3:	85 c0                	test   %eax,%eax[m
[31m-801027b5:	75 a0                	jne    80102757 <cpunum+0x27>[m
[31m-801027b7:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m-801027ba:	31 c0                	xor    %eax,%eax[m
[31m-801027bc:	5b                   	pop    %ebx[m
[31m-801027bd:	5e                   	pop    %esi[m
[31m-801027be:	5d                   	pop    %ebp[m
[31m-801027bf:	c3                   	ret    [m
[31m-801027c0:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801027c3:	68 6c 74 10 80       	push   $0x8010746c[m
[31m-801027c8:	e8 a3 db ff ff       	call   80100370 <panic>[m
[31m-801027cd:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-[m
[31m-801027d0 <lapiceoi>:[m
[31m-801027d0:	a1 9c 26 11 80       	mov    0x8011269c,%eax[m
[31m-801027d5:	55                   	push   %ebp[m
[31m-801027d6:	89 e5                	mov    %esp,%ebp[m
[31m-801027d8:	85 c0                	test   %eax,%eax[m
[31m-801027da:	74 0d                	je     801027e9 <lapiceoi+0x19>[m
[31m-801027dc:	c7 80 b0 00 00 00 00 	movl   $0x0,0xb0(%eax)[m
[31m-801027e3:	00 00 00 [m
[31m-801027e6:	8b 40 20             	mov    0x20(%eax),%eax[m
[31m-801027e9:	5d                   	pop    %ebp[m
[31m-801027ea:	c3                   	ret    [m
[31m-801027eb:	90                   	nop[m
[31m-801027ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-[m
[31m-801027f0 <microdelay>:[m
[31m-801027f0:	55                   	push   %ebp[m
[31m-801027f1:	89 e5                	mov    %esp,%ebp[m
[31m-801027f3:	5d                   	pop    %ebp[m
[31m-801027f4:	c3                   	ret    [m
[31m-801027f5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-801027f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-80102800 <lapicstartap>:[m
[31m-80102800:	55                   	push   %ebp[m
[31m-80102801:	ba 70 00 00 00       	mov    $0x70,%edx[m
[31m-80102806:	b8 0f 00 00 00       	mov    $0xf,%eax[m
[31m-8010280b:	89 e5                	mov    %esp,%ebp[m
[31m-8010280d:	53                   	push   %ebx[m
[31m-8010280e:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[31m-80102811:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[31m-80102814:	ee                   	out    %al,(%dx)[m
[31m-80102815:	ba 71 00 00 00       	mov    $0x71,%edx[m
[31m-8010281a:	b8 0a 00 00 00       	mov    $0xa,%eax[m
[31m-8010281f:	ee                   	out    %al,(%dx)[m
[31m-80102820:	31 c0                	xor    %eax,%eax[m
[31m-80102822:	c1 e3 18             	shl    $0x18,%ebx[m
[31m-80102825:	66 a3 67 04 00 80    	mov    %ax,0x80000467[m
[31m-8010282b:	89 c8                	mov    %ecx,%eax[m
[31m-8010282d:	c1 e9 0c             	shr    $0xc,%ecx[m
[31m-80102830:	c1 e8 04             	shr    $0x4,%eax[m
[31m-80102833:	89 da                	mov    %ebx,%edx[m
[31m-80102835:	80 cd 06             	or     $0x6,%ch[m
[31m-80102838:	66 a3 69 04 00 80    	mov    %ax,0x80000469[m
[31m-8010283e:	a1 9c 26 11 80       	mov    0x8011269c,%eax[m
[31m-80102843:	89 98 10 03 00 00    	mov    %ebx,0x310(%eax)[m
[31m-80102849:	8b 58 20             	mov    0x20(%eax),%ebx[m
[31m-8010284c:	c7 80 00 03 00 00 00 	movl   $0xc500,0x300(%eax)[m
[31m-80102853:	c5 00 00 [m
[31m-80102856:	8b 58 20             	mov    0x20(%eax),%ebx[m
[31m-80102859:	c7 80 00 03 00 00 00 	movl   $0x8500,0x300(%eax)[m
[31m-80102860:	85 00 00 [m
[31m-80102863:	8b 58 20             	mov    0x20(%eax),%ebx[m
[31m-80102866:	89 90 10 03 00 00    	mov    %edx,0x310(%eax)[m
[31m-8010286c:	8b 58 20             	mov    0x20(%eax),%ebx[m
[31m-8010286f:	89 88 00 03 00 00    	mov    %ecx,0x300(%eax)[m
[31m-80102875:	8b 58 20             	mov    0x20(%eax),%ebx[m
[31m-80102878:	89 90 10 03 00 00    	mov    %edx,0x310(%eax)[m
[31m-8010287e:	8b 50 20             	mov    0x20(%eax),%edx[m
[31m-80102881:	89 88 00 03 00 00    	mov    %ecx,0x300(%eax)[m
[31m-80102887:	8b 40 20             	mov    0x20(%eax),%eax[m
[31m-8010288a:	5b                   	pop    %ebx[m
[31m-8010288b:	5d                   	pop    %ebp[m
[31m-8010288c:	c3                   	ret    [m
[31m-8010288d:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-[m
[31m-80102890 <cmostime>:[m
[31m-80102890:	55                   	push   %ebp[m
[31m-80102891:	ba 70 00 00 00       	mov    $0x70,%edx[m
[31m-80102896:	b8 0b 00 00 00       	mov    $0xb,%eax[m
[31m-8010289b:	89 e5                	mov    %esp,%ebp[m
[31m-8010289d:	57                   	push   %edi[m
[31m-8010289e:	56                   	push   %esi[m
[31m-8010289f:	53                   	push   %ebx[m
[31m-801028a0:	83 ec 4c             	sub    $0x4c,%esp[m
[31m-801028a3:	ee                   	out    %al,(%dx)[m
[31m-801028a4:	ba 71 00 00 00       	mov    $0x71,%edx[m
[31m-801028a9:	ec                   	in     (%dx),%al[m
[31m-801028aa:	83 e0 04             	and    $0x4,%eax[m
[31m-801028ad:	8d 75 d0             	lea    -0x30(%ebp),%esi[m
[31m-801028b0:	31 db                	xor    %ebx,%ebx[m
[31m-801028b2:	88 45 b7             	mov    %al,-0x49(%ebp)[m
[31m-801028b5:	bf 70 00 00 00       	mov    $0x70,%edi[m
[31m-801028ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-801028c0:	89 d8                	mov    %ebx,%eax[m
[31m-801028c2:	89 fa                	mov    %edi,%edx[m
[31m-801028c4:	ee                   	out    %al,(%dx)[m
[31m-801028c5:	b9 71 00 00 00       	mov    $0x71,%ecx[m
[31m-801028ca:	89 ca                	mov    %ecx,%edx[m
[31m-801028cc:	ec                   	in     (%dx),%al[m
[31m-801028cd:	0f b6 c0             	movzbl %al,%eax[m
[31m-801028d0:	89 fa                	mov    %edi,%edx[m
[31m-801028d2:	89 45 b8             	mov    %eax,-0x48(%ebp)[m
[31m-801028d5:	b8 02 00 00 00       	mov    $0x2,%eax[m
[31m-801028da:	ee                   	out    %al,(%dx)[m
[31m-801028db:	89 ca                	mov    %ecx,%edx[m
[31m-801028dd:	ec                   	in     (%dx),%al[m
[31m-801028de:	0f b6 c0             	movzbl %al,%eax[m
[31m-801028e1:	89 fa                	mov    %edi,%edx[m
[31m-801028e3:	89 45 bc             	mov    %eax,-0x44(%ebp)[m
[31m-801028e6:	b8 04 00 00 00       	mov    $0x4,%eax[m
[31m-801028eb:	ee                   	out    %al,(%dx)[m
[31m-801028ec:	89 ca                	mov    %ecx,%edx[m
[31m-801028ee:	ec                   	in     (%dx),%al[m
[31m-801028ef:	0f b6 c0             	movzbl %al,%eax[m
[31m-801028f2:	89 fa                	mov    %edi,%edx[m
[31m-801028f4:	89 45 c0             	mov    %eax,-0x40(%ebp)[m
[31m-801028f7:	b8 07 00 00 00       	mov    $0x7,%eax[m
[31m-801028fc:	ee                   	out    %al,(%dx)[m
[31m-801028fd:	89 ca                	mov    %ecx,%edx[m
[31m-801028ff:	ec                   	in     (%dx),%al[m
[31m-80102900:	0f b6 c0             	movzbl %al,%eax[m
[31m-80102903:	89 fa                	mov    %edi,%edx[m
[31m-80102905:	89 45 c4             	mov    %eax,-0x3c(%ebp)[m
[31m-80102908:	b8 08 00 00 00       	mov    $0x8,%eax[m
[31m-8010290d:	ee                   	out    %al,(%dx)[m
[31m-8010290e:	89 ca                	mov    %ecx,%edx[m
[31m-80102910:	ec                   	in     (%dx),%al[m
[31m-80102911:	0f b6 c0             	movzbl %al,%eax[m
[31m-80102914:	89 fa                	mov    %edi,%edx[m
[31m-80102916:	89 45 c8             	mov    %eax,-0x38(%ebp)[m
[31m-80102919:	b8 09 00 00 00       	mov    $0x9,%eax[m
[31m-8010291e:	ee                   	out    %al,(%dx)[m
[31m-8010291f:	89 ca                	mov    %ecx,%edx[m
[31m-80102921:	ec                   	in     (%dx),%al[m
[31m-80102922:	0f b6 c0             	movzbl %al,%eax[m
[31m-80102925:	89 fa                	mov    %edi,%edx[m
[31m-80102927:	89 45 cc             	mov    %eax,-0x34(%ebp)[m
[31m-8010292a:	b8 0a 00 00 00       	mov    $0xa,%eax[m
[31m-8010292f:	ee                   	out    %al,(%dx)[m
[31m-80102930:	89 ca                	mov    %ecx,%edx[m
[31m-80102932:	ec                   	in     (%dx),%al[m
[31m-80102933:	84 c0                	test   %al,%al[m
[31m-80102935:	78 89                	js     801028c0 <cmostime+0x30>[m
[31m-80102937:	89 d8                	mov    %ebx,%eax[m
[31m-80102939:	89 fa                	mov    %edi,%edx[m
[31m-8010293b:	ee                   	out    %al,(%dx)[m
[31m-8010293c:	89 ca                	mov    %ecx,%edx[m
[31m-8010293e:	ec                   	in     (%dx),%al[m
[31m-8010293f:	0f b6 c0             	movzbl %al,%eax[m
[31m-80102942:	89 fa                	mov    %edi,%edx[m
[31m-80102944:	89 45 d0             	mov    %eax,-0x30(%ebp)[m
[31m-80102947:	b8 02 00 00 00       	mov    $0x2,%eax[m
[31m-8010294c:	ee                   	out    %al,(%dx)[m
[31m-8010294d:	89 ca                	mov    %ecx,%edx[m
[31m-8010294f:	ec                   	in     (%dx),%al[m
[31m-80102950:	0f b6 c0             	movzbl %al,%eax[m
[31m-80102953:	89 fa                	mov    %edi,%edx[m
[31m-80102955:	89 45 d4             	mov    %eax,-0x2c(%ebp)[m
[31m-80102958:	b8 04 00 00 00       	mov    $0x4,%eax[m
[31m-8010295d:	ee                   	out    %al,(%dx)[m
[31m-8010295e:	89 ca                	mov    %ecx,%edx[m
[31m-80102960:	ec                   	in     (%dx),%al[m
[31m-80102961:	0f b6 c0             	movzbl %al,%eax[m
[31m-80102964:	89 fa                	mov    %edi,%edx[m
[31m-80102966:	89 45 d8             	mov    %eax,-0x28(%ebp)[m
[31m-80102969:	b8 07 00 00 00       	mov    $0x7,%eax[m
[31m-8010296e:	ee                   	out    %al,(%dx)[m
[31m-8010296f:	89 ca                	mov    %ecx,%edx[m
[31m-80102971:	ec                   	in     (%dx),%al[m
[31m-80102972:	0f b6 c0             	movzbl %al,%eax[m
[31m-80102975:	89 fa                	mov    %edi,%edx[m
[31m-80102977:	89 45 dc             	mov    %eax,-0x24(%ebp)[m
[31m-8010297a:	b8 08 00 00 00       	mov    $0x8,%eax[m
[31m-8010297f:	ee                   	out    %al,(%dx)[m
[31m-80102980:	89 ca                	mov    %ecx,%edx[m
[31m-80102982:	ec                   	in     (%dx),%al[m
[31m-80102983:	0f b6 c0             	movzbl %al,%eax[m
[31m-80102986:	89 fa                	mov    %edi,%edx[m
[31m-80102988:	89 45 e0             	mov    %eax,-0x20(%ebp)[m
[31m-8010298b:	b8 09 00 00 00       	mov    $0x9,%eax[m
[31m-80102990:	ee                   	out    %al,(%dx)[m
[31m-80102991:	89 ca                	mov    %ecx,%edx[m
[31m-80102993:	ec                   	in     (%dx),%al[m
[31m-80102994:	0f b6 c0             	movzbl %al,%eax[m
[31m-80102997:	83 ec 04             	sub    $0x4,%esp[m
[31m-8010299a:	89 45 e4             	mov    %eax,-0x1c(%ebp)[m
[31m-8010299d:	8d 45 b8             	lea    -0x48(%ebp),%eax[m
[31m-801029a0:	6a 18                	push   $0x18[m
[31m-801029a2:	56                   	push   %esi[m
[31m-801029a3:	50                   	push   %eax[m
[31m-801029a4:	e8 97 1b 00 00       	call   80104540 <memcmp>[m
[31m-801029a9:	83 c4 10             	add    $0x10,%esp[m
[31m-801029ac:	85 c0                	test   %eax,%eax[m
[31m-801029ae:	0f 85 0c ff ff ff    	jne    801028c0 <cmostime+0x30>[m
[31m-801029b4:	80 7d b7 00          	cmpb   $0x0,-0x49(%ebp)[m
[31m-801029b8:	75 78                	jne    80102a32 <cmostime+0x1a2>[m
[31m-801029ba:	8b 45 b8             	mov    -0x48(%ebp),%eax[m
[31m-801029bd:	89 c2                	mov    %eax,%edx[m
[31m-801029bf:	83 e0 0f             	and    $0xf,%eax[m
[31m-801029c2:	c1 ea 04             	shr    $0x4,%edx[m
[31m-801029c5:	8d 14 92             	lea    (%edx,%edx,4),%edx[m
[31m-801029c8:	8d 04 50             	lea    (%eax,%edx,2),%eax[m
[31m-801029cb:	89 45 b8             	mov    %eax,-0x48(%ebp)[m
[31m-801029ce:	8b 45 bc             	mov    -0x44(%ebp),%eax[m
[31m-801029d1:	89 c2                	mov    %eax,%edx[m
[31m-801029d3:	83 e0 0f             	and    $0xf,%eax[m
[31m-801029d6:	c1 ea 04             	shr    $0x4,%edx[m
[31m-801029d9:	8d 14 92             	lea    (%edx,%edx,4),%edx[m
[31m-801029dc:	8d 04 50             	lea    (%eax,%edx,2),%eax[m
[31m-801029df:	89 45 bc             	mov    %eax,-0x44(%ebp)[m
[31m-801029e2:	8b 45 c0             	mov    -0x40(%ebp),%eax[m
[31m-801029e5:	89 c2                	mov    %eax,%edx[m
[31m-801029e7:	83 e0 0f             	and    $0xf,%eax[m
[31m-801029ea:	c1 ea 04             	shr    $0x4,%edx[m
[31m-801029ed:	8d 14 92             	lea    (%edx,%edx,4),%edx[m
[31m-801029f0:	8d 04 50             	lea    (%eax,%edx,2),%eax[m
[31m-801029f3:	89 45 c0             	mov    %eax,-0x40(%ebp)[m
[31m-801029f6:	8b 45 c4             	mov    -0x3c(%ebp),%eax[m
[31m-801029f9:	89 c2                	mov    %eax,%edx[m
[31m-801029fb:	83 e0 0f             	and    $0xf,%eax[m
[31m-801029fe:	c1 ea 04             	shr    $0x4,%edx[m
[31m-80102a01:	8d 14 92             	lea    (%edx,%edx,4),%edx[m
[31m-80102a04:	8d 04 50             	lea    (%eax,%edx,2),%eax[m
[31m-80102a07:	89 45 c4             	mov    %eax,-0x3c(%ebp)[m
[31m-80102a0a:	8b 45 c8             	mov    -0x38(%ebp),%eax[m
[31m-80102a0d:	89 c2                	mov    %eax,%edx[m
[31m-80102a0f:	83 e0 0f             	and    $0xf,%eax[m
[31m-80102a12:	c1 ea 04             	shr    $0x4,%edx[m
[31m-80102a15:	8d 14 92             	lea    (%edx,%edx,4),%edx[m
[31m-80102a18:	8d 04 50             	lea    (%eax,%edx,2),%eax[m
[31m-80102a1b:	89 45 c8             	mov    %eax,-0x38(%ebp)[m
[31m-80102a1e:	8b 45 cc             	mov    -0x34(%ebp),%eax[m
[31m-80102a21:	89 c2                	mov    %eax,%edx[m
[31m-80102a23:	83 e0 0f             	and    $0xf,%eax[m
[31m-80102a26:	c1 ea 04             	shr    $0x4,%edx[m
[31m-80102a29:	8d 14 92             	lea    (%edx,%edx,4),%edx[m
[31m-80102a2c:	8d 04 50             	lea    (%eax,%edx,2),%eax[m
[31m-80102a2f:	89 45 cc             	mov    %eax,-0x34(%ebp)[m
[31m-80102a32:	8b 75 08             	mov    0x8(%ebp),%esi[m
[31m-80102a35:	8b 45 b8             	mov    -0x48(%ebp),%eax[m
[31m-80102a38:	89 06                	mov    %eax,(%esi)[m
[31m-80102a3a:	8b 45 bc             	mov    -0x44(%ebp),%eax[m
[31m-80102a3d:	89 46 04             	mov    %eax,0x4(%esi)[m
[31m-80102a40:	8b 45 c0             	mov    -0x40(%ebp),%eax[m
[31m-80102a43:	89 46 08             	mov    %eax,0x8(%esi)[m
[31m-80102a46:	8b 45 c4             	mov    -0x3c(%ebp),%eax[m
[31m-80102a49:	89 46 0c             	mov    %eax,0xc(%esi)[m
[31m-80102a4c:	8b 45 c8             	mov    -0x38(%ebp),%eax[m
[31m-80102a4f:	89 46 10             	mov    %eax,0x10(%esi)[m
[31m-80102a52:	8b 45 cc             	mov    -0x34(%ebp),%eax[m
[31m-80102a55:	89 46 14             	mov    %eax,0x14(%esi)[m
[31m-80102a58:	81 46 14 d0 07 00 00 	addl   $0x7d0,0x14(%esi)[m
[31m-80102a5f:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80102a62:	5b                   	pop    %ebx[m
[31m-80102a63:	5e                   	pop    %esi[m
[31m-80102a64:	5f                   	pop    %edi[m
[31m-80102a65:	5d                   	pop    %ebp[m
[31m-80102a66:	c3                   	ret    [m
[31m-80102a67:	66 90                	xchg   %ax,%ax[m
[31m-80102a69:	66 90                	xchg   %ax,%ax[m
[31m-80102a6b:	66 90                	xchg   %ax,%ax[m
[31m-80102a6d:	66 90                	xchg   %ax,%ax[m
[31m-80102a6f:	90                   	nop[m
[31m-[m
[31m-80102a70 <install_trans>:[m
[31m-80102a70:	8b 0d e8 26 11 80    	mov    0x801126e8,%ecx[m
[31m-80102a76:	85 c9                	test   %ecx,%ecx[m
[31m-80102a78:	0f 8e 85 00 00 00    	jle    80102b03 <install_trans+0x93>[m
[31m-80102a7e:	55                   	push   %ebp[m
[31m-80102a7f:	89 e5                	mov    %esp,%ebp[m
[31m-80102a81:	57                   	push   %edi[m
[31m-80102a82:	56                   	push   %esi[m
[31m-80102a83:	53                   	push   %ebx[m
[31m-80102a84:	31 db                	xor    %ebx,%ebx[m
[31m-80102a86:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80102a89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80102a90:	a1 d4 26 11 80       	mov    0x801126d4,%eax[m
[31m-80102a95:	83 ec 08             	sub    $0x8,%esp[m
[31m-80102a98:	01 d8                	add    %ebx,%eax[m
[31m-80102a9a:	83 c0 01             	add    $0x1,%eax[m
[31m-80102a9d:	50                   	push   %eax[m
[31m-80102a9e:	ff 35 e4 26 11 80    	pushl  0x801126e4[m
[31m-80102aa4:	e8 27 d6 ff ff       	call   801000d0 <bread>[m
[31m-80102aa9:	89 c7                	mov    %eax,%edi[m
[31m-80102aab:	58                   	pop    %eax[m
[31m-80102aac:	5a                   	pop    %edx[m
[31m-80102aad:	ff 34 9d ec 26 11 80 	pushl  -0x7feed914(,%ebx,4)[m
[31m-80102ab4:	ff 35 e4 26 11 80    	pushl  0x801126e4[m
[31m-80102aba:	83 c3 01             	add    $0x1,%ebx[m
[31m-80102abd:	e8 0e d6 ff ff       	call   801000d0 <bread>[m
[31m-80102ac2:	89 c6                	mov    %eax,%esi[m
[31m-80102ac4:	8d 47 5c             	lea    0x5c(%edi),%eax[m
[31m-80102ac7:	83 c4 0c             	add    $0xc,%esp[m
[31m-80102aca:	68 00 02 00 00       	push   $0x200[m
[31m-80102acf:	50                   	push   %eax[m
[31m-80102ad0:	8d 46 5c             	lea    0x5c(%esi),%eax[m
[31m-80102ad3:	50                   	push   %eax[m
[31m-80102ad4:	e8 c7 1a 00 00       	call   801045a0 <memmove>[m
[31m-80102ad9:	89 34 24             	mov    %esi,(%esp)[m
[31m-80102adc:	e8 bf d6 ff ff       	call   801001a0 <bwrite>[m
[31m-80102ae1:	89 3c 24             	mov    %edi,(%esp)[m
[31m-80102ae4:	e8 f7 d6 ff ff       	call   801001e0 <brelse>[m
[31m-80102ae9:	89 34 24             	mov    %esi,(%esp)[m
[31m-80102aec:	e8 ef d6 ff ff       	call   801001e0 <brelse>[m
[31m-80102af1:	83 c4 10             	add    $0x10,%esp[m
[31m-80102af4:	39 1d e8 26 11 80    	cmp    %ebx,0x801126e8[m
[31m-80102afa:	7f 94                	jg     80102a90 <install_trans+0x20>[m
[31m-80102afc:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80102aff:	5b                   	pop    %ebx[m
[31m-80102b00:	5e                   	pop    %esi[m
[31m-80102b01:	5f                   	pop    %edi[m
[31m-80102b02:	5d                   	pop    %ebp[m
[31m-80102b03:	f3 c3                	repz ret [m
[31m-80102b05:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80102b09:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-80102b10 <write_head>:[m
[31m-80102b10:	55                   	push   %ebp[m
[31m-80102b11:	89 e5                	mov    %esp,%ebp[m
[31m-80102b13:	53                   	push   %ebx[m
[31m-80102b14:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80102b17:	ff 35 d4 26 11 80    	pushl  0x801126d4[m
[31m-80102b1d:	ff 35 e4 26 11 80    	pushl  0x801126e4[m
[31m-80102b23:	e8 a8 d5 ff ff       	call   801000d0 <bread>[m
[31m-80102b28:	8b 0d e8 26 11 80    	mov    0x801126e8,%ecx[m
[31m-80102b2e:	83 c4 10             	add    $0x10,%esp[m
[31m-80102b31:	89 c3                	mov    %eax,%ebx[m
[31m-80102b33:	85 c9                	test   %ecx,%ecx[m
[31m-80102b35:	89 48 5c             	mov    %ecx,0x5c(%eax)[m
[31m-80102b38:	7e 1f                	jle    80102b59 <write_head+0x49>[m
[31m-80102b3a:	8d 04 8d 00 00 00 00 	lea    0x0(,%ecx,4),%eax[m
[31m-80102b41:	31 d2                	xor    %edx,%edx[m
[31m-80102b43:	90                   	nop[m
[31m-80102b44:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80102b48:	8b 8a ec 26 11 80    	mov    -0x7feed914(%edx),%ecx[m
[31m-80102b4e:	89 4c 13 60          	mov    %ecx,0x60(%ebx,%edx,1)[m
[31m-80102b52:	83 c2 04             	add    $0x4,%edx[m
[31m-80102b55:	39 c2                	cmp    %eax,%edx[m
[31m-80102b57:	75 ef                	jne    80102b48 <write_head+0x38>[m
[31m-80102b59:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80102b5c:	53                   	push   %ebx[m
[31m-80102b5d:	e8 3e d6 ff ff       	call   801001a0 <bwrite>[m
[31m-80102b62:	89 1c 24             	mov    %ebx,(%esp)[m
[31m-80102b65:	e8 76 d6 ff ff       	call   801001e0 <brelse>[m
[31m-80102b6a:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[31m-80102b6d:	c9                   	leave  [m
[31m-80102b6e:	c3                   	ret    [m
[31m-80102b6f:	90                   	nop[m
[31m-[m
[31m-80102b70 <initlog>:[m
[31m-80102b70:	55                   	push   %ebp[m
[31m-80102b71:	89 e5                	mov    %esp,%ebp[m
[31m-80102b73:	53                   	push   %ebx[m
[31m-80102b74:	83 ec 2c             	sub    $0x2c,%esp[m
[31m-80102b77:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[31m-80102b7a:	68 7c 74 10 80       	push   $0x8010747c[m
[31m-80102b7f:	68 a0 26 11 80       	push   $0x801126a0[m
[31m-80102b84:	e8 17 17 00 00       	call   801042a0 <initlock>[m
[31m-80102b89:	58                   	pop    %eax[m
[31m-80102b8a:	8d 45 dc             	lea    -0x24(%ebp),%eax[m
[31m-80102b8d:	5a                   	pop    %edx[m
[31m-80102b8e:	50                   	push   %eax[m
[31m-80102b8f:	53                   	push   %ebx[m
[31m-80102b90:	e8 5b e8 ff ff       	call   801013f0 <readsb>[m
[31m-80102b95:	8b 55 e8             	mov    -0x18(%ebp),%edx[m
[31m-80102b98:	8b 45 ec             	mov    -0x14(%ebp),%eax[m
[31m-80102b9b:	59                   	pop    %ecx[m
[31m-80102b9c:	89 1d e4 26 11 80    	mov    %ebx,0x801126e4[m
[31m-80102ba2:	89 15 d8 26 11 80    	mov    %edx,0x801126d8[m
[31m-80102ba8:	a3 d4 26 11 80       	mov    %eax,0x801126d4[m
[31m-80102bad:	5a                   	pop    %edx[m
[31m-80102bae:	50                   	push   %eax[m
[31m-80102baf:	53                   	push   %ebx[m
[31m-80102bb0:	e8 1b d5 ff ff       	call   801000d0 <bread>[m
[31m-80102bb5:	8b 48 5c             	mov    0x5c(%eax),%ecx[m
[31m-80102bb8:	83 c4 10             	add    $0x10,%esp[m
[31m-80102bbb:	85 c9                	test   %ecx,%ecx[m
[31m-80102bbd:	89 0d e8 26 11 80    	mov    %ecx,0x801126e8[m
[31m-80102bc3:	7e 1c                	jle    80102be1 <initlog+0x71>[m
[31m-80102bc5:	8d 1c 8d 00 00 00 00 	lea    0x0(,%ecx,4),%ebx[m
[31m-80102bcc:	31 d2                	xor    %edx,%edx[m
[31m-80102bce:	66 90                	xchg   %ax,%ax[m
[31m-80102bd0:	8b 4c 10 60          	mov    0x60(%eax,%edx,1),%ecx[m
[31m-80102bd4:	83 c2 04             	add    $0x4,%edx[m
[31m-80102bd7:	89 8a e8 26 11 80    	mov    %ecx,-0x7feed918(%edx)[m
[31m-80102bdd:	39 da                	cmp    %ebx,%edx[m
[31m-80102bdf:	75 ef                	jne    80102bd0 <initlog+0x60>[m
[31m-80102be1:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80102be4:	50                   	push   %eax[m
[31m-80102be5:	e8 f6 d5 ff ff       	call   801001e0 <brelse>[m
[31m-80102bea:	e8 81 fe ff ff       	call   80102a70 <install_trans>[m
[31m-80102bef:	c7 05 e8 26 11 80 00 	movl   $0x0,0x801126e8[m
[31m-80102bf6:	00 00 00 [m
[31m-80102bf9:	e8 12 ff ff ff       	call   80102b10 <write_head>[m
[31m-80102bfe:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[31m-80102c01:	c9                   	leave  [m
[31m-80102c02:	c3                   	ret    [m
[31m-80102c03:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-80102c09:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m80100e7b:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80100e7e:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m80100e80:	e9 89 fc ff ff       	jmp    80100b0e <exec+0xfe>[m
[32m+[m[32m80100e85:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m80100e87:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m80100e89:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m80100e8b:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m80100e8d:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m80100e8f:	90                   	nop[m
[32m+[m
[32m+[m[32m80100e90 <fileinit>:[m
[32m+[m[32m  struct file file[NFILE];[m
[32m+[m[32m} ftable;[m
 [m
[31m-80102c10 <begin_op>:[m
[31m-80102c10:	55                   	push   %ebp[m
[31m-80102c11:	89 e5                	mov    %esp,%ebp[m
[31m-80102c13:	83 ec 14             	sub    $0x14,%esp[m
[31m-80102c16:	68 a0 26 11 80       	push   $0x801126a0[m
[31m-80102c1b:	e8 a0 16 00 00       	call   801042c0 <acquire>[m
[31m-80102c20:	83 c4 10             	add    $0x10,%esp[m
[31m-80102c23:	eb 18                	jmp    80102c3d <begin_op+0x2d>[m
[31m-80102c25:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-80102c28:	83 ec 08             	sub    $0x8,%esp[m
[31m-80102c2b:	68 a0 26 11 80       	push   $0x801126a0[m
[31m-80102c30:	68 a0 26 11 80       	push   $0x801126a0[m
[31m-80102c35:	e8 06 12 00 00       	call   80103e40 <sleep>[m
[31m-80102c3a:	83 c4 10             	add    $0x10,%esp[m
[31m-80102c3d:	a1 e0 26 11 80       	mov    0x801126e0,%eax[m
[31m-80102c42:	85 c0                	test   %eax,%eax[m
[31m-80102c44:	75 e2                	jne    80102c28 <begin_op+0x18>[m
[31m-80102c46:	a1 dc 26 11 80       	mov    0x801126dc,%eax[m
[31m-80102c4b:	8b 15 e8 26 11 80    	mov    0x801126e8,%edx[m
[31m-80102c51:	83 c0 01             	add    $0x1,%eax[m
[31m-80102c54:	8d 0c 80             	lea    (%eax,%eax,4),%ecx[m
[31m-80102c57:	8d 14 4a             	lea    (%edx,%ecx,2),%edx[m
[31m-80102c5a:	83 fa 1e             	cmp    $0x1e,%edx[m
[31m-80102c5d:	7f c9                	jg     80102c28 <begin_op+0x18>[m
[31m-80102c5f:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80102c62:	a3 dc 26 11 80       	mov    %eax,0x801126dc[m
[31m-80102c67:	68 a0 26 11 80       	push   $0x801126a0[m
[31m-80102c6c:	e8 2f 18 00 00       	call   801044a0 <release>[m
[31m-80102c71:	83 c4 10             	add    $0x10,%esp[m
[31m-80102c74:	c9                   	leave  [m
[31m-80102c75:	c3                   	ret    [m
[31m-80102c76:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-80102c79:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-80102c80 <end_op>:[m
[31m-80102c80:	55                   	push   %ebp[m
[31m-80102c81:	89 e5                	mov    %esp,%ebp[m
[31m-80102c83:	57                   	push   %edi[m
[31m-80102c84:	56                   	push   %esi[m
[31m-80102c85:	53                   	push   %ebx[m
[31m-80102c86:	83 ec 18             	sub    $0x18,%esp[m
[31m-80102c89:	68 a0 26 11 80       	push   $0x801126a0[m
[31m-80102c8e:	e8 2d 16 00 00       	call   801042c0 <acquire>[m
[31m-80102c93:	a1 dc 26 11 80       	mov    0x801126dc,%eax[m
[31m-80102c98:	8b 1d e0 26 11 80    	mov    0x801126e0,%ebx[m
[31m-80102c9e:	83 c4 10             	add    $0x10,%esp[m
[31m-80102ca1:	83 e8 01             	sub    $0x1,%eax[m
[31m-80102ca4:	85 db                	test   %ebx,%ebx[m
[31m-80102ca6:	a3 dc 26 11 80       	mov    %eax,0x801126dc[m
[31m-80102cab:	0f 85 23 01 00 00    	jne    80102dd4 <end_op+0x154>[m
[31m-80102cb1:	85 c0                	test   %eax,%eax[m
[31m-80102cb3:	0f 85 f7 00 00 00    	jne    80102db0 <end_op+0x130>[m
[31m-80102cb9:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80102cbc:	c7 05 e0 26 11 80 01 	movl   $0x1,0x801126e0[m
[31m-80102cc3:	00 00 00 [m
[31m-80102cc6:	31 db                	xor    %ebx,%ebx[m
[31m-80102cc8:	68 a0 26 11 80       	push   $0x801126a0[m
[31m-80102ccd:	e8 ce 17 00 00       	call   801044a0 <release>[m
[31m-80102cd2:	8b 0d e8 26 11 80    	mov    0x801126e8,%ecx[m
[31m-80102cd8:	83 c4 10             	add    $0x10,%esp[m
[31m-80102cdb:	85 c9                	test   %ecx,%ecx[m
[31m-80102cdd:	0f 8e 8a 00 00 00    	jle    80102d6d <end_op+0xed>[m
[31m-80102ce3:	90                   	nop[m
[31m-80102ce4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80102ce8:	a1 d4 26 11 80       	mov    0x801126d4,%eax[m
[31m-80102ced:	83 ec 08             	sub    $0x8,%esp[m
[31m-80102cf0:	01 d8                	add    %ebx,%eax[m
[31m-80102cf2:	83 c0 01             	add    $0x1,%eax[m
[31m-80102cf5:	50                   	push   %eax[m
[31m-80102cf6:	ff 35 e4 26 11 80    	pushl  0x801126e4[m
[31m-80102cfc:	e8 cf d3 ff ff       	call   801000d0 <bread>[m
[31m-80102d01:	89 c6                	mov    %eax,%esi[m
[31m-80102d03:	58                   	pop    %eax[m
[31m-80102d04:	5a                   	pop    %edx[m
[31m-80102d05:	ff 34 9d ec 26 11 80 	pushl  -0x7feed914(,%ebx,4)[m
[31m-80102d0c:	ff 35 e4 26 11 80    	pushl  0x801126e4[m
[31m-80102d12:	83 c3 01             	add    $0x1,%ebx[m
[31m-80102d15:	e8 b6 d3 ff ff       	call   801000d0 <bread>[m
[31m-80102d1a:	89 c7                	mov    %eax,%edi[m
[31m-80102d1c:	8d 40 5c             	lea    0x5c(%eax),%eax[m
[31m-80102d1f:	83 c4 0c             	add    $0xc,%esp[m
[31m-80102d22:	68 00 02 00 00       	push   $0x200[m
[31m-80102d27:	50                   	push   %eax[m
[31m-80102d28:	8d 46 5c             	lea    0x5c(%esi),%eax[m
[31m-80102d2b:	50                   	push   %eax[m
[31m-80102d2c:	e8 6f 18 00 00       	call   801045a0 <memmove>[m
[31m-80102d31:	89 34 24             	mov    %esi,(%esp)[m
[31m-80102d34:	e8 67 d4 ff ff       	call   801001a0 <bwrite>[m
[31m-80102d39:	89 3c 24             	mov    %edi,(%esp)[m
[31m-80102d3c:	e8 9f d4 ff ff       	call   801001e0 <brelse>[m
[31m-80102d41:	89 34 24             	mov    %esi,(%esp)[m
[31m-80102d44:	e8 97 d4 ff ff       	call   801001e0 <brelse>[m
[31m-80102d49:	83 c4 10             	add    $0x10,%esp[m
[31m-80102d4c:	3b 1d e8 26 11 80    	cmp    0x801126e8,%ebx[m
[31m-80102d52:	7c 94                	jl     80102ce8 <end_op+0x68>[m
[31m-80102d54:	e8 b7 fd ff ff       	call   80102b10 <write_head>[m
[31m-80102d59:	e8 12 fd ff ff       	call   80102a70 <install_trans>[m
[31m-80102d5e:	c7 05 e8 26 11 80 00 	movl   $0x0,0x801126e8[m
[31m-80102d65:	00 00 00 [m
[31m-80102d68:	e8 a3 fd ff ff       	call   80102b10 <write_head>[m
[31m-80102d6d:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80102d70:	68 a0 26 11 80       	push   $0x801126a0[m
[31m-80102d75:	e8 46 15 00 00       	call   801042c0 <acquire>[m
[31m-80102d7a:	c7 04 24 a0 26 11 80 	movl   $0x801126a0,(%esp)[m
[31m-80102d81:	c7 05 e0 26 11 80 00 	movl   $0x0,0x801126e0[m
[31m-80102d88:	00 00 00 [m
[31m-80102d8b:	e8 50 12 00 00       	call   80103fe0 <wakeup>[m
[31m-80102d90:	c7 04 24 a0 26 11 80 	movl   $0x801126a0,(%esp)[m
[31m-80102d97:	e8 04 17 00 00       	call   801044a0 <release>[m
[31m-80102d9c:	83 c4 10             	add    $0x10,%esp[m
[31m-80102d9f:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80102da2:	5b                   	pop    %ebx[m
[31m-80102da3:	5e                   	pop    %esi[m
[31m-80102da4:	5f                   	pop    %edi[m
[31m-80102da5:	5d                   	pop    %ebp[m
[31m-80102da6:	c3                   	ret    [m
[31m-80102da7:	89 f6                	mov    %esi,%esi[m
[31m-80102da9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-80102db0:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80102db3:	68 a0 26 11 80       	push   $0x801126a0[m
[31m-80102db8:	e8 23 12 00 00       	call   80103fe0 <wakeup>[m
[31m-80102dbd:	c7 04 24 a0 26 11 80 	movl   $0x801126a0,(%esp)[m
[31m-80102dc4:	e8 d7 16 00 00       	call   801044a0 <release>[m
[31m-80102dc9:	83 c4 10             	add    $0x10,%esp[m
[31m-80102dcc:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80102dcf:	5b                   	pop    %ebx[m
[31m-80102dd0:	5e                   	pop    %esi[m
[31m-80102dd1:	5f                   	pop    %edi[m
[31m-80102dd2:	5d                   	pop    %ebp[m
[31m-80102dd3:	c3                   	ret    [m
[31m-80102dd4:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80102dd7:	68 80 74 10 80       	push   $0x80107480[m
[31m-80102ddc:	e8 8f d5 ff ff       	call   80100370 <panic>[m
[31m-80102de1:	eb 0d                	jmp    80102df0 <log_write>[m
[31m-80102de3:	90                   	nop[m
[31m-80102de4:	90                   	nop[m
[31m-80102de5:	90                   	nop[m
[31m-80102de6:	90                   	nop[m
[31m-80102de7:	90                   	nop[m
[31m-80102de8:	90                   	nop[m
[31m-80102de9:	90                   	nop[m
[31m-80102dea:	90                   	nop[m
[31m-80102deb:	90                   	nop[m
[31m-80102dec:	90                   	nop[m
[31m-80102ded:	90                   	nop[m
[31m-80102dee:	90                   	nop[m
[31m-80102def:	90                   	nop[m
[31m-[m
[31m-80102df0 <log_write>:[m
[31m-80102df0:	55                   	push   %ebp[m
[31m-80102df1:	89 e5                	mov    %esp,%ebp[m
[31m-80102df3:	53                   	push   %ebx[m
[31m-80102df4:	83 ec 04             	sub    $0x4,%esp[m
[31m-80102df7:	8b 15 e8 26 11 80    	mov    0x801126e8,%edx[m
[31m-80102dfd:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[31m-80102e00:	83 fa 1d             	cmp    $0x1d,%edx[m
[31m-80102e03:	0f 8f 97 00 00 00    	jg     80102ea0 <log_write+0xb0>[m
[31m-80102e09:	a1 d8 26 11 80       	mov    0x801126d8,%eax[m
[31m-80102e0e:	83 e8 01             	sub    $0x1,%eax[m
[31m-80102e11:	39 c2                	cmp    %eax,%edx[m
[31m-80102e13:	0f 8d 87 00 00 00    	jge    80102ea0 <log_write+0xb0>[m
[31m-80102e19:	a1 dc 26 11 80       	mov    0x801126dc,%eax[m
[31m-80102e1e:	85 c0                	test   %eax,%eax[m
[31m-80102e20:	0f 8e 87 00 00 00    	jle    80102ead <log_write+0xbd>[m
[31m-80102e26:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80102e29:	68 a0 26 11 80       	push   $0x801126a0[m
[31m-80102e2e:	e8 8d 14 00 00       	call   801042c0 <acquire>[m
[31m-80102e33:	8b 15 e8 26 11 80    	mov    0x801126e8,%edx[m
[31m-80102e39:	83 c4 10             	add    $0x10,%esp[m
[31m-80102e3c:	83 fa 00             	cmp    $0x0,%edx[m
[31m-80102e3f:	7e 50                	jle    80102e91 <log_write+0xa1>[m
[31m-80102e41:	8b 4b 08             	mov    0x8(%ebx),%ecx[m
[31m-80102e44:	31 c0                	xor    %eax,%eax[m
[31m-80102e46:	3b 0d ec 26 11 80    	cmp    0x801126ec,%ecx[m
[31m-80102e4c:	75 0b                	jne    80102e59 <log_write+0x69>[m
[31m-80102e4e:	eb 38                	jmp    80102e88 <log_write+0x98>[m
[31m-80102e50:	39 0c 85 ec 26 11 80 	cmp    %ecx,-0x7feed914(,%eax,4)[m
[31m-80102e57:	74 2f                	je     80102e88 <log_write+0x98>[m
[31m-80102e59:	83 c0 01             	add    $0x1,%eax[m
[31m-80102e5c:	39 d0                	cmp    %edx,%eax[m
[31m-80102e5e:	75 f0                	jne    80102e50 <log_write+0x60>[m
[31m-80102e60:	89 0c 95 ec 26 11 80 	mov    %ecx,-0x7feed914(,%edx,4)[m
[31m-80102e67:	83 c2 01             	add    $0x1,%edx[m
[31m-80102e6a:	89 15 e8 26 11 80    	mov    %edx,0x801126e8[m
[31m-80102e70:	83 0b 04             	orl    $0x4,(%ebx)[m
[31m-80102e73:	c7 45 08 a0 26 11 80 	movl   $0x801126a0,0x8(%ebp)[m
[31m-80102e7a:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[31m-80102e7d:	c9                   	leave  [m
[31m-80102e7e:	e9 1d 16 00 00       	jmp    801044a0 <release>[m
[31m-80102e83:	90                   	nop[m
[31m-80102e84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80102e88:	89 0c 85 ec 26 11 80 	mov    %ecx,-0x7feed914(,%eax,4)[m
[31m-80102e8f:	eb df                	jmp    80102e70 <log_write+0x80>[m
[31m-80102e91:	8b 43 08             	mov    0x8(%ebx),%eax[m
[31m-80102e94:	a3 ec 26 11 80       	mov    %eax,0x801126ec[m
[31m-80102e99:	75 d5                	jne    80102e70 <log_write+0x80>[m
[31m-80102e9b:	eb ca                	jmp    80102e67 <log_write+0x77>[m
[31m-80102e9d:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-80102ea0:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80102ea3:	68 8f 74 10 80       	push   $0x8010748f[m
[31m-80102ea8:	e8 c3 d4 ff ff       	call   80100370 <panic>[m
[31m-80102ead:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80102eb0:	68 a5 74 10 80       	push   $0x801074a5[m
[31m-80102eb5:	e8 b6 d4 ff ff       	call   80100370 <panic>[m
[31m-80102eba:	66 90                	xchg   %ax,%ax[m
[31m-80102ebc:	66 90                	xchg   %ax,%ax[m
[31m-80102ebe:	66 90                	xchg   %ax,%ax[m
[31m-[m
[31m-80102ec0 <mpmain>:[m
[31m-80102ec0:	55                   	push   %ebp[m
[31m-80102ec1:	89 e5                	mov    %esp,%ebp[m
[31m-80102ec3:	83 ec 08             	sub    $0x8,%esp[m
[31m-80102ec6:	e8 65 f8 ff ff       	call   80102730 <cpunum>[m
[31m-80102ecb:	83 ec 08             	sub    $0x8,%esp[m
[31m-80102ece:	50                   	push   %eax[m
[31m-80102ecf:	68 c0 74 10 80       	push   $0x801074c0[m
[31m-80102ed4:	e8 87 d7 ff ff       	call   80100660 <cprintf>[m
[31m-80102ed9:	e8 12 29 00 00       	call   801057f0 <idtinit>[m
[31m-80102ede:	65 8b 15 00 00 00 00 	mov    %gs:0x0,%edx[m
[31m-80102ee5:	b8 01 00 00 00       	mov    $0x1,%eax[m
[31m-80102eea:	f0 87 82 a8 00 00 00 	lock xchg %eax,0xa8(%edx)[m
[31m-80102ef1:	e8 5a 0c 00 00       	call   80103b50 <scheduler>[m
[31m-80102ef6:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-80102ef9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-80102f00 <mpenter>:[m
[31m-80102f00:	55                   	push   %ebp[m
[31m-80102f01:	89 e5                	mov    %esp,%ebp[m
[31m-80102f03:	83 ec 08             	sub    $0x8,%esp[m
[31m-80102f06:	e8 05 3b 00 00       	call   80106a10 <switchkvm>[m
[31m-80102f0b:	e8 20 39 00 00       	call   80106830 <seginit>[m
[31m-80102f10:	e8 1b f7 ff ff       	call   80102630 <lapicinit>[m
[31m-80102f15:	e8 a6 ff ff ff       	call   80102ec0 <mpmain>[m
[31m-80102f1a:	66 90                	xchg   %ax,%ax[m
[31m-80102f1c:	66 90                	xchg   %ax,%ax[m
[31m-80102f1e:	66 90                	xchg   %ax,%ax[m
[31m-[m
[31m-80102f20 <main>:[m
[31m-80102f20:	8d 4c 24 04          	lea    0x4(%esp),%ecx[m
[31m-80102f24:	83 e4 f0             	and    $0xfffffff0,%esp[m
[31m-80102f27:	ff 71 fc             	pushl  -0x4(%ecx)[m
[31m-80102f2a:	55                   	push   %ebp[m
[31m-80102f2b:	89 e5                	mov    %esp,%ebp[m
[31m-80102f2d:	53                   	push   %ebx[m
[31m-80102f2e:	51                   	push   %ecx[m
[31m-80102f2f:	83 ec 08             	sub    $0x8,%esp[m
[31m-80102f32:	68 00 00 40 80       	push   $0x80400000[m
[31m-80102f37:	68 28 55 11 80       	push   $0x80115528[m
[31m-80102f3c:	e8 bf f4 ff ff       	call   80102400 <kinit1>[m
[31m-80102f41:	e8 aa 3a 00 00       	call   801069f0 <kvmalloc>[m
[31m-80102f46:	e8 b5 01 00 00       	call   80103100 <mpinit>[m
[31m-80102f4b:	e8 e0 f6 ff ff       	call   80102630 <lapicinit>[m
[31m-80102f50:	e8 db 38 00 00       	call   80106830 <seginit>[m
[31m-80102f55:	e8 d6 f7 ff ff       	call   80102730 <cpunum>[m
[31m-80102f5a:	5a                   	pop    %edx[m
[31m-80102f5b:	59                   	pop    %ecx[m
[31m-80102f5c:	50                   	push   %eax[m
[31m-80102f5d:	68 d1 74 10 80       	push   $0x801074d1[m
[31m-80102f62:	e8 f9 d6 ff ff       	call   80100660 <cprintf>[m
[31m-80102f67:	e8 a4 03 00 00       	call   80103310 <picinit>[m
[31m-80102f6c:	e8 af f2 ff ff       	call   80102220 <ioapicinit>[m
[31m-80102f71:	e8 2a da ff ff       	call   801009a0 <consoleinit>[m
[31m-80102f76:	e8 85 2b 00 00       	call   80105b00 <uartinit>[m
[31m-80102f7b:	e8 30 09 00 00       	call   801038b0 <pinit>[m
[31m-80102f80:	e8 cb 27 00 00       	call   80105750 <tvinit>[m
[31m-80102f85:	e8 b6 d0 ff ff       	call   80100040 <binit>[m
[31m-80102f8a:	e8 01 de ff ff       	call   80100d90 <fileinit>[m
[31m-80102f8f:	e8 5c f0 ff ff       	call   80101ff0 <ideinit>[m
[31m-80102f94:	8b 1d 84 27 11 80    	mov    0x80112784,%ebx[m
[31m-80102f9a:	83 c4 10             	add    $0x10,%esp[m
[31m-80102f9d:	85 db                	test   %ebx,%ebx[m
[31m-80102f9f:	0f 84 ca 00 00 00    	je     8010306f <main+0x14f>[m
[31m-80102fa5:	83 ec 04             	sub    $0x4,%esp[m
[31m-80102fa8:	bb a0 27 11 80       	mov    $0x801127a0,%ebx[m
[31m-80102fad:	68 8a 00 00 00       	push   $0x8a[m
[31m-80102fb2:	68 8c a4 10 80       	push   $0x8010a48c[m
[31m-80102fb7:	68 00 70 00 80       	push   $0x80007000[m
[31m-80102fbc:	e8 df 15 00 00       	call   801045a0 <memmove>[m
[31m-80102fc1:	69 05 80 2d 11 80 bc 	imul   $0xbc,0x80112d80,%eax[m
[31m-80102fc8:	00 00 00 [m
[31m-80102fcb:	83 c4 10             	add    $0x10,%esp[m
[31m-80102fce:	05 a0 27 11 80       	add    $0x801127a0,%eax[m
[31m-80102fd3:	39 d8                	cmp    %ebx,%eax[m
[31m-80102fd5:	76 7c                	jbe    80103053 <main+0x133>[m
[31m-80102fd7:	89 f6                	mov    %esi,%esi[m
[31m-80102fd9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-80102fe0:	e8 4b f7 ff ff       	call   80102730 <cpunum>[m
[31m-80102fe5:	69 c0 bc 00 00 00    	imul   $0xbc,%eax,%eax[m
[31m-80102feb:	05 a0 27 11 80       	add    $0x801127a0,%eax[m
[31m-80102ff0:	39 c3                	cmp    %eax,%ebx[m
[31m-80102ff2:	74 46                	je     8010303a <main+0x11a>[m
[31m-80102ff4:	e8 d7 f4 ff ff       	call   801024d0 <kalloc>[m
[31m-80102ff9:	83 ec 08             	sub    $0x8,%esp[m
[31m-80102ffc:	05 00 10 00 00       	add    $0x1000,%eax[m
[31m-80103001:	c7 05 f8 6f 00 80 00 	movl   $0x80102f00,0x80006ff8[m
[31m-80103008:	2f 10 80 [m
[31m-8010300b:	a3 fc 6f 00 80       	mov    %eax,0x80006ffc[m
[31m-80103010:	c7 05 f4 6f 00 80 00 	movl   $0x109000,0x80006ff4[m
[31m-80103017:	90 10 00 [m
[31m-8010301a:	68 00 70 00 00       	push   $0x7000[m
[31m-8010301f:	0f b6 03             	movzbl (%ebx),%eax[m
[31m-80103022:	50                   	push   %eax[m
[31m-80103023:	e8 d8 f7 ff ff       	call   80102800 <lapicstartap>[m
[31m-80103028:	83 c4 10             	add    $0x10,%esp[m
[31m-8010302b:	90                   	nop[m
[31m-8010302c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80103030:	8b 83 a8 00 00 00    	mov    0xa8(%ebx),%eax[m
[31m-80103036:	85 c0                	test   %eax,%eax[m
[31m-80103038:	74 f6                	je     80103030 <main+0x110>[m
[31m-8010303a:	69 05 80 2d 11 80 bc 	imul   $0xbc,0x80112d80,%eax[m
[31m-80103041:	00 00 00 [m
[31m-80103044:	81 c3 bc 00 00 00    	add    $0xbc,%ebx[m
[31m-8010304a:	05 a0 27 11 80       	add    $0x801127a0,%eax[m
[31m-8010304f:	39 c3                	cmp    %eax,%ebx[m
[31m-80103051:	72 8d                	jb     80102fe0 <main+0xc0>[m
[31m-80103053:	83 ec 08             	sub    $0x8,%esp[m
[31m-80103056:	68 00 00 00 8e       	push   $0x8e000000[m
[31m-8010305b:	68 00 00 40 80       	push   $0x80400000[m
[31m-80103060:	e8 0b f4 ff ff       	call   80102470 <kinit2>[m
[31m-80103065:	e8 66 08 00 00       	call   801038d0 <userinit>[m
[31m-8010306a:	e8 51 fe ff ff       	call   80102ec0 <mpmain>[m
[31m-8010306f:	e8 7c 26 00 00       	call   801056f0 <timerinit>[m
[31m-80103074:	e9 2c ff ff ff       	jmp    80102fa5 <main+0x85>[m
[31m-80103079:	66 90                	xchg   %ax,%ax[m
[31m-8010307b:	66 90                	xchg   %ax,%ax[m
[31m-8010307d:	66 90                	xchg   %ax,%ax[m
[31m-8010307f:	90                   	nop[m
[31m-[m
[31m-80103080 <mpsearch1>:[m
[31m-80103080:	55                   	push   %ebp[m
[31m-80103081:	89 e5                	mov    %esp,%ebp[m
[31m-80103083:	57                   	push   %edi[m
[31m-80103084:	56                   	push   %esi[m
[31m-80103085:	8d b0 00 00 00 80    	lea    -0x80000000(%eax),%esi[m
[31m-8010308b:	53                   	push   %ebx[m
[31m-8010308c:	8d 1c 16             	lea    (%esi,%edx,1),%ebx[m
[31m-8010308f:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103092:	39 de                	cmp    %ebx,%esi[m
[31m-80103094:	73 48                	jae    801030de <mpsearch1+0x5e>[m
[31m-80103096:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-80103099:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-801030a0:	83 ec 04             	sub    $0x4,%esp[m
[31m-801030a3:	8d 7e 10             	lea    0x10(%esi),%edi[m
[31m-801030a6:	6a 04                	push   $0x4[m
[31m-801030a8:	68 e8 74 10 80       	push   $0x801074e8[m
[31m-801030ad:	56                   	push   %esi[m
[31m-801030ae:	e8 8d 14 00 00       	call   80104540 <memcmp>[m
[31m-801030b3:	83 c4 10             	add    $0x10,%esp[m
[31m-801030b6:	85 c0                	test   %eax,%eax[m
[31m-801030b8:	75 1e                	jne    801030d8 <mpsearch1+0x58>[m
[31m-801030ba:	8d 7e 10             	lea    0x10(%esi),%edi[m
[31m-801030bd:	89 f2                	mov    %esi,%edx[m
[31m-801030bf:	31 c9                	xor    %ecx,%ecx[m
[31m-801030c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-801030c8:	0f b6 02             	movzbl (%edx),%eax[m
[31m-801030cb:	83 c2 01             	add    $0x1,%edx[m
[31m-801030ce:	01 c1                	add    %eax,%ecx[m
[31m-801030d0:	39 fa                	cmp    %edi,%edx[m
[31m-801030d2:	75 f4                	jne    801030c8 <mpsearch1+0x48>[m
[31m-801030d4:	84 c9                	test   %cl,%cl[m
[31m-801030d6:	74 10                	je     801030e8 <mpsearch1+0x68>[m
[31m-801030d8:	39 fb                	cmp    %edi,%ebx[m
[31m-801030da:	89 fe                	mov    %edi,%esi[m
[31m-801030dc:	77 c2                	ja     801030a0 <mpsearch1+0x20>[m
[31m-801030de:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-801030e1:	31 c0                	xor    %eax,%eax[m
[31m-801030e3:	5b                   	pop    %ebx[m
[31m-801030e4:	5e                   	pop    %esi[m
[31m-801030e5:	5f                   	pop    %edi[m
[31m-801030e6:	5d                   	pop    %ebp[m
[31m-801030e7:	c3                   	ret    [m
[31m-801030e8:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-801030eb:	89 f0                	mov    %esi,%eax[m
[31m-801030ed:	5b                   	pop    %ebx[m
[31m-801030ee:	5e                   	pop    %esi[m
[31m-801030ef:	5f                   	pop    %edi[m
[31m-801030f0:	5d                   	pop    %ebp[m
[31m-801030f1:	c3                   	ret    [m
[31m-801030f2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-801030f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-80103100 <mpinit>:[m
[31m-80103100:	55                   	push   %ebp[m
[31m-80103101:	89 e5                	mov    %esp,%ebp[m
[31m-80103103:	57                   	push   %edi[m
[31m-80103104:	56                   	push   %esi[m
[31m-80103105:	53                   	push   %ebx[m
[31m-80103106:	83 ec 1c             	sub    $0x1c,%esp[m
[31m-80103109:	0f b6 05 0f 04 00 80 	movzbl 0x8000040f,%eax[m
[31m-80103110:	0f b6 15 0e 04 00 80 	movzbl 0x8000040e,%edx[m
[31m-80103117:	c1 e0 08             	shl    $0x8,%eax[m
[31m-8010311a:	09 d0                	or     %edx,%eax[m
[31m-8010311c:	c1 e0 04             	shl    $0x4,%eax[m
[31m-8010311f:	85 c0                	test   %eax,%eax[m
[31m-80103121:	75 1b                	jne    8010313e <mpinit+0x3e>[m
[31m-80103123:	0f b6 05 14 04 00 80 	movzbl 0x80000414,%eax[m
[31m-8010312a:	0f b6 15 13 04 00 80 	movzbl 0x80000413,%edx[m
[31m-80103131:	c1 e0 08             	shl    $0x8,%eax[m
[31m-80103134:	09 d0                	or     %edx,%eax[m
[31m-80103136:	c1 e0 0a             	shl    $0xa,%eax[m
[31m-80103139:	2d 00 04 00 00       	sub    $0x400,%eax[m
[31m-8010313e:	ba 00 04 00 00       	mov    $0x400,%edx[m
[31m-80103143:	e8 38 ff ff ff       	call   80103080 <mpsearch1>[m
[31m-80103148:	85 c0                	test   %eax,%eax[m
[31m-8010314a:	89 c6                	mov    %eax,%esi[m
[31m-8010314c:	0f 84 66 01 00 00    	je     801032b8 <mpinit+0x1b8>[m
[31m-80103152:	8b 5e 04             	mov    0x4(%esi),%ebx[m
[31m-80103155:	85 db                	test   %ebx,%ebx[m
[31m-80103157:	0f 84 d6 00 00 00    	je     80103233 <mpinit+0x133>[m
[31m-8010315d:	8d 83 00 00 00 80    	lea    -0x80000000(%ebx),%eax[m
[31m-80103163:	83 ec 04             	sub    $0x4,%esp[m
[31m-80103166:	6a 04                	push   $0x4[m
[31m-80103168:	68 ed 74 10 80       	push   $0x801074ed[m
[31m-8010316d:	50                   	push   %eax[m
[31m-8010316e:	89 45 e4             	mov    %eax,-0x1c(%ebp)[m
[31m-80103171:	e8 ca 13 00 00       	call   80104540 <memcmp>[m
[31m-80103176:	83 c4 10             	add    $0x10,%esp[m
[31m-80103179:	85 c0                	test   %eax,%eax[m
[31m-8010317b:	0f 85 b2 00 00 00    	jne    80103233 <mpinit+0x133>[m
[31m-80103181:	0f b6 83 06 00 00 80 	movzbl -0x7ffffffa(%ebx),%eax[m
[31m-80103188:	3c 01                	cmp    $0x1,%al[m
[31m-8010318a:	74 08                	je     80103194 <mpinit+0x94>[m
[31m-8010318c:	3c 04                	cmp    $0x4,%al[m
[31m-8010318e:	0f 85 9f 00 00 00    	jne    80103233 <mpinit+0x133>[m
[31m-80103194:	0f b7 bb 04 00 00 80 	movzwl -0x7ffffffc(%ebx),%edi[m
[31m-8010319b:	85 ff                	test   %edi,%edi[m
[31m-8010319d:	74 1e                	je     801031bd <mpinit+0xbd>[m
[31m-8010319f:	31 d2                	xor    %edx,%edx[m
[31m-801031a1:	31 c0                	xor    %eax,%eax[m
[31m-801031a3:	90                   	nop[m
[31m-801031a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-801031a8:	0f b6 8c 03 00 00 00 	movzbl -0x80000000(%ebx,%eax,1),%ecx[m
[31m-801031af:	80 [m
[31m-801031b0:	83 c0 01             	add    $0x1,%eax[m
[31m-801031b3:	01 ca                	add    %ecx,%edx[m
[31m-801031b5:	39 c7                	cmp    %eax,%edi[m
[31m-801031b7:	75 ef                	jne    801031a8 <mpinit+0xa8>[m
[31m-801031b9:	84 d2                	test   %dl,%dl[m
[31m-801031bb:	75 76                	jne    80103233 <mpinit+0x133>[m
[31m-801031bd:	8b 7d e4             	mov    -0x1c(%ebp),%edi[m
[31m-801031c0:	85 ff                	test   %edi,%edi[m
[31m-801031c2:	74 6f                	je     80103233 <mpinit+0x133>[m
[31m-801031c4:	c7 05 84 27 11 80 01 	movl   $0x1,0x80112784[m
[31m-801031cb:	00 00 00 [m
[31m-801031ce:	8b 83 24 00 00 80    	mov    -0x7fffffdc(%ebx),%eax[m
[31m-801031d4:	a3 9c 26 11 80       	mov    %eax,0x8011269c[m
[31m-801031d9:	0f b7 8b 04 00 00 80 	movzwl -0x7ffffffc(%ebx),%ecx[m
[31m-801031e0:	8d 83 2c 00 00 80    	lea    -0x7fffffd4(%ebx),%eax[m
[31m-801031e6:	01 f9                	add    %edi,%ecx[m
[31m-801031e8:	39 c8                	cmp    %ecx,%eax[m
[31m-801031ea:	0f 83 a0 00 00 00    	jae    80103290 <mpinit+0x190>[m
[31m-801031f0:	80 38 04             	cmpb   $0x4,(%eax)[m
[31m-801031f3:	0f 87 87 00 00 00    	ja     80103280 <mpinit+0x180>[m
[31m-801031f9:	0f b6 10             	movzbl (%eax),%edx[m
[31m-801031fc:	ff 24 95 f4 74 10 80 	jmp    *-0x7fef8b0c(,%edx,4)[m
[31m-80103203:	90                   	nop[m
[31m-80103204:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80103208:	83 c0 08             	add    $0x8,%eax[m
[31m-8010320b:	39 c1                	cmp    %eax,%ecx[m
[31m-8010320d:	77 e1                	ja     801031f0 <mpinit+0xf0>[m
[31m-8010320f:	a1 84 27 11 80       	mov    0x80112784,%eax[m
[31m-80103214:	85 c0                	test   %eax,%eax[m
[31m-80103216:	75 78                	jne    80103290 <mpinit+0x190>[m
[31m-80103218:	c7 05 80 2d 11 80 01 	movl   $0x1,0x80112d80[m
[31m-8010321f:	00 00 00 [m
[31m-80103222:	c7 05 9c 26 11 80 00 	movl   $0x0,0x8011269c[m
[31m-80103229:	00 00 00 [m
[31m-8010322c:	c6 05 80 27 11 80 00 	movb   $0x0,0x80112780[m
[31m-80103233:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80103236:	5b                   	pop    %ebx[m
[31m-80103237:	5e                   	pop    %esi[m
[31m-80103238:	5f                   	pop    %edi[m
[31m-80103239:	5d                   	pop    %ebp[m
[31m-8010323a:	c3                   	ret    [m
[31m-8010323b:	90                   	nop[m
[31m-8010323c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80103240:	8b 15 80 2d 11 80    	mov    0x80112d80,%edx[m
[31m-80103246:	83 fa 07             	cmp    $0x7,%edx[m
[31m-80103249:	7f 19                	jg     80103264 <mpinit+0x164>[m
[31m-8010324b:	0f b6 58 01          	movzbl 0x1(%eax),%ebx[m
[31m-8010324f:	69 fa bc 00 00 00    	imul   $0xbc,%edx,%edi[m
[31m-80103255:	83 c2 01             	add    $0x1,%edx[m
[31m-80103258:	89 15 80 2d 11 80    	mov    %edx,0x80112d80[m
[31m-8010325e:	88 9f a0 27 11 80    	mov    %bl,-0x7feed860(%edi)[m
[31m-80103264:	83 c0 14             	add    $0x14,%eax[m
[31m-80103267:	eb a2                	jmp    8010320b <mpinit+0x10b>[m
[31m-80103269:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80103270:	0f b6 50 01          	movzbl 0x1(%eax),%edx[m
[31m-80103274:	83 c0 08             	add    $0x8,%eax[m
[31m-80103277:	88 15 80 27 11 80    	mov    %dl,0x80112780[m
[31m-8010327d:	eb 8c                	jmp    8010320b <mpinit+0x10b>[m
[31m-8010327f:	90                   	nop[m
[31m-80103280:	c7 05 84 27 11 80 00 	movl   $0x0,0x80112784[m
[31m-80103287:	00 00 00 [m
[31m-8010328a:	e9 7c ff ff ff       	jmp    8010320b <mpinit+0x10b>[m
[31m-8010328f:	90                   	nop[m
[31m-80103290:	80 7e 0c 00          	cmpb   $0x0,0xc(%esi)[m
[31m-80103294:	74 9d                	je     80103233 <mpinit+0x133>[m
[31m-80103296:	ba 22 00 00 00       	mov    $0x22,%edx[m
[31m-8010329b:	b8 70 00 00 00       	mov    $0x70,%eax[m
[31m-801032a0:	ee                   	out    %al,(%dx)[m
[31m-801032a1:	ba 23 00 00 00       	mov    $0x23,%edx[m
[31m-801032a6:	ec                   	in     (%dx),%al[m
[31m-801032a7:	83 c8 01             	or     $0x1,%eax[m
[31m-801032aa:	ee                   	out    %al,(%dx)[m
[31m-801032ab:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-801032ae:	5b                   	pop    %ebx[m
[31m-801032af:	5e                   	pop    %esi[m
[31m-801032b0:	5f                   	pop    %edi[m
[31m-801032b1:	5d                   	pop    %ebp[m
[31m-801032b2:	c3                   	ret    [m
[31m-801032b3:	90                   	nop[m
[31m-801032b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-801032b8:	ba 00 00 01 00       	mov    $0x10000,%edx[m
[31m-801032bd:	b8 00 00 0f 00       	mov    $0xf0000,%eax[m
[31m-801032c2:	e8 b9 fd ff ff       	call   80103080 <mpsearch1>[m
[31m-801032c7:	85 c0                	test   %eax,%eax[m
[31m-801032c9:	89 c6                	mov    %eax,%esi[m
[31m-801032cb:	0f 85 81 fe ff ff    	jne    80103152 <mpinit+0x52>[m
[31m-801032d1:	e9 5d ff ff ff       	jmp    80103233 <mpinit+0x133>[m
[31m-801032d6:	66 90                	xchg   %ax,%ax[m
[31m-801032d8:	66 90                	xchg   %ax,%ax[m
[31m-801032da:	66 90                	xchg   %ax,%ax[m
[31m-801032dc:	66 90                	xchg   %ax,%ax[m
[31m-801032de:	66 90                	xchg   %ax,%ax[m
[31m-[m
[31m-801032e0 <picenable>:[m
[31m-801032e0:	55                   	push   %ebp[m
[31m-801032e1:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax[m
[31m-801032e6:	ba 21 00 00 00       	mov    $0x21,%edx[m
[31m-801032eb:	89 e5                	mov    %esp,%ebp[m
[31m-801032ed:	8b 4d 08             	mov    0x8(%ebp),%ecx[m
[31m-801032f0:	d3 c0                	rol    %cl,%eax[m
[31m-801032f2:	66 23 05 00 a0 10 80 	and    0x8010a000,%ax[m
[31m-801032f9:	66 a3 00 a0 10 80    	mov    %ax,0x8010a000[m
[31m-801032ff:	ee                   	out    %al,(%dx)[m
[31m-80103300:	ba a1 00 00 00       	mov    $0xa1,%edx[m
[31m-80103305:	66 c1 e8 08          	shr    $0x8,%ax[m
[31m-80103309:	ee                   	out    %al,(%dx)[m
[31m-8010330a:	5d                   	pop    %ebp[m
[31m-8010330b:	c3                   	ret    [m
[31m-8010330c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-[m
[31m-80103310 <picinit>:[m
[31m-80103310:	55                   	push   %ebp[m
[31m-80103311:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[31m-80103316:	89 e5                	mov    %esp,%ebp[m
[31m-80103318:	57                   	push   %edi[m
[31m-80103319:	56                   	push   %esi[m
[31m-8010331a:	53                   	push   %ebx[m
[31m-8010331b:	bb 21 00 00 00       	mov    $0x21,%ebx[m
[31m-80103320:	89 da                	mov    %ebx,%edx[m
[31m-80103322:	ee                   	out    %al,(%dx)[m
[31m-80103323:	b9 a1 00 00 00       	mov    $0xa1,%ecx[m
[31m-80103328:	89 ca                	mov    %ecx,%edx[m
[31m-8010332a:	ee                   	out    %al,(%dx)[m
[31m-8010332b:	bf 11 00 00 00       	mov    $0x11,%edi[m
[31m-80103330:	be 20 00 00 00       	mov    $0x20,%esi[m
[31m-80103335:	89 f8                	mov    %edi,%eax[m
[31m-80103337:	89 f2                	mov    %esi,%edx[m
[31m-80103339:	ee                   	out    %al,(%dx)[m
[31m-8010333a:	b8 20 00 00 00       	mov    $0x20,%eax[m
[31m-8010333f:	89 da                	mov    %ebx,%edx[m
[31m-80103341:	ee                   	out    %al,(%dx)[m
[31m-80103342:	b8 04 00 00 00       	mov    $0x4,%eax[m
[31m-80103347:	ee                   	out    %al,(%dx)[m
[31m-80103348:	b8 03 00 00 00       	mov    $0x3,%eax[m
[31m-8010334d:	ee                   	out    %al,(%dx)[m
[31m-8010334e:	bb a0 00 00 00       	mov    $0xa0,%ebx[m
[31m-80103353:	89 f8                	mov    %edi,%eax[m
[31m-80103355:	89 da                	mov    %ebx,%edx[m
[31m-80103357:	ee                   	out    %al,(%dx)[m
[31m-80103358:	b8 28 00 00 00       	mov    $0x28,%eax[m
[31m-8010335d:	89 ca                	mov    %ecx,%edx[m
[31m-8010335f:	ee                   	out    %al,(%dx)[m
[31m-80103360:	b8 02 00 00 00       	mov    $0x2,%eax[m
[31m-80103365:	ee                   	out    %al,(%dx)[m
[31m-80103366:	b8 03 00 00 00       	mov    $0x3,%eax[m
[31m-8010336b:	ee                   	out    %al,(%dx)[m
[31m-8010336c:	bf 68 00 00 00       	mov    $0x68,%edi[m
[31m-80103371:	89 f2                	mov    %esi,%edx[m
[31m-80103373:	89 f8                	mov    %edi,%eax[m
[31m-80103375:	ee                   	out    %al,(%dx)[m
[31m-80103376:	b9 0a 00 00 00       	mov    $0xa,%ecx[m
[31m-8010337b:	89 c8                	mov    %ecx,%eax[m
[31m-8010337d:	ee                   	out    %al,(%dx)[m
[31m-8010337e:	89 f8                	mov    %edi,%eax[m
[31m-80103380:	89 da                	mov    %ebx,%edx[m
[31m-80103382:	ee                   	out    %al,(%dx)[m
[31m-80103383:	89 c8                	mov    %ecx,%eax[m
[31m-80103385:	ee                   	out    %al,(%dx)[m
[31m-80103386:	0f b7 05 00 a0 10 80 	movzwl 0x8010a000,%eax[m
[31m-8010338d:	66 83 f8 ff          	cmp    $0xffff,%ax[m
[31m-80103391:	74 10                	je     801033a3 <picinit+0x93>[m
[31m-80103393:	ba 21 00 00 00       	mov    $0x21,%edx[m
[31m-80103398:	ee                   	out    %al,(%dx)[m
[31m-80103399:	ba a1 00 00 00       	mov    $0xa1,%edx[m
[31m-8010339e:	66 c1 e8 08          	shr    $0x8,%ax[m
[31m-801033a2:	ee                   	out    %al,(%dx)[m
[31m-801033a3:	5b                   	pop    %ebx[m
[31m-801033a4:	5e                   	pop    %esi[m
[31m-801033a5:	5f                   	pop    %edi[m
[31m-801033a6:	5d                   	pop    %ebp[m
[31m-801033a7:	c3                   	ret    [m
[31m-801033a8:	66 90                	xchg   %ax,%ax[m
[31m-801033aa:	66 90                	xchg   %ax,%ax[m
[31m-801033ac:	66 90                	xchg   %ax,%ax[m
[31m-801033ae:	66 90                	xchg   %ax,%ax[m
[31m-[m
[31m-801033b0 <pipealloc>:[m
[31m-801033b0:	55                   	push   %ebp[m
[31m-801033b1:	89 e5                	mov    %esp,%ebp[m
[31m-801033b3:	57                   	push   %edi[m
[31m-801033b4:	56                   	push   %esi[m
[31m-801033b5:	53                   	push   %ebx[m
[31m-801033b6:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801033b9:	8b 75 08             	mov    0x8(%ebp),%esi[m
[31m-801033bc:	8b 5d 0c             	mov    0xc(%ebp),%ebx[m
[31m-801033bf:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)[m
[31m-801033c5:	c7 06 00 00 00 00    	movl   $0x0,(%esi)[m
[31m-801033cb:	e8 e0 d9 ff ff       	call   80100db0 <filealloc>[m
[31m-801033d0:	85 c0                	test   %eax,%eax[m
[31m-801033d2:	89 06                	mov    %eax,(%esi)[m
[31m-801033d4:	0f 84 a8 00 00 00    	je     80103482 <pipealloc+0xd2>[m
[31m-801033da:	e8 d1 d9 ff ff       	call   80100db0 <filealloc>[m
[31m-801033df:	85 c0                	test   %eax,%eax[m
[31m-801033e1:	89 03                	mov    %eax,(%ebx)[m
[31m-801033e3:	0f 84 87 00 00 00    	je     80103470 <pipealloc+0xc0>[m
[31m-801033e9:	e8 e2 f0 ff ff       	call   801024d0 <kalloc>[m
[31m-801033ee:	85 c0                	test   %eax,%eax[m
[31m-801033f0:	89 c7                	mov    %eax,%edi[m
[31m-801033f2:	0f 84 b0 00 00 00    	je     801034a8 <pipealloc+0xf8>[m
[31m-801033f8:	83 ec 08             	sub    $0x8,%esp[m
[31m-801033fb:	c7 80 3c 02 00 00 01 	movl   $0x1,0x23c(%eax)[m
[31m-80103402:	00 00 00 [m
[31m-80103405:	c7 80 40 02 00 00 01 	movl   $0x1,0x240(%eax)[m
[31m-8010340c:	00 00 00 [m
[31m-8010340f:	c7 80 38 02 00 00 00 	movl   $0x0,0x238(%eax)[m
[31m-80103416:	00 00 00 [m
[31m-80103419:	c7 80 34 02 00 00 00 	movl   $0x0,0x234(%eax)[m
[31m-80103420:	00 00 00 [m
[31m-80103423:	68 08 75 10 80       	push   $0x80107508[m
[31m-80103428:	50                   	push   %eax[m
[31m-80103429:	e8 72 0e 00 00       	call   801042a0 <initlock>[m
[31m-8010342e:	8b 06                	mov    (%esi),%eax[m
[31m-80103430:	83 c4 10             	add    $0x10,%esp[m
[31m-80103433:	c7 00 01 00 00 00    	movl   $0x1,(%eax)[m
[31m-80103439:	8b 06                	mov    (%esi),%eax[m
[31m-8010343b:	c6 40 08 01          	movb   $0x1,0x8(%eax)[m
[31m-8010343f:	8b 06                	mov    (%esi),%eax[m
[31m-80103441:	c6 40 09 00          	movb   $0x0,0x9(%eax)[m
[31m-80103445:	8b 06                	mov    (%esi),%eax[m
[31m-80103447:	89 78 0c             	mov    %edi,0xc(%eax)[m
[31m-8010344a:	8b 03                	mov    (%ebx),%eax[m
[31m-8010344c:	c7 00 01 00 00 00    	movl   $0x1,(%eax)[m
[31m-80103452:	8b 03                	mov    (%ebx),%eax[m
[31m-80103454:	c6 40 08 00          	movb   $0x0,0x8(%eax)[m
[31m-80103458:	8b 03                	mov    (%ebx),%eax[m
[31m-8010345a:	c6 40 09 01          	movb   $0x1,0x9(%eax)[m
[31m-8010345e:	8b 03                	mov    (%ebx),%eax[m
[31m-80103460:	89 78 0c             	mov    %edi,0xc(%eax)[m
[31m-80103463:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80103466:	31 c0                	xor    %eax,%eax[m
[31m-80103468:	5b                   	pop    %ebx[m
[31m-80103469:	5e                   	pop    %esi[m
[31m-8010346a:	5f                   	pop    %edi[m
[31m-8010346b:	5d                   	pop    %ebp[m
[31m-8010346c:	c3                   	ret    [m
[31m-8010346d:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-80103470:	8b 06                	mov    (%esi),%eax[m
[31m-80103472:	85 c0                	test   %eax,%eax[m
[31m-80103474:	74 1e                	je     80103494 <pipealloc+0xe4>[m
[31m-80103476:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103479:	50                   	push   %eax[m
[31m-8010347a:	e8 f1 d9 ff ff       	call   80100e70 <fileclose>[m
[31m-8010347f:	83 c4 10             	add    $0x10,%esp[m
[31m-80103482:	8b 03                	mov    (%ebx),%eax[m
[31m-80103484:	85 c0                	test   %eax,%eax[m
[31m-80103486:	74 0c                	je     80103494 <pipealloc+0xe4>[m
[31m-80103488:	83 ec 0c             	sub    $0xc,%esp[m
[31m-8010348b:	50                   	push   %eax[m
[31m-8010348c:	e8 df d9 ff ff       	call   80100e70 <fileclose>[m
[31m-80103491:	83 c4 10             	add    $0x10,%esp[m
[31m-80103494:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80103497:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[31m-8010349c:	5b                   	pop    %ebx[m
[31m-8010349d:	5e                   	pop    %esi[m
[31m-8010349e:	5f                   	pop    %edi[m
[31m-8010349f:	5d                   	pop    %ebp[m
[31m-801034a0:	c3                   	ret    [m
[31m-801034a1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-801034a8:	8b 06                	mov    (%esi),%eax[m
[31m-801034aa:	85 c0                	test   %eax,%eax[m
[31m-801034ac:	75 c8                	jne    80103476 <pipealloc+0xc6>[m
[31m-801034ae:	eb d2                	jmp    80103482 <pipealloc+0xd2>[m
[31m-[m
[31m-801034b0 <pipeclose>:[m
[31m-801034b0:	55                   	push   %ebp[m
[31m-801034b1:	89 e5                	mov    %esp,%ebp[m
[31m-801034b3:	56                   	push   %esi[m
[31m-801034b4:	53                   	push   %ebx[m
[31m-801034b5:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[31m-801034b8:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[31m-801034bb:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801034be:	53                   	push   %ebx[m
[31m-801034bf:	e8 fc 0d 00 00       	call   801042c0 <acquire>[m
[31m-801034c4:	83 c4 10             	add    $0x10,%esp[m
[31m-801034c7:	85 f6                	test   %esi,%esi[m
[31m-801034c9:	74 45                	je     80103510 <pipeclose+0x60>[m
[31m-801034cb:	8d 83 34 02 00 00    	lea    0x234(%ebx),%eax[m
[31m-801034d1:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801034d4:	c7 83 40 02 00 00 00 	movl   $0x0,0x240(%ebx)[m
[31m-801034db:	00 00 00 [m
[31m-801034de:	50                   	push   %eax[m
[31m-801034df:	e8 fc 0a 00 00       	call   80103fe0 <wakeup>[m
[31m-801034e4:	83 c4 10             	add    $0x10,%esp[m
[31m-801034e7:	8b 93 3c 02 00 00    	mov    0x23c(%ebx),%edx[m
[31m-801034ed:	85 d2                	test   %edx,%edx[m
[31m-801034ef:	75 0a                	jne    801034fb <pipeclose+0x4b>[m
[31m-801034f1:	8b 83 40 02 00 00    	mov    0x240(%ebx),%eax[m
[31m-801034f7:	85 c0                	test   %eax,%eax[m
[31m-801034f9:	74 35                	je     80103530 <pipeclose+0x80>[m
[31m-801034fb:	89 5d 08             	mov    %ebx,0x8(%ebp)[m
[31m-801034fe:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m-80103501:	5b                   	pop    %ebx[m
[31m-80103502:	5e                   	pop    %esi[m
[31m-80103503:	5d                   	pop    %ebp[m
[31m-80103504:	e9 97 0f 00 00       	jmp    801044a0 <release>[m
[31m-80103509:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80103510:	8d 83 38 02 00 00    	lea    0x238(%ebx),%eax[m
[31m-80103516:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103519:	c7 83 3c 02 00 00 00 	movl   $0x0,0x23c(%ebx)[m
[31m-80103520:	00 00 00 [m
[31m-80103523:	50                   	push   %eax[m
[31m-80103524:	e8 b7 0a 00 00       	call   80103fe0 <wakeup>[m
[31m-80103529:	83 c4 10             	add    $0x10,%esp[m
[31m-8010352c:	eb b9                	jmp    801034e7 <pipeclose+0x37>[m
[31m-8010352e:	66 90                	xchg   %ax,%ax[m
[31m-80103530:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103533:	53                   	push   %ebx[m
[31m-80103534:	e8 67 0f 00 00       	call   801044a0 <release>[m
[31m-80103539:	89 5d 08             	mov    %ebx,0x8(%ebp)[m
[31m-8010353c:	83 c4 10             	add    $0x10,%esp[m
[31m-8010353f:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m-80103542:	5b                   	pop    %ebx[m
[31m-80103543:	5e                   	pop    %esi[m
[31m-80103544:	5d                   	pop    %ebp[m
[31m-80103545:	e9 d6 ed ff ff       	jmp    80102320 <kfree>[m
[31m-8010354a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-[m
[31m-80103550 <pipewrite>:[m
[31m-80103550:	55                   	push   %ebp[m
[31m-80103551:	89 e5                	mov    %esp,%ebp[m
[31m-80103553:	57                   	push   %edi[m
[31m-80103554:	56                   	push   %esi[m
[31m-80103555:	53                   	push   %ebx[m
[31m-80103556:	83 ec 28             	sub    $0x28,%esp[m
[31m-80103559:	8b 7d 08             	mov    0x8(%ebp),%edi[m
[31m-8010355c:	57                   	push   %edi[m
[31m-8010355d:	e8 5e 0d 00 00       	call   801042c0 <acquire>[m
[31m-80103562:	8b 45 10             	mov    0x10(%ebp),%eax[m
[31m-80103565:	83 c4 10             	add    $0x10,%esp[m
[31m-80103568:	85 c0                	test   %eax,%eax[m
[31m-8010356a:	0f 8e c6 00 00 00    	jle    80103636 <pipewrite+0xe6>[m
[31m-80103570:	8b 45 0c             	mov    0xc(%ebp),%eax[m
[31m-80103573:	8b 8f 38 02 00 00    	mov    0x238(%edi),%ecx[m
[31m-80103579:	8d b7 34 02 00 00    	lea    0x234(%edi),%esi[m
[31m-8010357f:	8d 9f 38 02 00 00    	lea    0x238(%edi),%ebx[m
[31m-80103585:	89 45 e4             	mov    %eax,-0x1c(%ebp)[m
[31m-80103588:	03 45 10             	add    0x10(%ebp),%eax[m
[31m-8010358b:	89 45 e0             	mov    %eax,-0x20(%ebp)[m
[31m-8010358e:	8b 87 34 02 00 00    	mov    0x234(%edi),%eax[m
[31m-80103594:	8d 90 00 02 00 00    	lea    0x200(%eax),%edx[m
[31m-8010359a:	39 d1                	cmp    %edx,%ecx[m
[31m-8010359c:	0f 85 cf 00 00 00    	jne    80103671 <pipewrite+0x121>[m
[31m-801035a2:	8b 97 3c 02 00 00    	mov    0x23c(%edi),%edx[m
[31m-801035a8:	85 d2                	test   %edx,%edx[m
[31m-801035aa:	0f 84 a8 00 00 00    	je     80103658 <pipewrite+0x108>[m
[31m-801035b0:	65 8b 15 04 00 00 00 	mov    %gs:0x4,%edx[m
[31m-801035b7:	8b 42 24             	mov    0x24(%edx),%eax[m
[31m-801035ba:	85 c0                	test   %eax,%eax[m
[31m-801035bc:	74 25                	je     801035e3 <pipewrite+0x93>[m
[31m-801035be:	e9 95 00 00 00       	jmp    80103658 <pipewrite+0x108>[m
[31m-801035c3:	90                   	nop[m
[31m-801035c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-801035c8:	8b 87 3c 02 00 00    	mov    0x23c(%edi),%eax[m
[31m-801035ce:	85 c0                	test   %eax,%eax[m
[31m-801035d0:	0f 84 82 00 00 00    	je     80103658 <pipewrite+0x108>[m
[31m-801035d6:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[31m-801035dc:	8b 40 24             	mov    0x24(%eax),%eax[m
[31m-801035df:	85 c0                	test   %eax,%eax[m
[31m-801035e1:	75 75                	jne    80103658 <pipewrite+0x108>[m
[31m-801035e3:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801035e6:	56                   	push   %esi[m
[31m-801035e7:	e8 f4 09 00 00       	call   80103fe0 <wakeup>[m
[31m-801035ec:	59                   	pop    %ecx[m
[31m-801035ed:	58                   	pop    %eax[m
[31m-801035ee:	57                   	push   %edi[m
[31m-801035ef:	53                   	push   %ebx[m
[31m-801035f0:	e8 4b 08 00 00       	call   80103e40 <sleep>[m
[31m-801035f5:	8b 87 34 02 00 00    	mov    0x234(%edi),%eax[m
[31m-801035fb:	8b 97 38 02 00 00    	mov    0x238(%edi),%edx[m
[31m-80103601:	83 c4 10             	add    $0x10,%esp[m
[31m-80103604:	05 00 02 00 00       	add    $0x200,%eax[m
[31m-80103609:	39 c2                	cmp    %eax,%edx[m
[31m-8010360b:	74 bb                	je     801035c8 <pipewrite+0x78>[m
[31m-8010360d:	8b 45 e4             	mov    -0x1c(%ebp),%eax[m
[31m-80103610:	8d 4a 01             	lea    0x1(%edx),%ecx[m
[31m-80103613:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)[m
[31m-80103617:	81 e2 ff 01 00 00    	and    $0x1ff,%edx[m
[31m-8010361d:	89 8f 38 02 00 00    	mov    %ecx,0x238(%edi)[m
[31m-80103623:	0f b6 00             	movzbl (%eax),%eax[m
[31m-80103626:	88 44 17 34          	mov    %al,0x34(%edi,%edx,1)[m
[31m-8010362a:	8b 45 e4             	mov    -0x1c(%ebp),%eax[m
[31m-8010362d:	3b 45 e0             	cmp    -0x20(%ebp),%eax[m
[31m-80103630:	0f 85 58 ff ff ff    	jne    8010358e <pipewrite+0x3e>[m
[31m-80103636:	8d 97 34 02 00 00    	lea    0x234(%edi),%edx[m
[31m-8010363c:	83 ec 0c             	sub    $0xc,%esp[m
[31m-8010363f:	52                   	push   %edx[m
[31m-80103640:	e8 9b 09 00 00       	call   80103fe0 <wakeup>[m
[31m-80103645:	89 3c 24             	mov    %edi,(%esp)[m
[31m-80103648:	e8 53 0e 00 00       	call   801044a0 <release>[m
[31m-8010364d:	83 c4 10             	add    $0x10,%esp[m
[31m-80103650:	8b 45 10             	mov    0x10(%ebp),%eax[m
[31m-80103653:	eb 14                	jmp    80103669 <pipewrite+0x119>[m
[31m-80103655:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-80103658:	83 ec 0c             	sub    $0xc,%esp[m
[31m-8010365b:	57                   	push   %edi[m
[31m-8010365c:	e8 3f 0e 00 00       	call   801044a0 <release>[m
[31m-80103661:	83 c4 10             	add    $0x10,%esp[m
[31m-80103664:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[31m-80103669:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-8010366c:	5b                   	pop    %ebx[m
[31m-8010366d:	5e                   	pop    %esi[m
[31m-8010366e:	5f                   	pop    %edi[m
[31m-8010366f:	5d                   	pop    %ebp[m
[31m-80103670:	c3                   	ret    [m
[31m-80103671:	89 ca                	mov    %ecx,%edx[m
[31m-80103673:	eb 98                	jmp    8010360d <pipewrite+0xbd>[m
[31m-80103675:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80103679:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[31m-[m
[31m-80103680 <piperead>:[m
[31m-80103680:	55                   	push   %ebp[m
[31m-80103681:	89 e5                	mov    %esp,%ebp[m
[31m-80103683:	57                   	push   %edi[m
[31m-80103684:	56                   	push   %esi[m
[31m-80103685:	53                   	push   %ebx[m
[31m-80103686:	83 ec 18             	sub    $0x18,%esp[m
[31m-80103689:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[31m-8010368c:	8b 7d 0c             	mov    0xc(%ebp),%edi[m
[31m-8010368f:	53                   	push   %ebx[m
[31m-80103690:	e8 2b 0c 00 00       	call   801042c0 <acquire>[m
[31m-80103695:	83 c4 10             	add    $0x10,%esp[m
[31m-80103698:	8b 83 34 02 00 00    	mov    0x234(%ebx),%eax[m
[31m-8010369e:	39 83 38 02 00 00    	cmp    %eax,0x238(%ebx)[m
[31m-801036a4:	75 6a                	jne    80103710 <piperead+0x90>[m
[31m-801036a6:	8b b3 40 02 00 00    	mov    0x240(%ebx),%esi[m
[31m-801036ac:	85 f6                	test   %esi,%esi[m
[31m-801036ae:	0f 84 cc 00 00 00    	je     80103780 <piperead+0x100>[m
[31m-801036b4:	8d b3 34 02 00 00    	lea    0x234(%ebx),%esi[m
[31m-801036ba:	eb 2d                	jmp    801036e9 <piperead+0x69>[m
[31m-801036bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-801036c0:	83 ec 08             	sub    $0x8,%esp[m
[31m-801036c3:	53                   	push   %ebx[m
[31m-801036c4:	56                   	push   %esi[m
[31m-801036c5:	e8 76 07 00 00       	call   80103e40 <sleep>[m
[31m-801036ca:	83 c4 10             	add    $0x10,%esp[m
[31m-801036cd:	8b 83 38 02 00 00    	mov    0x238(%ebx),%eax[m
[31m-801036d3:	39 83 34 02 00 00    	cmp    %eax,0x234(%ebx)[m
[31m-801036d9:	75 35                	jne    80103710 <piperead+0x90>[m
[31m-801036db:	8b 93 40 02 00 00    	mov    0x240(%ebx),%edx[m
[31m-801036e1:	85 d2                	test   %edx,%edx[m
[31m-801036e3:	0f 84 97 00 00 00    	je     80103780 <piperead+0x100>[m
[31m-801036e9:	65 8b 15 04 00 00 00 	mov    %gs:0x4,%edx[m
[31m-801036f0:	8b 4a 24             	mov    0x24(%edx),%ecx[m
[31m-801036f3:	85 c9                	test   %ecx,%ecx[m
[31m-801036f5:	74 c9                	je     801036c0 <piperead+0x40>[m
[31m-801036f7:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801036fa:	53                   	push   %ebx[m
[31m-801036fb:	e8 a0 0d 00 00       	call   801044a0 <release>[m
[31m-80103700:	83 c4 10             	add    $0x10,%esp[m
[31m-80103703:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80103706:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[31m-8010370b:	5b                   	pop    %ebx[m
[31m-8010370c:	5e                   	pop    %esi[m
[31m-8010370d:	5f                   	pop    %edi[m
[31m-8010370e:	5d                   	pop    %ebp[m
[31m-8010370f:	c3                   	ret    [m
[31m-80103710:	8b 45 10             	mov    0x10(%ebp),%eax[m
[31m-80103713:	85 c0                	test   %eax,%eax[m
[31m-80103715:	7e 69                	jle    80103780 <piperead+0x100>[m
[31m-80103717:	8b 93 34 02 00 00    	mov    0x234(%ebx),%edx[m
[31m-8010371d:	31 c9                	xor    %ecx,%ecx[m
[31m-8010371f:	eb 15                	jmp    80103736 <piperead+0xb6>[m
[31m-80103721:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80103728:	8b 93 34 02 00 00    	mov    0x234(%ebx),%edx[m
[31m-8010372e:	3b 93 38 02 00 00    	cmp    0x238(%ebx),%edx[m
[31m-80103734:	74 5a                	je     80103790 <piperead+0x110>[m
[31m-80103736:	8d 72 01             	lea    0x1(%edx),%esi[m
[31m-80103739:	81 e2 ff 01 00 00    	and    $0x1ff,%edx[m
[31m-8010373f:	89 b3 34 02 00 00    	mov    %esi,0x234(%ebx)[m
[31m-80103745:	0f b6 54 13 34       	movzbl 0x34(%ebx,%edx,1),%edx[m
[31m-8010374a:	88 14 0f             	mov    %dl,(%edi,%ecx,1)[m
[31m-8010374d:	83 c1 01             	add    $0x1,%ecx[m
[31m-80103750:	39 4d 10             	cmp    %ecx,0x10(%ebp)[m
[31m-80103753:	75 d3                	jne    80103728 <piperead+0xa8>[m
[31m-80103755:	8d 93 38 02 00 00    	lea    0x238(%ebx),%edx[m
[31m-8010375b:	83 ec 0c             	sub    $0xc,%esp[m
[31m-8010375e:	52                   	push   %edx[m
[31m-8010375f:	e8 7c 08 00 00       	call   80103fe0 <wakeup>[m
[31m-80103764:	89 1c 24             	mov    %ebx,(%esp)[m
[31m-80103767:	e8 34 0d 00 00       	call   801044a0 <release>[m
[31m-8010376c:	8b 45 10             	mov    0x10(%ebp),%eax[m
[31m-8010376f:	83 c4 10             	add    $0x10,%esp[m
[31m-80103772:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80103775:	5b                   	pop    %ebx[m
[31m-80103776:	5e                   	pop    %esi[m
[31m-80103777:	5f                   	pop    %edi[m
[31m-80103778:	5d                   	pop    %ebp[m
[31m-80103779:	c3                   	ret    [m
[31m-8010377a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-80103780:	c7 45 10 00 00 00 00 	movl   $0x0,0x10(%ebp)[m
[31m-80103787:	eb cc                	jmp    80103755 <piperead+0xd5>[m
[31m-80103789:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80103790:	89 4d 10             	mov    %ecx,0x10(%ebp)[m
[31m-80103793:	eb c0                	jmp    80103755 <piperead+0xd5>[m
[31m-80103795:	66 90                	xchg   %ax,%ax[m
[31m-80103797:	66 90                	xchg   %ax,%ax[m
[31m-80103799:	66 90                	xchg   %ax,%ax[m
[31m-8010379b:	66 90                	xchg   %ax,%ax[m
[31m-8010379d:	66 90                	xchg   %ax,%ax[m
[31m-8010379f:	90                   	nop[m
[31m-[m
[31m-801037a0 <allocproc>:[m
[31m-// If found, change state to EMBRYO and initialize[m
[31m-// state required to run in the kernel.[m
[31m-// Otherwise return 0.[m
[31m-static struct proc*[m
[31m-allocproc(void)[m
[32m+[m[32mvoid[m
[32m+[m[32mfileinit(void)[m
 {[m
[31m-801037a0:	55                   	push   %ebp[m
[31m-801037a1:	89 e5                	mov    %esp,%ebp[m
[31m-801037a3:	53                   	push   %ebx[m
[31m-  struct proc *p;[m
[31m-  char *sp;[m
[32m+[m[32m80100e90:	55                   	push   %ebp[m
[32m+[m[32m80100e91:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80100e93:	83 ec 10             	sub    $0x10,%esp[m
[32m+[m[32m  initlock(&ftable.lock, "ftable");[m
[32m+[m[32m80100e96:	68 c9 72 10 80       	push   $0x801072c9[m
[32m+[m[32m80100e9b:	68 e0 ff 10 80       	push   $0x8010ffe0[m
[32m+[m[32m80100ea0:	e8 0b 35 00 00       	call   801043b0 <initlock>[m
[32m+[m[32m}[m
[32m+[m[32m80100ea5:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80100ea8:	c9                   	leave[m[41m  [m
[32m+[m[32m80100ea9:	c3                   	ret[m[41m    [m
[32m+[m[32m80100eaa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
 [m
[31m-  acquire(&ptable.lock);[m
[32m+[m[32m80100eb0 <filealloc>:[m
 [m
[31m-  for(p = ptable.proc; p < &ptable.proc[NPROC]; p++)[m
[31m-801037a4:	bb d4 2d 11 80       	mov    $0x80112dd4,%ebx[m
[31m-// If found, change state to EMBRYO and initialize[m
[31m-// state required to run in the kernel.[m
[31m-// Otherwise return 0.[m
[31m-static struct proc*[m
[31m-allocproc(void)[m
[32m+[m[32m// Allocate a file structure.[m
[32m+[m[32mstruct file*[m
[32m+[m[32mfilealloc(void)[m
 {[m
[31m-801037a9:	83 ec 10             	sub    $0x10,%esp[m
[31m-  struct proc *p;[m
[31m-  char *sp;[m
[31m-[m
[31m-  acquire(&ptable.lock);[m
[31m-801037ac:	68 a0 2d 11 80       	push   $0x80112da0[m
[31m-801037b1:	e8 0a 0b 00 00       	call   801042c0 <acquire>[m
[31m-801037b6:	83 c4 10             	add    $0x10,%esp[m
[31m-801037b9:	eb 10                	jmp    801037cb <allocproc+0x2b>[m
[31m-801037bb:	90                   	nop[m
[31m-801037bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-[m
[31m-  for(p = ptable.proc; p < &ptable.proc[NPROC]; p++)[m
[31m-801037c0:	83 c3 7c             	add    $0x7c,%ebx[m
[31m-801037c3:	81 fb d4 4c 11 80    	cmp    $0x80114cd4,%ebx[m
[31m-801037c9:	74 75                	je     80103840 <allocproc+0xa0>[m
[31m-    if(p->state == UNUSED)[m
[31m-801037cb:	8b 43 0c             	mov    0xc(%ebx),%eax[m
[31m-801037ce:	85 c0                	test   %eax,%eax[m
[31m-801037d0:	75 ee                	jne    801037c0 <allocproc+0x20>[m
[31m-  release(&ptable.lock);[m
[31m-  return 0;[m
[31m-[m
[31m-found:[m
[31m-  p->state = EMBRYO;[m
[31m-  p->pid = nextpid++;[m
[31m-801037d2:	a1 08 a0 10 80       	mov    0x8010a008,%eax[m
[31m-[m
[31m-  release(&ptable.lock);[m
[31m-801037d7:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80100eb0:	55                   	push   %ebp[m
[32m+[m[32m80100eb1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80100eb3:	53                   	push   %ebx[m
[32m+[m[32m  struct file *f;[m
[32m+[m
[32m+[m[32m  acquire(&ftable.lock);[m
[32m+[m[32m  for(f = ftable.file; f < ftable.file + NFILE; f++){[m
[32m+[m[32m80100eb4:	bb 14 00 11 80       	mov    $0x80110014,%ebx[m
[32m+[m[32m}[m
 [m
[31m-  release(&ptable.lock);[m
[32m+[m[32m// Allocate a file structure.[m
[32m+[m[32mstruct file*[m
[32m+[m[32mfilealloc(void)[m
[32m+[m[32m{[m
[32m+[m[32m80100eb9:	83 ec 10             	sub    $0x10,%esp[m
[32m+[m[32m  struct file *f;[m
[32m+[m
[32m+[m[32m  acquire(&ftable.lock);[m
[32m+[m[32m80100ebc:	68 e0 ff 10 80       	push   $0x8010ffe0[m
[32m+[m[32m80100ec1:	e8 0a 35 00 00       	call   801043d0 <acquire>[m
[32m+[m[32m80100ec6:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80100ec9:	eb 10                	jmp    80100edb <filealloc+0x2b>[m
[32m+[m[32m80100ecb:	90                   	nop[m
[32m+[m[32m80100ecc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  for(f = ftable.file; f < ftable.file + NFILE; f++){[m
[32m+[m[32m80100ed0:	83 c3 18             	add    $0x18,%ebx[m
[32m+[m[32m80100ed3:	81 fb 74 09 11 80    	cmp    $0x80110974,%ebx[m
[32m+[m[32m80100ed9:	74 25                	je     80100f00 <filealloc+0x50>[m
[32m+[m[32m    if(f->ref == 0){[m
[32m+[m[32m80100edb:	8b 43 04             	mov    0x4(%ebx),%eax[m
[32m+[m[32m80100ede:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80100ee0:	75 ee                	jne    80100ed0 <filealloc+0x20>[m
[32m+[m[32m      f->ref = 1;[m
[32m+[m[32m      release(&ftable.lock);[m
[32m+[m[32m80100ee2:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m  struct file *f;[m
[32m+[m
[32m+[m[32m  acquire(&ftable.lock);[m
[32m+[m[32m  for(f = ftable.file; f < ftable.file + NFILE; f++){[m
[32m+[m[32m    if(f->ref == 0){[m
[32m+[m[32m      f->ref = 1;[m
[32m+[m[32m80100ee5:	c7 43 04 01 00 00 00 	movl   $0x1,0x4(%ebx)[m
[32m+[m[32m      release(&ftable.lock);[m
[32m+[m[32m80100eec:	68 e0 ff 10 80       	push   $0x8010ffe0[m
[32m+[m[32m80100ef1:	e8 ba 36 00 00       	call   801045b0 <release>[m
[32m+[m[32m      return f;[m
[32m+[m[32m80100ef6:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m80100ef8:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  release(&ftable.lock);[m
   return 0;[m
[31m-[m
[31m-found:[m
[31m-  p->state = EMBRYO;[m
[31m-801037da:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)[m
[31m-  p->pid = nextpid++;[m
[31m-[m
[31m-  release(&ptable.lock);[m
[31m-801037e1:	68 a0 2d 11 80       	push   $0x80112da0[m
[31m-  release(&ptable.lock);[m
[32m+[m[32m}[m
[32m+[m[32m80100efb:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[32m+[m[32m80100efe:	c9                   	leave[m[41m  [m
[32m+[m[32m80100eff:	c3                   	ret[m[41m    [m
[32m+[m[32m      f->ref = 1;[m
[32m+[m[32m      release(&ftable.lock);[m
[32m+[m[32m      return f;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  release(&ftable.lock);[m
[32m+[m[32m80100f00:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80100f03:	68 e0 ff 10 80       	push   $0x8010ffe0[m
[32m+[m[32m80100f08:	e8 a3 36 00 00       	call   801045b0 <release>[m
   return 0;[m
[32m+[m[32m80100f0d:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80100f10:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m}[m
[32m+[m[32m80100f12:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[32m+[m[32m80100f15:	c9                   	leave[m[41m  [m
[32m+[m[32m80100f16:	c3                   	ret[m[41m    [m
[32m+[m[32m80100f17:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m80100f19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
[31m-found:[m
[31m-  p->state = EMBRYO;[m
[31m-  p->pid = nextpid++;[m
[31m-801037e6:	8d 50 01             	lea    0x1(%eax),%edx[m
[31m-801037e9:	89 43 10             	mov    %eax,0x10(%ebx)[m
[31m-801037ec:	89 15 08 a0 10 80    	mov    %edx,0x8010a008[m
[32m+[m[32m80100f20 <filedup>:[m
 [m
[31m-  release(&ptable.lock);[m
[31m-801037f2:	e8 a9 0c 00 00       	call   801044a0 <release>[m
[32m+[m[32m// Increment ref count for file f.[m
[32m+[m[32mstruct file*[m
[32m+[m[32mfiledup(struct file *f)[m
[32m+[m[32m{[m
[32m+[m[32m80100f20:	55                   	push   %ebp[m
[32m+[m[32m80100f21:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80100f23:	53                   	push   %ebx[m
[32m+[m[32m80100f24:	83 ec 10             	sub    $0x10,%esp[m
[32m+[m[32m80100f27:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m  acquire(&ftable.lock);[m
[32m+[m[32m80100f2a:	68 e0 ff 10 80       	push   $0x8010ffe0[m
[32m+[m[32m80100f2f:	e8 9c 34 00 00       	call   801043d0 <acquire>[m
[32m+[m[32m  if(f->ref < 1)[m
[32m+[m[32m80100f34:	8b 43 04             	mov    0x4(%ebx),%eax[m
[32m+[m[32m80100f37:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80100f3a:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80100f3c:	7e 1a                	jle    80100f58 <filedup+0x38>[m
[32m+[m[32m    panic("filedup");[m
[32m+[m[32m  f->ref++;[m
[32m+[m[32m80100f3e:	83 c0 01             	add    $0x1,%eax[m
[32m+[m[32m  release(&ftable.lock);[m
[32m+[m[32m80100f41:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32mfiledup(struct file *f)[m
[32m+[m[32m{[m
[32m+[m[32m  acquire(&ftable.lock);[m
[32m+[m[32m  if(f->ref < 1)[m
[32m+[m[32m    panic("filedup");[m
[32m+[m[32m  f->ref++;[m
[32m+[m[32m80100f44:	89 43 04             	mov    %eax,0x4(%ebx)[m
[32m+[m[32m  release(&ftable.lock);[m
[32m+[m[32m80100f47:	68 e0 ff 10 80       	push   $0x8010ffe0[m
[32m+[m[32m80100f4c:	e8 5f 36 00 00       	call   801045b0 <release>[m
[32m+[m[32m  return f;[m
[32m+[m[32m}[m
[32m+[m[32m80100f51:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m80100f53:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[32m+[m[32m80100f56:	c9                   	leave[m[41m  [m
[32m+[m[32m80100f57:	c3                   	ret[m[41m    [m
[32m+[m[32mstruct file*[m
[32m+[m[32mfiledup(struct file *f)[m
[32m+[m[32m{[m
[32m+[m[32m  acquire(&ftable.lock);[m
[32m+[m[32m  if(f->ref < 1)[m
[32m+[m[32m    panic("filedup");[m
[32m+[m[32m80100f58:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80100f5b:	68 d0 72 10 80       	push   $0x801072d0[m
[32m+[m[32m80100f60:	e8 0b f4 ff ff       	call   80100370 <panic>[m
[32m+[m[32m80100f65:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m80100f69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m
[32m+[m[32m80100f70 <fileclose>:[m
[32m+[m[32m}[m
 [m
[31m-  // Allocate kernel stack.[m
[31m-  if((p->kstack = kalloc()) == 0){[m
[31m-801037f7:	e8 d4 ec ff ff       	call   801024d0 <kalloc>[m
[31m-801037fc:	83 c4 10             	add    $0x10,%esp[m
[31m-801037ff:	85 c0                	test   %eax,%eax[m
[31m-80103801:	89 43 08             	mov    %eax,0x8(%ebx)[m
[31m-80103804:	74 51                	je     80103857 <allocproc+0xb7>[m
[31m-    return 0;[m
[32m+[m[32m// Close file f.  (Decrement ref count, close when reaches 0.)[m
[32m+[m[32mvoid[m
[32m+[m[32mfileclose(struct file *f)[m
[32m+[m[32m{[m
[32m+[m[32m80100f70:	55                   	push   %ebp[m
[32m+[m[32m80100f71:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80100f73:	57                   	push   %edi[m
[32m+[m[32m80100f74:	56                   	push   %esi[m
[32m+[m[32m80100f75:	53                   	push   %ebx[m
[32m+[m[32m80100f76:	83 ec 28             	sub    $0x28,%esp[m
[32m+[m[32m80100f79:	8b 7d 08             	mov    0x8(%ebp),%edi[m
[32m+[m[32m  struct file ff;[m
[32m+[m
[32m+[m[32m  acquire(&ftable.lock);[m
[32m+[m[32m80100f7c:	68 e0 ff 10 80       	push   $0x8010ffe0[m
[32m+[m[32m80100f81:	e8 4a 34 00 00       	call   801043d0 <acquire>[m
[32m+[m[32m  if(f->ref < 1)[m
[32m+[m[32m80100f86:	8b 47 04             	mov    0x4(%edi),%eax[m
[32m+[m[32m80100f89:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80100f8c:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80100f8e:	0f 8e 9b 00 00 00    	jle    8010102f <fileclose+0xbf>[m
[32m+[m[32m    panic("fileclose");[m
[32m+[m[32m  if(--f->ref > 0){[m
[32m+[m[32m80100f94:	83 e8 01             	sub    $0x1,%eax[m
[32m+[m[32m80100f97:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80100f99:	89 47 04             	mov    %eax,0x4(%edi)[m
[32m+[m[32m80100f9c:	74 1a                	je     80100fb8 <fileclose+0x48>[m
[32m+[m[32m    release(&ftable.lock);[m
[32m+[m[32m80100f9e:	c7 45 08 e0 ff 10 80 	movl   $0x8010ffe0,0x8(%ebp)[m
[32m+[m[32m  else if(ff.type == FD_INODE){[m
[32m+[m[32m    begin_op();[m
[32m+[m[32m    iput(ff.ip);[m
[32m+[m[32m    end_op();[m
   }[m
[31m-  sp = p->kstack + KSTACKSIZE;[m
[32m+[m[32m}[m
[32m+[m[32m80100fa5:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m80100fa8:	5b                   	pop    %ebx[m
[32m+[m[32m80100fa9:	5e                   	pop    %esi[m
[32m+[m[32m80100faa:	5f                   	pop    %edi[m
[32m+[m[32m80100fab:	5d                   	pop    %ebp[m
[32m+[m
[32m+[m[32m  acquire(&ftable.lock);[m
[32m+[m[32m  if(f->ref < 1)[m
[32m+[m[32m    panic("fileclose");[m
[32m+[m[32m  if(--f->ref > 0){[m
[32m+[m[32m    release(&ftable.lock);[m
[32m+[m[32m80100fac:	e9 ff 35 00 00       	jmp    801045b0 <release>[m
[32m+[m[32m80100fb1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    return;[m
[32m+[m[32m  }[m
[32m+[m[32m  ff = *f;[m
[32m+[m[32m80100fb8:	0f b6 47 09          	movzbl 0x9(%edi),%eax[m
[32m+[m[32m80100fbc:	8b 1f                	mov    (%edi),%ebx[m
[32m+[m[32m  f->ref = 0;[m
[32m+[m[32m  f->type = FD_NONE;[m
[32m+[m[32m  release(&ftable.lock);[m
[32m+[m[32m80100fbe:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m    panic("fileclose");[m
[32m+[m[32m  if(--f->ref > 0){[m
[32m+[m[32m    release(&ftable.lock);[m
[32m+[m[32m    return;[m
[32m+[m[32m  }[m
[32m+[m[32m  ff = *f;[m
[32m+[m[32m80100fc1:	8b 77 0c             	mov    0xc(%edi),%esi[m
[32m+[m[32m  f->ref = 0;[m
[32m+[m[32m  f->type = FD_NONE;[m
[32m+[m[32m80100fc4:	c7 07 00 00 00 00    	movl   $0x0,(%edi)[m
[32m+[m[32m    panic("fileclose");[m
[32m+[m[32m  if(--f->ref > 0){[m
[32m+[m[32m    release(&ftable.lock);[m
[32m+[m[32m    return;[m
[32m+[m[32m  }[m
[32m+[m[32m  ff = *f;[m
[32m+[m[32m80100fca:	88 45 e7             	mov    %al,-0x19(%ebp)[m
[32m+[m[32m80100fcd:	8b 47 10             	mov    0x10(%edi),%eax[m
[32m+[m[32m  f->ref = 0;[m
[32m+[m[32m  f->type = FD_NONE;[m
[32m+[m[32m  release(&ftable.lock);[m
[32m+[m[32m80100fd0:	68 e0 ff 10 80       	push   $0x8010ffe0[m
[32m+[m[32m    panic("fileclose");[m
[32m+[m[32m  if(--f->ref > 0){[m
[32m+[m[32m    release(&ftable.lock);[m
[32m+[m[32m    return;[m
[32m+[m[32m  }[m
[32m+[m[32m  ff = *f;[m
[32m+[m[32m80100fd5:	89 45 e0             	mov    %eax,-0x20(%ebp)[m
[32m+[m[32m  f->ref = 0;[m
[32m+[m[32m  f->type = FD_NONE;[m
[32m+[m[32m  release(&ftable.lock);[m
[32m+[m[32m80100fd8:	e8 d3 35 00 00       	call   801045b0 <release>[m
[32m+[m
[32m+[m[32m  if(ff.type == FD_PIPE)[m
[32m+[m[32m80100fdd:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80100fe0:	83 fb 01             	cmp    $0x1,%ebx[m
[32m+[m[32m80100fe3:	74 13                	je     80100ff8 <fileclose+0x88>[m
[32m+[m[32m    pipeclose(ff.pipe, ff.writable);[m
[32m+[m[32m  else if(ff.type == FD_INODE){[m
[32m+[m[32m80100fe5:	83 fb 02             	cmp    $0x2,%ebx[m
[32m+[m[32m80100fe8:	74 26                	je     80101010 <fileclose+0xa0>[m
[32m+[m[32m    begin_op();[m
[32m+[m[32m    iput(ff.ip);[m
[32m+[m[32m    end_op();[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[32m80100fea:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m80100fed:	5b                   	pop    %ebx[m
[32m+[m[32m80100fee:	5e                   	pop    %esi[m
[32m+[m[32m80100fef:	5f                   	pop    %edi[m
[32m+[m[32m80100ff0:	5d                   	pop    %ebp[m
[32m+[m[32m80100ff1:	c3                   	ret[m[41m    [m
[32m+[m[32m80100ff2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m  f->ref = 0;[m
[32m+[m[32m  f->type = FD_NONE;[m
[32m+[m[32m  release(&ftable.lock);[m
[32m+[m
[32m+[m[32m  if(ff.type == FD_PIPE)[m
[32m+[m[32m    pipeclose(ff.pipe, ff.writable);[m
[32m+[m[32m80100ff8:	0f be 5d e7          	movsbl -0x19(%ebp),%ebx[m
[32m+[m[32m80100ffc:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m80100fff:	53                   	push   %ebx[m
[32m+[m[32m80101000:	56                   	push   %esi[m
[32m+[m[32m80101001:	e8 aa 25 00 00       	call   801035b0 <pipeclose>[m
[32m+[m[32m80101006:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80101009:	eb df                	jmp    80100fea <fileclose+0x7a>[m
[32m+[m[32m8010100b:	90                   	nop[m
[32m+[m[32m8010100c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  else if(ff.type == FD_INODE){[m
[32m+[m[32m    begin_op();[m
[32m+[m[32m80101010:	e8 fb 1c 00 00       	call   80102d10 <begin_op>[m
[32m+[m[32m    iput(ff.ip);[m
[32m+[m[32m80101015:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101018:	ff 75 e0             	pushl  -0x20(%ebp)[m
[32m+[m[32m8010101b:	e8 c0 08 00 00       	call   801018e0 <iput>[m
[32m+[m[32m    end_op();[m
[32m+[m[32m80101020:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[32m80101023:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m80101026:	5b                   	pop    %ebx[m
[32m+[m[32m80101027:	5e                   	pop    %esi[m
[32m+[m[32m80101028:	5f                   	pop    %edi[m
[32m+[m[32m80101029:	5d                   	pop    %ebp[m
[32m+[m[32m  if(ff.type == FD_PIPE)[m
[32m+[m[32m    pipeclose(ff.pipe, ff.writable);[m
[32m+[m[32m  else if(ff.type == FD_INODE){[m
[32m+[m[32m    begin_op();[m
[32m+[m[32m    iput(ff.ip);[m
[32m+[m[32m    end_op();[m
[32m+[m[32m8010102a:	e9 51 1d 00 00       	jmp    80102d80 <end_op>[m
[32m+[m[32m{[m
[32m+[m[32m  struct file ff;[m
 [m
[31m-  // Leave room for trap frame.[m
[31m-  sp -= sizeof *p->tf;[m
[31m-80103806:	8d 90 b4 0f 00 00    	lea    0xfb4(%eax),%edx[m
[31m-  sp -= 4;[m
[31m-  *(uint*)sp = (uint)trapret;[m
[32m+[m[32m  acquire(&ftable.lock);[m
[32m+[m[32m  if(f->ref < 1)[m
[32m+[m[32m    panic("fileclose");[m
[32m+[m[32m8010102f:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101032:	68 d8 72 10 80       	push   $0x801072d8[m
[32m+[m[32m80101037:	e8 34 f3 ff ff       	call   80100370 <panic>[m
[32m+[m[32m8010103c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
 [m
[31m-  sp -= sizeof *p->context;[m
[31m-  p->context = (struct context*)sp;[m
[31m-  memset(p->context, 0, sizeof *p->context);[m
[31m-8010380c:	83 ec 04             	sub    $0x4,%esp[m
[31m-  // Set up new context to start executing at forkret,[m
[31m-  // which returns to trapret.[m
[31m-  sp -= 4;[m
[31m-  *(uint*)sp = (uint)trapret;[m
[32m+[m[32m80101040 <filestat>:[m
[32m+[m[32m}[m
 [m
[31m-  sp -= sizeof *p->context;[m
[31m-8010380f:	05 9c 0f 00 00       	add    $0xf9c,%eax[m
[32m+[m[32m// Get metadata about file f.[m
[32m+[m[32mint[m
[32m+[m[32mfilestat(struct file *f, struct stat *st)[m
[32m+[m[32m{[m
[32m+[m[32m80101040:	55                   	push   %ebp[m
[32m+[m[32m80101041:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80101043:	53                   	push   %ebx[m
[32m+[m[32m80101044:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m80101047:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m  if(f->type == FD_INODE){[m
[32m+[m[32m8010104a:	83 3b 02             	cmpl   $0x2,(%ebx)[m
[32m+[m[32m8010104d:	75 31                	jne    80101080 <filestat+0x40>[m
[32m+[m[32m    ilock(f->ip);[m
[32m+[m[32m8010104f:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101052:	ff 73 10             	pushl  0x10(%ebx)[m
[32m+[m[32m80101055:	e8 56 07 00 00       	call   801017b0 <ilock>[m
[32m+[m[32m    stati(f->ip, st);[m
[32m+[m[32m8010105a:	58                   	pop    %eax[m
[32m+[m[32m8010105b:	5a                   	pop    %edx[m
[32m+[m[32m8010105c:	ff 75 0c             	pushl  0xc(%ebp)[m
[32m+[m[32m8010105f:	ff 73 10             	pushl  0x10(%ebx)[m
[32m+[m[32m80101062:	e8 d9 09 00 00       	call   80101a40 <stati>[m
[32m+[m[32m    iunlock(f->ip);[m
[32m+[m[32m80101067:	59                   	pop    %ecx[m
[32m+[m[32m80101068:	ff 73 10             	pushl  0x10(%ebx)[m
[32m+[m[32m8010106b:	e8 20 08 00 00       	call   80101890 <iunlock>[m
     return 0;[m
[32m+[m[32m80101070:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80101073:	31 c0                	xor    %eax,%eax[m
   }[m
[31m-  sp = p->kstack + KSTACKSIZE;[m
[31m-[m
[31m-  // Leave room for trap frame.[m
[31m-  sp -= sizeof *p->tf;[m
[31m-80103814:	89 53 18             	mov    %edx,0x18(%ebx)[m
[31m-  p->tf = (struct trapframe*)sp;[m
[32m+[m[32m  return -1;[m
[32m+[m[32m}[m
[32m+[m[32m80101075:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[32m+[m[32m80101078:	c9                   	leave[m[41m  [m
[32m+[m[32m80101079:	c3                   	ret[m[41m    [m
[32m+[m[32m8010107a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m    ilock(f->ip);[m
[32m+[m[32m    stati(f->ip, st);[m
[32m+[m[32m    iunlock(f->ip);[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  return -1;[m
[32m+[m[32m80101080:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[32m+[m[32m}[m
[32m+[m[32m80101085:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[32m+[m[32m80101088:	c9                   	leave[m[41m  [m
[32m+[m[32m80101089:	c3                   	ret[m[41m    [m
[32m+[m[32m8010108a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
 [m
[31m-  // Set up new context to start executing at forkret,[m
[31m-  // which returns to trapret.[m
[31m-  sp -= 4;[m
[31m-  *(uint*)sp = (uint)trapret;[m
[31m-80103817:	c7 40 14 3e 57 10 80 	movl   $0x8010573e,0x14(%eax)[m
[32m+[m[32m80101090 <fileread>:[m
 [m
[31m-  sp -= sizeof *p->context;[m
[31m-  p->context = (struct context*)sp;[m
[31m-  memset(p->context, 0, sizeof *p->context);[m
[31m-8010381e:	6a 14                	push   $0x14[m
[31m-80103820:	6a 00                	push   $0x0[m
[31m-80103822:	50                   	push   %eax[m
[31m-  // which returns to trapret.[m
[31m-  sp -= 4;[m
[31m-  *(uint*)sp = (uint)trapret;[m
[32m+[m[32m// Read from file f.[m
[32m+[m[32mint[m
[32m+[m[32mfileread(struct file *f, char *addr, int n)[m
[32m+[m[32m{[m
[32m+[m[32m80101090:	55                   	push   %ebp[m
[32m+[m[32m80101091:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80101093:	57                   	push   %edi[m
[32m+[m[32m80101094:	56                   	push   %esi[m
[32m+[m[32m80101095:	53                   	push   %ebx[m
[32m+[m[32m80101096:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101099:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m8010109c:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[32m+[m[32m8010109f:	8b 7d 10             	mov    0x10(%ebp),%edi[m
[32m+[m[32m  int r;[m
[32m+[m
[32m+[m[32m  if(f->readable == 0)[m
[32m+[m[32m801010a2:	80 7b 08 00          	cmpb   $0x0,0x8(%ebx)[m
[32m+[m[32m801010a6:	74 60                	je     80101108 <fileread+0x78>[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  if(f->type == FD_PIPE)[m
[32m+[m[32m801010a8:	8b 03                	mov    (%ebx),%eax[m
[32m+[m[32m801010aa:	83 f8 01             	cmp    $0x1,%eax[m
[32m+[m[32m801010ad:	74 41                	je     801010f0 <fileread+0x60>[m
[32m+[m[32m    return piperead(f->pipe, addr, n);[m
[32m+[m[32m  if(f->type == FD_INODE){[m
[32m+[m[32m801010af:	83 f8 02             	cmp    $0x2,%eax[m
[32m+[m[32m801010b2:	75 5b                	jne    8010110f <fileread+0x7f>[m
[32m+[m[32m    ilock(f->ip);[m
[32m+[m[32m801010b4:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801010b7:	ff 73 10             	pushl  0x10(%ebx)[m
[32m+[m[32m801010ba:	e8 f1 06 00 00       	call   801017b0 <ilock>[m
[32m+[m[32m    if((r = readi(f->ip, addr, f->off, n)) > 0)[m
[32m+[m[32m801010bf:	57                   	push   %edi[m
[32m+[m[32m801010c0:	ff 73 14             	pushl  0x14(%ebx)[m
[32m+[m[32m801010c3:	56                   	push   %esi[m
[32m+[m[32m801010c4:	ff 73 10             	pushl  0x10(%ebx)[m
[32m+[m[32m801010c7:	e8 a4 09 00 00       	call   80101a70 <readi>[m
[32m+[m[32m801010cc:	83 c4 20             	add    $0x20,%esp[m
[32m+[m[32m801010cf:	85 c0                	test   %eax,%eax[m
[32m+[m[32m801010d1:	89 c6                	mov    %eax,%esi[m
[32m+[m[32m801010d3:	7e 03                	jle    801010d8 <fileread+0x48>[m
[32m+[m[32m      f->off += r;[m
[32m+[m[32m801010d5:	01 43 14             	add    %eax,0x14(%ebx)[m
[32m+[m[32m    iunlock(f->ip);[m
[32m+[m[32m801010d8:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801010db:	ff 73 10             	pushl  0x10(%ebx)[m
[32m+[m[32m801010de:	e8 ad 07 00 00       	call   80101890 <iunlock>[m
[32m+[m[32m    return r;[m
[32m+[m[32m801010e3:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  if(f->type == FD_PIPE)[m
[32m+[m[32m    return piperead(f->pipe, addr, n);[m
[32m+[m[32m  if(f->type == FD_INODE){[m
[32m+[m[32m    ilock(f->ip);[m
[32m+[m[32m    if((r = readi(f->ip, addr, f->off, n)) > 0)[m
[32m+[m[32m801010e6:	89 f0                	mov    %esi,%eax[m
[32m+[m[32m      f->off += r;[m
[32m+[m[32m    iunlock(f->ip);[m
[32m+[m[32m    return r;[m
[32m+[m[32m  }[m
[32m+[m[32m  panic("fileread");[m
[32m+[m[32m}[m
[32m+[m[32m801010e8:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m801010eb:	5b                   	pop    %ebx[m
[32m+[m[32m801010ec:	5e                   	pop    %esi[m
[32m+[m[32m801010ed:	5f                   	pop    %edi[m
[32m+[m[32m801010ee:	5d                   	pop    %ebp[m
[32m+[m[32m801010ef:	c3                   	ret[m[41m    [m
[32m+[m[32m  int r;[m
[32m+[m
[32m+[m[32m  if(f->readable == 0)[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  if(f->type == FD_PIPE)[m
[32m+[m[32m    return piperead(f->pipe, addr, n);[m
[32m+[m[32m801010f0:	8b 43 0c             	mov    0xc(%ebx),%eax[m
[32m+[m[32m801010f3:	89 45 08             	mov    %eax,0x8(%ebp)[m
[32m+[m[32m      f->off += r;[m
[32m+[m[32m    iunlock(f->ip);[m
[32m+[m[32m    return r;[m
[32m+[m[32m  }[m
[32m+[m[32m  panic("fileread");[m
[32m+[m[32m}[m
[32m+[m[32m801010f6:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m801010f9:	5b                   	pop    %ebx[m
[32m+[m[32m801010fa:	5e                   	pop    %esi[m
[32m+[m[32m801010fb:	5f                   	pop    %edi[m
[32m+[m[32m801010fc:	5d                   	pop    %ebp[m
[32m+[m[32m  int r;[m
[32m+[m
[32m+[m[32m  if(f->readable == 0)[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  if(f->type == FD_PIPE)[m
[32m+[m[32m    return piperead(f->pipe, addr, n);[m
[32m+[m[32m801010fd:	e9 7e 26 00 00       	jmp    80103780 <piperead>[m
[32m+[m[32m80101102:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32mfileread(struct file *f, char *addr, int n)[m
[32m+[m[32m{[m
[32m+[m[32m  int r;[m
 [m
[31m-  sp -= sizeof *p->context;[m
[31m-  p->context = (struct context*)sp;[m
[31m-80103823:	89 43 1c             	mov    %eax,0x1c(%ebx)[m
[31m-  memset(p->context, 0, sizeof *p->context);[m
[31m-80103826:	e8 c5 0c 00 00       	call   801044f0 <memset>[m
[31m-  p->context->eip = (uint)forkret;[m
[31m-8010382b:	8b 43 1c             	mov    0x1c(%ebx),%eax[m
[32m+[m[32m  if(f->readable == 0)[m
[32m+[m[32m    return -1;[m
[32m+[m[32m80101108:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[32m+[m[32m8010110d:	eb d9                	jmp    801010e8 <fileread+0x58>[m
[32m+[m[32m    if((r = readi(f->ip, addr, f->off, n)) > 0)[m
[32m+[m[32m      f->off += r;[m
[32m+[m[32m    iunlock(f->ip);[m
[32m+[m[32m    return r;[m
[32m+[m[32m  }[m
[32m+[m[32m  panic("fileread");[m
[32m+[m[32m8010110f:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101112:	68 e2 72 10 80       	push   $0x801072e2[m
[32m+[m[32m80101117:	e8 54 f2 ff ff       	call   80100370 <panic>[m
[32m+[m[32m8010111c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
 [m
[31m-  return p;[m
[31m-8010382e:	83 c4 10             	add    $0x10,%esp[m
[31m-  *(uint*)sp = (uint)trapret;[m
[32m+[m[32m80101120 <filewrite>:[m
 [m
[31m-  sp -= sizeof *p->context;[m
[31m-  p->context = (struct context*)sp;[m
[31m-  memset(p->context, 0, sizeof *p->context);[m
[31m-  p->context->eip = (uint)forkret;[m
[31m-80103831:	c7 40 10 60 38 10 80 	movl   $0x80103860,0x10(%eax)[m
[32m+[m[32m//PAGEBREAK![m
[32m+[m[32m// Write to file f.[m
[32m+[m[32mint[m
[32m+[m[32mfilewrite(struct file *f, char *addr, int n)[m
[32m+[m[32m{[m
[32m+[m[32m80101120:	55                   	push   %ebp[m
[32m+[m[32m80101121:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80101123:	57                   	push   %edi[m
[32m+[m[32m80101124:	56                   	push   %esi[m
[32m+[m[32m80101125:	53                   	push   %ebx[m
[32m+[m[32m80101126:	83 ec 1c             	sub    $0x1c,%esp[m
[32m+[m[32m80101129:	8b 75 08             	mov    0x8(%ebp),%esi[m
[32m+[m[32m8010112c:	8b 45 0c             	mov    0xc(%ebp),%eax[m
[32m+[m[32m  int r;[m
[32m+[m
[32m+[m[32m  if(f->writable == 0)[m
[32m+[m[32m8010112f:	80 7e 09 00          	cmpb   $0x0,0x9(%esi)[m
[32m+[m
[32m+[m[32m//PAGEBREAK![m
[32m+[m[32m// Write to file f.[m
[32m+[m[32mint[m
[32m+[m[32mfilewrite(struct file *f, char *addr, int n)[m
[32m+[m[32m{[m
[32m+[m[32m80101133:	89 45 dc             	mov    %eax,-0x24(%ebp)[m
[32m+[m[32m80101136:	8b 45 10             	mov    0x10(%ebp),%eax[m
[32m+[m[32m80101139:	89 45 e4             	mov    %eax,-0x1c(%ebp)[m
[32m+[m[32m  int r;[m
 [m
[31m-  return p;[m
[31m-80103838:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m  if(f->writable == 0)[m
[32m+[m[32m8010113c:	0f 84 aa 00 00 00    	je     801011ec <filewrite+0xcc>[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  if(f->type == FD_PIPE)[m
[32m+[m[32m80101142:	8b 06                	mov    (%esi),%eax[m
[32m+[m[32m80101144:	83 f8 01             	cmp    $0x1,%eax[m
[32m+[m[32m80101147:	0f 84 c2 00 00 00    	je     8010120f <filewrite+0xef>[m
[32m+[m[32m    return pipewrite(f->pipe, addr, n);[m
[32m+[m[32m  if(f->type == FD_INODE){[m
[32m+[m[32m8010114d:	83 f8 02             	cmp    $0x2,%eax[m
[32m+[m[32m80101150:	0f 85 d8 00 00 00    	jne    8010122e <filewrite+0x10e>[m
[32m+[m[32m    // and 2 blocks of slop for non-aligned writes.[m
[32m+[m[32m    // this really belongs lower down, since writei()[m
[32m+[m[32m    // might be writing a device like the console.[m
[32m+[m[32m    int max = ((LOGSIZE-1-1-2) / 2) * 512;[m
[32m+[m[32m    int i = 0;[m
[32m+[m[32m    while(i < n){[m
[32m+[m[32m80101156:	8b 45 e4             	mov    -0x1c(%ebp),%eax[m
[32m+[m[32m80101159:	31 ff                	xor    %edi,%edi[m
[32m+[m[32m8010115b:	85 c0                	test   %eax,%eax[m
[32m+[m[32m8010115d:	7f 34                	jg     80101193 <filewrite+0x73>[m
[32m+[m[32m8010115f:	e9 9c 00 00 00       	jmp    80101200 <filewrite+0xe0>[m
[32m+[m[32m80101164:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m        n1 = max;[m
[32m+[m
[32m+[m[32m      begin_op();[m
[32m+[m[32m      ilock(f->ip);[m
[32m+[m[32m      if ((r = writei(f->ip, addr + i, f->off, n1)) > 0)[m
[32m+[m[32m        f->off += r;[m
[32m+[m[32m80101168:	01 46 14             	add    %eax,0x14(%esi)[m
[32m+[m[32m      iunlock(f->ip);[m
[32m+[m[32m8010116b:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m8010116e:	ff 76 10             	pushl  0x10(%esi)[m
[32m+[m[32m        n1 = max;[m
[32m+[m
[32m+[m[32m      begin_op();[m
[32m+[m[32m      ilock(f->ip);[m
[32m+[m[32m      if ((r = writei(f->ip, addr + i, f->off, n1)) > 0)[m
[32m+[m[32m        f->off += r;[m
[32m+[m[32m80101171:	89 45 e0             	mov    %eax,-0x20(%ebp)[m
[32m+[m[32m      iunlock(f->ip);[m
[32m+[m[32m80101174:	e8 17 07 00 00       	call   80101890 <iunlock>[m
[32m+[m[32m      end_op();[m
[32m+[m[32m80101179:	e8 02 1c 00 00       	call   80102d80 <end_op>[m
[32m+[m[32m8010117e:	8b 45 e0             	mov    -0x20(%ebp),%eax[m
[32m+[m[32m80101181:	83 c4 10             	add    $0x10,%esp[m
[32m+[m
[32m+[m[32m      if(r < 0)[m
[32m+[m[32m        break;[m
[32m+[m[32m      if(r != n1)[m
[32m+[m[32m80101184:	39 d8                	cmp    %ebx,%eax[m
[32m+[m[32m80101186:	0f 85 95 00 00 00    	jne    80101221 <filewrite+0x101>[m
[32m+[m[32m        panic("short filewrite");[m
[32m+[m[32m      i += r;[m
[32m+[m[32m8010118c:	01 c7                	add    %eax,%edi[m
[32m+[m[32m    // and 2 blocks of slop for non-aligned writes.[m
[32m+[m[32m    // this really belongs lower down, since writei()[m
[32m+[m[32m    // might be writing a device like the console.[m
[32m+[m[32m    int max = ((LOGSIZE-1-1-2) / 2) * 512;[m
[32m+[m[32m    int i = 0;[m
[32m+[m[32m    while(i < n){[m
[32m+[m[32m8010118e:	39 7d e4             	cmp    %edi,-0x1c(%ebp)[m
[32m+[m[32m80101191:	7e 6d                	jle    80101200 <filewrite+0xe0>[m
[32m+[m[32m      int n1 = n - i;[m
[32m+[m[32m80101193:	8b 5d e4             	mov    -0x1c(%ebp),%ebx[m
[32m+[m[32m80101196:	b8 00 1a 00 00       	mov    $0x1a00,%eax[m
[32m+[m[32m8010119b:	29 fb                	sub    %edi,%ebx[m
[32m+[m[32m8010119d:	81 fb 00 1a 00 00    	cmp    $0x1a00,%ebx[m
[32m+[m[32m801011a3:	0f 4f d8             	cmovg  %eax,%ebx[m
[32m+[m[32m      if(n1 > max)[m
[32m+[m[32m        n1 = max;[m
[32m+[m
[32m+[m[32m      begin_op();[m
[32m+[m[32m801011a6:	e8 65 1b 00 00       	call   80102d10 <begin_op>[m
[32m+[m[32m      ilock(f->ip);[m
[32m+[m[32m801011ab:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801011ae:	ff 76 10             	pushl  0x10(%esi)[m
[32m+[m[32m801011b1:	e8 fa 05 00 00       	call   801017b0 <ilock>[m
[32m+[m[32m      if ((r = writei(f->ip, addr + i, f->off, n1)) > 0)[m
[32m+[m[32m801011b6:	8b 45 dc             	mov    -0x24(%ebp),%eax[m
[32m+[m[32m801011b9:	53                   	push   %ebx[m
[32m+[m[32m801011ba:	ff 76 14             	pushl  0x14(%esi)[m
[32m+[m[32m801011bd:	01 f8                	add    %edi,%eax[m
[32m+[m[32m801011bf:	50                   	push   %eax[m
[32m+[m[32m801011c0:	ff 76 10             	pushl  0x10(%esi)[m
[32m+[m[32m801011c3:	e8 a8 09 00 00       	call   80101b70 <writei>[m
[32m+[m[32m801011c8:	83 c4 20             	add    $0x20,%esp[m
[32m+[m[32m801011cb:	85 c0                	test   %eax,%eax[m
[32m+[m[32m801011cd:	7f 99                	jg     80101168 <filewrite+0x48>[m
[32m+[m[32m        f->off += r;[m
[32m+[m[32m      iunlock(f->ip);[m
[32m+[m[32m801011cf:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801011d2:	ff 76 10             	pushl  0x10(%esi)[m
[32m+[m[32m801011d5:	89 45 e0             	mov    %eax,-0x20(%ebp)[m
[32m+[m[32m801011d8:	e8 b3 06 00 00       	call   80101890 <iunlock>[m
[32m+[m[32m      end_op();[m
[32m+[m[32m801011dd:	e8 9e 1b 00 00       	call   80102d80 <end_op>[m
[32m+[m
[32m+[m[32m      if(r < 0)[m
[32m+[m[32m801011e2:	8b 45 e0             	mov    -0x20(%ebp),%eax[m
[32m+[m[32m801011e5:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m801011e8:	85 c0                	test   %eax,%eax[m
[32m+[m[32m801011ea:	74 98                	je     80101184 <filewrite+0x64>[m
[32m+[m[32m      i += r;[m
[32m+[m[32m    }[m
[32m+[m[32m    return i == n ? n : -1;[m
[32m+[m[32m  }[m
[32m+[m[32m  panic("filewrite");[m
 }[m
[31m-8010383a:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[31m-8010383d:	c9                   	leave  [m
[31m-8010383e:	c3                   	ret    [m
[31m-8010383f:	90                   	nop[m
[31m-[m
[31m-  for(p = ptable.proc; p < &ptable.proc[NPROC]; p++)[m
[31m-    if(p->state == UNUSED)[m
[31m-      goto found;[m
[31m-[m
[31m-  release(&ptable.lock);[m
[31m-80103840:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103843:	68 a0 2d 11 80       	push   $0x80112da0[m
[31m-80103848:	e8 53 0c 00 00       	call   801044a0 <release>[m
[31m-  return 0;[m
[31m-8010384d:	83 c4 10             	add    $0x10,%esp[m
[31m-80103850:	31 c0                	xor    %eax,%eax[m
[31m-  p->context = (struct context*)sp;[m
[31m-  memset(p->context, 0, sizeof *p->context);[m
[31m-  p->context->eip = (uint)forkret;[m
[31m-[m
[31m-  return p;[m
[32m+[m[32m801011ec:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m        break;[m
[32m+[m[32m      if(r != n1)[m
[32m+[m[32m        panic("short filewrite");[m
[32m+[m[32m      i += r;[m
[32m+[m[32m    }[m
[32m+[m[32m    return i == n ? n : -1;[m
[32m+[m[32m801011ef:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[32m+[m[32m  }[m
[32m+[m[32m  panic("filewrite");[m
[32m+[m[32m}[m
[32m+[m[32m801011f4:	5b                   	pop    %ebx[m
[32m+[m[32m801011f5:	5e                   	pop    %esi[m
[32m+[m[32m801011f6:	5f                   	pop    %edi[m
[32m+[m[32m801011f7:	5d                   	pop    %ebp[m
[32m+[m[32m801011f8:	c3                   	ret[m[41m    [m
[32m+[m[32m801011f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m        break;[m
[32m+[m[32m      if(r != n1)[m
[32m+[m[32m        panic("short filewrite");[m
[32m+[m[32m      i += r;[m
[32m+[m[32m    }[m
[32m+[m[32m    return i == n ? n : -1;[m
[32m+[m[32m80101200:	3b 7d e4             	cmp    -0x1c(%ebp),%edi[m
[32m+[m[32m80101203:	75 e7                	jne    801011ec <filewrite+0xcc>[m
[32m+[m[32m  }[m
[32m+[m[32m  panic("filewrite");[m
[32m+[m[32m}[m
[32m+[m[32m80101205:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m80101208:	89 f8                	mov    %edi,%eax[m
[32m+[m[32m8010120a:	5b                   	pop    %ebx[m
[32m+[m[32m8010120b:	5e                   	pop    %esi[m
[32m+[m[32m8010120c:	5f                   	pop    %edi[m
[32m+[m[32m8010120d:	5d                   	pop    %ebp[m
[32m+[m[32m8010120e:	c3                   	ret[m[41m    [m
[32m+[m[32m  int r;[m
[32m+[m
[32m+[m[32m  if(f->writable == 0)[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  if(f->type == FD_PIPE)[m
[32m+[m[32m    return pipewrite(f->pipe, addr, n);[m
[32m+[m[32m8010120f:	8b 46 0c             	mov    0xc(%esi),%eax[m
[32m+[m[32m80101212:	89 45 08             	mov    %eax,0x8(%ebp)[m
[32m+[m[32m      i += r;[m
[32m+[m[32m    }[m
[32m+[m[32m    return i == n ? n : -1;[m
[32m+[m[32m  }[m
[32m+[m[32m  panic("filewrite");[m
[32m+[m[32m}[m
[32m+[m[32m80101215:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m80101218:	5b                   	pop    %ebx[m
[32m+[m[32m80101219:	5e                   	pop    %esi[m
[32m+[m[32m8010121a:	5f                   	pop    %edi[m
[32m+[m[32m8010121b:	5d                   	pop    %ebp[m
[32m+[m[32m  int r;[m
[32m+[m
[32m+[m[32m  if(f->writable == 0)[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  if(f->type == FD_PIPE)[m
[32m+[m[32m    return pipewrite(f->pipe, addr, n);[m
[32m+[m[32m8010121c:	e9 2f 24 00 00       	jmp    80103650 <pipewrite>[m
[32m+[m[32m      end_op();[m
[32m+[m
[32m+[m[32m      if(r < 0)[m
[32m+[m[32m        break;[m
[32m+[m[32m      if(r != n1)[m
[32m+[m[32m        panic("short filewrite");[m
[32m+[m[32m80101221:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101224:	68 eb 72 10 80       	push   $0x801072eb[m
[32m+[m[32m80101229:	e8 42 f1 ff ff       	call   80100370 <panic>[m
[32m+[m[32m      i += r;[m
[32m+[m[32m    }[m
[32m+[m[32m    return i == n ? n : -1;[m
[32m+[m[32m  }[m
[32m+[m[32m  panic("filewrite");[m
[32m+[m[32m8010122e:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101231:	68 f1 72 10 80       	push   $0x801072f1[m
[32m+[m[32m80101236:	e8 35 f1 ff ff       	call   80100370 <panic>[m
[32m+[m[32m8010123b:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m8010123d:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m8010123f:	90                   	nop[m
[32m+[m
[32m+[m[32m80101240 <balloc>:[m
[32m+[m[32m// Blocks.[m
[32m+[m
[32m+[m[32m// Allocate a zeroed disk block.[m
[32m+[m[32mstatic uint[m
[32m+[m[32mballoc(uint dev)[m
[32m+[m[32m{[m
[32m+[m[32m80101240:	55                   	push   %ebp[m
[32m+[m[32m80101241:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80101243:	57                   	push   %edi[m
[32m+[m[32m80101244:	56                   	push   %esi[m
[32m+[m[32m80101245:	53                   	push   %ebx[m
[32m+[m[32m80101246:	83 ec 1c             	sub    $0x1c,%esp[m
[32m+[m[32m  int b, bi, m;[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m
[32m+[m[32m  bp = 0;[m
[32m+[m[32m  for(b = 0; b < sb.size; b += BPB){[m
[32m+[m[32m80101249:	8b 0d e0 09 11 80    	mov    0x801109e0,%ecx[m
[32m+[m[32m// Blocks.[m
[32m+[m
[32m+[m[32m// Allocate a zeroed disk block.[m
[32m+[m[32mstatic uint[m
[32m+[m[32mballoc(uint dev)[m
[32m+[m[32m{[m
[32m+[m[32m8010124f:	89 45 d8             	mov    %eax,-0x28(%ebp)[m
[32m+[m[32m  int b, bi, m;[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m
[32m+[m[32m  bp = 0;[m
[32m+[m[32m  for(b = 0; b < sb.size; b += BPB){[m
[32m+[m[32m80101252:	85 c9                	test   %ecx,%ecx[m
[32m+[m[32m80101254:	0f 84 85 00 00 00    	je     801012df <balloc+0x9f>[m
[32m+[m[32m8010125a:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)[m
[32m+[m[32m    bp = bread(dev, BBLOCK(b, sb));[m
[32m+[m[32m80101261:	8b 75 dc             	mov    -0x24(%ebp),%esi[m
[32m+[m[32m80101264:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m80101267:	89 f0                	mov    %esi,%eax[m
[32m+[m[32m80101269:	c1 f8 0c             	sar    $0xc,%eax[m
[32m+[m[32m8010126c:	03 05 f8 09 11 80    	add    0x801109f8,%eax[m
[32m+[m[32m80101272:	50                   	push   %eax[m
[32m+[m[32m80101273:	ff 75 d8             	pushl  -0x28(%ebp)[m
[32m+[m[32m80101276:	e8 55 ee ff ff       	call   801000d0 <bread>[m
[32m+[m[32m8010127b:	89 45 e4             	mov    %eax,-0x1c(%ebp)[m
[32m+[m[32m8010127e:	a1 e0 09 11 80       	mov    0x801109e0,%eax[m
[32m+[m[32m80101283:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80101286:	89 45 e0             	mov    %eax,-0x20(%ebp)[m
[32m+[m[32m    for(bi = 0; bi < BPB && b + bi < sb.size; bi++){[m
[32m+[m[32m80101289:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m8010128b:	eb 2d                	jmp    801012ba <balloc+0x7a>[m
[32m+[m[32m8010128d:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m      m = 1 << (bi % 8);[m
[32m+[m[32m80101290:	89 c1                	mov    %eax,%ecx[m
[32m+[m[32m80101292:	ba 01 00 00 00       	mov    $0x1,%edx[m
[32m+[m[32m      if((bp->data[bi/8] & m) == 0){  // Is block free?[m
[32m+[m[32m80101297:	8b 5d e4             	mov    -0x1c(%ebp),%ebx[m
[32m+[m
[32m+[m[32m  bp = 0;[m
[32m+[m[32m  for(b = 0; b < sb.size; b += BPB){[m
[32m+[m[32m    bp = bread(dev, BBLOCK(b, sb));[m
[32m+[m[32m    for(bi = 0; bi < BPB && b + bi < sb.size; bi++){[m
[32m+[m[32m      m = 1 << (bi % 8);[m
[32m+[m[32m8010129a:	83 e1 07             	and    $0x7,%ecx[m
[32m+[m[32m8010129d:	d3 e2                	shl    %cl,%edx[m
[32m+[m[32m      if((bp->data[bi/8] & m) == 0){  // Is block free?[m
[32m+[m[32m8010129f:	89 c1                	mov    %eax,%ecx[m
[32m+[m[32m801012a1:	c1 f9 03             	sar    $0x3,%ecx[m
[32m+[m[32m801012a4:	0f b6 7c 0b 5c       	movzbl 0x5c(%ebx,%ecx,1),%edi[m
[32m+[m[32m801012a9:	85 d7                	test   %edx,%edi[m
[32m+[m[32m801012ab:	74 43                	je     801012f0 <balloc+0xb0>[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m
[32m+[m[32m  bp = 0;[m
[32m+[m[32m  for(b = 0; b < sb.size; b += BPB){[m
[32m+[m[32m    bp = bread(dev, BBLOCK(b, sb));[m
[32m+[m[32m    for(bi = 0; bi < BPB && b + bi < sb.size; bi++){[m
[32m+[m[32m801012ad:	83 c0 01             	add    $0x1,%eax[m
[32m+[m[32m801012b0:	83 c6 01             	add    $0x1,%esi[m
[32m+[m[32m801012b3:	3d 00 10 00 00       	cmp    $0x1000,%eax[m
[32m+[m[32m801012b8:	74 05                	je     801012bf <balloc+0x7f>[m
[32m+[m[32m801012ba:	3b 75 e0             	cmp    -0x20(%ebp),%esi[m
[32m+[m[32m801012bd:	72 d1                	jb     80101290 <balloc+0x50>[m
[32m+[m[32m        brelse(bp);[m
[32m+[m[32m        bzero(dev, b + bi);[m
[32m+[m[32m        return b + bi;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m801012bf:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801012c2:	ff 75 e4             	pushl  -0x1c(%ebp)[m
[32m+[m[32m801012c5:	e8 16 ef ff ff       	call   801001e0 <brelse>[m
[32m+[m[32m{[m
[32m+[m[32m  int b, bi, m;[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m
[32m+[m[32m  bp = 0;[m
[32m+[m[32m  for(b = 0; b < sb.size; b += BPB){[m
[32m+[m[32m801012ca:	81 45 dc 00 10 00 00 	addl   $0x1000,-0x24(%ebp)[m
[32m+[m[32m801012d1:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m801012d4:	8b 45 dc             	mov    -0x24(%ebp),%eax[m
[32m+[m[32m801012d7:	39 05 e0 09 11 80    	cmp    %eax,0x801109e0[m
[32m+[m[32m801012dd:	77 82                	ja     80101261 <balloc+0x21>[m
[32m+[m[32m        return b + bi;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m  }[m
[32m+[m[32m  panic("balloc: out of blocks");[m
[32m+[m[32m801012df:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801012e2:	68 fb 72 10 80       	push   $0x801072fb[m
[32m+[m[32m801012e7:	e8 84 f0 ff ff       	call   80100370 <panic>[m
[32m+[m[32m801012ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  for(b = 0; b < sb.size; b += BPB){[m
[32m+[m[32m    bp = bread(dev, BBLOCK(b, sb));[m
[32m+[m[32m    for(bi = 0; bi < BPB && b + bi < sb.size; bi++){[m
[32m+[m[32m      m = 1 << (bi % 8);[m
[32m+[m[32m      if((bp->data[bi/8] & m) == 0){  // Is block free?[m
[32m+[m[32m        bp->data[bi/8] |= m;  // Mark block in use.[m
[32m+[m[32m801012f0:	09 fa                	or     %edi,%edx[m
[32m+[m[32m801012f2:	8b 7d e4             	mov    -0x1c(%ebp),%edi[m
[32m+[m[32m        log_write(bp);[m
[32m+[m[32m801012f5:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m  for(b = 0; b < sb.size; b += BPB){[m
[32m+[m[32m    bp = bread(dev, BBLOCK(b, sb));[m
[32m+[m[32m    for(bi = 0; bi < BPB && b + bi < sb.size; bi++){[m
[32m+[m[32m      m = 1 << (bi % 8);[m
[32m+[m[32m      if((bp->data[bi/8] & m) == 0){  // Is block free?[m
[32m+[m[32m        bp->data[bi/8] |= m;  // Mark block in use.[m
[32m+[m[32m801012f8:	88 54 0f 5c          	mov    %dl,0x5c(%edi,%ecx,1)[m
[32m+[m[32m        log_write(bp);[m
[32m+[m[32m801012fc:	57                   	push   %edi[m
[32m+[m[32m801012fd:	e8 ee 1b 00 00       	call   80102ef0 <log_write>[m
[32m+[m[32m        brelse(bp);[m
[32m+[m[32m80101302:	89 3c 24             	mov    %edi,(%esp)[m
[32m+[m[32m80101305:	e8 d6 ee ff ff       	call   801001e0 <brelse>[m
[32m+[m[32mstatic void[m
[32m+[m[32mbzero(int dev, int bno)[m
[32m+[m[32m{[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m
[32m+[m[32m  bp = bread(dev, bno);[m
[32m+[m[32m8010130a:	58                   	pop    %eax[m
[32m+[m[32m8010130b:	5a                   	pop    %edx[m
[32m+[m[32m8010130c:	56                   	push   %esi[m
[32m+[m[32m8010130d:	ff 75 d8             	pushl  -0x28(%ebp)[m
[32m+[m[32m80101310:	e8 bb ed ff ff       	call   801000d0 <bread>[m
[32m+[m[32m80101315:	89 c3                	mov    %eax,%ebx[m
[32m+[m[32m  memset(bp->data, 0, BSIZE);[m
[32m+[m[32m80101317:	8d 40 5c             	lea    0x5c(%eax),%eax[m
[32m+[m[32m8010131a:	83 c4 0c             	add    $0xc,%esp[m
[32m+[m[32m8010131d:	68 00 02 00 00       	push   $0x200[m
[32m+[m[32m80101322:	6a 00                	push   $0x0[m
[32m+[m[32m80101324:	50                   	push   %eax[m
[32m+[m[32m80101325:	e8 d6 32 00 00       	call   80104600 <memset>[m
[32m+[m[32m  log_write(bp);[m
[32m+[m[32m8010132a:	89 1c 24             	mov    %ebx,(%esp)[m
[32m+[m[32m8010132d:	e8 be 1b 00 00       	call   80102ef0 <log_write>[m
[32m+[m[32m  brelse(bp);[m
[32m+[m[32m80101332:	89 1c 24             	mov    %ebx,(%esp)[m
[32m+[m[32m80101335:	e8 a6 ee ff ff       	call   801001e0 <brelse>[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m  }[m
[32m+[m[32m  panic("balloc: out of blocks");[m
[32m+[m[32m}[m
[32m+[m[32m8010133a:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m8010133d:	89 f0                	mov    %esi,%eax[m
[32m+[m[32m8010133f:	5b                   	pop    %ebx[m
[32m+[m[32m80101340:	5e                   	pop    %esi[m
[32m+[m[32m80101341:	5f                   	pop    %edi[m
[32m+[m[32m80101342:	5d                   	pop    %ebp[m
[32m+[m[32m80101343:	c3                   	ret[m[41m    [m
[32m+[m[32m80101344:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m8010134a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi[m
[32m+[m
[32m+[m[32m80101350 <iget>:[m
[32m+[m[32m// Find the inode with number inum on device dev[m
[32m+[m[32m// and return the in-memory copy. Does not lock[m
[32m+[m[32m// the inode and does not read it from disk.[m
[32m+[m[32mstatic struct inode*[m
[32m+[m[32miget(uint dev, uint inum)[m
[32m+[m[32m{[m
[32m+[m[32m80101350:	55                   	push   %ebp[m
[32m+[m[32m80101351:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80101353:	57                   	push   %edi[m
[32m+[m[32m80101354:	56                   	push   %esi[m
[32m+[m[32m80101355:	53                   	push   %ebx[m
[32m+[m[32m80101356:	89 c7                	mov    %eax,%edi[m
[32m+[m[32m  struct inode *ip, *empty;[m
[32m+[m
[32m+[m[32m  acquire(&icache.lock);[m
[32m+[m
[32m+[m[32m  // Is the inode already cached?[m
[32m+[m[32m  empty = 0;[m
[32m+[m[32m80101358:	31 f6                	xor    %esi,%esi[m
[32m+[m[32m  for(ip = &icache.inode[0]; ip < &icache.inode[NINODE]; ip++){[m
[32m+[m[32m8010135a:	bb 34 0a 11 80       	mov    $0x80110a34,%ebx[m
[32m+[m[32m// Find the inode with number inum on device dev[m
[32m+[m[32m// and return the in-memory copy. Does not lock[m
[32m+[m[32m// the inode and does not read it from disk.[m
[32m+[m[32mstatic struct inode*[m
[32m+[m[32miget(uint dev, uint inum)[m
[32m+[m[32m{[m
[32m+[m[32m8010135f:	83 ec 28             	sub    $0x28,%esp[m
[32m+[m[32m80101362:	89 55 e4             	mov    %edx,-0x1c(%ebp)[m
[32m+[m[32m  struct inode *ip, *empty;[m
[32m+[m
[32m+[m[32m  acquire(&icache.lock);[m
[32m+[m[32m80101365:	68 00 0a 11 80       	push   $0x80110a00[m
[32m+[m[32m8010136a:	e8 61 30 00 00       	call   801043d0 <acquire>[m
[32m+[m[32m8010136f:	83 c4 10             	add    $0x10,%esp[m
[32m+[m
[32m+[m[32m  // Is the inode already cached?[m
[32m+[m[32m  empty = 0;[m
[32m+[m[32m  for(ip = &icache.inode[0]; ip < &icache.inode[NINODE]; ip++){[m
[32m+[m[32m80101372:	8b 55 e4             	mov    -0x1c(%ebp),%edx[m
[32m+[m[32m80101375:	eb 1b                	jmp    80101392 <iget+0x42>[m
[32m+[m[32m80101377:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m80101379:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    if(ip->ref > 0 && ip->dev == dev && ip->inum == inum){[m
[32m+[m[32m      ip->ref++;[m
[32m+[m[32m      release(&icache.lock);[m
[32m+[m[32m      return ip;[m
[32m+[m[32m    }[m
[32m+[m[32m    if(empty == 0 && ip->ref == 0)    // Remember empty slot.[m
[32m+[m[32m80101380:	85 f6                	test   %esi,%esi[m
[32m+[m[32m80101382:	74 44                	je     801013c8 <iget+0x78>[m
[32m+[m
[32m+[m[32m  acquire(&icache.lock);[m
[32m+[m
[32m+[m[32m  // Is the inode already cached?[m
[32m+[m[32m  empty = 0;[m
[32m+[m[32m  for(ip = &icache.inode[0]; ip < &icache.inode[NINODE]; ip++){[m
[32m+[m[32m80101384:	81 c3 90 00 00 00    	add    $0x90,%ebx[m
[32m+[m[32m8010138a:	81 fb 54 26 11 80    	cmp    $0x80112654,%ebx[m
[32m+[m[32m80101390:	74 4e                	je     801013e0 <iget+0x90>[m
[32m+[m[32m    if(ip->ref > 0 && ip->dev == dev && ip->inum == inum){[m
[32m+[m[32m80101392:	8b 4b 08             	mov    0x8(%ebx),%ecx[m
[32m+[m[32m80101395:	85 c9                	test   %ecx,%ecx[m
[32m+[m[32m80101397:	7e e7                	jle    80101380 <iget+0x30>[m
[32m+[m[32m80101399:	39 3b                	cmp    %edi,(%ebx)[m
[32m+[m[32m8010139b:	75 e3                	jne    80101380 <iget+0x30>[m
[32m+[m[32m8010139d:	39 53 04             	cmp    %edx,0x4(%ebx)[m
[32m+[m[32m801013a0:	75 de                	jne    80101380 <iget+0x30>[m
[32m+[m[32m      ip->ref++;[m
[32m+[m[32m      release(&icache.lock);[m
[32m+[m[32m801013a2:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m
[32m+[m[32m  // Is the inode already cached?[m
[32m+[m[32m  empty = 0;[m
[32m+[m[32m  for(ip = &icache.inode[0]; ip < &icache.inode[NINODE]; ip++){[m
[32m+[m[32m    if(ip->ref > 0 && ip->dev == dev && ip->inum == inum){[m
[32m+[m[32m      ip->ref++;[m
[32m+[m[32m801013a5:	83 c1 01             	add    $0x1,%ecx[m
[32m+[m[32m      release(&icache.lock);[m
[32m+[m[32m      return ip;[m
[32m+[m[32m801013a8:	89 de                	mov    %ebx,%esi[m
[32m+[m[32m  // Is the inode already cached?[m
[32m+[m[32m  empty = 0;[m
[32m+[m[32m  for(ip = &icache.inode[0]; ip < &icache.inode[NINODE]; ip++){[m
[32m+[m[32m    if(ip->ref > 0 && ip->dev == dev && ip->inum == inum){[m
[32m+[m[32m      ip->ref++;[m
[32m+[m[32m      release(&icache.lock);[m
[32m+[m[32m801013aa:	68 00 0a 11 80       	push   $0x80110a00[m
[32m+[m
[32m+[m[32m  // Is the inode already cached?[m
[32m+[m[32m  empty = 0;[m
[32m+[m[32m  for(ip = &icache.inode[0]; ip < &icache.inode[NINODE]; ip++){[m
[32m+[m[32m    if(ip->ref > 0 && ip->dev == dev && ip->inum == inum){[m
[32m+[m[32m      ip->ref++;[m
[32m+[m[32m801013af:	89 4b 08             	mov    %ecx,0x8(%ebx)[m
[32m+[m[32m      release(&icache.lock);[m
[32m+[m[32m801013b2:	e8 f9 31 00 00       	call   801045b0 <release>[m
[32m+[m[32m      return ip;[m
[32m+[m[32m801013b7:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m  ip->ref = 1;[m
[32m+[m[32m  ip->flags = 0;[m
[32m+[m[32m  release(&icache.lock);[m
[32m+[m
[32m+[m[32m  return ip;[m
 }[m
[31m-80103852:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[31m-80103855:	c9                   	leave  [m
[31m-80103856:	c3                   	ret    [m
[32m+[m[32m801013ba:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m801013bd:	89 f0                	mov    %esi,%eax[m
[32m+[m[32m801013bf:	5b                   	pop    %ebx[m
[32m+[m[32m801013c0:	5e                   	pop    %esi[m
[32m+[m[32m801013c1:	5f                   	pop    %edi[m
[32m+[m[32m801013c2:	5d                   	pop    %ebp[m
[32m+[m[32m801013c3:	c3                   	ret[m[41m    [m
[32m+[m[32m801013c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    if(ip->ref > 0 && ip->dev == dev && ip->inum == inum){[m
[32m+[m[32m      ip->ref++;[m
[32m+[m[32m      release(&icache.lock);[m
[32m+[m[32m      return ip;[m
[32m+[m[32m    }[m
[32m+[m[32m    if(empty == 0 && ip->ref == 0)    // Remember empty slot.[m
[32m+[m[32m801013c8:	85 c9                	test   %ecx,%ecx[m
[32m+[m[32m801013ca:	0f 44 f3             	cmove  %ebx,%esi[m
[32m+[m
[32m+[m[32m  acquire(&icache.lock);[m
[32m+[m
[32m+[m[32m  // Is the inode already cached?[m
[32m+[m[32m  empty = 0;[m
[32m+[m[32m  for(ip = &icache.inode[0]; ip < &icache.inode[NINODE]; ip++){[m
[32m+[m[32m801013cd:	81 c3 90 00 00 00    	add    $0x90,%ebx[m
[32m+[m[32m801013d3:	81 fb 54 26 11 80    	cmp    $0x80112654,%ebx[m
[32m+[m[32m801013d9:	75 b7                	jne    80101392 <iget+0x42>[m
[32m+[m[32m801013db:	90                   	nop[m
[32m+[m[32m801013dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    if(empty == 0 && ip->ref == 0)    // Remember empty slot.[m
[32m+[m[32m      empty = ip;[m
[32m+[m[32m  }[m
 [m
[31m-  release(&ptable.lock);[m
[32m+[m[32m  // Recycle an inode cache entry.[m
[32m+[m[32m  if(empty == 0)[m
[32m+[m[32m801013e0:	85 f6                	test   %esi,%esi[m
[32m+[m[32m801013e2:	74 2d                	je     80101411 <iget+0xc1>[m
[32m+[m[32m  ip = empty;[m
[32m+[m[32m  ip->dev = dev;[m
[32m+[m[32m  ip->inum = inum;[m
[32m+[m[32m  ip->ref = 1;[m
[32m+[m[32m  ip->flags = 0;[m
[32m+[m[32m  release(&icache.lock);[m
[32m+[m[32m801013e4:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m  // Recycle an inode cache entry.[m
[32m+[m[32m  if(empty == 0)[m
[32m+[m[32m    panic("iget: no inodes");[m
[32m+[m
[32m+[m[32m  ip = empty;[m
[32m+[m[32m  ip->dev = dev;[m
[32m+[m[32m801013e7:	89 3e                	mov    %edi,(%esi)[m
[32m+[m[32m  ip->inum = inum;[m
[32m+[m[32m801013e9:	89 56 04             	mov    %edx,0x4(%esi)[m
[32m+[m[32m  ip->ref = 1;[m
[32m+[m[32m801013ec:	c7 46 08 01 00 00 00 	movl   $0x1,0x8(%esi)[m
[32m+[m[32m  ip->flags = 0;[m
[32m+[m[32m801013f3:	c7 46 4c 00 00 00 00 	movl   $0x0,0x4c(%esi)[m
[32m+[m[32m  release(&icache.lock);[m
[32m+[m[32m801013fa:	68 00 0a 11 80       	push   $0x80110a00[m
[32m+[m[32m801013ff:	e8 ac 31 00 00       	call   801045b0 <release>[m
[32m+[m
[32m+[m[32m  return ip;[m
[32m+[m[32m80101404:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m}[m
[32m+[m[32m80101407:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m8010140a:	89 f0                	mov    %esi,%eax[m
[32m+[m[32m8010140c:	5b                   	pop    %ebx[m
[32m+[m[32m8010140d:	5e                   	pop    %esi[m
[32m+[m[32m8010140e:	5f                   	pop    %edi[m
[32m+[m[32m8010140f:	5d                   	pop    %ebp[m
[32m+[m[32m80101410:	c3                   	ret[m[41m    [m
[32m+[m[32m      empty = ip;[m
[32m+[m[32m  }[m
 [m
[31m-  // Allocate kernel stack.[m
[31m-  if((p->kstack = kalloc()) == 0){[m
[31m-    p->state = UNUSED;[m
[31m-80103857:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)[m
[31m-    return 0;[m
[31m-8010385e:	eb da                	jmp    8010383a <allocproc+0x9a>[m
[32m+[m[32m  // Recycle an inode cache entry.[m
[32m+[m[32m  if(empty == 0)[m
[32m+[m[32m    panic("iget: no inodes");[m
[32m+[m[32m80101411:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101414:	68 11 73 10 80       	push   $0x80107311[m
[32m+[m[32m80101419:	e8 52 ef ff ff       	call   80100370 <panic>[m
[32m+[m[32m8010141e:	66 90                	xchg   %ax,%ax[m
 [m
[31m-80103860 <forkret>:[m
[32m+[m[32m80101420 <bmap>:[m
 [m
[31m-// A fork child's very first scheduling by scheduler()[m
[31m-// will swtch here.  "Return" to user space.[m
[31m-void[m
[31m-forkret(void)[m
[32m+[m[32m// Return the disk block address of the nth block in inode ip.[m
[32m+[m[32m// If there is no such block, bmap allocates one.[m
[32m+[m[32mstatic uint[m
[32m+[m[32mbmap(struct inode *ip, uint bn)[m
 {[m
[31m-80103860:	55                   	push   %ebp[m
[31m-80103861:	89 e5                	mov    %esp,%ebp[m
[31m-80103863:	83 ec 14             	sub    $0x14,%esp[m
[31m-  static int first = 1;[m
[31m-  // Still holding ptable.lock from scheduler.[m
[31m-  release(&ptable.lock);[m
[31m-80103866:	68 a0 2d 11 80       	push   $0x80112da0[m
[31m-8010386b:	e8 30 0c 00 00       	call   801044a0 <release>[m
[32m+[m[32m80101420:	55                   	push   %ebp[m
[32m+[m[32m80101421:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80101423:	57                   	push   %edi[m
[32m+[m[32m80101424:	56                   	push   %esi[m
[32m+[m[32m80101425:	53                   	push   %ebx[m
[32m+[m[32m80101426:	89 c6                	mov    %eax,%esi[m
[32m+[m[32m80101428:	83 ec 1c             	sub    $0x1c,%esp[m
[32m+[m[32m  uint addr, *a;[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m
[32m+[m[32m  if(bn < NDIRECT){[m
[32m+[m[32m8010142b:	83 fa 0b             	cmp    $0xb,%edx[m
[32m+[m[32m8010142e:	77 18                	ja     80101448 <bmap+0x28>[m
[32m+[m[32m80101430:	8d 1c 90             	lea    (%eax,%edx,4),%ebx[m
[32m+[m[32m    if((addr = ip->addrs[bn]) == 0)[m
[32m+[m[32m80101433:	8b 43 5c             	mov    0x5c(%ebx),%eax[m
[32m+[m[32m80101436:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80101438:	74 76                	je     801014b0 <bmap+0x90>[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m    return addr;[m
[32m+[m[32m  }[m
 [m
[31m-  if (first) {[m
[31m-80103870:	a1 04 a0 10 80       	mov    0x8010a004,%eax[m
[31m-80103875:	83 c4 10             	add    $0x10,%esp[m
[31m-80103878:	85 c0                	test   %eax,%eax[m
[31m-8010387a:	75 04                	jne    80103880 <forkret+0x20>[m
[31m-    iinit(ROOTDEV);[m
[31m-    initlog(ROOTDEV);[m
[32m+[m[32m  panic("bmap: out of range");[m
[32m+[m[32m}[m
[32m+[m[32m8010143a:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m8010143d:	5b                   	pop    %ebx[m
[32m+[m[32m8010143e:	5e                   	pop    %esi[m
[32m+[m[32m8010143f:	5f                   	pop    %edi[m
[32m+[m[32m80101440:	5d                   	pop    %ebp[m
[32m+[m[32m80101441:	c3                   	ret[m[41m    [m
[32m+[m[32m80101442:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m  if(bn < NDIRECT){[m
[32m+[m[32m    if((addr = ip->addrs[bn]) == 0)[m
[32m+[m[32m      ip->addrs[bn] = addr = balloc(ip->dev);[m
[32m+[m[32m    return addr;[m
[32m+[m[32m  }[m
[32m+[m[32m  bn -= NDIRECT;[m
[32m+[m[32m80101448:	8d 5a f4             	lea    -0xc(%edx),%ebx[m
[32m+[m
[32m+[m[32m  if(bn < NINDIRECT){[m
[32m+[m[32m8010144b:	83 fb 7f             	cmp    $0x7f,%ebx[m
[32m+[m[32m8010144e:	0f 87 83 00 00 00    	ja     801014d7 <bmap+0xb7>[m
[32m+[m[32m    // Load indirect block, allocating if necessary.[m
[32m+[m[32m    if((addr = ip->addrs[NDIRECT]) == 0)[m
[32m+[m[32m80101454:	8b 80 8c 00 00 00    	mov    0x8c(%eax),%eax[m
[32m+[m[32m8010145a:	85 c0                	test   %eax,%eax[m
[32m+[m[32m8010145c:	74 6a                	je     801014c8 <bmap+0xa8>[m
[32m+[m[32m      ip->addrs[NDIRECT] = addr = balloc(ip->dev);[m
[32m+[m[32m    bp = bread(ip->dev, addr);[m
[32m+[m[32m8010145e:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m80101461:	50                   	push   %eax[m
[32m+[m[32m80101462:	ff 36                	pushl  (%esi)[m
[32m+[m[32m80101464:	e8 67 ec ff ff       	call   801000d0 <bread>[m
[32m+[m[32m    a = (uint*)bp->data;[m
[32m+[m[32m    if((addr = a[bn]) == 0){[m
[32m+[m[32m80101469:	8d 54 98 5c          	lea    0x5c(%eax,%ebx,4),%edx[m
[32m+[m[32m8010146d:	83 c4 10             	add    $0x10,%esp[m
[32m+[m
[32m+[m[32m  if(bn < NINDIRECT){[m
[32m+[m[32m    // Load indirect block, allocating if necessary.[m
[32m+[m[32m    if((addr = ip->addrs[NDIRECT]) == 0)[m
[32m+[m[32m      ip->addrs[NDIRECT] = addr = balloc(ip->dev);[m
[32m+[m[32m    bp = bread(ip->dev, addr);[m
[32m+[m[32m80101470:	89 c7                	mov    %eax,%edi[m
[32m+[m[32m    a = (uint*)bp->data;[m
[32m+[m[32m    if((addr = a[bn]) == 0){[m
[32m+[m[32m80101472:	8b 1a                	mov    (%edx),%ebx[m
[32m+[m[32m80101474:	85 db                	test   %ebx,%ebx[m
[32m+[m[32m80101476:	75 1d                	jne    80101495 <bmap+0x75>[m
[32m+[m[32m      a[bn] = addr = balloc(ip->dev);[m
[32m+[m[32m80101478:	8b 06                	mov    (%esi),%eax[m
[32m+[m[32m8010147a:	89 55 e4             	mov    %edx,-0x1c(%ebp)[m
[32m+[m[32m8010147d:	e8 be fd ff ff       	call   80101240 <balloc>[m
[32m+[m[32m80101482:	8b 55 e4             	mov    -0x1c(%ebp),%edx[m
[32m+[m[32m      log_write(bp);[m
[32m+[m[32m80101485:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m    if((addr = ip->addrs[NDIRECT]) == 0)[m
[32m+[m[32m      ip->addrs[NDIRECT] = addr = balloc(ip->dev);[m
[32m+[m[32m    bp = bread(ip->dev, addr);[m
[32m+[m[32m    a = (uint*)bp->data;[m
[32m+[m[32m    if((addr = a[bn]) == 0){[m
[32m+[m[32m      a[bn] = addr = balloc(ip->dev);[m
[32m+[m[32m80101488:	89 c3                	mov    %eax,%ebx[m
[32m+[m[32m8010148a:	89 02                	mov    %eax,(%edx)[m
[32m+[m[32m      log_write(bp);[m
[32m+[m[32m8010148c:	57                   	push   %edi[m
[32m+[m[32m8010148d:	e8 5e 1a 00 00       	call   80102ef0 <log_write>[m
[32m+[m[32m80101492:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m    }[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m80101495:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101498:	57                   	push   %edi[m
[32m+[m[32m80101499:	e8 42 ed ff ff       	call   801001e0 <brelse>[m
[32m+[m[32m8010149e:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m    return addr;[m
   }[m
 [m
[31m-  // Return to "caller", actually trapret (see allocproc).[m
[32m+[m[32m  panic("bmap: out of range");[m
 }[m
[31m-8010387c:	c9                   	leave  [m
[31m-8010387d:	c3                   	ret    [m
[31m-8010387e:	66 90                	xchg   %ax,%ax[m
[31m-  if (first) {[m
[31m-    // Some initialization functions must be run in the context[m
[31m-    // of a regular process (e.g., they call sleep), and thus cannot[m
[31m-    // be run from main().[m
[31m-    first = 0;[m
[31m-    iinit(ROOTDEV);[m
[31m-80103880:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801014a1:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m    a = (uint*)bp->data;[m
[32m+[m[32m    if((addr = a[bn]) == 0){[m
[32m+[m[32m      a[bn] = addr = balloc(ip->dev);[m
[32m+[m[32m      log_write(bp);[m
[32m+[m[32m    }[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m801014a4:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m    return addr;[m
[32m+[m[32m  }[m
 [m
[31m-  if (first) {[m
[31m-    // Some initialization functions must be run in the context[m
[31m-    // of a regular process (e.g., they call sleep), and thus cannot[m
[31m-    // be run from main().[m
[31m-    first = 0;[m
[31m-80103883:	c7 05 04 a0 10 80 00 	movl   $0x0,0x8010a004[m
[31m-8010388a:	00 00 00 [m
[31m-    iinit(ROOTDEV);[m
[31m-8010388d:	6a 01                	push   $0x1[m
[31m-8010388f:	e8 1c dc ff ff       	call   801014b0 <iinit>[m
[31m-    initlog(ROOTDEV);[m
[31m-80103894:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)[m
[31m-8010389b:	e8 d0 f2 ff ff       	call   80102b70 <initlog>[m
[31m-801038a0:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m  panic("bmap: out of range");[m
[32m+[m[32m}[m
[32m+[m[32m801014a6:	5b                   	pop    %ebx[m
[32m+[m[32m801014a7:	5e                   	pop    %esi[m
[32m+[m[32m801014a8:	5f                   	pop    %edi[m
[32m+[m[32m801014a9:	5d                   	pop    %ebp[m
[32m+[m[32m801014aa:	c3                   	ret[m[41m    [m
[32m+[m[32m801014ab:	90                   	nop[m
[32m+[m[32m801014ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  uint addr, *a;[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m
[32m+[m[32m  if(bn < NDIRECT){[m
[32m+[m[32m    if((addr = ip->addrs[bn]) == 0)[m
[32m+[m[32m      ip->addrs[bn] = addr = balloc(ip->dev);[m
[32m+[m[32m801014b0:	8b 06                	mov    (%esi),%eax[m
[32m+[m[32m801014b2:	e8 89 fd ff ff       	call   80101240 <balloc>[m
[32m+[m[32m801014b7:	89 43 5c             	mov    %eax,0x5c(%ebx)[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m    return addr;[m
   }[m
 [m
[31m-  // Return to "caller", actually trapret (see allocproc).[m
[32m+[m[32m  panic("bmap: out of range");[m
 }[m
[31m-801038a3:	c9                   	leave  [m
[31m-801038a4:	c3                   	ret    [m
[31m-801038a5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-801038a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m801014ba:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m801014bd:	5b                   	pop    %ebx[m
[32m+[m[32m801014be:	5e                   	pop    %esi[m
[32m+[m[32m801014bf:	5f                   	pop    %edi[m
[32m+[m[32m801014c0:	5d                   	pop    %ebp[m
[32m+[m[32m801014c1:	c3                   	ret[m[41m    [m
[32m+[m[32m801014c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m  bn -= NDIRECT;[m
[32m+[m
[32m+[m[32m  if(bn < NINDIRECT){[m
[32m+[m[32m    // Load indirect block, allocating if necessary.[m
[32m+[m[32m    if((addr = ip->addrs[NDIRECT]) == 0)[m
[32m+[m[32m      ip->addrs[NDIRECT] = addr = balloc(ip->dev);[m
[32m+[m[32m801014c8:	8b 06                	mov    (%esi),%eax[m
[32m+[m[32m801014ca:	e8 71 fd ff ff       	call   80101240 <balloc>[m
[32m+[m[32m801014cf:	89 86 8c 00 00 00    	mov    %eax,0x8c(%esi)[m
[32m+[m[32m801014d5:	eb 87                	jmp    8010145e <bmap+0x3e>[m
[32m+[m[32m    }[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m    return addr;[m
[32m+[m[32m  }[m
 [m
[31m-801038b0 <pinit>:[m
[32m+[m[32m  panic("bmap: out of range");[m
[32m+[m[32m801014d7:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801014da:	68 21 73 10 80       	push   $0x80107321[m
[32m+[m[32m801014df:	e8 8c ee ff ff       	call   80100370 <panic>[m
[32m+[m[32m801014e4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m801014ea:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi[m
 [m
[31m-static void wakeup1(void *chan);[m
[32m+[m[32m801014f0 <readsb>:[m
[32m+[m[32mstruct superblock sb;[m[41m [m
 [m
[32m+[m[32m// Read the super block.[m
 void[m
[31m-pinit(void)[m
[32m+[m[32mreadsb(int dev, struct superblock *sb)[m
 {[m
[31m-801038b0:	55                   	push   %ebp[m
[31m-801038b1:	89 e5                	mov    %esp,%ebp[m
[31m-801038b3:	83 ec 10             	sub    $0x10,%esp[m
[31m-  initlock(&ptable.lock, "ptable");[m
[31m-801038b6:	68 0d 75 10 80       	push   $0x8010750d[m
[31m-801038bb:	68 a0 2d 11 80       	push   $0x80112da0[m
[31m-801038c0:	e8 db 09 00 00       	call   801042a0 <initlock>[m
[32m+[m[32m801014f0:	55                   	push   %ebp[m
[32m+[m[32m801014f1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m801014f3:	56                   	push   %esi[m
[32m+[m[32m801014f4:	53                   	push   %ebx[m
[32m+[m[32m801014f5:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m
[32m+[m[32m  bp = bread(dev, 1);[m
[32m+[m[32m801014f8:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m801014fb:	6a 01                	push   $0x1[m
[32m+[m[32m801014fd:	ff 75 08             	pushl  0x8(%ebp)[m
[32m+[m[32m80101500:	e8 cb eb ff ff       	call   801000d0 <bread>[m
[32m+[m[32m80101505:	89 c3                	mov    %eax,%ebx[m
[32m+[m[32m  memmove(sb, bp->data, sizeof(*sb));[m
[32m+[m[32m80101507:	8d 40 5c             	lea    0x5c(%eax),%eax[m
[32m+[m[32m8010150a:	83 c4 0c             	add    $0xc,%esp[m
[32m+[m[32m8010150d:	6a 1c                	push   $0x1c[m
[32m+[m[32m8010150f:	50                   	push   %eax[m
[32m+[m[32m80101510:	56                   	push   %esi[m
[32m+[m[32m80101511:	e8 9a 31 00 00       	call   801046b0 <memmove>[m
[32m+[m[32m  brelse(bp);[m
[32m+[m[32m80101516:	89 5d 08             	mov    %ebx,0x8(%ebp)[m
[32m+[m[32m80101519:	83 c4 10             	add    $0x10,%esp[m
 }[m
[31m-801038c5:	83 c4 10             	add    $0x10,%esp[m
[31m-801038c8:	c9                   	leave  [m
[31m-801038c9:	c3                   	ret    [m
[31m-801038ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-[m
[31m-801038d0 <userinit>:[m
[31m-[m
[31m-//PAGEBREAK: 32[m
[31m-// Set up first user process.[m
[31m-void[m
[31m-userinit(void)[m
[32m+[m[32m8010151c:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[32m+[m[32m8010151f:	5b                   	pop    %ebx[m
[32m+[m[32m80101520:	5e                   	pop    %esi[m
[32m+[m[32m80101521:	5d                   	pop    %ebp[m
 {[m
[31m-801038d0:	55                   	push   %ebp[m
[31m-801038d1:	89 e5                	mov    %esp,%ebp[m
[31m-801038d3:	53                   	push   %ebx[m
[31m-801038d4:	83 ec 04             	sub    $0x4,%esp[m
[31m-  struct proc *p;[m
[31m-  extern char _binary_initcode_start[], _binary_initcode_size[];[m
[31m-[m
[31m-  p = allocproc();[m
[31m-801038d7:	e8 c4 fe ff ff       	call   801037a0 <allocproc>[m
[31m-801038dc:	89 c3                	mov    %eax,%ebx[m
[31m-  [m
[31m-  initproc = p;[m
[31m-801038de:	a3 bc a5 10 80       	mov    %eax,0x8010a5bc[m
[31m-  if((p->pgdir = setupkvm()) == 0)[m
[31m-801038e3:	e8 98 30 00 00       	call   80106980 <setupkvm>[m
[31m-801038e8:	85 c0                	test   %eax,%eax[m
[31m-801038ea:	89 43 04             	mov    %eax,0x4(%ebx)[m
[31m-801038ed:	0f 84 bd 00 00 00    	je     801039b0 <userinit+0xe0>[m
[31m-    panic("userinit: out of memory?");[m
[31m-  inituvm(p->pgdir, _binary_initcode_start, (int)_binary_initcode_size);[m
[31m-801038f3:	83 ec 04             	sub    $0x4,%esp[m
[31m-801038f6:	68 2c 00 00 00       	push   $0x2c[m
[31m-801038fb:	68 60 a4 10 80       	push   $0x8010a460[m
[31m-80103900:	50                   	push   %eax[m
[31m-80103901:	e8 ca 31 00 00       	call   80106ad0 <inituvm>[m
[31m-  p->sz = PGSIZE;[m
[31m-  memset(p->tf, 0, sizeof(*p->tf));[m
[31m-80103906:	83 c4 0c             	add    $0xc,%esp[m
[31m-  [m
[31m-  initproc = p;[m
[31m-  if((p->pgdir = setupkvm()) == 0)[m
[31m-    panic("userinit: out of memory?");[m
[31m-  inituvm(p->pgdir, _binary_initcode_start, (int)_binary_initcode_size);[m
[31m-  p->sz = PGSIZE;[m
[31m-80103909:	c7 03 00 10 00 00    	movl   $0x1000,(%ebx)[m
[31m-  memset(p->tf, 0, sizeof(*p->tf));[m
[31m-8010390f:	6a 4c                	push   $0x4c[m
[31m-80103911:	6a 00                	push   $0x0[m
[31m-80103913:	ff 73 18             	pushl  0x18(%ebx)[m
[31m-80103916:	e8 d5 0b 00 00       	call   801044f0 <memset>[m
[31m-  p->tf->cs = (SEG_UCODE << 3) | DPL_USER;[m
[31m-8010391b:	8b 43 18             	mov    0x18(%ebx),%eax[m
[31m-8010391e:	ba 23 00 00 00       	mov    $0x23,%edx[m
[31m-  p->tf->ds = (SEG_UDATA << 3) | DPL_USER;[m
[31m-80103923:	b9 2b 00 00 00       	mov    $0x2b,%ecx[m
[31m-  p->tf->ss = p->tf->ds;[m
[31m-  p->tf->eflags = FL_IF;[m
[31m-  p->tf->esp = PGSIZE;[m
[31m-  p->tf->eip = 0;  // beginning of initcode.S[m
[31m-[m
[31m-  safestrcpy(p->name, "initcode", sizeof(p->name));[m
[31m-80103928:	83 c4 0c             	add    $0xc,%esp[m
[31m-  if((p->pgdir = setupkvm()) == 0)[m
[31m-    panic("userinit: out of memory?");[m
[31m-  inituvm(p->pgdir, _binary_initcode_start, (int)_binary_initcode_size);[m
[31m-  p->sz = PGSIZE;[m
[31m-  memset(p->tf, 0, sizeof(*p->tf));[m
[31m-  p->tf->cs = (SEG_UCODE << 3) | DPL_USER;[m
[31m-8010392b:	66 89 50 3c          	mov    %dx,0x3c(%eax)[m
[31m-  p->tf->ds = (SEG_UDATA << 3) | DPL_USER;[m
[31m-8010392f:	8b 43 18             	mov    0x18(%ebx),%eax[m
[31m-80103932:	66 89 48 2c          	mov    %cx,0x2c(%eax)[m
[31m-  p->tf->es = p->tf->ds;[m
[31m-80103936:	8b 43 18             	mov    0x18(%ebx),%eax[m
[31m-80103939:	0f b7 50 2c          	movzwl 0x2c(%eax),%edx[m
[31m-8010393d:	66 89 50 28          	mov    %dx,0x28(%eax)[m
[31m-  p->tf->ss = p->tf->ds;[m
[31m-80103941:	8b 43 18             	mov    0x18(%ebx),%eax[m
[31m-80103944:	0f b7 50 2c          	movzwl 0x2c(%eax),%edx[m
[31m-80103948:	66 89 50 48          	mov    %dx,0x48(%eax)[m
[31m-  p->tf->eflags = FL_IF;[m
[31m-8010394c:	8b 43 18             	mov    0x18(%ebx),%eax[m
[31m-8010394f:	c7 40 40 00 02 00 00 	movl   $0x200,0x40(%eax)[m
[31m-  p->tf->esp = PGSIZE;[m
[31m-80103956:	8b 43 18             	mov    0x18(%ebx),%eax[m
[31m-80103959:	c7 40 44 00 10 00 00 	movl   $0x1000,0x44(%eax)[m
[31m-  p->tf->eip = 0;  // beginning of initcode.S[m
[31m-80103960:	8b 43 18             	mov    0x18(%ebx),%eax[m
[31m-80103963:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%eax)[m
[31m-[m
[31m-  safestrcpy(p->name, "initcode", sizeof(p->name));[m
[31m-8010396a:	8d 43 6c             	lea    0x6c(%ebx),%eax[m
[31m-8010396d:	6a 10                	push   $0x10[m
[31m-8010396f:	68 2d 75 10 80       	push   $0x8010752d[m
[31m-80103974:	50                   	push   %eax[m
[31m-80103975:	e8 76 0d 00 00       	call   801046f0 <safestrcpy>[m
[31m-  p->cwd = namei("/");[m
[31m-8010397a:	c7 04 24 36 75 10 80 	movl   $0x80107536,(%esp)[m
[31m-80103981:	e8 5a e5 ff ff       	call   80101ee0 <namei>[m
[31m-80103986:	89 43 68             	mov    %eax,0x68(%ebx)[m
[32m+[m[32m  struct buf *bp;[m
 [m
[31m-  // this assignment to p->state lets other cores[m
[31m-  // run this process. the acquire forces the above[m
[31m-  // writes to be visible, and the lock is also needed[m
[31m-  // because the assignment might not be atomic.[m
[31m-  acquire(&ptable.lock);[m
[31m-80103989:	c7 04 24 a0 2d 11 80 	movl   $0x80112da0,(%esp)[m
[31m-80103990:	e8 2b 09 00 00       	call   801042c0 <acquire>[m
[32m+[m[32m  bp = bread(dev, 1);[m
[32m+[m[32m  memmove(sb, bp->data, sizeof(*sb));[m
[32m+[m[32m  brelse(bp);[m
[32m+[m[32m80101522:	e9 b9 ec ff ff       	jmp    801001e0 <brelse>[m
[32m+[m[32m80101527:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m80101529:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
[31m-  p->state = RUNNABLE;[m
[31m-80103995:	c7 43 0c 03 00 00 00 	movl   $0x3,0xc(%ebx)[m
[32m+[m[32m80101530 <bfree>:[m
[32m+[m[32m}[m
 [m
[31m-  release(&ptable.lock);[m
[31m-8010399c:	c7 04 24 a0 2d 11 80 	movl   $0x80112da0,(%esp)[m
[31m-801039a3:	e8 f8 0a 00 00       	call   801044a0 <release>[m
[32m+[m[32m// Free a disk block.[m
[32m+[m[32mstatic void[m
[32m+[m[32mbfree(int dev, uint b)[m
[32m+[m[32m{[m
[32m+[m[32m80101530:	55                   	push   %ebp[m
[32m+[m[32m80101531:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80101533:	56                   	push   %esi[m
[32m+[m[32m80101534:	53                   	push   %ebx[m
[32m+[m[32m80101535:	89 d3                	mov    %edx,%ebx[m
[32m+[m[32m80101537:	89 c6                	mov    %eax,%esi[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m[32m  int bi, m;[m
[32m+[m
[32m+[m[32m  readsb(dev, &sb);[m
[32m+[m[32m80101539:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m8010153c:	68 e0 09 11 80       	push   $0x801109e0[m
[32m+[m[32m80101541:	50                   	push   %eax[m
[32m+[m[32m80101542:	e8 a9 ff ff ff       	call   801014f0 <readsb>[m
[32m+[m[32m  bp = bread(dev, BBLOCK(b, sb));[m
[32m+[m[32m80101547:	58                   	pop    %eax[m
[32m+[m[32m80101548:	5a                   	pop    %edx[m
[32m+[m[32m80101549:	89 da                	mov    %ebx,%edx[m
[32m+[m[32m8010154b:	c1 ea 0c             	shr    $0xc,%edx[m
[32m+[m[32m8010154e:	03 15 f8 09 11 80    	add    0x801109f8,%edx[m
[32m+[m[32m80101554:	52                   	push   %edx[m
[32m+[m[32m80101555:	56                   	push   %esi[m
[32m+[m[32m80101556:	e8 75 eb ff ff       	call   801000d0 <bread>[m
[32m+[m[32m  bi = b % BPB;[m
[32m+[m[32m  m = 1 << (bi % 8);[m
[32m+[m[32m8010155b:	89 d9                	mov    %ebx,%ecx[m
[32m+[m[32m  if((bp->data[bi/8] & m) == 0)[m
[32m+[m[32m8010155d:	81 e3 ff 0f 00 00    	and    $0xfff,%ebx[m
[32m+[m[32m  int bi, m;[m
[32m+[m
[32m+[m[32m  readsb(dev, &sb);[m
[32m+[m[32m  bp = bread(dev, BBLOCK(b, sb));[m
[32m+[m[32m  bi = b % BPB;[m
[32m+[m[32m  m = 1 << (bi % 8);[m
[32m+[m[32m80101563:	ba 01 00 00 00       	mov    $0x1,%edx[m
[32m+[m[32m80101568:	83 e1 07             	and    $0x7,%ecx[m
[32m+[m[32m  if((bp->data[bi/8] & m) == 0)[m
[32m+[m[32m8010156b:	c1 fb 03             	sar    $0x3,%ebx[m
[32m+[m[32m8010156e:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m  int bi, m;[m
[32m+[m
[32m+[m[32m  readsb(dev, &sb);[m
[32m+[m[32m  bp = bread(dev, BBLOCK(b, sb));[m
[32m+[m[32m  bi = b % BPB;[m
[32m+[m[32m  m = 1 << (bi % 8);[m
[32m+[m[32m80101571:	d3 e2                	shl    %cl,%edx[m
[32m+[m[32m  if((bp->data[bi/8] & m) == 0)[m
[32m+[m[32m80101573:	0f b6 4c 18 5c       	movzbl 0x5c(%eax,%ebx,1),%ecx[m
[32m+[m[32m80101578:	85 d1                	test   %edx,%ecx[m
[32m+[m[32m8010157a:	74 27                	je     801015a3 <bfree+0x73>[m
[32m+[m[32m8010157c:	89 c6                	mov    %eax,%esi[m
[32m+[m[32m    panic("freeing free block");[m
[32m+[m[32m  bp->data[bi/8] &= ~m;[m
[32m+[m[32m8010157e:	f7 d2                	not    %edx[m
[32m+[m[32m80101580:	89 c8                	mov    %ecx,%eax[m
[32m+[m[32m  log_write(bp);[m
[32m+[m[32m80101582:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m  bp = bread(dev, BBLOCK(b, sb));[m
[32m+[m[32m  bi = b % BPB;[m
[32m+[m[32m  m = 1 << (bi % 8);[m
[32m+[m[32m  if((bp->data[bi/8] & m) == 0)[m
[32m+[m[32m    panic("freeing free block");[m
[32m+[m[32m  bp->data[bi/8] &= ~m;[m
[32m+[m[32m80101585:	21 d0                	and    %edx,%eax[m
[32m+[m[32m80101587:	88 44 1e 5c          	mov    %al,0x5c(%esi,%ebx,1)[m
[32m+[m[32m  log_write(bp);[m
[32m+[m[32m8010158b:	56                   	push   %esi[m
[32m+[m[32m8010158c:	e8 5f 19 00 00       	call   80102ef0 <log_write>[m
[32m+[m[32m  brelse(bp);[m
[32m+[m[32m80101591:	89 34 24             	mov    %esi,(%esp)[m
[32m+[m[32m80101594:	e8 47 ec ff ff       	call   801001e0 <brelse>[m
 }[m
[31m-801039a8:	83 c4 10             	add    $0x10,%esp[m
[31m-801039ab:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[31m-801039ae:	c9                   	leave  [m
[31m-801039af:	c3                   	ret    [m
[32m+[m[32m80101599:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m8010159c:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[32m+[m[32m8010159f:	5b                   	pop    %ebx[m
[32m+[m[32m801015a0:	5e                   	pop    %esi[m
[32m+[m[32m801015a1:	5d                   	pop    %ebp[m
[32m+[m[32m801015a2:	c3                   	ret[m[41m    [m
[32m+[m[32m  readsb(dev, &sb);[m
[32m+[m[32m  bp = bread(dev, BBLOCK(b, sb));[m
[32m+[m[32m  bi = b % BPB;[m
[32m+[m[32m  m = 1 << (bi % 8);[m
[32m+[m[32m  if((bp->data[bi/8] & m) == 0)[m
[32m+[m[32m    panic("freeing free block");[m
[32m+[m[32m801015a3:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801015a6:	68 34 73 10 80       	push   $0x80107334[m
[32m+[m[32m801015ab:	e8 c0 ed ff ff       	call   80100370 <panic>[m
[32m+[m
[32m+[m[32m801015b0 <iinit>:[m
[32m+[m[32m  struct inode inode[NINODE];[m
[32m+[m[32m} icache;[m
 [m
[31m-  p = allocproc();[m
[32m+[m[32mvoid[m
[32m+[m[32miinit(int dev)[m
[32m+[m[32m{[m
[32m+[m[32m801015b0:	55                   	push   %ebp[m
[32m+[m[32m801015b1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m801015b3:	53                   	push   %ebx[m
[32m+[m[32m801015b4:	bb 40 0a 11 80       	mov    $0x80110a40,%ebx[m
[32m+[m[32m801015b9:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m  int i = 0;[m
   [m
[31m-  initproc = p;[m
[31m-  if((p->pgdir = setupkvm()) == 0)[m
[31m-    panic("userinit: out of memory?");[m
[31m-801039b0:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801039b3:	68 14 75 10 80       	push   $0x80107514[m
[31m-801039b8:	e8 b3 c9 ff ff       	call   80100370 <panic>[m
[31m-801039bd:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m  initlock(&icache.lock, "icache");[m
[32m+[m[32m801015bc:	68 47 73 10 80       	push   $0x80107347[m
[32m+[m[32m801015c1:	68 00 0a 11 80       	push   $0x80110a00[m
[32m+[m[32m801015c6:	e8 e5 2d 00 00       	call   801043b0 <initlock>[m
[32m+[m[32m801015cb:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m801015ce:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m  for(i = 0; i < NINODE; i++) {[m
[32m+[m[32m    initsleeplock(&icache.inode[i].lock, "inode");[m
[32m+[m[32m801015d0:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m801015d3:	68 4e 73 10 80       	push   $0x8010734e[m
[32m+[m[32m801015d8:	53                   	push   %ebx[m
[32m+[m[32m801015d9:	81 c3 90 00 00 00    	add    $0x90,%ebx[m
[32m+[m[32m801015df:	e8 bc 2c 00 00       	call   801042a0 <initsleeplock>[m
[32m+[m[32miinit(int dev)[m
[32m+[m[32m{[m
[32m+[m[32m  int i = 0;[m
[32m+[m[41m  [m
[32m+[m[32m  initlock(&icache.lock, "icache");[m
[32m+[m[32m  for(i = 0; i < NINODE; i++) {[m
[32m+[m[32m801015e4:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m801015e7:	81 fb 60 26 11 80    	cmp    $0x80112660,%ebx[m
[32m+[m[32m801015ed:	75 e1                	jne    801015d0 <iinit+0x20>[m
[32m+[m[32m    initsleeplock(&icache.inode[i].lock, "inode");[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  readsb(dev, &sb);[m
[32m+[m[32m801015ef:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m801015f2:	68 e0 09 11 80       	push   $0x801109e0[m
[32m+[m[32m801015f7:	ff 75 08             	pushl  0x8(%ebp)[m
[32m+[m[32m801015fa:	e8 f1 fe ff ff       	call   801014f0 <readsb>[m
[32m+[m[32m  cprintf("sb: size %d nblocks %d ninodes %d nlog %d logstart %d\[m
[32m+[m[32m801015ff:	ff 35 f8 09 11 80    	pushl  0x801109f8[m
[32m+[m[32m80101605:	ff 35 f4 09 11 80    	pushl  0x801109f4[m
[32m+[m[32m8010160b:	ff 35 f0 09 11 80    	pushl  0x801109f0[m
[32m+[m[32m80101611:	ff 35 ec 09 11 80    	pushl  0x801109ec[m
[32m+[m[32m80101617:	ff 35 e8 09 11 80    	pushl  0x801109e8[m
[32m+[m[32m8010161d:	ff 35 e4 09 11 80    	pushl  0x801109e4[m
[32m+[m[32m80101623:	ff 35 e0 09 11 80    	pushl  0x801109e0[m
[32m+[m[32m80101629:	68 a4 73 10 80       	push   $0x801073a4[m
[32m+[m[32m8010162e:	e8 2d f0 ff ff       	call   80100660 <cprintf>[m
[32m+[m[32m inodestart %d bmap start %d\n", sb.size, sb.nblocks,[m
[32m+[m[32m          sb.ninodes, sb.nlog, sb.logstart, sb.inodestart,[m
[32m+[m[32m          sb.bmapstart);[m
[32m+[m[32m}[m
[32m+[m[32m80101633:	83 c4 30             	add    $0x30,%esp[m
[32m+[m[32m80101636:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[32m+[m[32m80101639:	c9                   	leave[m[41m  [m
[32m+[m[32m8010163a:	c3                   	ret[m[41m    [m
[32m+[m[32m8010163b:	90                   	nop[m
[32m+[m[32m8010163c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m
[32m+[m[32m80101640 <ialloc>:[m
[32m+[m[32m//PAGEBREAK![m
[32m+[m[32m// Allocate a new inode with the given type on device dev.[m
[32m+[m[32m// A free inode has a type of zero.[m
[32m+[m[32mstruct inode*[m
[32m+[m[32mialloc(uint dev, short type)[m
[32m+[m[32m{[m
[32m+[m[32m80101640:	55                   	push   %ebp[m
[32m+[m[32m80101641:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80101643:	57                   	push   %edi[m
[32m+[m[32m80101644:	56                   	push   %esi[m
[32m+[m[32m80101645:	53                   	push   %ebx[m
[32m+[m[32m80101646:	83 ec 1c             	sub    $0x1c,%esp[m
[32m+[m[32m  int inum;[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m[32m  struct dinode *dip;[m
[32m+[m
[32m+[m[32m  for(inum = 1; inum < sb.ninodes; inum++){[m
[32m+[m[32m80101649:	83 3d e8 09 11 80 01 	cmpl   $0x1,0x801109e8[m
[32m+[m[32m//PAGEBREAK![m
[32m+[m[32m// Allocate a new inode with the given type on device dev.[m
[32m+[m[32m// A free inode has a type of zero.[m
[32m+[m[32mstruct inode*[m
[32m+[m[32mialloc(uint dev, short type)[m
[32m+[m[32m{[m
[32m+[m[32m80101650:	8b 45 0c             	mov    0xc(%ebp),%eax[m
[32m+[m[32m80101653:	8b 75 08             	mov    0x8(%ebp),%esi[m
[32m+[m[32m80101656:	89 45 e4             	mov    %eax,-0x1c(%ebp)[m
[32m+[m[32m  int inum;[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m[32m  struct dinode *dip;[m
[32m+[m
[32m+[m[32m  for(inum = 1; inum < sb.ninodes; inum++){[m
[32m+[m[32m80101659:	0f 86 91 00 00 00    	jbe    801016f0 <ialloc+0xb0>[m
[32m+[m[32m8010165f:	bb 01 00 00 00       	mov    $0x1,%ebx[m
[32m+[m[32m80101664:	eb 21                	jmp    80101687 <ialloc+0x47>[m
[32m+[m[32m80101666:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m80101669:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m      dip->type = type;[m
[32m+[m[32m      log_write(bp);   // mark it allocated on the disk[m
[32m+[m[32m      brelse(bp);[m
[32m+[m[32m      return iget(dev, inum);[m
[32m+[m[32m    }[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m80101670:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m{[m
[32m+[m[32m  int inum;[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m[32m  struct dinode *dip;[m
[32m+[m
[32m+[m[32m  for(inum = 1; inum < sb.ninodes; inum++){[m
[32m+[m[32m80101673:	83 c3 01             	add    $0x1,%ebx[m
[32m+[m[32m      dip->type = type;[m
[32m+[m[32m      log_write(bp);   // mark it allocated on the disk[m
[32m+[m[32m      brelse(bp);[m
[32m+[m[32m      return iget(dev, inum);[m
[32m+[m[32m    }[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m80101676:	57                   	push   %edi[m
[32m+[m[32m80101677:	e8 64 eb ff ff       	call   801001e0 <brelse>[m
[32m+[m[32m{[m
[32m+[m[32m  int inum;[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m[32m  struct dinode *dip;[m
[32m+[m
[32m+[m[32m  for(inum = 1; inum < sb.ninodes; inum++){[m
[32m+[m[32m8010167c:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m8010167f:	39 1d e8 09 11 80    	cmp    %ebx,0x801109e8[m
[32m+[m[32m80101685:	76 69                	jbe    801016f0 <ialloc+0xb0>[m
[32m+[m[32m    bp = bread(dev, IBLOCK(inum, sb));[m
[32m+[m[32m80101687:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m80101689:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m8010168c:	c1 e8 03             	shr    $0x3,%eax[m
[32m+[m[32m8010168f:	03 05 f4 09 11 80    	add    0x801109f4,%eax[m
[32m+[m[32m80101695:	50                   	push   %eax[m
[32m+[m[32m80101696:	56                   	push   %esi[m
[32m+[m[32m80101697:	e8 34 ea ff ff       	call   801000d0 <bread>[m
[32m+[m[32m8010169c:	89 c7                	mov    %eax,%edi[m
[32m+[m[32m    dip = (struct dinode*)bp->data + inum%IPB;[m
[32m+[m[32m8010169e:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m    if(dip->type == 0){  // a free inode[m
[32m+[m[32m801016a0:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m[32m  struct dinode *dip;[m
[32m+[m
[32m+[m[32m  for(inum = 1; inum < sb.ninodes; inum++){[m
[32m+[m[32m    bp = bread(dev, IBLOCK(inum, sb));[m
[32m+[m[32m    dip = (struct dinode*)bp->data + inum%IPB;[m
[32m+[m[32m801016a3:	83 e0 07             	and    $0x7,%eax[m
[32m+[m[32m801016a6:	c1 e0 06             	shl    $0x6,%eax[m
[32m+[m[32m801016a9:	8d 4c 07 5c          	lea    0x5c(%edi,%eax,1),%ecx[m
[32m+[m[32m    if(dip->type == 0){  // a free inode[m
[32m+[m[32m801016ad:	66 83 39 00          	cmpw   $0x0,(%ecx)[m
[32m+[m[32m801016b1:	75 bd                	jne    80101670 <ialloc+0x30>[m
[32m+[m[32m      memset(dip, 0, sizeof(*dip));[m
[32m+[m[32m801016b3:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m801016b6:	89 4d e0             	mov    %ecx,-0x20(%ebp)[m
[32m+[m[32m801016b9:	6a 40                	push   $0x40[m
[32m+[m[32m801016bb:	6a 00                	push   $0x0[m
[32m+[m[32m801016bd:	51                   	push   %ecx[m
[32m+[m[32m801016be:	e8 3d 2f 00 00       	call   80104600 <memset>[m
[32m+[m[32m      dip->type = type;[m
[32m+[m[32m801016c3:	0f b7 45 e4          	movzwl -0x1c(%ebp),%eax[m
[32m+[m[32m801016c7:	8b 4d e0             	mov    -0x20(%ebp),%ecx[m
[32m+[m[32m801016ca:	66 89 01             	mov    %ax,(%ecx)[m
[32m+[m[32m      log_write(bp);   // mark it allocated on the disk[m
[32m+[m[32m801016cd:	89 3c 24             	mov    %edi,(%esp)[m
[32m+[m[32m801016d0:	e8 1b 18 00 00       	call   80102ef0 <log_write>[m
[32m+[m[32m      brelse(bp);[m
[32m+[m[32m801016d5:	89 3c 24             	mov    %edi,(%esp)[m
[32m+[m[32m801016d8:	e8 03 eb ff ff       	call   801001e0 <brelse>[m
[32m+[m[32m      return iget(dev, inum);[m
[32m+[m[32m801016dd:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m    }[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m  }[m
[32m+[m[32m  panic("ialloc: no inodes");[m
[32m+[m[32m}[m
[32m+[m[32m801016e0:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m    if(dip->type == 0){  // a free inode[m
[32m+[m[32m      memset(dip, 0, sizeof(*dip));[m
[32m+[m[32m      dip->type = type;[m
[32m+[m[32m      log_write(bp);   // mark it allocated on the disk[m
[32m+[m[32m      brelse(bp);[m
[32m+[m[32m      return iget(dev, inum);[m
[32m+[m[32m801016e3:	89 da                	mov    %ebx,%edx[m
[32m+[m[32m801016e5:	89 f0                	mov    %esi,%eax[m
[32m+[m[32m    }[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m  }[m
[32m+[m[32m  panic("ialloc: no inodes");[m
[32m+[m[32m}[m
[32m+[m[32m801016e7:	5b                   	pop    %ebx[m
[32m+[m[32m801016e8:	5e                   	pop    %esi[m
[32m+[m[32m801016e9:	5f                   	pop    %edi[m
[32m+[m[32m801016ea:	5d                   	pop    %ebp[m
[32m+[m[32m    if(dip->type == 0){  // a free inode[m
[32m+[m[32m      memset(dip, 0, sizeof(*dip));[m
[32m+[m[32m      dip->type = type;[m
[32m+[m[32m      log_write(bp);   // mark it allocated on the disk[m
[32m+[m[32m      brelse(bp);[m
[32m+[m[32m      return iget(dev, inum);[m
[32m+[m[32m801016eb:	e9 60 fc ff ff       	jmp    80101350 <iget>[m
[32m+[m[32m    }[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m  }[m
[32m+[m[32m  panic("ialloc: no inodes");[m
[32m+[m[32m801016f0:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801016f3:	68 54 73 10 80       	push   $0x80107354[m
[32m+[m[32m801016f8:	e8 73 ec ff ff       	call   80100370 <panic>[m
[32m+[m[32m801016fd:	8d 76 00             	lea    0x0(%esi),%esi[m
 [m
[31m-801039c0 <growproc>:[m
[32m+[m[32m80101700 <iupdate>:[m
[32m+[m[32m}[m
 [m
[31m-// Grow current process's memory by n bytes.[m
[31m-// Return 0 on success, -1 on failure.[m
[31m-int[m
[31m-growproc(int n)[m
[32m+[m[32m// Copy a modified in-memory inode to disk.[m
[32m+[m[32mvoid[m
[32m+[m[32miupdate(struct inode *ip)[m
 {[m
[31m-801039c0:	55                   	push   %ebp[m
[31m-801039c1:	89 e5                	mov    %esp,%ebp[m
[31m-801039c3:	83 ec 08             	sub    $0x8,%esp[m
[31m-  uint sz;[m
[32m+[m[32m80101700:	55                   	push   %ebp[m
[32m+[m[32m80101701:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80101703:	56                   	push   %esi[m
[32m+[m[32m80101704:	53                   	push   %ebx[m
[32m+[m[32m80101705:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m[32m  struct dinode *dip;[m
[32m+[m
[32m+[m[32m  bp = bread(ip->dev, IBLOCK(ip->inum, sb));[m
[32m+[m[32m80101708:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m8010170b:	8b 43 04             	mov    0x4(%ebx),%eax[m
[32m+[m[32m  dip->type = ip->type;[m
[32m+[m[32m  dip->major = ip->major;[m
[32m+[m[32m  dip->minor = ip->minor;[m
[32m+[m[32m  dip->nlink = ip->nlink;[m
[32m+[m[32m  dip->size = ip->size;[m
[32m+[m[32m  memmove(dip->addrs, ip->addrs, sizeof(ip->addrs));[m
[32m+[m[32m8010170e:	83 c3 5c             	add    $0x5c,%ebx[m
[32m+[m[32miupdate(struct inode *ip)[m
[32m+[m[32m{[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m[32m  struct dinode *dip;[m
[32m+[m
[32m+[m[32m  bp = bread(ip->dev, IBLOCK(ip->inum, sb));[m
[32m+[m[32m80101711:	c1 e8 03             	shr    $0x3,%eax[m
[32m+[m[32m80101714:	03 05 f4 09 11 80    	add    0x801109f4,%eax[m
[32m+[m[32m8010171a:	50                   	push   %eax[m
[32m+[m[32m8010171b:	ff 73 a4             	pushl  -0x5c(%ebx)[m
[32m+[m[32m8010171e:	e8 ad e9 ff ff       	call   801000d0 <bread>[m
[32m+[m[32m80101723:	89 c6                	mov    %eax,%esi[m
[32m+[m[32m  dip = (struct dinode*)bp->data + ip->inum%IPB;[m
[32m+[m[32m80101725:	8b 43 a8             	mov    -0x58(%ebx),%eax[m
[32m+[m[32m  dip->type = ip->type;[m
[32m+[m[32m80101728:	0f b7 53 f4          	movzwl -0xc(%ebx),%edx[m
[32m+[m[32m  dip->major = ip->major;[m
[32m+[m[32m  dip->minor = ip->minor;[m
[32m+[m[32m  dip->nlink = ip->nlink;[m
[32m+[m[32m  dip->size = ip->size;[m
[32m+[m[32m  memmove(dip->addrs, ip->addrs, sizeof(ip->addrs));[m
[32m+[m[32m8010172c:	83 c4 0c             	add    $0xc,%esp[m
[32m+[m[32m{[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m[32m  struct dinode *dip;[m
[32m+[m
[32m+[m[32m  bp = bread(ip->dev, IBLOCK(ip->inum, sb));[m
[32m+[m[32m  dip = (struct dinode*)bp->data + ip->inum%IPB;[m
[32m+[m[32m8010172f:	83 e0 07             	and    $0x7,%eax[m
[32m+[m[32m80101732:	c1 e0 06             	shl    $0x6,%eax[m
[32m+[m[32m80101735:	8d 44 06 5c          	lea    0x5c(%esi,%eax,1),%eax[m
[32m+[m[32m  dip->type = ip->type;[m
[32m+[m[32m80101739:	66 89 10             	mov    %dx,(%eax)[m
[32m+[m[32m  dip->major = ip->major;[m
[32m+[m[32m8010173c:	0f b7 53 f6          	movzwl -0xa(%ebx),%edx[m
[32m+[m[32m  dip->minor = ip->minor;[m
[32m+[m[32m  dip->nlink = ip->nlink;[m
[32m+[m[32m  dip->size = ip->size;[m
[32m+[m[32m  memmove(dip->addrs, ip->addrs, sizeof(ip->addrs));[m
[32m+[m[32m80101740:	83 c0 0c             	add    $0xc,%eax[m
[32m+[m[32m  struct dinode *dip;[m
[32m+[m
[32m+[m[32m  bp = bread(ip->dev, IBLOCK(ip->inum, sb));[m
[32m+[m[32m  dip = (struct dinode*)bp->data + ip->inum%IPB;[m
[32m+[m[32m  dip->type = ip->type;[m
[32m+[m[32m  dip->major = ip->major;[m
[32m+[m[32m80101743:	66 89 50 f6          	mov    %dx,-0xa(%eax)[m
[32m+[m[32m  dip->minor = ip->minor;[m
[32m+[m[32m80101747:	0f b7 53 f8          	movzwl -0x8(%ebx),%edx[m
[32m+[m[32m8010174b:	66 89 50 f8          	mov    %dx,-0x8(%eax)[m
[32m+[m[32m  dip->nlink = ip->nlink;[m
[32m+[m[32m8010174f:	0f b7 53 fa          	movzwl -0x6(%ebx),%edx[m
[32m+[m[32m80101753:	66 89 50 fa          	mov    %dx,-0x6(%eax)[m
[32m+[m[32m  dip->size = ip->size;[m
[32m+[m[32m80101757:	8b 53 fc             	mov    -0x4(%ebx),%edx[m
[32m+[m[32m8010175a:	89 50 fc             	mov    %edx,-0x4(%eax)[m
[32m+[m[32m  memmove(dip->addrs, ip->addrs, sizeof(ip->addrs));[m
[32m+[m[32m8010175d:	6a 34                	push   $0x34[m
[32m+[m[32m8010175f:	53                   	push   %ebx[m
[32m+[m[32m80101760:	50                   	push   %eax[m
[32m+[m[32m80101761:	e8 4a 2f 00 00       	call   801046b0 <memmove>[m
[32m+[m[32m  log_write(bp);[m
[32m+[m[32m80101766:	89 34 24             	mov    %esi,(%esp)[m
[32m+[m[32m80101769:	e8 82 17 00 00       	call   80102ef0 <log_write>[m
[32m+[m[32m  brelse(bp);[m
[32m+[m[32m8010176e:	89 75 08             	mov    %esi,0x8(%ebp)[m
[32m+[m[32m80101771:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m}[m
[32m+[m[32m80101774:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[32m+[m[32m80101777:	5b                   	pop    %ebx[m
[32m+[m[32m80101778:	5e                   	pop    %esi[m
[32m+[m[32m80101779:	5d                   	pop    %ebp[m
[32m+[m[32m  dip->minor = ip->minor;[m
[32m+[m[32m  dip->nlink = ip->nlink;[m
[32m+[m[32m  dip->size = ip->size;[m
[32m+[m[32m  memmove(dip->addrs, ip->addrs, sizeof(ip->addrs));[m
[32m+[m[32m  log_write(bp);[m
[32m+[m[32m  brelse(bp);[m
[32m+[m[32m8010177a:	e9 61 ea ff ff       	jmp    801001e0 <brelse>[m
[32m+[m[32m8010177f:	90                   	nop[m
[32m+[m
[32m+[m[32m80101780 <idup>:[m
[32m+[m
[32m+[m[32m// Increment reference count for ip.[m
[32m+[m[32m// Returns ip to enable ip = idup(ip1) idiom.[m
[32m+[m[32mstruct inode*[m
[32m+[m[32midup(struct inode *ip)[m
[32m+[m[32m{[m
[32m+[m[32m80101780:	55                   	push   %ebp[m
[32m+[m[32m80101781:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80101783:	53                   	push   %ebx[m
[32m+[m[32m80101784:	83 ec 10             	sub    $0x10,%esp[m
[32m+[m[32m80101787:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m  acquire(&icache.lock);[m
[32m+[m[32m8010178a:	68 00 0a 11 80       	push   $0x80110a00[m
[32m+[m[32m8010178f:	e8 3c 2c 00 00       	call   801043d0 <acquire>[m
[32m+[m[32m  ip->ref++;[m
[32m+[m[32m80101794:	83 43 08 01          	addl   $0x1,0x8(%ebx)[m
[32m+[m[32m  release(&icache.lock);[m
[32m+[m[32m80101798:	c7 04 24 00 0a 11 80 	movl   $0x80110a00,(%esp)[m
[32m+[m[32m8010179f:	e8 0c 2e 00 00       	call   801045b0 <release>[m
[32m+[m[32m  return ip;[m
[32m+[m[32m}[m
[32m+[m[32m801017a4:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m801017a6:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[32m+[m[32m801017a9:	c9                   	leave[m[41m  [m
[32m+[m[32m801017aa:	c3                   	ret[m[41m    [m
[32m+[m[32m801017ab:	90                   	nop[m
[32m+[m[32m801017ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
 [m
[31m-  sz = proc->sz;[m
[31m-801039c6:	65 8b 15 04 00 00 00 	mov    %gs:0x4,%edx[m
[32m+[m[32m801017b0 <ilock>:[m
 [m
[31m-// Grow current process's memory by n bytes.[m
[31m-// Return 0 on success, -1 on failure.[m
[31m-int[m
[31m-growproc(int n)[m
[32m+[m[32m// Lock the given inode.[m
[32m+[m[32m// Reads the inode from disk if necessary.[m
[32m+[m[32mvoid[m
[32m+[m[32milock(struct inode *ip)[m
 {[m
[31m-801039cd:	8b 4d 08             	mov    0x8(%ebp),%ecx[m
[31m-  uint sz;[m
[31m-[m
[31m-  sz = proc->sz;[m
[31m-801039d0:	8b 02                	mov    (%edx),%eax[m
[31m-  if(n > 0){[m
[31m-801039d2:	83 f9 00             	cmp    $0x0,%ecx[m
[31m-801039d5:	7e 39                	jle    80103a10 <growproc+0x50>[m
[31m-    if((sz = allocuvm(proc->pgdir, sz, sz + n)) == 0)[m
[31m-801039d7:	83 ec 04             	sub    $0x4,%esp[m
[31m-801039da:	01 c1                	add    %eax,%ecx[m
[31m-801039dc:	51                   	push   %ecx[m
[31m-801039dd:	50                   	push   %eax[m
[31m-801039de:	ff 72 04             	pushl  0x4(%edx)[m
[31m-801039e1:	e8 2a 32 00 00       	call   80106c10 <allocuvm>[m
[31m-801039e6:	83 c4 10             	add    $0x10,%esp[m
[31m-801039e9:	85 c0                	test   %eax,%eax[m
[31m-801039eb:	74 3b                	je     80103a28 <growproc+0x68>[m
[31m-801039ed:	65 8b 15 04 00 00 00 	mov    %gs:0x4,%edx[m
[31m-      return -1;[m
[31m-  } else if(n < 0){[m
[31m-    if((sz = deallocuvm(proc->pgdir, sz, sz + n)) == 0)[m
[31m-      return -1;[m
[32m+[m[32m801017b0:	55                   	push   %ebp[m
[32m+[m[32m801017b1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m801017b3:	56                   	push   %esi[m
[32m+[m[32m801017b4:	53                   	push   %ebx[m
[32m+[m[32m801017b5:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m[32m  struct dinode *dip;[m
[32m+[m
[32m+[m[32m  if(ip == 0 || ip->ref < 1)[m
[32m+[m[32m801017b8:	85 db                	test   %ebx,%ebx[m
[32m+[m[32m801017ba:	0f 84 b4 00 00 00    	je     80101874 <ilock+0xc4>[m
[32m+[m[32m801017c0:	8b 43 08             	mov    0x8(%ebx),%eax[m
[32m+[m[32m801017c3:	85 c0                	test   %eax,%eax[m
[32m+[m[32m801017c5:	0f 8e a9 00 00 00    	jle    80101874 <ilock+0xc4>[m
[32m+[m[32m    panic("ilock");[m
[32m+[m
[32m+[m[32m  acquiresleep(&ip->lock);[m
[32m+[m[32m801017cb:	8d 43 0c             	lea    0xc(%ebx),%eax[m
[32m+[m[32m801017ce:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801017d1:	50                   	push   %eax[m
[32m+[m[32m801017d2:	e8 09 2b 00 00       	call   801042e0 <acquiresleep>[m
[32m+[m
[32m+[m[32m  if(!(ip->flags & I_VALID)){[m
[32m+[m[32m801017d7:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m801017da:	f6 43 4c 02          	testb  $0x2,0x4c(%ebx)[m
[32m+[m[32m801017de:	74 10                	je     801017f0 <ilock+0x40>[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m    ip->flags |= I_VALID;[m
[32m+[m[32m    if(ip->type == 0)[m
[32m+[m[32m      panic("ilock: no type");[m
   }[m
[31m-  proc->sz = sz;[m
[31m-801039f4:	89 02                	mov    %eax,(%edx)[m
[31m-  switchuvm(proc);[m
[31m-801039f6:	83 ec 0c             	sub    $0xc,%esp[m
[31m-801039f9:	65 ff 35 04 00 00 00 	pushl  %gs:0x4[m
[31m-80103a00:	e8 2b 30 00 00       	call   80106a30 <switchuvm>[m
[31m-  return 0;[m
[31m-80103a05:	83 c4 10             	add    $0x10,%esp[m
[31m-80103a08:	31 c0                	xor    %eax,%eax[m
 }[m
[31m-80103a0a:	c9                   	leave  [m
[31m-80103a0b:	c3                   	ret    [m
[31m-80103a0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m801017e0:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[32m+[m[32m801017e3:	5b                   	pop    %ebx[m
[32m+[m[32m801017e4:	5e                   	pop    %esi[m
[32m+[m[32m801017e5:	5d                   	pop    %ebp[m
[32m+[m[32m801017e6:	c3                   	ret[m[41m    [m
[32m+[m[32m801017e7:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m801017e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    panic("ilock");[m
[32m+[m
[32m+[m[32m  acquiresleep(&ip->lock);[m
[32m+[m
[32m+[m[32m  if(!(ip->flags & I_VALID)){[m
[32m+[m[32m    bp = bread(ip->dev, IBLOCK(ip->inum, sb));[m
[32m+[m[32m801017f0:	8b 43 04             	mov    0x4(%ebx),%eax[m
[32m+[m[32m801017f3:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m801017f6:	c1 e8 03             	shr    $0x3,%eax[m
[32m+[m[32m801017f9:	03 05 f4 09 11 80    	add    0x801109f4,%eax[m
[32m+[m[32m801017ff:	50                   	push   %eax[m
[32m+[m[32m80101800:	ff 33                	pushl  (%ebx)[m
[32m+[m[32m80101802:	e8 c9 e8 ff ff       	call   801000d0 <bread>[m
[32m+[m[32m80101807:	89 c6                	mov    %eax,%esi[m
[32m+[m[32m    dip = (struct dinode*)bp->data + ip->inum%IPB;[m
[32m+[m[32m80101809:	8b 43 04             	mov    0x4(%ebx),%eax[m
[32m+[m[32m    ip->type = dip->type;[m
[32m+[m[32m    ip->major = dip->major;[m
[32m+[m[32m    ip->minor = dip->minor;[m
[32m+[m[32m    ip->nlink = dip->nlink;[m
[32m+[m[32m    ip->size = dip->size;[m
[32m+[m[32m    memmove(ip->addrs, dip->addrs, sizeof(ip->addrs));[m
[32m+[m[32m8010180c:	83 c4 0c             	add    $0xc,%esp[m
[32m+[m
[32m+[m[32m  acquiresleep(&ip->lock);[m
[32m+[m
[32m+[m[32m  if(!(ip->flags & I_VALID)){[m
[32m+[m[32m    bp = bread(ip->dev, IBLOCK(ip->inum, sb));[m
[32m+[m[32m    dip = (struct dinode*)bp->data + ip->inum%IPB;[m
[32m+[m[32m8010180f:	83 e0 07             	and    $0x7,%eax[m
[32m+[m[32m80101812:	c1 e0 06             	shl    $0x6,%eax[m
[32m+[m[32m80101815:	8d 44 06 5c          	lea    0x5c(%esi,%eax,1),%eax[m
[32m+[m[32m    ip->type = dip->type;[m
[32m+[m[32m80101819:	0f b7 10             	movzwl (%eax),%edx[m
[32m+[m[32m    ip->major = dip->major;[m
[32m+[m[32m    ip->minor = dip->minor;[m
[32m+[m[32m    ip->nlink = dip->nlink;[m
[32m+[m[32m    ip->size = dip->size;[m
[32m+[m[32m    memmove(ip->addrs, dip->addrs, sizeof(ip->addrs));[m
[32m+[m[32m8010181c:	83 c0 0c             	add    $0xc,%eax[m
[32m+[m[32m  acquiresleep(&ip->lock);[m
[32m+[m
[32m+[m[32m  if(!(ip->flags & I_VALID)){[m
[32m+[m[32m    bp = bread(ip->dev, IBLOCK(ip->inum, sb));[m
[32m+[m[32m    dip = (struct dinode*)bp->data + ip->inum%IPB;[m
[32m+[m[32m    ip->type = dip->type;[m
[32m+[m[32m8010181f:	66 89 53 50          	mov    %dx,0x50(%ebx)[m
[32m+[m[32m    ip->major = dip->major;[m
[32m+[m[32m80101823:	0f b7 50 f6          	movzwl -0xa(%eax),%edx[m
[32m+[m[32m80101827:	66 89 53 52          	mov    %dx,0x52(%ebx)[m
[32m+[m[32m    ip->minor = dip->minor;[m
[32m+[m[32m8010182b:	0f b7 50 f8          	movzwl -0x8(%eax),%edx[m
[32m+[m[32m8010182f:	66 89 53 54          	mov    %dx,0x54(%ebx)[m
[32m+[m[32m    ip->nlink = dip->nlink;[m
[32m+[m[32m80101833:	0f b7 50 fa          	movzwl -0x6(%eax),%edx[m
[32m+[m[32m80101837:	66 89 53 56          	mov    %dx,0x56(%ebx)[m
[32m+[m[32m    ip->size = dip->size;[m
[32m+[m[32m8010183b:	8b 50 fc             	mov    -0x4(%eax),%edx[m
[32m+[m[32m8010183e:	89 53 58             	mov    %edx,0x58(%ebx)[m
[32m+[m[32m    memmove(ip->addrs, dip->addrs, sizeof(ip->addrs));[m
[32m+[m[32m80101841:	6a 34                	push   $0x34[m
[32m+[m[32m80101843:	50                   	push   %eax[m
[32m+[m[32m80101844:	8d 43 5c             	lea    0x5c(%ebx),%eax[m
[32m+[m[32m80101847:	50                   	push   %eax[m
[32m+[m[32m80101848:	e8 63 2e 00 00       	call   801046b0 <memmove>[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m8010184d:	89 34 24             	mov    %esi,(%esp)[m
[32m+[m[32m80101850:	e8 8b e9 ff ff       	call   801001e0 <brelse>[m
[32m+[m[32m    ip->flags |= I_VALID;[m
[32m+[m[32m80101855:	83 4b 4c 02          	orl    $0x2,0x4c(%ebx)[m
[32m+[m[32m    if(ip->type == 0)[m
[32m+[m[32m80101859:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m8010185c:	66 83 7b 50 00       	cmpw   $0x0,0x50(%ebx)[m
[32m+[m[32m80101861:	0f 85 79 ff ff ff    	jne    801017e0 <ilock+0x30>[m
[32m+[m[32m      panic("ilock: no type");[m
[32m+[m[32m80101867:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m8010186a:	68 6c 73 10 80       	push   $0x8010736c[m
[32m+[m[32m8010186f:	e8 fc ea ff ff       	call   80100370 <panic>[m
[32m+[m[32m{[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m[32m  struct dinode *dip;[m
[32m+[m
[32m+[m[32m  if(ip == 0 || ip->ref < 1)[m
[32m+[m[32m    panic("ilock");[m
[32m+[m[32m80101874:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101877:	68 66 73 10 80       	push   $0x80107366[m
[32m+[m[32m8010187c:	e8 ef ea ff ff       	call   80100370 <panic>[m
[32m+[m[32m80101881:	eb 0d                	jmp    80101890 <iunlock>[m
[32m+[m[32m80101883:	90                   	nop[m
[32m+[m[32m80101884:	90                   	nop[m
[32m+[m[32m80101885:	90                   	nop[m
[32m+[m[32m80101886:	90                   	nop[m
[32m+[m[32m80101887:	90                   	nop[m
[32m+[m[32m80101888:	90                   	nop[m
[32m+[m[32m80101889:	90                   	nop[m
[32m+[m[32m8010188a:	90                   	nop[m
[32m+[m[32m8010188b:	90                   	nop[m
[32m+[m[32m8010188c:	90                   	nop[m
[32m+[m[32m8010188d:	90                   	nop[m
[32m+[m[32m8010188e:	90                   	nop[m
[32m+[m[32m8010188f:	90                   	nop[m
[32m+[m
[32m+[m[32m80101890 <iunlock>:[m
[32m+[m[32m}[m
 [m
[31m-  sz = proc->sz;[m
[31m-  if(n > 0){[m
[31m-    if((sz = allocuvm(proc->pgdir, sz, sz + n)) == 0)[m
[31m-      return -1;[m
[31m-  } else if(n < 0){[m
[31m-80103a10:	74 e2                	je     801039f4 <growproc+0x34>[m
[31m-    if((sz = deallocuvm(proc->pgdir, sz, sz + n)) == 0)[m
[31m-80103a12:	83 ec 04             	sub    $0x4,%esp[m
[31m-80103a15:	01 c1                	add    %eax,%ecx[m
[31m-80103a17:	51                   	push   %ecx[m
[31m-80103a18:	50                   	push   %eax[m
[31m-80103a19:	ff 72 04             	pushl  0x4(%edx)[m
[31m-80103a1c:	e8 ef 32 00 00       	call   80106d10 <deallocuvm>[m
[31m-80103a21:	83 c4 10             	add    $0x10,%esp[m
[31m-80103a24:	85 c0                	test   %eax,%eax[m
[31m-80103a26:	75 c5                	jne    801039ed <growproc+0x2d>[m
[31m-  uint sz;[m
[31m-[m
[31m-  sz = proc->sz;[m
[31m-  if(n > 0){[m
[31m-    if((sz = allocuvm(proc->pgdir, sz, sz + n)) == 0)[m
[31m-      return -1;[m
[31m-80103a28:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[31m-      return -1;[m
[31m-  }[m
[31m-  proc->sz = sz;[m
[31m-  switchuvm(proc);[m
[31m-  return 0;[m
[32m+[m[32m// Unlock the given inode.[m
[32m+[m[32mvoid[m
[32m+[m[32miunlock(struct inode *ip)[m
[32m+[m[32m{[m
[32m+[m[32m80101890:	55                   	push   %ebp[m
[32m+[m[32m80101891:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80101893:	56                   	push   %esi[m
[32m+[m[32m80101894:	53                   	push   %ebx[m
[32m+[m[32m80101895:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m  if(ip == 0 || !holdingsleep(&ip->lock) || ip->ref < 1)[m
[32m+[m[32m80101898:	85 db                	test   %ebx,%ebx[m
[32m+[m[32m8010189a:	74 28                	je     801018c4 <iunlock+0x34>[m
[32m+[m[32m8010189c:	8d 73 0c             	lea    0xc(%ebx),%esi[m
[32m+[m[32m8010189f:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801018a2:	56                   	push   %esi[m
[32m+[m[32m801018a3:	e8 d8 2a 00 00       	call   80104380 <holdingsleep>[m
[32m+[m[32m801018a8:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m801018ab:	85 c0                	test   %eax,%eax[m
[32m+[m[32m801018ad:	74 15                	je     801018c4 <iunlock+0x34>[m
[32m+[m[32m801018af:	8b 43 08             	mov    0x8(%ebx),%eax[m
[32m+[m[32m801018b2:	85 c0                	test   %eax,%eax[m
[32m+[m[32m801018b4:	7e 0e                	jle    801018c4 <iunlock+0x34>[m
[32m+[m[32m    panic("iunlock");[m
[32m+[m
[32m+[m[32m  releasesleep(&ip->lock);[m
[32m+[m[32m801018b6:	89 75 08             	mov    %esi,0x8(%ebp)[m
 }[m
[31m-80103a2d:	c9                   	leave  [m
[31m-80103a2e:	c3                   	ret    [m
[31m-80103a2f:	90                   	nop[m
[31m-[m
[31m-80103a30 <fork>:[m
[31m-// Create a new process copying p as the parent.[m
[31m-// Sets up stack to return as if from system call.[m
[31m-// Caller must set state of returned proc to RUNNABLE.[m
[31m-int[m
[31m-fork(void)[m
[32m+[m[32m801018b9:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[32m+[m[32m801018bc:	5b                   	pop    %ebx[m
[32m+[m[32m801018bd:	5e                   	pop    %esi[m
[32m+[m[32m801018be:	5d                   	pop    %ebp[m
[32m+[m[32miunlock(struct inode *ip)[m
 {[m
[31m-80103a30:	55                   	push   %ebp[m
[31m-80103a31:	89 e5                	mov    %esp,%ebp[m
[31m-80103a33:	57                   	push   %edi[m
[31m-80103a34:	56                   	push   %esi[m
[31m-80103a35:	53                   	push   %ebx[m
[31m-80103a36:	83 ec 0c             	sub    $0xc,%esp[m
[31m-  int i, pid;[m
[31m-  struct proc *np;[m
[32m+[m[32m  if(ip == 0 || !holdingsleep(&ip->lock) || ip->ref < 1)[m
[32m+[m[32m    panic("iunlock");[m
 [m
[31m-  // Allocate process.[m
[31m-  if((np = allocproc()) == 0){[m
[31m-80103a39:	e8 62 fd ff ff       	call   801037a0 <allocproc>[m
[31m-80103a3e:	85 c0                	test   %eax,%eax[m
[31m-80103a40:	0f 84 d6 00 00 00    	je     80103b1c <fork+0xec>[m
[31m-80103a46:	89 c3                	mov    %eax,%ebx[m
[31m-    return -1;[m
[32m+[m[32m  releasesleep(&ip->lock);[m
[32m+[m[32m801018bf:	e9 7c 2a 00 00       	jmp    80104340 <releasesleep>[m
[32m+[m[32m// Unlock the given inode.[m
[32m+[m[32mvoid[m
[32m+[m[32miunlock(struct inode *ip)[m
[32m+[m[32m{[m
[32m+[m[32m  if(ip == 0 || !holdingsleep(&ip->lock) || ip->ref < 1)[m
[32m+[m[32m    panic("iunlock");[m
[32m+[m[32m801018c4:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801018c7:	68 7b 73 10 80       	push   $0x8010737b[m
[32m+[m[32m801018cc:	e8 9f ea ff ff       	call   80100370 <panic>[m
[32m+[m[32m801018d1:	eb 0d                	jmp    801018e0 <iput>[m
[32m+[m[32m801018d3:	90                   	nop[m
[32m+[m[32m801018d4:	90                   	nop[m
[32m+[m[32m801018d5:	90                   	nop[m
[32m+[m[32m801018d6:	90                   	nop[m
[32m+[m[32m801018d7:	90                   	nop[m
[32m+[m[32m801018d8:	90                   	nop[m
[32m+[m[32m801018d9:	90                   	nop[m
[32m+[m[32m801018da:	90                   	nop[m
[32m+[m[32m801018db:	90                   	nop[m
[32m+[m[32m801018dc:	90                   	nop[m
[32m+[m[32m801018dd:	90                   	nop[m
[32m+[m[32m801018de:	90                   	nop[m
[32m+[m[32m801018df:	90                   	nop[m
[32m+[m
[32m+[m[32m801018e0 <iput>:[m
[32m+[m[32m// to it, free the inode (and its content) on disk.[m
[32m+[m[32m// All calls to iput() must be inside a transaction in[m
[32m+[m[32m// case it has to free the inode.[m
[32m+[m[32mvoid[m
[32m+[m[32miput(struct inode *ip)[m
[32m+[m[32m{[m
[32m+[m[32m801018e0:	55                   	push   %ebp[m
[32m+[m[32m801018e1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m801018e3:	57                   	push   %edi[m
[32m+[m[32m801018e4:	56                   	push   %esi[m
[32m+[m[32m801018e5:	53                   	push   %ebx[m
[32m+[m[32m801018e6:	83 ec 28             	sub    $0x28,%esp[m
[32m+[m[32m801018e9:	8b 75 08             	mov    0x8(%ebp),%esi[m
[32m+[m[32m  acquire(&icache.lock);[m
[32m+[m[32m801018ec:	68 00 0a 11 80       	push   $0x80110a00[m
[32m+[m[32m801018f1:	e8 da 2a 00 00       	call   801043d0 <acquire>[m
[32m+[m[32m  if(ip->ref == 1 && (ip->flags & I_VALID) && ip->nlink == 0){[m
[32m+[m[32m801018f6:	8b 46 08             	mov    0x8(%esi),%eax[m
[32m+[m[32m801018f9:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m801018fc:	83 f8 01             	cmp    $0x1,%eax[m
[32m+[m[32m801018ff:	74 1f                	je     80101920 <iput+0x40>[m
[32m+[m[32m    ip->type = 0;[m
[32m+[m[32m    iupdate(ip);[m
[32m+[m[32m    acquire(&icache.lock);[m
[32m+[m[32m    ip->flags = 0;[m
   }[m
[31m-[m
[31m-  // Copy process state from p.[m
[31m-  if((np->pgdir = copyuvm(proc->pgdir, proc->sz)) == 0){[m
[31m-80103a48:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[31m-80103a4e:	83 ec 08             	sub    $0x8,%esp[m
[31m-80103a51:	ff 30                	pushl  (%eax)[m
[31m-80103a53:	ff 70 04             	pushl  0x4(%eax)[m
[31m-80103a56:	e8 95 33 00 00       	call   80106df0 <copyuvm>[m
[31m-80103a5b:	83 c4 10             	add    $0x10,%esp[m
[31m-80103a5e:	85 c0                	test   %eax,%eax[m
[31m-80103a60:	89 43 04             	mov    %eax,0x4(%ebx)[m
[31m-80103a63:	0f 84 ba 00 00 00    	je     80103b23 <fork+0xf3>[m
[31m-    kfree(np->kstack);[m
[31m-    np->kstack = 0;[m
[31m-    np->state = UNUSED;[m
[31m-    return -1;[m
[32m+[m[32m  ip->ref--;[m
[32m+[m[32m80101901:	83 e8 01             	sub    $0x1,%eax[m
[32m+[m[32m80101904:	89 46 08             	mov    %eax,0x8(%esi)[m
[32m+[m[32m  release(&icache.lock);[m
[32m+[m[32m80101907:	c7 45 08 00 0a 11 80 	movl   $0x80110a00,0x8(%ebp)[m
[32m+[m[32m}[m
[32m+[m[32m8010190e:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m80101911:	5b                   	pop    %ebx[m
[32m+[m[32m80101912:	5e                   	pop    %esi[m
[32m+[m[32m80101913:	5f                   	pop    %edi[m
[32m+[m[32m80101914:	5d                   	pop    %ebp[m
[32m+[m[32m    iupdate(ip);[m
[32m+[m[32m    acquire(&icache.lock);[m
[32m+[m[32m    ip->flags = 0;[m
   }[m
[31m-  np->sz = proc->sz;[m
[31m-80103a69:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[31m-  np->parent = proc;[m
[31m-  *np->tf = *proc->tf;[m
[31m-80103a6f:	8b 7b 18             	mov    0x18(%ebx),%edi[m
[31m-80103a72:	b9 13 00 00 00       	mov    $0x13,%ecx[m
[31m-    kfree(np->kstack);[m
[31m-    np->kstack = 0;[m
[31m-    np->state = UNUSED;[m
[31m-    return -1;[m
[32m+[m[32m  ip->ref--;[m
[32m+[m[32m  release(&icache.lock);[m
[32m+[m[32m80101915:	e9 96 2c 00 00       	jmp    801045b0 <release>[m
[32m+[m[32m8010191a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m// case it has to free the inode.[m
[32m+[m[32mvoid[m
[32m+[m[32miput(struct inode *ip)[m
[32m+[m[32m{[m
[32m+[m[32m  acquire(&icache.lock);[m
[32m+[m[32m  if(ip->ref == 1 && (ip->flags & I_VALID) && ip->nlink == 0){[m
[32m+[m[32m80101920:	f6 46 4c 02          	testb  $0x2,0x4c(%esi)[m
[32m+[m[32m80101924:	74 db                	je     80101901 <iput+0x21>[m
[32m+[m[32m80101926:	66 83 7e 56 00       	cmpw   $0x0,0x56(%esi)[m
[32m+[m[32m8010192b:	75 d4                	jne    80101901 <iput+0x21>[m
[32m+[m[32m    // inode has no links and no other references: truncate and free.[m
[32m+[m[32m    release(&icache.lock);[m
[32m+[m[32m8010192d:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101930:	8d 5e 5c             	lea    0x5c(%esi),%ebx[m
[32m+[m[32m80101933:	8d be 8c 00 00 00    	lea    0x8c(%esi),%edi[m
[32m+[m[32m80101939:	68 00 0a 11 80       	push   $0x80110a00[m
[32m+[m[32m8010193e:	e8 6d 2c 00 00       	call   801045b0 <release>[m
[32m+[m[32m80101943:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80101946:	eb 0f                	jmp    80101957 <iput+0x77>[m
[32m+[m[32m80101948:	90                   	nop[m
[32m+[m[32m80101949:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m80101950:	83 c3 04             	add    $0x4,%ebx[m
[32m+[m[32m{[m
[32m+[m[32m  int i, j;[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m[32m  uint *a;[m
[32m+[m
[32m+[m[32m  for(i = 0; i < NDIRECT; i++){[m
[32m+[m[32m80101953:	39 fb                	cmp    %edi,%ebx[m
[32m+[m[32m80101955:	74 19                	je     80101970 <iput+0x90>[m
[32m+[m[32m    if(ip->addrs[i]){[m
[32m+[m[32m80101957:	8b 13                	mov    (%ebx),%edx[m
[32m+[m[32m80101959:	85 d2                	test   %edx,%edx[m
[32m+[m[32m8010195b:	74 f3                	je     80101950 <iput+0x70>[m
[32m+[m[32m      bfree(ip->dev, ip->addrs[i]);[m
[32m+[m[32m8010195d:	8b 06                	mov    (%esi),%eax[m
[32m+[m[32m8010195f:	e8 cc fb ff ff       	call   80101530 <bfree>[m
[32m+[m[32m      ip->addrs[i] = 0;[m
[32m+[m[32m80101964:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)[m
[32m+[m[32m8010196a:	eb e4                	jmp    80101950 <iput+0x70>[m
[32m+[m[32m8010196c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    }[m
   }[m
[31m-  np->sz = proc->sz;[m
[31m-80103a77:	8b 00                	mov    (%eax),%eax[m
[31m-80103a79:	89 03                	mov    %eax,(%ebx)[m
[31m-  np->parent = proc;[m
[31m-80103a7b:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[31m-80103a81:	89 43 14             	mov    %eax,0x14(%ebx)[m
[31m-  *np->tf = *proc->tf;[m
[31m-80103a84:	8b 70 18             	mov    0x18(%eax),%esi[m
[31m-80103a87:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)[m
[31m-[m
[31m-  // Clear %eax so that fork returns 0 in the child.[m
[31m-  np->tf->eax = 0;[m
 [m
[31m-  for(i = 0; i < NOFILE; i++)[m
[31m-80103a89:	31 f6                	xor    %esi,%esi[m
[31m-  np->sz = proc->sz;[m
[31m-  np->parent = proc;[m
[31m-  *np->tf = *proc->tf;[m
[32m+[m[32m  if(ip->addrs[NDIRECT]){[m
[32m+[m[32m80101970:	8b 86 8c 00 00 00    	mov    0x8c(%esi),%eax[m
[32m+[m[32m80101976:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80101978:	75 46                	jne    801019c0 <iput+0xe0>[m
[32m+[m[32m    bfree(ip->dev, ip->addrs[NDIRECT]);[m
[32m+[m[32m    ip->addrs[NDIRECT] = 0;[m
[32m+[m[32m  }[m
 [m
[31m-  // Clear %eax so that fork returns 0 in the child.[m
[31m-  np->tf->eax = 0;[m
[31m-80103a8b:	8b 43 18             	mov    0x18(%ebx),%eax[m
[31m-80103a8e:	65 8b 15 04 00 00 00 	mov    %gs:0x4,%edx[m
[31m-80103a95:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)[m
[31m-80103a9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  ip->size = 0;[m
[32m+[m[32m  iupdate(ip);[m
[32m+[m[32m8010197a:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m    bfree(ip->dev, ip->addrs[NDIRECT]);[m
[32m+[m[32m    ip->addrs[NDIRECT] = 0;[m
[32m+[m[32m  }[m
 [m
[31m-  for(i = 0; i < NOFILE; i++)[m
[31m-    if(proc->ofile[i])[m
[31m-80103aa0:	8b 44 b2 28          	mov    0x28(%edx,%esi,4),%eax[m
[31m-80103aa4:	85 c0                	test   %eax,%eax[m
[31m-80103aa6:	74 17                	je     80103abf <fork+0x8f>[m
[31m-      np->ofile[i] = filedup(proc->ofile[i]);[m
[31m-80103aa8:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103aab:	50                   	push   %eax[m
[31m-80103aac:	e8 6f d3 ff ff       	call   80100e20 <filedup>[m
[31m-80103ab1:	89 44 b3 28          	mov    %eax,0x28(%ebx,%esi,4)[m
[31m-80103ab5:	65 8b 15 04 00 00 00 	mov    %gs:0x4,%edx[m
[31m-80103abc:	83 c4 10             	add    $0x10,%esp[m
[31m-  *np->tf = *proc->tf;[m
[32m+[m[32m  ip->size = 0;[m
[32m+[m[32m8010197d:	c7 46 58 00 00 00 00 	movl   $0x0,0x58(%esi)[m
[32m+[m[32m  iupdate(ip);[m
[32m+[m[32m80101984:	56                   	push   %esi[m
[32m+[m[32m80101985:	e8 76 fd ff ff       	call   80101700 <iupdate>[m
[32m+[m[32m  acquire(&icache.lock);[m
[32m+[m[32m  if(ip->ref == 1 && (ip->flags & I_VALID) && ip->nlink == 0){[m
[32m+[m[32m    // inode has no links and no other references: truncate and free.[m
[32m+[m[32m    release(&icache.lock);[m
[32m+[m[32m    itrunc(ip);[m
[32m+[m[32m    ip->type = 0;[m
[32m+[m[32m8010198a:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m8010198c:	66 89 46 50          	mov    %ax,0x50(%esi)[m
[32m+[m[32m    iupdate(ip);[m
[32m+[m[32m80101990:	89 34 24             	mov    %esi,(%esp)[m
[32m+[m[32m80101993:	e8 68 fd ff ff       	call   80101700 <iupdate>[m
[32m+[m[32m    acquire(&icache.lock);[m
[32m+[m[32m80101998:	c7 04 24 00 0a 11 80 	movl   $0x80110a00,(%esp)[m
[32m+[m[32m8010199f:	e8 2c 2a 00 00       	call   801043d0 <acquire>[m
[32m+[m[32m    ip->flags = 0;[m
[32m+[m[32m801019a4:	c7 46 4c 00 00 00 00 	movl   $0x0,0x4c(%esi)[m
[32m+[m[32m801019ab:	8b 46 08             	mov    0x8(%esi),%eax[m
[32m+[m[32m801019ae:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m801019b1:	e9 4b ff ff ff       	jmp    80101901 <iput+0x21>[m
[32m+[m[32m801019b6:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m801019b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m      ip->addrs[i] = 0;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
 [m
[31m-  // Clear %eax so that fork returns 0 in the child.[m
[31m-  np->tf->eax = 0;[m
[32m+[m[32m  if(ip->addrs[NDIRECT]){[m
[32m+[m[32m    bp = bread(ip->dev, ip->addrs[NDIRECT]);[m
[32m+[m[32m801019c0:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m801019c3:	50                   	push   %eax[m
[32m+[m[32m801019c4:	ff 36                	pushl  (%esi)[m
[32m+[m[32m801019c6:	e8 05 e7 ff ff       	call   801000d0 <bread>[m
[32m+[m[32m801019cb:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m801019ce:	89 45 e4             	mov    %eax,-0x1c(%ebp)[m
[32m+[m[32m    a = (uint*)bp->data;[m
[32m+[m[32m801019d1:	8d 58 5c             	lea    0x5c(%eax),%ebx[m
[32m+[m[32m801019d4:	8d b8 5c 02 00 00    	lea    0x25c(%eax),%edi[m
[32m+[m[32m801019da:	eb 0b                	jmp    801019e7 <iput+0x107>[m
[32m+[m[32m801019dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m801019e0:	83 c3 04             	add    $0x4,%ebx[m
[32m+[m[32m    for(j = 0; j < NINDIRECT; j++){[m
[32m+[m[32m801019e3:	39 df                	cmp    %ebx,%edi[m
[32m+[m[32m801019e5:	74 0f                	je     801019f6 <iput+0x116>[m
[32m+[m[32m      if(a[j])[m
[32m+[m[32m801019e7:	8b 13                	mov    (%ebx),%edx[m
[32m+[m[32m801019e9:	85 d2                	test   %edx,%edx[m
[32m+[m[32m801019eb:	74 f3                	je     801019e0 <iput+0x100>[m
[32m+[m[32m        bfree(ip->dev, a[j]);[m
[32m+[m[32m801019ed:	8b 06                	mov    (%esi),%eax[m
[32m+[m[32m801019ef:	e8 3c fb ff ff       	call   80101530 <bfree>[m
[32m+[m[32m801019f4:	eb ea                	jmp    801019e0 <iput+0x100>[m
[32m+[m[32m    }[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m801019f6:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801019f9:	ff 75 e4             	pushl  -0x1c(%ebp)[m
[32m+[m[32m801019fc:	e8 df e7 ff ff       	call   801001e0 <brelse>[m
[32m+[m[32m    bfree(ip->dev, ip->addrs[NDIRECT]);[m
[32m+[m[32m80101a01:	8b 96 8c 00 00 00    	mov    0x8c(%esi),%edx[m
[32m+[m[32m80101a07:	8b 06                	mov    (%esi),%eax[m
[32m+[m[32m80101a09:	e8 22 fb ff ff       	call   80101530 <bfree>[m
[32m+[m[32m    ip->addrs[NDIRECT] = 0;[m
[32m+[m[32m80101a0e:	c7 86 8c 00 00 00 00 	movl   $0x0,0x8c(%esi)[m
[32m+[m[32m80101a15:	00 00 00[m[41m [m
[32m+[m[32m80101a18:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80101a1b:	e9 5a ff ff ff       	jmp    8010197a <iput+0x9a>[m
[32m+[m
[32m+[m[32m80101a20 <iunlockput>:[m
[32m+[m[32m}[m
 [m
[31m-  for(i = 0; i < NOFILE; i++)[m
[31m-80103abf:	83 c6 01             	add    $0x1,%esi[m
[31m-80103ac2:	83 fe 10             	cmp    $0x10,%esi[m
[31m-80103ac5:	75 d9                	jne    80103aa0 <fork+0x70>[m
[31m-    if(proc->ofile[i])[m
[31m-      np->ofile[i] = filedup(proc->ofile[i]);[m
[31m-  np->cwd = idup(proc->cwd);[m
[31m-80103ac7:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103aca:	ff 72 68             	pushl  0x68(%edx)[m
[31m-80103acd:	e8 ae db ff ff       	call   80101680 <idup>[m
[31m-80103ad2:	89 43 68             	mov    %eax,0x68(%ebx)[m
[32m+[m[32m// Common idiom: unlock, then put.[m
[32m+[m[32mvoid[m
[32m+[m[32miunlockput(struct inode *ip)[m
[32m+[m[32m{[m
[32m+[m[32m80101a20:	55                   	push   %ebp[m
[32m+[m[32m80101a21:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80101a23:	53                   	push   %ebx[m
[32m+[m[32m80101a24:	83 ec 10             	sub    $0x10,%esp[m
[32m+[m[32m80101a27:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m  iunlock(ip);[m
[32m+[m[32m80101a2a:	53                   	push   %ebx[m
[32m+[m[32m80101a2b:	e8 60 fe ff ff       	call   80101890 <iunlock>[m
[32m+[m[32m  iput(ip);[m
[32m+[m[32m80101a30:	89 5d 08             	mov    %ebx,0x8(%ebp)[m
[32m+[m[32m80101a33:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m}[m
[32m+[m[32m80101a36:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[32m+[m[32m80101a39:	c9                   	leave[m[41m  [m
[32m+[m[32m// Common idiom: unlock, then put.[m
[32m+[m[32mvoid[m
[32m+[m[32miunlockput(struct inode *ip)[m
[32m+[m[32m{[m
[32m+[m[32m  iunlock(ip);[m
[32m+[m[32m  iput(ip);[m
[32m+[m[32m80101a3a:	e9 a1 fe ff ff       	jmp    801018e0 <iput>[m
[32m+[m[32m80101a3f:	90                   	nop[m
 [m
[31m-  safestrcpy(np->name, proc->name, sizeof(proc->name));[m
[31m-80103ad5:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[31m-80103adb:	83 c4 0c             	add    $0xc,%esp[m
[31m-80103ade:	6a 10                	push   $0x10[m
[31m-80103ae0:	83 c0 6c             	add    $0x6c,%eax[m
[31m-80103ae3:	50                   	push   %eax[m
[31m-80103ae4:	8d 43 6c             	lea    0x6c(%ebx),%eax[m
[31m-80103ae7:	50                   	push   %eax[m
[31m-80103ae8:	e8 03 0c 00 00       	call   801046f0 <safestrcpy>[m
[32m+[m[32m80101a40 <stati>:[m
[32m+[m[32m}[m
 [m
[31m-  pid = np->pid;[m
[31m-80103aed:	8b 73 10             	mov    0x10(%ebx),%esi[m
[32m+[m[32m// Copy stat information from inode.[m
[32m+[m[32mvoid[m
[32m+[m[32mstati(struct inode *ip, struct stat *st)[m
[32m+[m[32m{[m
[32m+[m[32m80101a40:	55                   	push   %ebp[m
[32m+[m[32m80101a41:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80101a43:	8b 55 08             	mov    0x8(%ebp),%edx[m
[32m+[m[32m80101a46:	8b 45 0c             	mov    0xc(%ebp),%eax[m
[32m+[m[32m  st->dev = ip->dev;[m
[32m+[m[32m80101a49:	8b 0a                	mov    (%edx),%ecx[m
[32m+[m[32m80101a4b:	89 48 04             	mov    %ecx,0x4(%eax)[m
[32m+[m[32m  st->ino = ip->inum;[m
[32m+[m[32m80101a4e:	8b 4a 04             	mov    0x4(%edx),%ecx[m
[32m+[m[32m80101a51:	89 48 08             	mov    %ecx,0x8(%eax)[m
[32m+[m[32m  st->type = ip->type;[m
[32m+[m[32m80101a54:	0f b7 4a 50          	movzwl 0x50(%edx),%ecx[m
[32m+[m[32m80101a58:	66 89 08             	mov    %cx,(%eax)[m
[32m+[m[32m  st->nlink = ip->nlink;[m
[32m+[m[32m80101a5b:	0f b7 4a 56          	movzwl 0x56(%edx),%ecx[m
[32m+[m[32m80101a5f:	66 89 48 0c          	mov    %cx,0xc(%eax)[m
[32m+[m[32m  st->size = ip->size;[m
[32m+[m[32m80101a63:	8b 52 58             	mov    0x58(%edx),%edx[m
[32m+[m[32m80101a66:	89 50 10             	mov    %edx,0x10(%eax)[m
[32m+[m[32m}[m
[32m+[m[32m80101a69:	5d                   	pop    %ebp[m
[32m+[m[32m80101a6a:	c3                   	ret[m[41m    [m
[32m+[m[32m80101a6b:	90                   	nop[m
[32m+[m[32m80101a6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
 [m
[31m-  acquire(&ptable.lock);[m
[31m-80103af0:	c7 04 24 a0 2d 11 80 	movl   $0x80112da0,(%esp)[m
[31m-80103af7:	e8 c4 07 00 00       	call   801042c0 <acquire>[m
[32m+[m[32m80101a70 <readi>:[m
 [m
[31m-  np->state = RUNNABLE;[m
[31m-80103afc:	c7 43 0c 03 00 00 00 	movl   $0x3,0xc(%ebx)[m
[32m+[m[32m//PAGEBREAK![m
[32m+[m[32m// Read data from inode.[m
[32m+[m[32mint[m
[32m+[m[32mreadi(struct inode *ip, char *dst, uint off, uint n)[m
[32m+[m[32m{[m
[32m+[m[32m80101a70:	55                   	push   %ebp[m
[32m+[m[32m80101a71:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80101a73:	57                   	push   %edi[m
[32m+[m[32m80101a74:	56                   	push   %esi[m
[32m+[m[32m80101a75:	53                   	push   %ebx[m
[32m+[m[32m80101a76:	83 ec 1c             	sub    $0x1c,%esp[m
[32m+[m[32m80101a79:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m80101a7c:	8b 7d 0c             	mov    0xc(%ebp),%edi[m
[32m+[m[32m80101a7f:	8b 75 10             	mov    0x10(%ebp),%esi[m
[32m+[m[32m  uint tot, m;[m
[32m+[m[32m  struct buf *bp;[m
 [m
[31m-  release(&ptable.lock);[m
[31m-80103b03:	c7 04 24 a0 2d 11 80 	movl   $0x80112da0,(%esp)[m
[31m-80103b0a:	e8 91 09 00 00       	call   801044a0 <release>[m
[32m+[m[32m  if(ip->type == T_DEV){[m
[32m+[m[32m80101a82:	66 83 78 50 03       	cmpw   $0x3,0x50(%eax)[m
 [m
[31m-  return pid;[m
[31m-80103b0f:	83 c4 10             	add    $0x10,%esp[m
[31m-80103b12:	89 f0                	mov    %esi,%eax[m
[31m-}[m
[31m-80103b14:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[31m-80103b17:	5b                   	pop    %ebx[m
[31m-80103b18:	5e                   	pop    %esi[m
[31m-80103b19:	5f                   	pop    %edi[m
[31m-80103b1a:	5d                   	pop    %ebp[m
[31m-80103b1b:	c3                   	ret    [m
[31m-  int i, pid;[m
[31m-  struct proc *np;[m
[32m+[m[32m//PAGEBREAK![m
[32m+[m[32m// Read data from inode.[m
[32m+[m[32mint[m
[32m+[m[32mreadi(struct inode *ip, char *dst, uint off, uint n)[m
[32m+[m[32m{[m
[32m+[m[32m80101a87:	89 7d e0             	mov    %edi,-0x20(%ebp)[m
[32m+[m[32m80101a8a:	8b 7d 14             	mov    0x14(%ebp),%edi[m
[32m+[m[32m80101a8d:	89 45 d8             	mov    %eax,-0x28(%ebp)[m
[32m+[m[32m80101a90:	89 7d e4             	mov    %edi,-0x1c(%ebp)[m
[32m+[m[32m  uint tot, m;[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m
[32m+[m[32m  if(ip->type == T_DEV){[m
[32m+[m[32m80101a93:	0f 84 a7 00 00 00    	je     80101b40 <readi+0xd0>[m
[32m+[m[32m    if(ip->major < 0 || ip->major >= NDEV || !devsw[ip->major].read)[m
[32m+[m[32m      return -1;[m
[32m+[m[32m    return devsw[ip->major].read(ip, dst, n);[m
[32m+[m[32m  }[m
 [m
[31m-  // Allocate process.[m
[31m-  if((np = allocproc()) == 0){[m
[32m+[m[32m  if(off > ip->size || off + n < off)[m
[32m+[m[32m80101a99:	8b 45 d8             	mov    -0x28(%ebp),%eax[m
[32m+[m[32m80101a9c:	8b 40 58             	mov    0x58(%eax),%eax[m
[32m+[m[32m80101a9f:	39 f0                	cmp    %esi,%eax[m
[32m+[m[32m80101aa1:	0f 82 c1 00 00 00    	jb     80101b68 <readi+0xf8>[m
[32m+[m[32m80101aa7:	8b 7d e4             	mov    -0x1c(%ebp),%edi[m
[32m+[m[32m80101aaa:	89 fa                	mov    %edi,%edx[m
[32m+[m[32m80101aac:	01 f2                	add    %esi,%edx[m
[32m+[m[32m80101aae:	0f 82 b4 00 00 00    	jb     80101b68 <readi+0xf8>[m
     return -1;[m
[31m-80103b1c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[31m-80103b21:	eb f1                	jmp    80103b14 <fork+0xe4>[m
[32m+[m[32m  if(off + n > ip->size)[m
[32m+[m[32m    n = ip->size - off;[m
[32m+[m[32m80101ab4:	89 c1                	mov    %eax,%ecx[m
[32m+[m[32m80101ab6:	29 f1                	sub    %esi,%ecx[m
[32m+[m[32m80101ab8:	39 d0                	cmp    %edx,%eax[m
[32m+[m[32m80101aba:	0f 43 cf             	cmovae %edi,%ecx[m
[32m+[m
[32m+[m[32m  for(tot=0; tot<n; tot+=m, off+=m, dst+=m){[m
[32m+[m[32m80101abd:	31 ff                	xor    %edi,%edi[m
[32m+[m[32m80101abf:	85 c9                	test   %ecx,%ecx[m
   }[m
 [m
[31m-  // Copy process state from p.[m
[31m-  if((np->pgdir = copyuvm(proc->pgdir, proc->sz)) == 0){[m
[31m-    kfree(np->kstack);[m
[31m-80103b23:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103b26:	ff 73 08             	pushl  0x8(%ebx)[m
[31m-80103b29:	e8 f2 e7 ff ff       	call   80102320 <kfree>[m
[31m-    np->kstack = 0;[m
[31m-80103b2e:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)[m
[31m-    np->state = UNUSED;[m
[31m-80103b35:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)[m
[32m+[m[32m  if(off > ip->size || off + n < off)[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  if(off + n > ip->size)[m
[32m+[m[32m    n = ip->size - off;[m
[32m+[m[32m80101ac1:	89 4d e4             	mov    %ecx,-0x1c(%ebp)[m
[32m+[m
[32m+[m[32m  for(tot=0; tot<n; tot+=m, off+=m, dst+=m){[m
[32m+[m[32m80101ac4:	74 6d                	je     80101b33 <readi+0xc3>[m
[32m+[m[32m80101ac6:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m80101ac9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    bp = bread(ip->dev, bmap(ip, off/BSIZE));[m
[32m+[m[32m80101ad0:	8b 5d d8             	mov    -0x28(%ebp),%ebx[m
[32m+[m[32m80101ad3:	89 f2                	mov    %esi,%edx[m
[32m+[m[32m80101ad5:	c1 ea 09             	shr    $0x9,%edx[m
[32m+[m[32m80101ad8:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m80101ada:	e8 41 f9 ff ff       	call   80101420 <bmap>[m
[32m+[m[32m80101adf:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m80101ae2:	50                   	push   %eax[m
[32m+[m[32m80101ae3:	ff 33                	pushl  (%ebx)[m
[32m+[m[32m    m = min(n - tot, BSIZE - off%BSIZE);[m
[32m+[m[32m80101ae5:	bb 00 02 00 00       	mov    $0x200,%ebx[m
     return -1;[m
[31m-80103b3c:	83 c4 10             	add    $0x10,%esp[m
[31m-80103b3f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[31m-80103b44:	eb ce                	jmp    80103b14 <fork+0xe4>[m
[31m-80103b46:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-80103b49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m  if(off + n > ip->size)[m
[32m+[m[32m    n = ip->size - off;[m
 [m
[31m-80103b50 <scheduler>:[m
[31m-//  - swtch to start running that process[m
[31m-//  - eventually that process transfers control[m
[31m-//      via swtch back to the scheduler.[m
[31m-void[m
[31m-scheduler(void)[m
[32m+[m[32m  for(tot=0; tot<n; tot+=m, off+=m, dst+=m){[m
[32m+[m[32m    bp = bread(ip->dev, bmap(ip, off/BSIZE));[m
[32m+[m[32m80101aea:	e8 e1 e5 ff ff       	call   801000d0 <bread>[m
[32m+[m[32m80101aef:	89 c2                	mov    %eax,%edx[m
[32m+[m[32m    m = min(n - tot, BSIZE - off%BSIZE);[m
[32m+[m[32m80101af1:	8b 45 e4             	mov    -0x1c(%ebp),%eax[m
[32m+[m[32m80101af4:	89 f1                	mov    %esi,%ecx[m
[32m+[m[32m80101af6:	81 e1 ff 01 00 00    	and    $0x1ff,%ecx[m
[32m+[m[32m80101afc:	83 c4 0c             	add    $0xc,%esp[m
[32m+[m[32m    for (int j = 0; j < min(m, 10); j++) {[m
[32m+[m[32m      cprintf("%x ", bp->data[off%BSIZE+j]);[m
[32m+[m[32m    }[m
[32m+[m[32m    cprintf("\n");[m
[32m+[m[32m    */[m
[32m+[m[32m    memmove(dst, bp->data + off%BSIZE, m);[m
[32m+[m[32m80101aff:	89 55 dc             	mov    %edx,-0x24(%ebp)[m
[32m+[m[32m  if(off + n > ip->size)[m
[32m+[m[32m    n = ip->size - off;[m
[32m+[m
[32m+[m[32m  for(tot=0; tot<n; tot+=m, off+=m, dst+=m){[m
[32m+[m[32m    bp = bread(ip->dev, bmap(ip, off/BSIZE));[m
[32m+[m[32m    m = min(n - tot, BSIZE - off%BSIZE);[m
[32m+[m[32m80101b02:	29 cb                	sub    %ecx,%ebx[m
[32m+[m[32m80101b04:	29 f8                	sub    %edi,%eax[m
[32m+[m[32m80101b06:	39 c3                	cmp    %eax,%ebx[m
[32m+[m[32m80101b08:	0f 47 d8             	cmova  %eax,%ebx[m
[32m+[m[32m    for (int j = 0; j < min(m, 10); j++) {[m
[32m+[m[32m      cprintf("%x ", bp->data[off%BSIZE+j]);[m
[32m+[m[32m    }[m
[32m+[m[32m    cprintf("\n");[m
[32m+[m[32m    */[m
[32m+[m[32m    memmove(dst, bp->data + off%BSIZE, m);[m
[32m+[m[32m80101b0b:	8d 44 0a 5c          	lea    0x5c(%edx,%ecx,1),%eax[m
[32m+[m[32m80101b0f:	53                   	push   %ebx[m
[32m+[m[32m  if(off > ip->size || off + n < off)[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  if(off + n > ip->size)[m
[32m+[m[32m    n = ip->size - off;[m
[32m+[m
[32m+[m[32m  for(tot=0; tot<n; tot+=m, off+=m, dst+=m){[m
[32m+[m[32m80101b10:	01 df                	add    %ebx,%edi[m
[32m+[m[32m80101b12:	01 de                	add    %ebx,%esi[m
[32m+[m[32m    for (int j = 0; j < min(m, 10); j++) {[m
[32m+[m[32m      cprintf("%x ", bp->data[off%BSIZE+j]);[m
[32m+[m[32m    }[m
[32m+[m[32m    cprintf("\n");[m
[32m+[m[32m    */[m
[32m+[m[32m    memmove(dst, bp->data + off%BSIZE, m);[m
[32m+[m[32m80101b14:	50                   	push   %eax[m
[32m+[m[32m80101b15:	ff 75 e0             	pushl  -0x20(%ebp)[m
[32m+[m[32m80101b18:	e8 93 2b 00 00       	call   801046b0 <memmove>[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m80101b1d:	8b 55 dc             	mov    -0x24(%ebp),%edx[m
[32m+[m[32m80101b20:	89 14 24             	mov    %edx,(%esp)[m
[32m+[m[32m80101b23:	e8 b8 e6 ff ff       	call   801001e0 <brelse>[m
[32m+[m[32m  if(off > ip->size || off + n < off)[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  if(off + n > ip->size)[m
[32m+[m[32m    n = ip->size - off;[m
[32m+[m
[32m+[m[32m  for(tot=0; tot<n; tot+=m, off+=m, dst+=m){[m
[32m+[m[32m80101b28:	01 5d e0             	add    %ebx,-0x20(%ebp)[m
[32m+[m[32m80101b2b:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80101b2e:	39 7d e4             	cmp    %edi,-0x1c(%ebp)[m
[32m+[m[32m80101b31:	77 9d                	ja     80101ad0 <readi+0x60>[m
[32m+[m[32m    cprintf("\n");[m
[32m+[m[32m    */[m
[32m+[m[32m    memmove(dst, bp->data + off%BSIZE, m);[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m  }[m
[32m+[m[32m  return n;[m
[32m+[m[32m80101b33:	8b 45 e4             	mov    -0x1c(%ebp),%eax[m
[32m+[m[32m}[m
[32m+[m[32m80101b36:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m80101b39:	5b                   	pop    %ebx[m
[32m+[m[32m80101b3a:	5e                   	pop    %esi[m
[32m+[m[32m80101b3b:	5f                   	pop    %edi[m
[32m+[m[32m80101b3c:	5d                   	pop    %ebp[m
[32m+[m[32m80101b3d:	c3                   	ret[m[41m    [m
[32m+[m[32m80101b3e:	66 90                	xchg   %ax,%ax[m
 {[m
[31m-80103b50:	55                   	push   %ebp[m
[31m-80103b51:	89 e5                	mov    %esp,%ebp[m
[31m-80103b53:	53                   	push   %ebx[m
[31m-80103b54:	83 ec 04             	sub    $0x4,%esp[m
[31m-80103b57:	89 f6                	mov    %esi,%esi[m
[31m-80103b59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m  uint tot, m;[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m
[32m+[m[32m  if(ip->type == T_DEV){[m
[32m+[m[32m    if(ip->major < 0 || ip->major >= NDEV || !devsw[ip->major].read)[m
[32m+[m[32m80101b40:	0f bf 40 52          	movswl 0x52(%eax),%eax[m
[32m+[m[32m80101b44:	66 83 f8 09          	cmp    $0x9,%ax[m
[32m+[m[32m80101b48:	77 1e                	ja     80101b68 <readi+0xf8>[m
[32m+[m[32m80101b4a:	8b 04 c5 80 09 11 80 	mov    -0x7feef680(,%eax,8),%eax[m
[32m+[m[32m80101b51:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80101b53:	74 13                	je     80101b68 <readi+0xf8>[m
[32m+[m[32m      return -1;[m
[32m+[m[32m    return devsw[ip->major].read(ip, dst, n);[m
[32m+[m[32m80101b55:	89 7d 10             	mov    %edi,0x10(%ebp)[m
[32m+[m[32m    */[m
[32m+[m[32m    memmove(dst, bp->data + off%BSIZE, m);[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m  }[m
[32m+[m[32m  return n;[m
 }[m
[32m+[m[32m80101b58:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m80101b5b:	5b                   	pop    %ebx[m
[32m+[m[32m80101b5c:	5e                   	pop    %esi[m
[32m+[m[32m80101b5d:	5f                   	pop    %edi[m
[32m+[m[32m80101b5e:	5d                   	pop    %ebp[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m
[32m+[m[32m  if(ip->type == T_DEV){[m
[32m+[m[32m    if(ip->major < 0 || ip->major >= NDEV || !devsw[ip->major].read)[m
[32m+[m[32m      return -1;[m
[32m+[m[32m    return devsw[ip->major].read(ip, dst, n);[m
[32m+[m[32m80101b5f:	ff e0                	jmp    *%eax[m
[32m+[m[32m80101b61:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  uint tot, m;[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m
[32m+[m[32m  if(ip->type == T_DEV){[m
[32m+[m[32m    if(ip->major < 0 || ip->major >= NDEV || !devsw[ip->major].read)[m
[32m+[m[32m      return -1;[m
[32m+[m[32m80101b68:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[32m+[m[32m80101b6d:	eb c7                	jmp    80101b36 <readi+0xc6>[m
[32m+[m[32m80101b6f:	90                   	nop[m
 [m
[31m-static inline void[m
[31m-sti(void)[m
[32m+[m[32m80101b70 <writei>:[m
[32m+[m
[32m+[m[32m// PAGEBREAK![m
[32m+[m[32m// Write data to inode.[m
[32m+[m[32mint[m
[32m+[m[32mwritei(struct inode *ip, char *src, uint off, uint n)[m
 {[m
[31m-  asm volatile("sti");[m
[31m-80103b60:	fb                   	sti    [m
[31m-  for(;;){[m
[31m-    // Enable interrupts on this processor.[m
[31m-    sti();[m
[32m+[m[32m80101b70:	55                   	push   %ebp[m
[32m+[m[32m80101b71:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80101b73:	57                   	push   %edi[m
[32m+[m[32m80101b74:	56                   	push   %esi[m
[32m+[m[32m80101b75:	53                   	push   %ebx[m
[32m+[m[32m80101b76:	83 ec 1c             	sub    $0x1c,%esp[m
[32m+[m[32m80101b79:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m80101b7c:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[32m+[m[32m80101b7f:	8b 7d 14             	mov    0x14(%ebp),%edi[m
[32m+[m[32m  uint tot, m;[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m
[32m+[m[32m  if(ip->type == T_DEV){[m
[32m+[m[32m80101b82:	66 83 78 50 03       	cmpw   $0x3,0x50(%eax)[m
[32m+[m
[32m+[m[32m// PAGEBREAK![m
[32m+[m[32m// Write data to inode.[m
[32m+[m[32mint[m
[32m+[m[32mwritei(struct inode *ip, char *src, uint off, uint n)[m
[32m+[m[32m{[m
[32m+[m[32m80101b87:	89 75 dc             	mov    %esi,-0x24(%ebp)[m
[32m+[m[32m80101b8a:	89 45 d8             	mov    %eax,-0x28(%ebp)[m
[32m+[m[32m80101b8d:	8b 75 10             	mov    0x10(%ebp),%esi[m
[32m+[m[32m80101b90:	89 7d e0             	mov    %edi,-0x20(%ebp)[m
[32m+[m[32m  uint tot, m;[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m
[32m+[m[32m  if(ip->type == T_DEV){[m
[32m+[m[32m80101b93:	0f 84 b7 00 00 00    	je     80101c50 <writei+0xe0>[m
[32m+[m[32m    if(ip->major < 0 || ip->major >= NDEV || !devsw[ip->major].write)[m
[32m+[m[32m      return -1;[m
[32m+[m[32m    return devsw[ip->major].write(ip, src, n);[m
[32m+[m[32m  }[m
 [m
[31m-    // Loop over process table looking for process to run.[m
[31m-    acquire(&ptable.lock);[m
[31m-80103b61:	83 ec 0c             	sub    $0xc,%esp[m
[31m-    for(p = ptable.proc; p < &ptable.proc[NPROC]; p++){[m
[31m-80103b64:	bb d4 2d 11 80       	mov    $0x80112dd4,%ebx[m
[31m-  for(;;){[m
[31m-    // Enable interrupts on this processor.[m
[31m-    sti();[m
[32m+[m[32m  if(off > ip->size || off + n < off)[m
[32m+[m[32m80101b99:	8b 45 d8             	mov    -0x28(%ebp),%eax[m
[32m+[m[32m80101b9c:	39 70 58             	cmp    %esi,0x58(%eax)[m
[32m+[m[32m80101b9f:	0f 82 eb 00 00 00    	jb     80101c90 <writei+0x120>[m
[32m+[m[32m80101ba5:	8b 7d e0             	mov    -0x20(%ebp),%edi[m
[32m+[m[32m80101ba8:	89 f8                	mov    %edi,%eax[m
[32m+[m[32m80101baa:	01 f0                	add    %esi,%eax[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  if(off + n > MAXFILE*BSIZE)[m
[32m+[m[32m80101bac:	3d 00 18 01 00       	cmp    $0x11800,%eax[m
[32m+[m[32m80101bb1:	0f 87 d9 00 00 00    	ja     80101c90 <writei+0x120>[m
[32m+[m[32m80101bb7:	39 c6                	cmp    %eax,%esi[m
[32m+[m[32m80101bb9:	0f 87 d1 00 00 00    	ja     80101c90 <writei+0x120>[m
[32m+[m[32m    return -1;[m
 [m
[31m-    // Loop over process table looking for process to run.[m
[31m-    acquire(&ptable.lock);[m
[31m-80103b69:	68 a0 2d 11 80       	push   $0x80112da0[m
[31m-80103b6e:	e8 4d 07 00 00       	call   801042c0 <acquire>[m
[31m-80103b73:	83 c4 10             	add    $0x10,%esp[m
[31m-80103b76:	eb 13                	jmp    80103b8b <scheduler+0x3b>[m
[31m-80103b78:	90                   	nop[m
[31m-80103b79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-    for(p = ptable.proc; p < &ptable.proc[NPROC]; p++){[m
[31m-80103b80:	83 c3 7c             	add    $0x7c,%ebx[m
[31m-80103b83:	81 fb d4 4c 11 80    	cmp    $0x80114cd4,%ebx[m
[31m-80103b89:	74 55                	je     80103be0 <scheduler+0x90>[m
[31m-      if(p->state != RUNNABLE)[m
[31m-80103b8b:	83 7b 0c 03          	cmpl   $0x3,0xc(%ebx)[m
[31m-80103b8f:	75 ef                	jne    80103b80 <scheduler+0x30>[m
[32m+[m[32m  for(tot=0; tot<n; tot+=m, off+=m, src+=m){[m
[32m+[m[32m80101bbf:	85 ff                	test   %edi,%edi[m
[32m+[m[32m80101bc1:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)[m
[32m+[m[32m80101bc8:	74 78                	je     80101c42 <writei+0xd2>[m
[32m+[m[32m80101bca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m    bp = bread(ip->dev, bmap(ip, off/BSIZE));[m
[32m+[m[32m80101bd0:	8b 7d d8             	mov    -0x28(%ebp),%edi[m
[32m+[m[32m80101bd3:	89 f2                	mov    %esi,%edx[m
[32m+[m[32m    m = min(n - tot, BSIZE - off%BSIZE);[m
[32m+[m[32m80101bd5:	bb 00 02 00 00       	mov    $0x200,%ebx[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  if(off + n > MAXFILE*BSIZE)[m
[32m+[m[32m    return -1;[m
 [m
[31m-      // Switch to chosen process.  It is the process's job[m
[31m-      // to release ptable.lock and then reacquire it[m
[31m-      // before jumping back to us.[m
[31m-      proc = p;[m
[31m-      switchuvm(p);[m
[31m-80103b91:	83 ec 0c             	sub    $0xc,%esp[m
[31m-        continue;[m
[32m+[m[32m  for(tot=0; tot<n; tot+=m, off+=m, src+=m){[m
[32m+[m[32m    bp = bread(ip->dev, bmap(ip, off/BSIZE));[m
[32m+[m[32m80101bda:	c1 ea 09             	shr    $0x9,%edx[m
[32m+[m[32m80101bdd:	89 f8                	mov    %edi,%eax[m
[32m+[m[32m80101bdf:	e8 3c f8 ff ff       	call   80101420 <bmap>[m
[32m+[m[32m80101be4:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m80101be7:	50                   	push   %eax[m
[32m+[m[32m80101be8:	ff 37                	pushl  (%edi)[m
[32m+[m[32m80101bea:	e8 e1 e4 ff ff       	call   801000d0 <bread>[m
[32m+[m[32m80101bef:	89 c7                	mov    %eax,%edi[m
[32m+[m[32m    m = min(n - tot, BSIZE - off%BSIZE);[m
[32m+[m[32m80101bf1:	8b 45 e0             	mov    -0x20(%ebp),%eax[m
[32m+[m[32m80101bf4:	2b 45 e4             	sub    -0x1c(%ebp),%eax[m
[32m+[m[32m80101bf7:	89 f1                	mov    %esi,%ecx[m
[32m+[m[32m80101bf9:	83 c4 0c             	add    $0xc,%esp[m
[32m+[m[32m80101bfc:	81 e1 ff 01 00 00    	and    $0x1ff,%ecx[m
[32m+[m[32m80101c02:	29 cb                	sub    %ecx,%ebx[m
[32m+[m[32m80101c04:	39 c3                	cmp    %eax,%ebx[m
[32m+[m[32m80101c06:	0f 47 d8             	cmova  %eax,%ebx[m
[32m+[m[32m    memmove(bp->data + off%BSIZE, src, m);[m
[32m+[m[32m80101c09:	8d 44 0f 5c          	lea    0x5c(%edi,%ecx,1),%eax[m
[32m+[m[32m80101c0d:	53                   	push   %ebx[m
[32m+[m[32m80101c0e:	ff 75 dc             	pushl  -0x24(%ebp)[m
[32m+[m[32m  if(off > ip->size || off + n < off)[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  if(off + n > MAXFILE*BSIZE)[m
[32m+[m[32m    return -1;[m
 [m
[31m-      // Switch to chosen process.  It is the process's job[m
[31m-      // to release ptable.lock and then reacquire it[m
[31m-      // before jumping back to us.[m
[31m-      proc = p;[m
[31m-80103b94:	65 89 1d 04 00 00 00 	mov    %ebx,%gs:0x4[m
[31m-      switchuvm(p);[m
[31m-80103b9b:	53                   	push   %ebx[m
[31m-    // Enable interrupts on this processor.[m
[31m-    sti();[m
[32m+[m[32m  for(tot=0; tot<n; tot+=m, off+=m, src+=m){[m
[32m+[m[32m80101c11:	01 de                	add    %ebx,%esi[m
[32m+[m[32m    bp = bread(ip->dev, bmap(ip, off/BSIZE));[m
[32m+[m[32m    m = min(n - tot, BSIZE - off%BSIZE);[m
[32m+[m[32m    memmove(bp->data + off%BSIZE, src, m);[m
[32m+[m[32m80101c13:	50                   	push   %eax[m
[32m+[m[32m80101c14:	e8 97 2a 00 00       	call   801046b0 <memmove>[m
[32m+[m[32m    log_write(bp);[m
[32m+[m[32m80101c19:	89 3c 24             	mov    %edi,(%esp)[m
[32m+[m[32m80101c1c:	e8 cf 12 00 00       	call   80102ef0 <log_write>[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m80101c21:	89 3c 24             	mov    %edi,(%esp)[m
[32m+[m[32m80101c24:	e8 b7 e5 ff ff       	call   801001e0 <brelse>[m
[32m+[m[32m  if(off > ip->size || off + n < off)[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  if(off + n > MAXFILE*BSIZE)[m
[32m+[m[32m    return -1;[m
 [m
[31m-    // Loop over process table looking for process to run.[m
[31m-    acquire(&ptable.lock);[m
[31m-    for(p = ptable.proc; p < &ptable.proc[NPROC]; p++){[m
[31m-80103b9c:	83 c3 7c             	add    $0x7c,%ebx[m
[32m+[m[32m  for(tot=0; tot<n; tot+=m, off+=m, src+=m){[m
[32m+[m[32m80101c29:	01 5d e4             	add    %ebx,-0x1c(%ebp)[m
[32m+[m[32m80101c2c:	01 5d dc             	add    %ebx,-0x24(%ebp)[m
[32m+[m[32m80101c2f:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80101c32:	8b 55 e4             	mov    -0x1c(%ebp),%edx[m
[32m+[m[32m80101c35:	39 55 e0             	cmp    %edx,-0x20(%ebp)[m
[32m+[m[32m80101c38:	77 96                	ja     80101bd0 <writei+0x60>[m
[32m+[m[32m    memmove(bp->data + off%BSIZE, src, m);[m
[32m+[m[32m    log_write(bp);[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m  }[m
 [m
[31m-      // Switch to chosen process.  It is the process's job[m
[31m-      // to release ptable.lock and then reacquire it[m
[31m-      // before jumping back to us.[m
[31m-      proc = p;[m
[31m-      switchuvm(p);[m
[31m-80103b9f:	e8 8c 2e 00 00       	call   80106a30 <switchuvm>[m
[31m-      p->state = RUNNING;[m
[31m-      swtch(&cpu->scheduler, p->context);[m
[31m-80103ba4:	58                   	pop    %eax[m
[31m-80103ba5:	65 a1 00 00 00 00    	mov    %gs:0x0,%eax[m
[31m-      // Switch to chosen process.  It is the process's job[m
[31m-      // to release ptable.lock and then reacquire it[m
[31m-      // before jumping back to us.[m
[31m-      proc = p;[m
[31m-      switchuvm(p);[m
[31m-      p->state = RUNNING;[m
[31m-80103bab:	c7 43 90 04 00 00 00 	movl   $0x4,-0x70(%ebx)[m
[31m-      swtch(&cpu->scheduler, p->context);[m
[31m-80103bb2:	5a                   	pop    %edx[m
[31m-80103bb3:	ff 73 a0             	pushl  -0x60(%ebx)[m
[31m-80103bb6:	83 c0 04             	add    $0x4,%eax[m
[31m-80103bb9:	50                   	push   %eax[m
[31m-80103bba:	e8 8c 0b 00 00       	call   8010474b <swtch>[m
[31m-      switchkvm();[m
[31m-80103bbf:	e8 4c 2e 00 00       	call   80106a10 <switchkvm>[m
[32m+[m[32m  if(n > 0 && off > ip->size){[m
[32m+[m[32m80101c3a:	8b 45 d8             	mov    -0x28(%ebp),%eax[m
[32m+[m[32m80101c3d:	3b 70 58             	cmp    0x58(%eax),%esi[m
[32m+[m[32m80101c40:	77 36                	ja     80101c78 <writei+0x108>[m
[32m+[m[32m    ip->size = off;[m
[32m+[m[32m    iupdate(ip);[m
[32m+[m[32m  }[m
[32m+[m[32m  return n;[m
[32m+[m[32m80101c42:	8b 45 e0             	mov    -0x20(%ebp),%eax[m
[32m+[m[32m}[m
[32m+[m[32m80101c45:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m80101c48:	5b                   	pop    %ebx[m
[32m+[m[32m80101c49:	5e                   	pop    %esi[m
[32m+[m[32m80101c4a:	5f                   	pop    %edi[m
[32m+[m[32m80101c4b:	5d                   	pop    %ebp[m
[32m+[m[32m80101c4c:	c3                   	ret[m[41m    [m
[32m+[m[32m80101c4d:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m{[m
[32m+[m[32m  uint tot, m;[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m
[32m+[m[32m  if(ip->type == T_DEV){[m
[32m+[m[32m    if(ip->major < 0 || ip->major >= NDEV || !devsw[ip->major].write)[m
[32m+[m[32m80101c50:	0f bf 40 52          	movswl 0x52(%eax),%eax[m
[32m+[m[32m80101c54:	66 83 f8 09          	cmp    $0x9,%ax[m
[32m+[m[32m80101c58:	77 36                	ja     80101c90 <writei+0x120>[m
[32m+[m[32m80101c5a:	8b 04 c5 84 09 11 80 	mov    -0x7feef67c(,%eax,8),%eax[m
[32m+[m[32m80101c61:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80101c63:	74 2b                	je     80101c90 <writei+0x120>[m
[32m+[m[32m      return -1;[m
[32m+[m[32m    return devsw[ip->major].write(ip, src, n);[m
[32m+[m[32m80101c65:	89 7d 10             	mov    %edi,0x10(%ebp)[m
[32m+[m[32m  if(n > 0 && off > ip->size){[m
[32m+[m[32m    ip->size = off;[m
[32m+[m[32m    iupdate(ip);[m
[32m+[m[32m  }[m
[32m+[m[32m  return n;[m
[32m+[m[32m}[m
[32m+[m[32m80101c68:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m80101c6b:	5b                   	pop    %ebx[m
[32m+[m[32m80101c6c:	5e                   	pop    %esi[m
[32m+[m[32m80101c6d:	5f                   	pop    %edi[m
[32m+[m[32m80101c6e:	5d                   	pop    %ebp[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m
[32m+[m[32m  if(ip->type == T_DEV){[m
[32m+[m[32m    if(ip->major < 0 || ip->major >= NDEV || !devsw[ip->major].write)[m
[32m+[m[32m      return -1;[m
[32m+[m[32m    return devsw[ip->major].write(ip, src, n);[m
[32m+[m[32m80101c6f:	ff e0                	jmp    *%eax[m
[32m+[m[32m80101c71:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    log_write(bp);[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m  }[m
 [m
[31m-      // Process is done running for now.[m
[31m-      // It should have changed its p->state before coming back.[m
[31m-      proc = 0;[m
[31m-80103bc4:	83 c4 10             	add    $0x10,%esp[m
[31m-    // Enable interrupts on this processor.[m
[31m-    sti();[m
[32m+[m[32m  if(n > 0 && off > ip->size){[m
[32m+[m[32m    ip->size = off;[m
[32m+[m[32m80101c78:	8b 45 d8             	mov    -0x28(%ebp),%eax[m
[32m+[m[32m    iupdate(ip);[m
[32m+[m[32m80101c7b:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m    log_write(bp);[m
[32m+[m[32m    brelse(bp);[m
[32m+[m[32m  }[m
 [m
[31m-    // Loop over process table looking for process to run.[m
[31m-    acquire(&ptable.lock);[m
[31m-    for(p = ptable.proc; p < &ptable.proc[NPROC]; p++){[m
[31m-80103bc7:	81 fb d4 4c 11 80    	cmp    $0x80114cd4,%ebx[m
[31m-      swtch(&cpu->scheduler, p->context);[m
[31m-      switchkvm();[m
[32m+[m[32m  if(n > 0 && off > ip->size){[m
[32m+[m[32m    ip->size = off;[m
[32m+[m[32m80101c7e:	89 70 58             	mov    %esi,0x58(%eax)[m
[32m+[m[32m    iupdate(ip);[m
[32m+[m[32m80101c81:	50                   	push   %eax[m
[32m+[m[32m80101c82:	e8 79 fa ff ff       	call   80101700 <iupdate>[m
[32m+[m[32m80101c87:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80101c8a:	eb b6                	jmp    80101c42 <writei+0xd2>[m
[32m+[m[32m80101c8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  uint tot, m;[m
[32m+[m[32m  struct buf *bp;[m
[32m+[m
[32m+[m[32m  if(ip->type == T_DEV){[m
[32m+[m[32m    if(ip->major < 0 || ip->major >= NDEV || !devsw[ip->major].write)[m
[32m+[m[32m      return -1;[m
[32m+[m[32m80101c90:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[32m+[m[32m80101c95:	eb ae                	jmp    80101c45 <writei+0xd5>[m
[32m+[m[32m80101c97:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m80101c99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
[31m-      // Process is done running for now.[m
[31m-      // It should have changed its p->state before coming back.[m
[31m-      proc = 0;[m
[31m-80103bcd:	65 c7 05 04 00 00 00 	movl   $0x0,%gs:0x4[m
[31m-80103bd4:	00 00 00 00 [m
[31m-    // Enable interrupts on this processor.[m
[31m-    sti();[m
[32m+[m[32m80101ca0 <namecmp>:[m
[32m+[m[32m//PAGEBREAK![m
[32m+[m[32m// Directories[m
 [m
[31m-    // Loop over process table looking for process to run.[m
[31m-    acquire(&ptable.lock);[m
[31m-    for(p = ptable.proc; p < &ptable.proc[NPROC]; p++){[m
[31m-80103bd8:	75 b1                	jne    80103b8b <scheduler+0x3b>[m
[31m-80103bda:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32mint[m
[32m+[m[32mnamecmp(const char *s, const char *t)[m
[32m+[m[32m{[m
[32m+[m[32m80101ca0:	55                   	push   %ebp[m
[32m+[m[32m80101ca1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80101ca3:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m  return strncmp(s, t, DIRSIZ);[m
[32m+[m[32m80101ca6:	6a 0e                	push   $0xe[m
[32m+[m[32m80101ca8:	ff 75 0c             	pushl  0xc(%ebp)[m
[32m+[m[32m80101cab:	ff 75 08             	pushl  0x8(%ebp)[m
[32m+[m[32m80101cae:	e8 7d 2a 00 00       	call   80104730 <strncmp>[m
[32m+[m[32m}[m
[32m+[m[32m80101cb3:	c9                   	leave[m[41m  [m
[32m+[m[32m80101cb4:	c3                   	ret[m[41m    [m
[32m+[m[32m80101cb5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m80101cb9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
[31m-      // Process is done running for now.[m
[31m-      // It should have changed its p->state before coming back.[m
[31m-      proc = 0;[m
[32m+[m[32m80101cc0 <dirlookup>:[m
[32m+[m
[32m+[m[32m// Look for a directory entry in a directory.[m
[32m+[m[32m// If found, set *poff to byte offset of entry.[m
[32m+[m[32mstruct inode*[m
[32m+[m[32mdirlookup(struct inode *dp, char *name, uint *poff)[m
[32m+[m[32m{[m
[32m+[m[32m80101cc0:	55                   	push   %ebp[m
[32m+[m[32m80101cc1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80101cc3:	57                   	push   %edi[m
[32m+[m[32m80101cc4:	56                   	push   %esi[m
[32m+[m[32m80101cc5:	53                   	push   %ebx[m
[32m+[m[32m80101cc6:	83 ec 1c             	sub    $0x1c,%esp[m
[32m+[m[32m80101cc9:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m  uint off, inum;[m
[32m+[m[32m  struct dirent de;[m
[32m+[m
[32m+[m[32m  if(dp->type != T_DIR)[m
[32m+[m[32m80101ccc:	66 83 7b 50 01       	cmpw   $0x1,0x50(%ebx)[m
[32m+[m[32m80101cd1:	0f 85 80 00 00 00    	jne    80101d57 <dirlookup+0x97>[m
[32m+[m[32m    panic("dirlookup not DIR");[m
[32m+[m
[32m+[m[32m  for(off = 0; off < dp->size; off += sizeof(de)){[m
[32m+[m[32m80101cd7:	8b 53 58             	mov    0x58(%ebx),%edx[m
[32m+[m[32m80101cda:	31 ff                	xor    %edi,%edi[m
[32m+[m[32m80101cdc:	8d 75 d8             	lea    -0x28(%ebp),%esi[m
[32m+[m[32m80101cdf:	85 d2                	test   %edx,%edx[m
[32m+[m[32m80101ce1:	75 0d                	jne    80101cf0 <dirlookup+0x30>[m
[32m+[m[32m80101ce3:	eb 5b                	jmp    80101d40 <dirlookup+0x80>[m
[32m+[m[32m80101ce5:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m80101ce8:	83 c7 10             	add    $0x10,%edi[m
[32m+[m[32m80101ceb:	39 7b 58             	cmp    %edi,0x58(%ebx)[m
[32m+[m[32m80101cee:	76 50                	jbe    80101d40 <dirlookup+0x80>[m
[32m+[m[32m    if(readi(dp, (char*)&de, off, sizeof(de)) != sizeof(de))[m
[32m+[m[32m80101cf0:	6a 10                	push   $0x10[m
[32m+[m[32m80101cf2:	57                   	push   %edi[m
[32m+[m[32m80101cf3:	56                   	push   %esi[m
[32m+[m[32m80101cf4:	53                   	push   %ebx[m
[32m+[m[32m80101cf5:	e8 76 fd ff ff       	call   80101a70 <readi>[m
[32m+[m[32m80101cfa:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80101cfd:	83 f8 10             	cmp    $0x10,%eax[m
[32m+[m[32m80101d00:	75 48                	jne    80101d4a <dirlookup+0x8a>[m
[32m+[m[32m      panic("dirlink read");[m
[32m+[m[32m    if(de.inum == 0)[m
[32m+[m[32m80101d02:	66 83 7d d8 00       	cmpw   $0x0,-0x28(%ebp)[m
[32m+[m[32m80101d07:	74 df                	je     80101ce8 <dirlookup+0x28>[m
[32m+[m[32m// Directories[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mnamecmp(const char *s, const char *t)[m
[32m+[m[32m{[m
[32m+[m[32m  return strncmp(s, t, DIRSIZ);[m
[32m+[m[32m80101d09:	8d 45 da             	lea    -0x26(%ebp),%eax[m
[32m+[m[32m80101d0c:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m80101d0f:	6a 0e                	push   $0xe[m
[32m+[m[32m80101d11:	50                   	push   %eax[m
[32m+[m[32m80101d12:	ff 75 0c             	pushl  0xc(%ebp)[m
[32m+[m[32m80101d15:	e8 16 2a 00 00       	call   80104730 <strncmp>[m
[32m+[m[32m  for(off = 0; off < dp->size; off += sizeof(de)){[m
[32m+[m[32m    if(readi(dp, (char*)&de, off, sizeof(de)) != sizeof(de))[m
[32m+[m[32m      panic("dirlink read");[m
[32m+[m[32m    if(de.inum == 0)[m
[32m+[m[32m      continue;[m
[32m+[m[32m    if(namecmp(name, de.name) == 0){[m
[32m+[m[32m80101d1a:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80101d1d:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80101d1f:	75 c7                	jne    80101ce8 <dirlookup+0x28>[m
[32m+[m[32m      // entry matches path element[m
[32m+[m[32m      if(poff)[m
[32m+[m[32m80101d21:	8b 45 10             	mov    0x10(%ebp),%eax[m
[32m+[m[32m80101d24:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80101d26:	74 05                	je     80101d2d <dirlookup+0x6d>[m
[32m+[m[32m        *poff = off;[m
[32m+[m[32m80101d28:	8b 45 10             	mov    0x10(%ebp),%eax[m
[32m+[m[32m80101d2b:	89 38                	mov    %edi,(%eax)[m
[32m+[m[32m      inum = de.inum;[m
[32m+[m[32m      return iget(dp->dev, inum);[m
[32m+[m[32m80101d2d:	0f b7 55 d8          	movzwl -0x28(%ebp),%edx[m
[32m+[m[32m80101d31:	8b 03                	mov    (%ebx),%eax[m
[32m+[m[32m80101d33:	e8 18 f6 ff ff       	call   80101350 <iget>[m
     }[m
[31m-    release(&ptable.lock);[m
[31m-80103be0:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103be3:	68 a0 2d 11 80       	push   $0x80112da0[m
[31m-80103be8:	e8 b3 08 00 00       	call   801044a0 <release>[m
[32m+[m[32m  }[m
 [m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
[32m+[m[32m80101d38:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m80101d3b:	5b                   	pop    %ebx[m
[32m+[m[32m80101d3c:	5e                   	pop    %esi[m
[32m+[m[32m80101d3d:	5f                   	pop    %edi[m
[32m+[m[32m80101d3e:	5d                   	pop    %ebp[m
[32m+[m[32m80101d3f:	c3                   	ret[m[41m    [m
[32m+[m[32m80101d40:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m      inum = de.inum;[m
[32m+[m[32m      return iget(dp->dev, inum);[m
[32m+[m[32m    }[m
   }[m
[31m-80103bed:	83 c4 10             	add    $0x10,%esp[m
[31m-80103bf0:	e9 6b ff ff ff       	jmp    80103b60 <scheduler+0x10>[m
[31m-80103bf5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80103bf9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
[31m-80103c00 <sched>:[m
[31m-// be proc->intena and proc->ncli, but that would[m
[31m-// break in the few places where a lock is held but[m
[31m-// there's no process.[m
[31m-void[m
[31m-sched(void)[m
[32m+[m[32m  return 0;[m
[32m+[m[32m80101d43:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m}[m
[32m+[m[32m80101d45:	5b                   	pop    %ebx[m
[32m+[m[32m80101d46:	5e                   	pop    %esi[m
[32m+[m[32m80101d47:	5f                   	pop    %edi[m
[32m+[m[32m80101d48:	5d                   	pop    %ebp[m
[32m+[m[32m80101d49:	c3                   	ret[m[41m    [m
[32m+[m[32m  if(dp->type != T_DIR)[m
[32m+[m[32m    panic("dirlookup not DIR");[m
[32m+[m
[32m+[m[32m  for(off = 0; off < dp->size; off += sizeof(de)){[m
[32m+[m[32m    if(readi(dp, (char*)&de, off, sizeof(de)) != sizeof(de))[m
[32m+[m[32m      panic("dirlink read");[m
[32m+[m[32m80101d4a:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101d4d:	68 95 73 10 80       	push   $0x80107395[m
[32m+[m[32m80101d52:	e8 19 e6 ff ff       	call   80100370 <panic>[m
 {[m
[31m-80103c00:	55                   	push   %ebp[m
[31m-80103c01:	89 e5                	mov    %esp,%ebp[m
[31m-80103c03:	53                   	push   %ebx[m
[31m-80103c04:	83 ec 10             	sub    $0x10,%esp[m
[31m-  int intena;[m
[31m-[m
[31m-  if(!holding(&ptable.lock))[m
[31m-80103c07:	68 a0 2d 11 80       	push   $0x80112da0[m
[31m-80103c0c:	e8 df 07 00 00       	call   801043f0 <holding>[m
[31m-80103c11:	83 c4 10             	add    $0x10,%esp[m
[31m-80103c14:	85 c0                	test   %eax,%eax[m
[31m-80103c16:	74 4c                	je     80103c64 <sched+0x64>[m
[31m-    panic("sched ptable.lock");[m
[31m-  if(cpu->ncli != 1)[m
[31m-80103c18:	65 8b 15 00 00 00 00 	mov    %gs:0x0,%edx[m
[31m-80103c1f:	83 ba ac 00 00 00 01 	cmpl   $0x1,0xac(%edx)[m
[31m-80103c26:	75 63                	jne    80103c8b <sched+0x8b>[m
[31m-    panic("sched locks");[m
[31m-  if(proc->state == RUNNING)[m
[31m-80103c28:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[31m-80103c2e:	83 78 0c 04          	cmpl   $0x4,0xc(%eax)[m
[31m-80103c32:	74 4a                	je     80103c7e <sched+0x7e>[m
[32m+[m[32m  uint off, inum;[m
[32m+[m[32m  struct dirent de;[m
[32m+[m
[32m+[m[32m  if(dp->type != T_DIR)[m
[32m+[m[32m    panic("dirlookup not DIR");[m
[32m+[m[32m80101d57:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101d5a:	68 83 73 10 80       	push   $0x80107383[m
[32m+[m[32m80101d5f:	e8 0c e6 ff ff       	call   80100370 <panic>[m
[32m+[m[32m80101d64:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m80101d6a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi[m
[32m+[m
[32m+[m[32m80101d70 <namex>:[m
[32m+[m[32m// If parent != 0, return the inode for the parent and copy the final[m
[32m+[m[32m// path element into name, which must have room for DIRSIZ bytes.[m
[32m+[m[32m// Must be called inside a transaction since it calls iput().[m
[32m+[m[32mstatic struct inode*[m
[32m+[m[32mnamex(char *path, int nameiparent, char *name)[m
[32m+[m[32m{[m
[32m+[m[32m80101d70:	55                   	push   %ebp[m
[32m+[m[32m80101d71:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80101d73:	57                   	push   %edi[m
[32m+[m[32m80101d74:	56                   	push   %esi[m
[32m+[m[32m80101d75:	53                   	push   %ebx[m
[32m+[m[32m80101d76:	89 cf                	mov    %ecx,%edi[m
[32m+[m[32m80101d78:	89 c3                	mov    %eax,%ebx[m
[32m+[m[32m80101d7a:	83 ec 1c             	sub    $0x1c,%esp[m
[32m+[m[32m  struct inode *ip, *next;[m
[32m+[m
[32m+[m[32m  if(*path == '/')[m
[32m+[m[32m80101d7d:	80 38 2f             	cmpb   $0x2f,(%eax)[m
[32m+[m[32m// If parent != 0, return the inode for the parent and copy the final[m
[32m+[m[32m// path element into name, which must have room for DIRSIZ bytes.[m
[32m+[m[32m// Must be called inside a transaction since it calls iput().[m
[32m+[m[32mstatic struct inode*[m
[32m+[m[32mnamex(char *path, int nameiparent, char *name)[m
[32m+[m[32m{[m
[32m+[m[32m80101d80:	89 55 e0             	mov    %edx,-0x20(%ebp)[m
[32m+[m[32m  struct inode *ip, *next;[m
[32m+[m
[32m+[m[32m  if(*path == '/')[m
[32m+[m[32m80101d83:	0f 84 53 01 00 00    	je     80101edc <namex+0x16c>[m
[32m+[m[32m    ip = iget(ROOTDEV, ROOTINO);[m
[32m+[m[32m  else[m
[32m+[m[32m    ip = idup(proc->cwd);[m
[32m+[m[32m80101d89:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[32m+[m[32m// Increment reference count for ip.[m
[32m+[m[32m// Returns ip to enable ip = idup(ip1) idiom.[m
[32m+[m[32mstruct inode*[m
[32m+[m[32midup(struct inode *ip)[m
[32m+[m[32m{[m
[32m+[m[32m  acquire(&icache.lock);[m
[32m+[m[32m80101d8f:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m  struct inode *ip, *next;[m
[32m+[m
[32m+[m[32m  if(*path == '/')[m
[32m+[m[32m    ip = iget(ROOTDEV, ROOTINO);[m
[32m+[m[32m  else[m
[32m+[m[32m    ip = idup(proc->cwd);[m
[32m+[m[32m80101d92:	8b 70 68             	mov    0x68(%eax),%esi[m
[32m+[m[32m// Increment reference count for ip.[m
[32m+[m[32m// Returns ip to enable ip = idup(ip1) idiom.[m
[32m+[m[32mstruct inode*[m
[32m+[m[32midup(struct inode *ip)[m
[32m+[m[32m{[m
[32m+[m[32m  acquire(&icache.lock);[m
[32m+[m[32m80101d95:	68 00 0a 11 80       	push   $0x80110a00[m
[32m+[m[32m80101d9a:	e8 31 26 00 00       	call   801043d0 <acquire>[m
[32m+[m[32m  ip->ref++;[m
[32m+[m[32m80101d9f:	83 46 08 01          	addl   $0x1,0x8(%esi)[m
[32m+[m[32m  release(&icache.lock);[m
[32m+[m[32m80101da3:	c7 04 24 00 0a 11 80 	movl   $0x80110a00,(%esp)[m
[32m+[m[32m80101daa:	e8 01 28 00 00       	call   801045b0 <release>[m
[32m+[m[32m80101daf:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80101db2:	eb 07                	jmp    80101dbb <namex+0x4b>[m
[32m+[m[32m80101db4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m{[m
[32m+[m[32m  char *s;[m
[32m+[m[32m  int len;[m
 [m
[31m-static inline uint[m
[31m-readeflags(void)[m
[32m+[m[32m  while(*path == '/')[m
[32m+[m[32m    path++;[m
[32m+[m[32m80101db8:	83 c3 01             	add    $0x1,%ebx[m
[32m+[m[32mskipelem(char *path, char *name)[m
 {[m
[31m-  uint eflags;[m
[31m-  asm volatile("pushfl; popl %0" : "=r" (eflags));[m
[31m-80103c34:	9c                   	pushf  [m
[31m-80103c35:	59                   	pop    %ecx[m
[31m-    panic("sched running");[m
[31m-  if(readeflags()&FL_IF)[m
[31m-80103c36:	80 e5 02             	and    $0x2,%ch[m
[31m-80103c39:	75 36                	jne    80103c71 <sched+0x71>[m
[31m-    panic("sched interruptible");[m
[31m-  intena = cpu->intena;[m
[31m-  swtch(&proc->context, cpu->scheduler);[m
[31m-80103c3b:	83 ec 08             	sub    $0x8,%esp[m
[31m-80103c3e:	83 c0 1c             	add    $0x1c,%eax[m
[31m-    panic("sched locks");[m
[31m-  if(proc->state == RUNNING)[m
[31m-    panic("sched running");[m
[31m-  if(readeflags()&FL_IF)[m
[31m-    panic("sched interruptible");[m
[31m-  intena = cpu->intena;[m
[31m-80103c41:	8b 9a b0 00 00 00    	mov    0xb0(%edx),%ebx[m
[31m-  swtch(&proc->context, cpu->scheduler);[m
[31m-80103c47:	ff 72 04             	pushl  0x4(%edx)[m
[31m-80103c4a:	50                   	push   %eax[m
[31m-80103c4b:	e8 fb 0a 00 00       	call   8010474b <swtch>[m
[31m-  cpu->intena = intena;[m
[31m-80103c50:	65 a1 00 00 00 00    	mov    %gs:0x0,%eax[m
[32m+[m[32m  char *s;[m
[32m+[m[32m  int len;[m
[32m+[m
[32m+[m[32m  while(*path == '/')[m
[32m+[m[32m80101dbb:	0f b6 03             	movzbl (%ebx),%eax[m
[32m+[m[32m80101dbe:	3c 2f                	cmp    $0x2f,%al[m
[32m+[m[32m80101dc0:	74 f6                	je     80101db8 <namex+0x48>[m
[32m+[m[32m    path++;[m
[32m+[m[32m  if(*path == 0)[m
[32m+[m[32m80101dc2:	84 c0                	test   %al,%al[m
[32m+[m[32m80101dc4:	0f 84 e3 00 00 00    	je     80101ead <namex+0x13d>[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  s = path;[m
[32m+[m[32m  while(*path != '/' && *path != 0)[m
[32m+[m[32m80101dca:	0f b6 03             	movzbl (%ebx),%eax[m
[32m+[m[32m80101dcd:	89 da                	mov    %ebx,%edx[m
[32m+[m[32m80101dcf:	84 c0                	test   %al,%al[m
[32m+[m[32m80101dd1:	0f 84 ac 00 00 00    	je     80101e83 <namex+0x113>[m
[32m+[m[32m80101dd7:	3c 2f                	cmp    $0x2f,%al[m
[32m+[m[32m80101dd9:	75 09                	jne    80101de4 <namex+0x74>[m
[32m+[m[32m80101ddb:	e9 a3 00 00 00       	jmp    80101e83 <namex+0x113>[m
[32m+[m[32m80101de0:	84 c0                	test   %al,%al[m
[32m+[m[32m80101de2:	74 0a                	je     80101dee <namex+0x7e>[m
[32m+[m[32m    path++;[m
[32m+[m[32m80101de4:	83 c2 01             	add    $0x1,%edx[m
[32m+[m[32m  while(*path == '/')[m
[32m+[m[32m    path++;[m
[32m+[m[32m  if(*path == 0)[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  s = path;[m
[32m+[m[32m  while(*path != '/' && *path != 0)[m
[32m+[m[32m80101de7:	0f b6 02             	movzbl (%edx),%eax[m
[32m+[m[32m80101dea:	3c 2f                	cmp    $0x2f,%al[m
[32m+[m[32m80101dec:	75 f2                	jne    80101de0 <namex+0x70>[m
[32m+[m[32m80101dee:	89 d1                	mov    %edx,%ecx[m
[32m+[m[32m80101df0:	29 d9                	sub    %ebx,%ecx[m
[32m+[m[32m    path++;[m
[32m+[m[32m  len = path - s;[m
[32m+[m[32m  if(len >= DIRSIZ)[m
[32m+[m[32m80101df2:	83 f9 0d             	cmp    $0xd,%ecx[m
[32m+[m[32m80101df5:	0f 8e 8d 00 00 00    	jle    80101e88 <namex+0x118>[m
[32m+[m[32m    memmove(name, s, DIRSIZ);[m
[32m+[m[32m80101dfb:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m80101dfe:	89 55 e4             	mov    %edx,-0x1c(%ebp)[m
[32m+[m[32m80101e01:	6a 0e                	push   $0xe[m
[32m+[m[32m80101e03:	53                   	push   %ebx[m
[32m+[m[32m80101e04:	57                   	push   %edi[m
[32m+[m[32m80101e05:	e8 a6 28 00 00       	call   801046b0 <memmove>[m
[32m+[m[32m    path++;[m
[32m+[m[32m  if(*path == 0)[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  s = path;[m
[32m+[m[32m  while(*path != '/' && *path != 0)[m
[32m+[m[32m    path++;[m
[32m+[m[32m80101e0a:	8b 55 e4             	mov    -0x1c(%ebp),%edx[m
[32m+[m[32m  len = path - s;[m
[32m+[m[32m  if(len >= DIRSIZ)[m
[32m+[m[32m    memmove(name, s, DIRSIZ);[m
[32m+[m[32m80101e0d:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m    path++;[m
[32m+[m[32m  if(*path == 0)[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  s = path;[m
[32m+[m[32m  while(*path != '/' && *path != 0)[m
[32m+[m[32m    path++;[m
[32m+[m[32m80101e10:	89 d3                	mov    %edx,%ebx[m
[32m+[m[32m    memmove(name, s, DIRSIZ);[m
[32m+[m[32m  else {[m
[32m+[m[32m    memmove(name, s, len);[m
[32m+[m[32m    name[len] = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  while(*path == '/')[m
[32m+[m[32m80101e12:	80 3a 2f             	cmpb   $0x2f,(%edx)[m
[32m+[m[32m80101e15:	75 11                	jne    80101e28 <namex+0xb8>[m
[32m+[m[32m80101e17:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m80101e19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m    path++;[m
[32m+[m[32m80101e20:	83 c3 01             	add    $0x1,%ebx[m
[32m+[m[32m    memmove(name, s, DIRSIZ);[m
[32m+[m[32m  else {[m
[32m+[m[32m    memmove(name, s, len);[m
[32m+[m[32m    name[len] = 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  while(*path == '/')[m
[32m+[m[32m80101e23:	80 3b 2f             	cmpb   $0x2f,(%ebx)[m
[32m+[m[32m80101e26:	74 f8                	je     80101e20 <namex+0xb0>[m
[32m+[m[32m    ip = iget(ROOTDEV, ROOTINO);[m
[32m+[m[32m  else[m
[32m+[m[32m    ip = idup(proc->cwd);[m
[32m+[m
[32m+[m[32m  while((path = skipelem(path, name)) != 0){[m
[32m+[m[32m    ilock(ip);[m
[32m+[m[32m80101e28:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101e2b:	56                   	push   %esi[m
[32m+[m[32m80101e2c:	e8 7f f9 ff ff       	call   801017b0 <ilock>[m
[32m+[m[32m    if(ip->type != T_DIR){[m
[32m+[m[32m80101e31:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80101e34:	66 83 7e 50 01       	cmpw   $0x1,0x50(%esi)[m
[32m+[m[32m80101e39:	0f 85 7f 00 00 00    	jne    80101ebe <namex+0x14e>[m
[32m+[m[32m      iunlockput(ip);[m
[32m+[m[32m      return 0;[m
[32m+[m[32m    }[m
[32m+[m[32m    if(nameiparent && *path == '\0'){[m
[32m+[m[32m80101e3f:	8b 55 e0             	mov    -0x20(%ebp),%edx[m
[32m+[m[32m80101e42:	85 d2                	test   %edx,%edx[m
[32m+[m[32m80101e44:	74 09                	je     80101e4f <namex+0xdf>[m
[32m+[m[32m80101e46:	80 3b 00             	cmpb   $0x0,(%ebx)[m
[32m+[m[32m80101e49:	0f 84 a3 00 00 00    	je     80101ef2 <namex+0x182>[m
[32m+[m[32m      // Stop one level early.[m
[32m+[m[32m      iunlock(ip);[m
[32m+[m[32m      return ip;[m
[32m+[m[32m    }[m
[32m+[m[32m    if((next = dirlookup(ip, name, 0)) == 0){[m
[32m+[m[32m80101e4f:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m80101e52:	6a 00                	push   $0x0[m
[32m+[m[32m80101e54:	57                   	push   %edi[m
[32m+[m[32m80101e55:	56                   	push   %esi[m
[32m+[m[32m80101e56:	e8 65 fe ff ff       	call   80101cc0 <dirlookup>[m
[32m+[m[32m80101e5b:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80101e5e:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80101e60:	74 5c                	je     80101ebe <namex+0x14e>[m
[32m+[m
[32m+[m[32m// Common idiom: unlock, then put.[m
[32m+[m[32mvoid[m
[32m+[m[32miunlockput(struct inode *ip)[m
[32m+[m[32m{[m
[32m+[m[32m  iunlock(ip);[m
[32m+[m[32m80101e62:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101e65:	89 45 e4             	mov    %eax,-0x1c(%ebp)[m
[32m+[m[32m80101e68:	56                   	push   %esi[m
[32m+[m[32m80101e69:	e8 22 fa ff ff       	call   80101890 <iunlock>[m
[32m+[m[32m  iput(ip);[m
[32m+[m[32m80101e6e:	89 34 24             	mov    %esi,(%esp)[m
[32m+[m[32m80101e71:	e8 6a fa ff ff       	call   801018e0 <iput>[m
[32m+[m[32m80101e76:	8b 45 e4             	mov    -0x1c(%ebp),%eax[m
[32m+[m[32m80101e79:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80101e7c:	89 c6                	mov    %eax,%esi[m
[32m+[m[32m80101e7e:	e9 38 ff ff ff       	jmp    80101dbb <namex+0x4b>[m
[32m+[m[32m  while(*path == '/')[m
[32m+[m[32m    path++;[m
[32m+[m[32m  if(*path == 0)[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  s = path;[m
[32m+[m[32m  while(*path != '/' && *path != 0)[m
[32m+[m[32m80101e83:	31 c9                	xor    %ecx,%ecx[m
[32m+[m[32m80101e85:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m    path++;[m
[32m+[m[32m  len = path - s;[m
[32m+[m[32m  if(len >= DIRSIZ)[m
[32m+[m[32m    memmove(name, s, DIRSIZ);[m
[32m+[m[32m  else {[m
[32m+[m[32m    memmove(name, s, len);[m
[32m+[m[32m80101e88:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m80101e8b:	89 55 dc             	mov    %edx,-0x24(%ebp)[m
[32m+[m[32m80101e8e:	89 4d e4             	mov    %ecx,-0x1c(%ebp)[m
[32m+[m[32m80101e91:	51                   	push   %ecx[m
[32m+[m[32m80101e92:	53                   	push   %ebx[m
[32m+[m[32m80101e93:	57                   	push   %edi[m
[32m+[m[32m80101e94:	e8 17 28 00 00       	call   801046b0 <memmove>[m
[32m+[m[32m    name[len] = 0;[m
[32m+[m[32m80101e99:	8b 4d e4             	mov    -0x1c(%ebp),%ecx[m
[32m+[m[32m80101e9c:	8b 55 dc             	mov    -0x24(%ebp),%edx[m
[32m+[m[32m80101e9f:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80101ea2:	c6 04 0f 00          	movb   $0x0,(%edi,%ecx,1)[m
[32m+[m[32m80101ea6:	89 d3                	mov    %edx,%ebx[m
[32m+[m[32m80101ea8:	e9 65 ff ff ff       	jmp    80101e12 <namex+0xa2>[m
[32m+[m[32m      return 0;[m
[32m+[m[32m    }[m
[32m+[m[32m    iunlockput(ip);[m
[32m+[m[32m    ip = next;[m
[32m+[m[32m  }[m
[32m+[m[32m  if(nameiparent){[m
[32m+[m[32m80101ead:	8b 45 e0             	mov    -0x20(%ebp),%eax[m
[32m+[m[32m80101eb0:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80101eb2:	75 54                	jne    80101f08 <namex+0x198>[m
[32m+[m[32m80101eb4:	89 f0                	mov    %esi,%eax[m
[32m+[m[32m    iput(ip);[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  return ip;[m
 }[m
[31m-80103c56:	83 c4 10             	add    $0x10,%esp[m
[31m-    panic("sched running");[m
[31m-  if(readeflags()&FL_IF)[m
[31m-    panic("sched interruptible");[m
[31m-  intena = cpu->intena;[m
[31m-  swtch(&proc->context, cpu->scheduler);[m
[31m-  cpu->intena = intena;[m
[31m-80103c59:	89 98 b0 00 00 00    	mov    %ebx,0xb0(%eax)[m
[32m+[m[32m80101eb6:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m80101eb9:	5b                   	pop    %ebx[m
[32m+[m[32m80101eba:	5e                   	pop    %esi[m
[32m+[m[32m80101ebb:	5f                   	pop    %edi[m
[32m+[m[32m80101ebc:	5d                   	pop    %ebp[m
[32m+[m[32m80101ebd:	c3                   	ret[m[41m    [m
[32m+[m
[32m+[m[32m// Common idiom: unlock, then put.[m
[32m+[m[32mvoid[m
[32m+[m[32miunlockput(struct inode *ip)[m
[32m+[m[32m{[m
[32m+[m[32m  iunlock(ip);[m
[32m+[m[32m80101ebe:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101ec1:	56                   	push   %esi[m
[32m+[m[32m80101ec2:	e8 c9 f9 ff ff       	call   80101890 <iunlock>[m
[32m+[m[32m  iput(ip);[m
[32m+[m[32m80101ec7:	89 34 24             	mov    %esi,(%esp)[m
[32m+[m[32m80101eca:	e8 11 fa ff ff       	call   801018e0 <iput>[m
[32m+[m[32m      iunlock(ip);[m
[32m+[m[32m      return ip;[m
[32m+[m[32m    }[m
[32m+[m[32m    if((next = dirlookup(ip, name, 0)) == 0){[m
[32m+[m[32m      iunlockput(ip);[m
[32m+[m[32m      return 0;[m
[32m+[m[32m80101ecf:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m  if(nameiparent){[m
[32m+[m[32m    iput(ip);[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  return ip;[m
 }[m
[31m-80103c5f:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[31m-80103c62:	c9                   	leave  [m
[31m-80103c63:	c3                   	ret    [m
[31m-sched(void)[m
[32m+[m[32m80101ed2:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m      iunlock(ip);[m
[32m+[m[32m      return ip;[m
[32m+[m[32m    }[m
[32m+[m[32m    if((next = dirlookup(ip, name, 0)) == 0){[m
[32m+[m[32m      iunlockput(ip);[m
[32m+[m[32m      return 0;[m
[32m+[m[32m80101ed5:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m  if(nameiparent){[m
[32m+[m[32m    iput(ip);[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  return ip;[m
[32m+[m[32m}[m
[32m+[m[32m80101ed7:	5b                   	pop    %ebx[m
[32m+[m[32m80101ed8:	5e                   	pop    %esi[m
[32m+[m[32m80101ed9:	5f                   	pop    %edi[m
[32m+[m[32m80101eda:	5d                   	pop    %ebp[m
[32m+[m[32m80101edb:	c3                   	ret[m[41m    [m
[32m+[m[32mnamex(char *path, int nameiparent, char *name)[m
 {[m
[31m-  int intena;[m
[31m-[m
[31m-  if(!holding(&ptable.lock))[m
[31m-    panic("sched ptable.lock");[m
[31m-80103c64:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103c67:	68 38 75 10 80       	push   $0x80107538[m
[31m-80103c6c:	e8 ff c6 ff ff       	call   80100370 <panic>[m
[31m-  if(cpu->ncli != 1)[m
[31m-    panic("sched locks");[m
[31m-  if(proc->state == RUNNING)[m
[31m-    panic("sched running");[m
[31m-  if(readeflags()&FL_IF)[m
[31m-    panic("sched interruptible");[m
[31m-80103c71:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103c74:	68 64 75 10 80       	push   $0x80107564[m
[31m-80103c79:	e8 f2 c6 ff ff       	call   80100370 <panic>[m
[31m-  if(!holding(&ptable.lock))[m
[31m-    panic("sched ptable.lock");[m
[31m-  if(cpu->ncli != 1)[m
[31m-    panic("sched locks");[m
[31m-  if(proc->state == RUNNING)[m
[31m-    panic("sched running");[m
[31m-80103c7e:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103c81:	68 56 75 10 80       	push   $0x80107556[m
[31m-80103c86:	e8 e5 c6 ff ff       	call   80100370 <panic>[m
[31m-  int intena;[m
[31m-[m
[31m-  if(!holding(&ptable.lock))[m
[31m-    panic("sched ptable.lock");[m
[31m-  if(cpu->ncli != 1)[m
[31m-    panic("sched locks");[m
[31m-80103c8b:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103c8e:	68 4a 75 10 80       	push   $0x8010754a[m
[31m-80103c93:	e8 d8 c6 ff ff       	call   80100370 <panic>[m
[31m-80103c98:	90                   	nop[m
[31m-80103c99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  struct inode *ip, *next;[m
[32m+[m
[32m+[m[32m  if(*path == '/')[m
[32m+[m[32m    ip = iget(ROOTDEV, ROOTINO);[m
[32m+[m[32m80101edc:	ba 01 00 00 00       	mov    $0x1,%edx[m
[32m+[m[32m80101ee1:	b8 01 00 00 00       	mov    $0x1,%eax[m
[32m+[m[32m80101ee6:	e8 65 f4 ff ff       	call   80101350 <iget>[m
[32m+[m[32m80101eeb:	89 c6                	mov    %eax,%esi[m
[32m+[m[32m80101eed:	e9 c9 fe ff ff       	jmp    80101dbb <namex+0x4b>[m
[32m+[m[32m      iunlockput(ip);[m
[32m+[m[32m      return 0;[m
[32m+[m[32m    }[m
[32m+[m[32m    if(nameiparent && *path == '\0'){[m
[32m+[m[32m      // Stop one level early.[m
[32m+[m[32m      iunlock(ip);[m
[32m+[m[32m80101ef2:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101ef5:	56                   	push   %esi[m
[32m+[m[32m80101ef6:	e8 95 f9 ff ff       	call   80101890 <iunlock>[m
[32m+[m[32m      return ip;[m
[32m+[m[32m80101efb:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m  if(nameiparent){[m
[32m+[m[32m    iput(ip);[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  return ip;[m
[32m+[m[32m}[m
[32m+[m[32m80101efe:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m      return 0;[m
[32m+[m[32m    }[m
[32m+[m[32m    if(nameiparent && *path == '\0'){[m
[32m+[m[32m      // Stop one level early.[m
[32m+[m[32m      iunlock(ip);[m
[32m+[m[32m      return ip;[m
[32m+[m[32m80101f01:	89 f0                	mov    %esi,%eax[m
[32m+[m[32m  if(nameiparent){[m
[32m+[m[32m    iput(ip);[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  return ip;[m
[32m+[m[32m}[m
[32m+[m[32m80101f03:	5b                   	pop    %ebx[m
[32m+[m[32m80101f04:	5e                   	pop    %esi[m
[32m+[m[32m80101f05:	5f                   	pop    %edi[m
[32m+[m[32m80101f06:	5d                   	pop    %ebp[m
[32m+[m[32m80101f07:	c3                   	ret[m[41m    [m
[32m+[m[32m    }[m
[32m+[m[32m    iunlockput(ip);[m
[32m+[m[32m    ip = next;[m
[32m+[m[32m  }[m
[32m+[m[32m  if(nameiparent){[m
[32m+[m[32m    iput(ip);[m
[32m+[m[32m80101f08:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101f0b:	56                   	push   %esi[m
[32m+[m[32m80101f0c:	e8 cf f9 ff ff       	call   801018e0 <iput>[m
[32m+[m[32m    return 0;[m
[32m+[m[32m80101f11:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80101f14:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m80101f16:	eb 9e                	jmp    80101eb6 <namex+0x146>[m
[32m+[m[32m80101f18:	90                   	nop[m
[32m+[m[32m80101f19:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
 [m
[31m-80103ca0 <exit>:[m
[31m-// An exited process remains in the zombie state[m
[31m-// until its parent calls wait() to find out it exited.[m
[32m+[m[32m80101f20 <dirlink>:[m
[32m+[m[32m}[m
 [m
[31m-void[m
[31m-exit(int status)[m
[32m+[m[32m// Write a new directory entry (name, inum) into the directory dp.[m
[32m+[m[32mint[m
[32m+[m[32mdirlink(struct inode *dp, char *name, uint inum)[m
 {[m
[31m-80103ca0:	55                   	push   %ebp[m
[31m-80103ca1:	89 e5                	mov    %esp,%ebp[m
[31m-80103ca3:	56                   	push   %esi[m
[31m-80103ca4:	53                   	push   %ebx[m
[31m-  cprintf(" %d\n", status);[m
[31m-80103ca5:	83 ec 08             	sub    $0x8,%esp[m
[31m-80103ca8:	ff 75 08             	pushl  0x8(%ebp)[m
[31m-80103cab:	68 48 76 10 80       	push   $0x80107648[m
[31m-80103cb0:	e8 ab c9 ff ff       	call   80100660 <cprintf>[m
[31m-  struct proc *p;[m
[31m-  int fd;[m
[32m+[m[32m80101f20:	55                   	push   %ebp[m
[32m+[m[32m80101f21:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80101f23:	57                   	push   %edi[m
[32m+[m[32m80101f24:	56                   	push   %esi[m
[32m+[m[32m80101f25:	53                   	push   %ebx[m
[32m+[m[32m80101f26:	83 ec 20             	sub    $0x20,%esp[m
[32m+[m[32m80101f29:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m  int off;[m
[32m+[m[32m  struct dirent de;[m
[32m+[m[32m  struct inode *ip;[m
[32m+[m
[32m+[m[32m  // Check that name is not present.[m
[32m+[m[32m  if((ip = dirlookup(dp, name, 0)) != 0){[m
[32m+[m[32m80101f2c:	6a 00                	push   $0x0[m
[32m+[m[32m80101f2e:	ff 75 0c             	pushl  0xc(%ebp)[m
[32m+[m[32m80101f31:	53                   	push   %ebx[m
[32m+[m[32m80101f32:	e8 89 fd ff ff       	call   80101cc0 <dirlookup>[m
[32m+[m[32m80101f37:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80101f3a:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80101f3c:	75 67                	jne    80101fa5 <dirlink+0x85>[m
[32m+[m[32m    iput(ip);[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  }[m
 [m
[31m-  if(proc == initproc)[m
[31m-80103cb5:	65 8b 15 04 00 00 00 	mov    %gs:0x4,%edx[m
[31m-80103cbc:	83 c4 10             	add    $0x10,%esp[m
[31m-80103cbf:	3b 15 bc a5 10 80    	cmp    0x8010a5bc,%edx[m
[31m-80103cc5:	0f 84 1c 01 00 00    	je     80103de7 <exit+0x147>[m
[31m-80103ccb:	31 db                	xor    %ebx,%ebx[m
[31m-80103ccd:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-    panic("init exiting");[m
[32m+[m[32m  // Look for an empty dirent.[m
[32m+[m[32m  for(off = 0; off < dp->size; off += sizeof(de)){[m
[32m+[m[32m80101f3e:	8b 7b 58             	mov    0x58(%ebx),%edi[m
[32m+[m[32m80101f41:	8d 75 d8             	lea    -0x28(%ebp),%esi[m
[32m+[m[32m80101f44:	85 ff                	test   %edi,%edi[m
[32m+[m[32m80101f46:	74 29                	je     80101f71 <dirlink+0x51>[m
[32m+[m[32m80101f48:	31 ff                	xor    %edi,%edi[m
[32m+[m[32m80101f4a:	8d 75 d8             	lea    -0x28(%ebp),%esi[m
[32m+[m[32m80101f4d:	eb 09                	jmp    80101f58 <dirlink+0x38>[m
[32m+[m[32m80101f4f:	90                   	nop[m
[32m+[m[32m80101f50:	83 c7 10             	add    $0x10,%edi[m
[32m+[m[32m80101f53:	39 7b 58             	cmp    %edi,0x58(%ebx)[m
[32m+[m[32m80101f56:	76 19                	jbe    80101f71 <dirlink+0x51>[m
[32m+[m[32m    if(readi(dp, (char*)&de, off, sizeof(de)) != sizeof(de))[m
[32m+[m[32m80101f58:	6a 10                	push   $0x10[m
[32m+[m[32m80101f5a:	57                   	push   %edi[m
[32m+[m[32m80101f5b:	56                   	push   %esi[m
[32m+[m[32m80101f5c:	53                   	push   %ebx[m
[32m+[m[32m80101f5d:	e8 0e fb ff ff       	call   80101a70 <readi>[m
[32m+[m[32m80101f62:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80101f65:	83 f8 10             	cmp    $0x10,%eax[m
[32m+[m[32m80101f68:	75 4e                	jne    80101fb8 <dirlink+0x98>[m
[32m+[m[32m      panic("dirlink read");[m
[32m+[m[32m    if(de.inum == 0)[m
[32m+[m[32m80101f6a:	66 83 7d d8 00       	cmpw   $0x0,-0x28(%ebp)[m
[32m+[m[32m80101f6f:	75 df                	jne    80101f50 <dirlink+0x30>[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
 [m
[31m-  // Close all open files.[m
[31m-  for(fd = 0; fd < NOFILE; fd++){[m
[31m-    if(proc->ofile[fd]){[m
[31m-80103cd0:	8d 73 08             	lea    0x8(%ebx),%esi[m
[31m-80103cd3:	8b 44 b2 08          	mov    0x8(%edx,%esi,4),%eax[m
[31m-80103cd7:	85 c0                	test   %eax,%eax[m
[31m-80103cd9:	74 1b                	je     80103cf6 <exit+0x56>[m
[31m-      fileclose(proc->ofile[fd]);[m
[31m-80103cdb:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103cde:	50                   	push   %eax[m
[31m-80103cdf:	e8 8c d1 ff ff       	call   80100e70 <fileclose>[m
[31m-      proc->ofile[fd] = 0;[m
[31m-80103ce4:	65 8b 15 04 00 00 00 	mov    %gs:0x4,%edx[m
[31m-80103ceb:	83 c4 10             	add    $0x10,%esp[m
[31m-80103cee:	c7 44 b2 08 00 00 00 	movl   $0x0,0x8(%edx,%esi,4)[m
[31m-80103cf5:	00 [m
[32m+[m[32m  strncpy(de.name, name, DIRSIZ);[m
[32m+[m[32m80101f71:	8d 45 da             	lea    -0x26(%ebp),%eax[m
[32m+[m[32m80101f74:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m80101f77:	6a 0e                	push   $0xe[m
[32m+[m[32m80101f79:	ff 75 0c             	pushl  0xc(%ebp)[m
[32m+[m[32m80101f7c:	50                   	push   %eax[m
[32m+[m[32m80101f7d:	e8 1e 28 00 00       	call   801047a0 <strncpy>[m
[32m+[m[32m  de.inum = inum;[m
[32m+[m[32m80101f82:	8b 45 10             	mov    0x10(%ebp),%eax[m
[32m+[m[32m  if(writei(dp, (char*)&de, off, sizeof(de)) != sizeof(de))[m
[32m+[m[32m80101f85:	6a 10                	push   $0x10[m
[32m+[m[32m80101f87:	57                   	push   %edi[m
[32m+[m[32m80101f88:	56                   	push   %esi[m
[32m+[m[32m80101f89:	53                   	push   %ebx[m
[32m+[m[32m    if(de.inum == 0)[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
 [m
[31m-  if(proc == initproc)[m
[31m-    panic("init exiting");[m
[32m+[m[32m  strncpy(de.name, name, DIRSIZ);[m
[32m+[m[32m  de.inum = inum;[m
[32m+[m[32m80101f8a:	66 89 45 d8          	mov    %ax,-0x28(%ebp)[m
[32m+[m[32m  if(writei(dp, (char*)&de, off, sizeof(de)) != sizeof(de))[m
[32m+[m[32m80101f8e:	e8 dd fb ff ff       	call   80101b70 <writei>[m
[32m+[m[32m80101f93:	83 c4 20             	add    $0x20,%esp[m
[32m+[m[32m80101f96:	83 f8 10             	cmp    $0x10,%eax[m
[32m+[m[32m80101f99:	75 2a                	jne    80101fc5 <dirlink+0xa5>[m
[32m+[m[32m    panic("dirlink");[m
 [m
[31m-  // Close all open files.[m
[31m-  for(fd = 0; fd < NOFILE; fd++){[m
[31m-80103cf6:	83 c3 01             	add    $0x1,%ebx[m
[31m-80103cf9:	83 fb 10             	cmp    $0x10,%ebx[m
[31m-80103cfc:	75 d2                	jne    80103cd0 <exit+0x30>[m
[31m-      fileclose(proc->ofile[fd]);[m
[31m-      proc->ofile[fd] = 0;[m
[31m-    }[m
[32m+[m[32m  return 0;[m
[32m+[m[32m80101f9b:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m}[m
[32m+[m[32m80101f9d:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m80101fa0:	5b                   	pop    %ebx[m
[32m+[m[32m80101fa1:	5e                   	pop    %esi[m
[32m+[m[32m80101fa2:	5f                   	pop    %edi[m
[32m+[m[32m80101fa3:	5d                   	pop    %ebp[m
[32m+[m[32m80101fa4:	c3                   	ret[m[41m    [m
[32m+[m[32m  struct dirent de;[m
[32m+[m[32m  struct inode *ip;[m
[32m+[m
[32m+[m[32m  // Check that name is not present.[m
[32m+[m[32m  if((ip = dirlookup(dp, name, 0)) != 0){[m
[32m+[m[32m    iput(ip);[m
[32m+[m[32m80101fa5:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101fa8:	50                   	push   %eax[m
[32m+[m[32m80101fa9:	e8 32 f9 ff ff       	call   801018e0 <iput>[m
[32m+[m[32m    return -1;[m
[32m+[m[32m80101fae:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80101fb1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[32m+[m[32m80101fb6:	eb e5                	jmp    80101f9d <dirlink+0x7d>[m
   }[m
 [m
[31m-  begin_op();[m
[31m-80103cfe:	e8 0d ef ff ff       	call   80102c10 <begin_op>[m
[31m-  iput(proc->cwd);[m
[31m-80103d03:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[31m-80103d09:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103d0c:	ff 70 68             	pushl  0x68(%eax)[m
[31m-80103d0f:	e8 cc da ff ff       	call   801017e0 <iput>[m
[31m-  end_op();[m
[31m-80103d14:	e8 67 ef ff ff       	call   80102c80 <end_op>[m
[31m-  proc->cwd = 0;[m
[31m-80103d19:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[31m-80103d1f:	c7 40 68 00 00 00 00 	movl   $0x0,0x68(%eax)[m
[32m+[m[32m  // Look for an empty dirent.[m
[32m+[m[32m  for(off = 0; off < dp->size; off += sizeof(de)){[m
[32m+[m[32m    if(readi(dp, (char*)&de, off, sizeof(de)) != sizeof(de))[m
[32m+[m[32m      panic("dirlink read");[m
[32m+[m[32m80101fb8:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101fbb:	68 95 73 10 80       	push   $0x80107395[m
[32m+[m[32m80101fc0:	e8 ab e3 ff ff       	call   80100370 <panic>[m
[32m+[m[32m  }[m
 [m
[31m-  acquire(&ptable.lock);[m
[31m-80103d26:	c7 04 24 a0 2d 11 80 	movl   $0x80112da0,(%esp)[m
[31m-80103d2d:	e8 8e 05 00 00       	call   801042c0 <acquire>[m
[32m+[m[32m  strncpy(de.name, name, DIRSIZ);[m
[32m+[m[32m  de.inum = inum;[m
[32m+[m[32m  if(writei(dp, (char*)&de, off, sizeof(de)) != sizeof(de))[m
[32m+[m[32m    panic("dirlink");[m
[32m+[m[32m80101fc5:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80101fc8:	68 a2 79 10 80       	push   $0x801079a2[m
[32m+[m[32m80101fcd:	e8 9e e3 ff ff       	call   80100370 <panic>[m
[32m+[m[32m80101fd2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m80101fd9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m
[32m+[m[32m80101fe0 <namei>:[m
[32m+[m[32m  return ip;[m
[32m+[m[32m}[m
 [m
[31m-  // Parent might be sleeping in wait().[m
[31m-  wakeup1(proc->parent);[m
[31m-80103d32:	65 8b 0d 04 00 00 00 	mov    %gs:0x4,%ecx[m
[31m-80103d39:	83 c4 10             	add    $0x10,%esp[m
[31m-static void[m
[31m-wakeup1(void *chan)[m
[32m+[m[32mstruct inode*[m
[32m+[m[32mnamei(char *path)[m
 {[m
[31m-  struct proc *p;[m
[32m+[m[32m80101fe0:	55                   	push   %ebp[m
[32m+[m[32m  char name[DIRSIZ];[m
[32m+[m[32m  return namex(path, 0, name);[m
[32m+[m[32m80101fe1:	31 d2                	xor    %edx,%edx[m
[32m+[m[32m  return ip;[m
[32m+[m[32m}[m
 [m
[31m-  for(p = ptable.proc; p < &ptable.proc[NPROC]; p++)[m
[31m-80103d3c:	b8 d4 2d 11 80       	mov    $0x80112dd4,%eax[m
[31m-  proc->cwd = 0;[m
[32m+[m[32mstruct inode*[m
[32m+[m[32mnamei(char *path)[m
[32m+[m[32m{[m
[32m+[m[32m80101fe3:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80101fe5:	83 ec 18             	sub    $0x18,%esp[m
[32m+[m[32m  char name[DIRSIZ];[m
[32m+[m[32m  return namex(path, 0, name);[m
[32m+[m[32m80101fe8:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m80101feb:	8d 4d ea             	lea    -0x16(%ebp),%ecx[m
[32m+[m[32m80101fee:	e8 7d fd ff ff       	call   80101d70 <namex>[m
[32m+[m[32m}[m
[32m+[m[32m80101ff3:	c9                   	leave[m[41m  [m
[32m+[m[32m80101ff4:	c3                   	ret[m[41m    [m
[32m+[m[32m80101ff5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m80101ff9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
[31m-  acquire(&ptable.lock);[m
[32m+[m[32m80102000 <nameiparent>:[m
 [m
[31m-  // Parent might be sleeping in wait().[m
[31m-  wakeup1(proc->parent);[m
[31m-80103d41:	8b 51 14             	mov    0x14(%ecx),%edx[m
[31m-80103d44:	eb 14                	jmp    80103d5a <exit+0xba>[m
[31m-80103d46:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-80103d49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32mstruct inode*[m
[32m+[m[32mnameiparent(char *path, char *name)[m
[32m+[m[32m{[m
[32m+[m[32m80102000:	55                   	push   %ebp[m
[32m+[m[32m  return namex(path, 1, name);[m
[32m+[m[32m80102001:	ba 01 00 00 00       	mov    $0x1,%edx[m
[32m+[m[32m  return namex(path, 0, name);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstruct inode*[m
[32m+[m[32mnameiparent(char *path, char *name)[m
[32m+[m[32m{[m
[32m+[m[32m80102006:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m  return namex(path, 1, name);[m
[32m+[m[32m80102008:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[32m+[m[32m8010200b:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m}[m
[32m+[m[32m8010200e:	5d                   	pop    %ebp[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstruct inode*[m
[32m+[m[32mnameiparent(char *path, char *name)[m
[32m+[m[32m{[m
[32m+[m[32m  return namex(path, 1, name);[m
[32m+[m[32m8010200f:	e9 5c fd ff ff       	jmp    80101d70 <namex>[m
[32m+[m[32m80102014:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m80102016:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m80102018:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m8010201a:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m8010201c:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m8010201e:	66 90                	xchg   %ax,%ax[m
[32m+[m
[32m+[m[32m80102020 <idestart>:[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Start the request for b.  Caller must hold idelock.[m
 static void[m
[31m-wakeup1(void *chan)[m
[32m+[m[32midestart(struct buf *b)[m
 {[m
[31m-  struct proc *p;[m
[32m+[m[32m80102020:	55                   	push   %ebp[m
[32m+[m[32m  if(b == 0)[m
[32m+[m[32m80102021:	85 c0                	test   %eax,%eax[m
[32m+[m[32m}[m
 [m
[31m-  for(p = ptable.proc; p < &ptable.proc[NPROC]; p++)[m
[31m-80103d50:	83 c0 7c             	add    $0x7c,%eax[m
[31m-80103d53:	3d d4 4c 11 80       	cmp    $0x80114cd4,%eax[m
[31m-80103d58:	74 1c                	je     80103d76 <exit+0xd6>[m
[31m-    if(p->state == SLEEPING && p->chan == chan)[m
[31m-80103d5a:	83 78 0c 02          	cmpl   $0x2,0xc(%eax)[m
[31m-80103d5e:	75 f0                	jne    80103d50 <exit+0xb0>[m
[31m-80103d60:	3b 50 20             	cmp    0x20(%eax),%edx[m
[31m-80103d63:	75 eb                	jne    80103d50 <exit+0xb0>[m
[31m-      p->state = RUNNABLE;[m
[31m-80103d65:	c7 40 0c 03 00 00 00 	movl   $0x3,0xc(%eax)[m
[32m+[m[32m// Start the request for b.  Caller must hold idelock.[m
 static void[m
[31m-wakeup1(void *chan)[m
[32m+[m[32midestart(struct buf *b)[m
 {[m
[31m-  struct proc *p;[m
[32m+[m[32m80102023:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80102025:	56                   	push   %esi[m
[32m+[m[32m80102026:	53                   	push   %ebx[m
[32m+[m[32m  if(b == 0)[m
[32m+[m[32m80102027:	0f 84 ad 00 00 00    	je     801020da <idestart+0xba>[m
[32m+[m[32m    panic("idestart");[m
[32m+[m[32m  if(b->blockno >= FSSIZE)[m
[32m+[m[32m8010202d:	8b 58 08             	mov    0x8(%eax),%ebx[m
[32m+[m[32m80102030:	89 c1                	mov    %eax,%ecx[m
[32m+[m[32m80102032:	81 fb e7 03 00 00    	cmp    $0x3e7,%ebx[m
[32m+[m[32m80102038:	0f 87 8f 00 00 00    	ja     801020cd <idestart+0xad>[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
[32m+[m[32m{[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
[32m+[m[32m8010203e:	ba f7 01 00 00       	mov    $0x1f7,%edx[m
[32m+[m[32m80102043:	90                   	nop[m
[32m+[m[32m80102044:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m80102048:	ec                   	in     (%dx),%al[m
[32m+[m[32mstatic int[m
[32m+[m[32midewait(int checkerr)[m
[32m+[m[32m{[m
[32m+[m[32m  int r;[m
 [m
[31m-  for(p = ptable.proc; p < &ptable.proc[NPROC]; p++)[m
[31m-80103d6c:	83 c0 7c             	add    $0x7c,%eax[m
[31m-80103d6f:	3d d4 4c 11 80       	cmp    $0x80114cd4,%eax[m
[31m-80103d74:	75 e4                	jne    80103d5a <exit+0xba>[m
[31m-  wakeup1(proc->parent);[m
[32m+[m[32m  while(((r = inb(0x1f7)) & (IDE_BSY|IDE_DRDY)) != IDE_DRDY)[m
[32m+[m[32m80102049:	83 e0 c0             	and    $0xffffffc0,%eax[m
[32m+[m[32m8010204c:	3c 40                	cmp    $0x40,%al[m
[32m+[m[32m8010204e:	75 f8                	jne    80102048 <idestart+0x28>[m
[32m+[m[32m}[m
 [m
[31m-  // Pass abandoned children to init.[m
[31m-  for(p = ptable.proc; p < &ptable.proc[NPROC]; p++){[m
[31m-    if(p->parent == proc){[m
[31m-      p->parent = initproc;[m
[31m-80103d76:	8b 1d bc a5 10 80    	mov    0x8010a5bc,%ebx[m
[31m-80103d7c:	ba d4 2d 11 80       	mov    $0x80112dd4,%edx[m
[31m-80103d81:	eb 10                	jmp    80103d93 <exit+0xf3>[m
[31m-80103d83:	90                   	nop[m
[31m-80103d84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutb(ushort port, uchar data)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("out %0,%1" : : "a" (data), "d" (port));[m
[32m+[m[32m80102050:	31 f6                	xor    %esi,%esi[m
[32m+[m[32m80102052:	ba f6 03 00 00       	mov    $0x3f6,%edx[m
[32m+[m[32m80102057:	89 f0                	mov    %esi,%eax[m
[32m+[m[32m80102059:	ee                   	out    %al,(%dx)[m
[32m+[m[32m8010205a:	ba f2 01 00 00       	mov    $0x1f2,%edx[m
[32m+[m[32m8010205f:	b8 01 00 00 00       	mov    $0x1,%eax[m
[32m+[m[32m80102064:	ee                   	out    %al,(%dx)[m
[32m+[m[32m80102065:	ba f3 01 00 00       	mov    $0x1f3,%edx[m
[32m+[m[32m8010206a:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m8010206c:	ee                   	out    %al,(%dx)[m
[32m+[m[32m8010206d:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m8010206f:	ba f4 01 00 00       	mov    $0x1f4,%edx[m
[32m+[m[32m80102074:	c1 f8 08             	sar    $0x8,%eax[m
[32m+[m[32m80102077:	ee                   	out    %al,(%dx)[m
[32m+[m[32m80102078:	ba f5 01 00 00       	mov    $0x1f5,%edx[m
[32m+[m[32m8010207d:	89 f0                	mov    %esi,%eax[m
[32m+[m[32m8010207f:	ee                   	out    %al,(%dx)[m
[32m+[m[32m80102080:	0f b6 41 04          	movzbl 0x4(%ecx),%eax[m
[32m+[m[32m80102084:	ba f6 01 00 00       	mov    $0x1f6,%edx[m
[32m+[m[32m80102089:	83 e0 01             	and    $0x1,%eax[m
[32m+[m[32m8010208c:	c1 e0 04             	shl    $0x4,%eax[m
[32m+[m[32m8010208f:	83 c8 e0             	or     $0xffffffe0,%eax[m
[32m+[m[32m80102092:	ee                   	out    %al,(%dx)[m
[32m+[m[32m  outb(0x1f2, sector_per_block);  // number of sectors[m
[32m+[m[32m  outb(0x1f3, sector & 0xff);[m
[32m+[m[32m  outb(0x1f4, (sector >> 8) & 0xff);[m
[32m+[m[32m  outb(0x1f5, (sector >> 16) & 0xff);[m
[32m+[m[32m  outb(0x1f6, 0xe0 | ((b->dev&1)<<4) | ((sector>>24)&0x0f));[m
[32m+[m[32m  if(b->flags & B_DIRTY){[m
[32m+[m[32m80102093:	f6 01 04             	testb  $0x4,(%ecx)[m
[32m+[m[32m80102096:	ba f7 01 00 00       	mov    $0x1f7,%edx[m
[32m+[m[32m8010209b:	75 13                	jne    801020b0 <idestart+0x90>[m
[32m+[m[32m8010209d:	b8 20 00 00 00       	mov    $0x20,%eax[m
[32m+[m[32m801020a2:	ee                   	out    %al,(%dx)[m
[32m+[m[32m    outb(0x1f7, write_cmd);[m
[32m+[m[32m    outsl(0x1f0, b->data, BSIZE/4);[m
[32m+[m[32m  } else {[m
[32m+[m[32m    outb(0x1f7, read_cmd);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[32m801020a3:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[32m+[m[32m801020a6:	5b                   	pop    %ebx[m
[32m+[m[32m801020a7:	5e                   	pop    %esi[m
[32m+[m[32m801020a8:	5d                   	pop    %ebp[m
[32m+[m[32m801020a9:	c3                   	ret[m[41m    [m
[32m+[m[32m801020aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m801020b0:	b8 30 00 00 00       	mov    $0x30,%eax[m
[32m+[m[32m801020b5:	ee                   	out    %al,(%dx)[m
[32m+[m[32m}[m
 [m
[31m-  // Parent might be sleeping in wait().[m
[31m-  wakeup1(proc->parent);[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutsl(int port, const void *addr, int cnt)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("cld; rep outsl" :[m
[32m+[m[32m801020b6:	ba f0 01 00 00       	mov    $0x1f0,%edx[m
[32m+[m[32m  outb(0x1f4, (sector >> 8) & 0xff);[m
[32m+[m[32m  outb(0x1f5, (sector >> 16) & 0xff);[m
[32m+[m[32m  outb(0x1f6, 0xe0 | ((b->dev&1)<<4) | ((sector>>24)&0x0f));[m
[32m+[m[32m  if(b->flags & B_DIRTY){[m
[32m+[m[32m    outb(0x1f7, write_cmd);[m
[32m+[m[32m    outsl(0x1f0, b->data, BSIZE/4);[m
[32m+[m[32m801020bb:	8d 71 5c             	lea    0x5c(%ecx),%esi[m
[32m+[m[32m801020be:	b9 80 00 00 00       	mov    $0x80,%ecx[m
[32m+[m[32m801020c3:	fc                   	cld[m[41m    [m
[32m+[m[32m801020c4:	f3 6f                	rep outsl %ds:(%esi),(%dx)[m
[32m+[m[32m  } else {[m
[32m+[m[32m    outb(0x1f7, read_cmd);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[32m801020c6:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[32m+[m[32m801020c9:	5b                   	pop    %ebx[m
[32m+[m[32m801020ca:	5e                   	pop    %esi[m
[32m+[m[32m801020cb:	5d                   	pop    %ebp[m
[32m+[m[32m801020cc:	c3                   	ret[m[41m    [m
[32m+[m[32midestart(struct buf *b)[m
[32m+[m[32m{[m
[32m+[m[32m  if(b == 0)[m
[32m+[m[32m    panic("idestart");[m
[32m+[m[32m  if(b->blockno >= FSSIZE)[m
[32m+[m[32m    panic("incorrect blockno");[m
[32m+[m[32m801020cd:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801020d0:	68 00 74 10 80       	push   $0x80107400[m
[32m+[m[32m801020d5:	e8 96 e2 ff ff       	call   80100370 <panic>[m
[32m+[m[32m// Start the request for b.  Caller must hold idelock.[m
[32m+[m[32mstatic void[m
[32m+[m[32midestart(struct buf *b)[m
[32m+[m[32m{[m
[32m+[m[32m  if(b == 0)[m
[32m+[m[32m    panic("idestart");[m
[32m+[m[32m801020da:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801020dd:	68 f7 73 10 80       	push   $0x801073f7[m
[32m+[m[32m801020e2:	e8 89 e2 ff ff       	call   80100370 <panic>[m
[32m+[m[32m801020e7:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m801020e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m
[32m+[m[32m801020f0 <ideinit>:[m
[32m+[m[32m  return 0;[m
[32m+[m[32m}[m
 [m
[31m-  // Pass abandoned children to init.[m
[31m-  for(p = ptable.proc; p < &ptable.proc[NPROC]; p++){[m
[31m-80103d88:	83 c2 7c             	add    $0x7c,%edx[m
[31m-80103d8b:	81 fa d4 4c 11 80    	cmp    $0x80114cd4,%edx[m
[31m-80103d91:	74 3b                	je     80103dce <exit+0x12e>[m
[31m-    if(p->parent == proc){[m
[31m-80103d93:	3b 4a 14             	cmp    0x14(%edx),%ecx[m
[31m-80103d96:	75 f0                	jne    80103d88 <exit+0xe8>[m
[31m-      p->parent = initproc;[m
[31m-      if(p->state == ZOMBIE)[m
[31m-80103d98:	83 7a 0c 05          	cmpl   $0x5,0xc(%edx)[m
[31m-  wakeup1(proc->parent);[m
[32m+[m[32mvoid[m
[32m+[m[32mideinit(void)[m
[32m+[m[32m{[m
[32m+[m[32m801020f0:	55                   	push   %ebp[m
[32m+[m[32m801020f1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m801020f3:	83 ec 10             	sub    $0x10,%esp[m
[32m+[m[32m  int i;[m
 [m
[31m-  // Pass abandoned children to init.[m
[31m-  for(p = ptable.proc; p < &ptable.proc[NPROC]; p++){[m
[31m-    if(p->parent == proc){[m
[31m-      p->parent = initproc;[m
[31m-80103d9c:	89 5a 14             	mov    %ebx,0x14(%edx)[m
[31m-      if(p->state == ZOMBIE)[m
[31m-80103d9f:	75 e7                	jne    80103d88 <exit+0xe8>[m
[31m-80103da1:	b8 d4 2d 11 80       	mov    $0x80112dd4,%eax[m
[31m-80103da6:	eb 12                	jmp    80103dba <exit+0x11a>[m
[31m-80103da8:	90                   	nop[m
[31m-80103da9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[31m-static void[m
[31m-wakeup1(void *chan)[m
[32m+[m[32m  initlock(&idelock, "ide");[m
[32m+[m[32m801020f6:	68 12 74 10 80       	push   $0x80107412[m
[32m+[m[32m801020fb:	68 80 a5 10 80       	push   $0x8010a580[m
[32m+[m[32m80102100:	e8 ab 22 00 00       	call   801043b0 <initlock>[m
[32m+[m[32m  picenable(IRQ_IDE);[m
[32m+[m[32m80102105:	c7 04 24 0e 00 00 00 	movl   $0xe,(%esp)[m
[32m+[m[32m8010210c:	e8 cf 12 00 00       	call   801033e0 <picenable>[m
[32m+[m[32m  ioapicenable(IRQ_IDE, ncpu - 1);[m
[32m+[m[32m80102111:	58                   	pop    %eax[m
[32m+[m[32m80102112:	a1 80 2d 11 80       	mov    0x80112d80,%eax[m
[32m+[m[32m80102117:	5a                   	pop    %edx[m
[32m+[m[32m80102118:	83 e8 01             	sub    $0x1,%eax[m
[32m+[m[32m8010211b:	50                   	push   %eax[m
[32m+[m[32m8010211c:	6a 0e                	push   $0xe[m
[32m+[m[32m8010211e:	e8 bd 02 00 00       	call   801023e0 <ioapicenable>[m
[32m+[m[32m80102123:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
 {[m
[31m-  struct proc *p;[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
[32m+[m[32m80102126:	ba f7 01 00 00       	mov    $0x1f7,%edx[m
[32m+[m[32m8010212b:	90                   	nop[m
[32m+[m[32m8010212c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m80102130:	ec                   	in     (%dx),%al[m
[32m+[m[32mstatic int[m
[32m+[m[32midewait(int checkerr)[m
[32m+[m[32m{[m
[32m+[m[32m  int r;[m
 [m
[31m-  for(p = ptable.proc; p < &ptable.proc[NPROC]; p++)[m
[31m-80103db0:	83 c0 7c             	add    $0x7c,%eax[m
[31m-80103db3:	3d d4 4c 11 80       	cmp    $0x80114cd4,%eax[m
[31m-80103db8:	74 ce                	je     80103d88 <exit+0xe8>[m
[31m-    if(p->state == SLEEPING && p->chan == chan)[m
[31m-80103dba:	83 78 0c 02          	cmpl   $0x2,0xc(%eax)[m
[31m-80103dbe:	75 f0                	jne    80103db0 <exit+0x110>[m
[31m-80103dc0:	3b 58 20             	cmp    0x20(%eax),%ebx[m
[31m-80103dc3:	75 eb                	jne    80103db0 <exit+0x110>[m
[31m-      p->state = RUNNABLE;[m
[31m-80103dc5:	c7 40 0c 03 00 00 00 	movl   $0x3,0xc(%eax)[m
[31m-80103dcc:	eb e2                	jmp    80103db0 <exit+0x110>[m
[31m-        wakeup1(initproc);[m
[32m+[m[32m  while(((r = inb(0x1f7)) & (IDE_BSY|IDE_DRDY)) != IDE_DRDY)[m
[32m+[m[32m80102131:	83 e0 c0             	and    $0xffffffc0,%eax[m
[32m+[m[32m80102134:	3c 40                	cmp    $0x40,%al[m
[32m+[m[32m80102136:	75 f8                	jne    80102130 <ideinit+0x40>[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutb(ushort port, uchar data)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("out %0,%1" : : "a" (data), "d" (port));[m
[32m+[m[32m80102138:	ba f6 01 00 00       	mov    $0x1f6,%edx[m
[32m+[m[32m8010213d:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax[m
[32m+[m[32m80102142:	ee                   	out    %al,(%dx)[m
[32m+[m[32m80102143:	b9 e8 03 00 00       	mov    $0x3e8,%ecx[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
[32m+[m[32m{[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
[32m+[m[32m80102148:	ba f7 01 00 00       	mov    $0x1f7,%edx[m
[32m+[m[32m8010214d:	eb 06                	jmp    80102155 <ideinit+0x65>[m
[32m+[m[32m8010214f:	90                   	nop[m
[32m+[m[32m  ioapicenable(IRQ_IDE, ncpu - 1);[m
[32m+[m[32m  idewait(0);[m
[32m+[m
[32m+[m[32m  // Check if disk 1 is present[m
[32m+[m[32m  outb(0x1f6, 0xe0 | (1<<4));[m
[32m+[m[32m  for(i=0; i<1000; i++){[m
[32m+[m[32m80102150:	83 e9 01             	sub    $0x1,%ecx[m
[32m+[m[32m80102153:	74 0f                	je     80102164 <ideinit+0x74>[m
[32m+[m[32m80102155:	ec                   	in     (%dx),%al[m
[32m+[m[32m    if(inb(0x1f7) != 0){[m
[32m+[m[32m80102156:	84 c0                	test   %al,%al[m
[32m+[m[32m80102158:	74 f6                	je     80102150 <ideinit+0x60>[m
[32m+[m[32m      havedisk1 = 1;[m
[32m+[m[32m8010215a:	c7 05 60 a5 10 80 01 	movl   $0x1,0x8010a560[m
[32m+[m[32m80102161:	00 00 00[m[41m [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutb(ushort port, uchar data)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("out %0,%1" : : "a" (data), "d" (port));[m
[32m+[m[32m80102164:	ba f6 01 00 00       	mov    $0x1f6,%edx[m
[32m+[m[32m80102169:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax[m
[32m+[m[32m8010216e:	ee                   	out    %al,(%dx)[m
     }[m
   }[m
 [m
[31m-  // Jump into the scheduler, never to return.[m
[31m-  proc->state = ZOMBIE;[m
[31m-80103dce:	c7 41 0c 05 00 00 00 	movl   $0x5,0xc(%ecx)[m
[31m-  sched();[m
[31m-80103dd5:	e8 26 fe ff ff       	call   80103c00 <sched>[m
[31m-  panic("zombie exit");[m
[31m-80103dda:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103ddd:	68 85 75 10 80       	push   $0x80107585[m
[31m-80103de2:	e8 89 c5 ff ff       	call   80100370 <panic>[m
[31m-  cprintf(" %d\n", status);[m
[31m-  struct proc *p;[m
[31m-  int fd;[m
[32m+[m[32m  // Switch back to disk 0.[m
[32m+[m[32m  outb(0x1f6, 0xe0 | (0<<4));[m
[32m+[m[32m}[m
[32m+[m[32m8010216f:	c9                   	leave[m[41m  [m
[32m+[m[32m80102170:	c3                   	ret[m[41m    [m
[32m+[m[32m80102171:	eb 0d                	jmp    80102180 <ideintr>[m
[32m+[m[32m80102173:	90                   	nop[m
[32m+[m[32m80102174:	90                   	nop[m
[32m+[m[32m80102175:	90                   	nop[m
[32m+[m[32m80102176:	90                   	nop[m
[32m+[m[32m80102177:	90                   	nop[m
[32m+[m[32m80102178:	90                   	nop[m
[32m+[m[32m80102179:	90                   	nop[m
[32m+[m[32m8010217a:	90                   	nop[m
[32m+[m[32m8010217b:	90                   	nop[m
[32m+[m[32m8010217c:	90                   	nop[m
[32m+[m[32m8010217d:	90                   	nop[m
[32m+[m[32m8010217e:	90                   	nop[m
[32m+[m[32m8010217f:	90                   	nop[m
[32m+[m
[32m+[m[32m80102180 <ideintr>:[m
[32m+[m[32m}[m
 [m
[31m-  if(proc == initproc)[m
[31m-    panic("init exiting");[m
[31m-80103de7:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103dea:	68 78 75 10 80       	push   $0x80107578[m
[31m-80103def:	e8 7c c5 ff ff       	call   80100370 <panic>[m
[31m-80103df4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-80103dfa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi[m
[32m+[m[32m// Interrupt handler.[m
[32m+[m[32mvoid[m
[32m+[m[32mideintr(void)[m
[32m+[m[32m{[m
[32m+[m[32m80102180:	55                   	push   %ebp[m
[32m+[m[32m80102181:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80102183:	57                   	push   %edi[m
[32m+[m[32m80102184:	56                   	push   %esi[m
[32m+[m[32m80102185:	53                   	push   %ebx[m
[32m+[m[32m80102186:	83 ec 18             	sub    $0x18,%esp[m
[32m+[m[32m  struct buf *b;[m
[32m+[m
[32m+[m[32m  // First queued buffer is the active request.[m
[32m+[m[32m  acquire(&idelock);[m
[32m+[m[32m80102189:	68 80 a5 10 80       	push   $0x8010a580[m
[32m+[m[32m8010218e:	e8 3d 22 00 00       	call   801043d0 <acquire>[m
[32m+[m[32m  if((b = idequeue) == 0){[m
[32m+[m[32m80102193:	8b 1d 64 a5 10 80    	mov    0x8010a564,%ebx[m
[32m+[m[32m80102199:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m8010219c:	85 db                	test   %ebx,%ebx[m
[32m+[m[32m8010219e:	74 34                	je     801021d4 <ideintr+0x54>[m
[32m+[m[32m    release(&idelock);[m
[32m+[m[32m    // cprintf("spurious IDE interrupt\n");[m
[32m+[m[32m    return;[m
[32m+[m[32m  }[m
[32m+[m[32m  idequeue = b->qnext;[m
[32m+[m[32m801021a0:	8b 43 58             	mov    0x58(%ebx),%eax[m
[32m+[m[32m801021a3:	a3 64 a5 10 80       	mov    %eax,0x8010a564[m
[32m+[m
[32m+[m[32m  // Read data if needed.[m
[32m+[m[32m  if(!(b->flags & B_DIRTY) && idewait(1) >= 0)[m
[32m+[m[32m801021a8:	8b 33                	mov    (%ebx),%esi[m
[32m+[m[32m801021aa:	f7 c6 04 00 00 00    	test   $0x4,%esi[m
[32m+[m[32m801021b0:	74 3e                	je     801021f0 <ideintr+0x70>[m
[32m+[m[32m    insl(0x1f0, b->data, BSIZE/4);[m
[32m+[m
[32m+[m[32m  // Wake process waiting for this buf.[m
[32m+[m[32m  b->flags |= B_VALID;[m
[32m+[m[32m  b->flags &= ~B_DIRTY;[m
[32m+[m[32m801021b2:	83 e6 fb             	and    $0xfffffffb,%esi[m
[32m+[m[32m  wakeup(b);[m
[32m+[m[32m801021b5:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m  if(!(b->flags & B_DIRTY) && idewait(1) >= 0)[m
[32m+[m[32m    insl(0x1f0, b->data, BSIZE/4);[m
[32m+[m
[32m+[m[32m  // Wake process waiting for this buf.[m
[32m+[m[32m  b->flags |= B_VALID;[m
[32m+[m[32m  b->flags &= ~B_DIRTY;[m
[32m+[m[32m801021b8:	83 ce 02             	or     $0x2,%esi[m
[32m+[m[32m801021bb:	89 33                	mov    %esi,(%ebx)[m
[32m+[m[32m  wakeup(b);[m
[32m+[m[32m801021bd:	53                   	push   %ebx[m
[32m+[m[32m801021be:	e8 2d 1f 00 00       	call   801040f0 <wakeup>[m
[32m+[m
[32m+[m[32m  // Start disk on next buf in queue.[m
[32m+[m[32m  if(idequeue != 0)[m
[32m+[m[32m801021c3:	a1 64 a5 10 80       	mov    0x8010a564,%eax[m
[32m+[m[32m801021c8:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m801021cb:	85 c0                	test   %eax,%eax[m
[32m+[m[32m801021cd:	74 05                	je     801021d4 <ideintr+0x54>[m
[32m+[m[32m    idestart(idequeue);[m
[32m+[m[32m801021cf:	e8 4c fe ff ff       	call   80102020 <idestart>[m
[32m+[m[32m  struct buf *b;[m
[32m+[m
[32m+[m[32m  // First queued buffer is the active request.[m
[32m+[m[32m  acquire(&idelock);[m
[32m+[m[32m  if((b = idequeue) == 0){[m
[32m+[m[32m    release(&idelock);[m
[32m+[m[32m801021d4:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801021d7:	68 80 a5 10 80       	push   $0x8010a580[m
[32m+[m[32m801021dc:	e8 cf 23 00 00       	call   801045b0 <release>[m
[32m+[m[32m  // Start disk on next buf in queue.[m
[32m+[m[32m  if(idequeue != 0)[m
[32m+[m[32m    idestart(idequeue);[m
[32m+[m
[32m+[m[32m  release(&idelock);[m
[32m+[m[32m}[m
[32m+[m[32m801021e1:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m801021e4:	5b                   	pop    %ebx[m
[32m+[m[32m801021e5:	5e                   	pop    %esi[m
[32m+[m[32m801021e6:	5f                   	pop    %edi[m
[32m+[m[32m801021e7:	5d                   	pop    %ebp[m
[32m+[m[32m801021e8:	c3                   	ret[m[41m    [m
[32m+[m[32m801021e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
[32m+[m[32m{[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
[32m+[m[32m801021f0:	ba f7 01 00 00       	mov    $0x1f7,%edx[m
[32m+[m[32m801021f5:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m801021f8:	ec                   	in     (%dx),%al[m
[32m+[m[32mstatic int[m
[32m+[m[32midewait(int checkerr)[m
[32m+[m[32m{[m
[32m+[m[32m  int r;[m
[32m+[m
[32m+[m[32m  while(((r = inb(0x1f7)) & (IDE_BSY|IDE_DRDY)) != IDE_DRDY)[m
[32m+[m[32m801021f9:	89 c1                	mov    %eax,%ecx[m
[32m+[m[32m801021fb:	83 e1 c0             	and    $0xffffffc0,%ecx[m
[32m+[m[32m801021fe:	80 f9 40             	cmp    $0x40,%cl[m
[32m+[m[32m80102201:	75 f5                	jne    801021f8 <ideintr+0x78>[m
[32m+[m[32m    ;[m
[32m+[m[32m  if(checkerr && (r & (IDE_DF|IDE_ERR)) != 0)[m
[32m+[m[32m80102203:	a8 21                	test   $0x21,%al[m
[32m+[m[32m80102205:	75 ab                	jne    801021b2 <ideintr+0x32>[m
[32m+[m[32m  }[m
[32m+[m[32m  idequeue = b->qnext;[m
 [m
[31m-80103e00 <yield>:[m
[32m+[m[32m  // Read data if needed.[m
[32m+[m[32m  if(!(b->flags & B_DIRTY) && idewait(1) >= 0)[m
[32m+[m[32m    insl(0x1f0, b->data, BSIZE/4);[m
[32m+[m[32m80102207:	8d 7b 5c             	lea    0x5c(%ebx),%edi[m
 }[m
 [m
[31m-// Give up the CPU for one scheduling round.[m
[32m+[m[32mstatic inline void[m
[32m+[m[32minsl(int port, void *addr, int cnt)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("cld; rep insl" :[m
[32m+[m[32m8010220a:	b9 80 00 00 00       	mov    $0x80,%ecx[m
[32m+[m[32m8010220f:	ba f0 01 00 00       	mov    $0x1f0,%edx[m
[32m+[m[32m80102214:	fc                   	cld[m[41m    [m
[32m+[m[32m80102215:	f3 6d                	rep insl (%dx),%es:(%edi)[m
[32m+[m[32m80102217:	8b 33                	mov    (%ebx),%esi[m
[32m+[m[32m80102219:	eb 97                	jmp    801021b2 <ideintr+0x32>[m
[32m+[m[32m8010221b:	90                   	nop[m
[32m+[m[32m8010221c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m
[32m+[m[32m80102220 <iderw>:[m
[32m+[m[32m// Sync buf with disk.[m
[32m+[m[32m// If B_DIRTY is set, write buf to disk, clear B_DIRTY, set B_VALID.[m
[32m+[m[32m// Else if B_VALID is not set, read buf from disk, set B_VALID.[m
 void[m
[31m-yield(void)[m
[32m+[m[32miderw(struct buf *b)[m
 {[m
[31m-80103e00:	55                   	push   %ebp[m
[31m-80103e01:	89 e5                	mov    %esp,%ebp[m
[31m-80103e03:	83 ec 14             	sub    $0x14,%esp[m
[31m-  acquire(&ptable.lock);  //DOC: yieldlock[m
[31m-80103e06:	68 a0 2d 11 80       	push   $0x80112da0[m
[31m-80103e0b:	e8 b0 04 00 00       	call   801042c0 <acquire>[m
[31m-  proc->state = RUNNABLE;[m
[31m-80103e10:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[31m-80103e16:	c7 40 0c 03 00 00 00 	movl   $0x3,0xc(%eax)[m
[31m-  sched();[m
[31m-80103e1d:	e8 de fd ff ff       	call   80103c00 <sched>[m
[31m-  release(&ptable.lock);[m
[31m-80103e22:	c7 04 24 a0 2d 11 80 	movl   $0x80112da0,(%esp)[m
[31m-80103e29:	e8 72 06 00 00       	call   801044a0 <release>[m
[32m+[m[32m80102220:	55                   	push   %ebp[m
[32m+[m[32m80102221:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80102223:	53                   	push   %ebx[m
[32m+[m[32m80102224:	83 ec 10             	sub    $0x10,%esp[m
[32m+[m[32m80102227:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m  struct buf **pp;[m
[32m+[m
[32m+[m[32m  if(!holdingsleep(&b->lock))[m
[32m+[m[32m8010222a:	8d 43 0c             	lea    0xc(%ebx),%eax[m
[32m+[m[32m8010222d:	50                   	push   %eax[m
[32m+[m[32m8010222e:	e8 4d 21 00 00       	call   80104380 <holdingsleep>[m
[32m+[m[32m80102233:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80102236:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80102238:	0f 84 ad 00 00 00    	je     801022eb <iderw+0xcb>[m
[32m+[m[32m    panic("iderw: buf not locked");[m
[32m+[m[32m  if((b->flags & (B_VALID|B_DIRTY)) == B_VALID)[m
[32m+[m[32m8010223e:	8b 03                	mov    (%ebx),%eax[m
[32m+[m[32m80102240:	83 e0 06             	and    $0x6,%eax[m
[32m+[m[32m80102243:	83 f8 02             	cmp    $0x2,%eax[m
[32m+[m[32m80102246:	0f 84 b9 00 00 00    	je     80102305 <iderw+0xe5>[m
[32m+[m[32m    panic("iderw: nothing to do");[m
[32m+[m[32m  if(b->dev != 0 && !havedisk1)[m
[32m+[m[32m8010224c:	8b 53 04             	mov    0x4(%ebx),%edx[m
[32m+[m[32m8010224f:	85 d2                	test   %edx,%edx[m
[32m+[m[32m80102251:	74 0d                	je     80102260 <iderw+0x40>[m
[32m+[m[32m80102253:	a1 60 a5 10 80       	mov    0x8010a560,%eax[m
[32m+[m[32m80102258:	85 c0                	test   %eax,%eax[m
[32m+[m[32m8010225a:	0f 84 98 00 00 00    	je     801022f8 <iderw+0xd8>[m
[32m+[m[32m    panic("iderw: ide disk 1 not present");[m
[32m+[m
[32m+[m[32m  acquire(&idelock);  //DOC:acquire-lock[m
[32m+[m[32m80102260:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80102263:	68 80 a5 10 80       	push   $0x8010a580[m
[32m+[m[32m80102268:	e8 63 21 00 00       	call   801043d0 <acquire>[m
[32m+[m
[32m+[m[32m  // Append b to idequeue.[m
[32m+[m[32m  b->qnext = 0;[m
[32m+[m[32m  for(pp=&idequeue; *pp; pp=&(*pp)->qnext)  //DOC:insert-queue[m
[32m+[m[32m8010226d:	8b 15 64 a5 10 80    	mov    0x8010a564,%edx[m
[32m+[m[32m80102273:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m    panic("iderw: ide disk 1 not present");[m
[32m+[m
[32m+[m[32m  acquire(&idelock);  //DOC:acquire-lock[m
[32m+[m
[32m+[m[32m  // Append b to idequeue.[m
[32m+[m[32m  b->qnext = 0;[m
[32m+[m[32m80102276:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)[m
[32m+[m[32m  for(pp=&idequeue; *pp; pp=&(*pp)->qnext)  //DOC:insert-queue[m
[32m+[m[32m8010227d:	85 d2                	test   %edx,%edx[m
[32m+[m[32m8010227f:	75 09                	jne    8010228a <iderw+0x6a>[m
[32m+[m[32m80102281:	eb 58                	jmp    801022db <iderw+0xbb>[m
[32m+[m[32m80102283:	90                   	nop[m
[32m+[m[32m80102284:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m80102288:	89 c2                	mov    %eax,%edx[m
[32m+[m[32m8010228a:	8b 42 58             	mov    0x58(%edx),%eax[m
[32m+[m[32m8010228d:	85 c0                	test   %eax,%eax[m
[32m+[m[32m8010228f:	75 f7                	jne    80102288 <iderw+0x68>[m
[32m+[m[32m80102291:	83 c2 58             	add    $0x58,%edx[m
[32m+[m[32m    ;[m
[32m+[m[32m  *pp = b;[m
[32m+[m[32m80102294:	89 1a                	mov    %ebx,(%edx)[m
[32m+[m
[32m+[m[32m  // Start disk if necessary.[m
[32m+[m[32m  if(idequeue == b)[m
[32m+[m[32m80102296:	3b 1d 64 a5 10 80    	cmp    0x8010a564,%ebx[m
[32m+[m[32m8010229c:	74 44                	je     801022e2 <iderw+0xc2>[m
[32m+[m[32m    idestart(b);[m
[32m+[m
[32m+[m[32m  // Wait for request to finish.[m
[32m+[m[32m  while((b->flags & (B_VALID|B_DIRTY)) != B_VALID){[m
[32m+[m[32m8010229e:	8b 03                	mov    (%ebx),%eax[m
[32m+[m[32m801022a0:	83 e0 06             	and    $0x6,%eax[m
[32m+[m[32m801022a3:	83 f8 02             	cmp    $0x2,%eax[m
[32m+[m[32m801022a6:	74 23                	je     801022cb <iderw+0xab>[m
[32m+[m[32m801022a8:	90                   	nop[m
[32m+[m[32m801022a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    sleep(b, &idelock);[m
[32m+[m[32m801022b0:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m801022b3:	68 80 a5 10 80       	push   $0x8010a580[m
[32m+[m[32m801022b8:	53                   	push   %ebx[m
[32m+[m[32m801022b9:	e8 82 1c 00 00       	call   80103f40 <sleep>[m
[32m+[m[32m  // Start disk if necessary.[m
[32m+[m[32m  if(idequeue == b)[m
[32m+[m[32m    idestart(b);[m
[32m+[m
[32m+[m[32m  // Wait for request to finish.[m
[32m+[m[32m  while((b->flags & (B_VALID|B_DIRTY)) != B_VALID){[m
[32m+[m[32m801022be:	8b 03                	mov    (%ebx),%eax[m
[32m+[m[32m801022c0:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m801022c3:	83 e0 06             	and    $0x6,%eax[m
[32m+[m[32m801022c6:	83 f8 02             	cmp    $0x2,%eax[m
[32m+[m[32m801022c9:	75 e5                	jne    801022b0 <iderw+0x90>[m
[32m+[m[32m    sleep(b, &idelock);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  release(&idelock);[m
[32m+[m[32m801022cb:	c7 45 08 80 a5 10 80 	movl   $0x8010a580,0x8(%ebp)[m
 }[m
[31m-80103e2e:	83 c4 10             	add    $0x10,%esp[m
[31m-80103e31:	c9                   	leave  [m
[31m-80103e32:	c3                   	ret    [m
[31m-80103e33:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[31m-80103e39:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m801022d2:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[32m+[m[32m801022d5:	c9                   	leave[m[41m  [m
[32m+[m[32m  // Wait for request to finish.[m
[32m+[m[32m  while((b->flags & (B_VALID|B_DIRTY)) != B_VALID){[m
[32m+[m[32m    sleep(b, &idelock);[m
[32m+[m[32m  }[m
 [m
[31m-80103e40 <sleep>:[m
[31m-// Atomically release lock and sleep on chan.[m
[31m-// Reacquires lock when awakened.[m
[32m+[m[32m  release(&idelock);[m
[32m+[m[32m801022d6:	e9 d5 22 00 00       	jmp    801045b0 <release>[m
[32m+[m
[32m+[m[32m  acquire(&idelock);  //DOC:acquire-lock[m
[32m+[m
[32m+[m[32m  // Append b to idequeue.[m
[32m+[m[32m  b->qnext = 0;[m
[32m+[m[32m  for(pp=&idequeue; *pp; pp=&(*pp)->qnext)  //DOC:insert-queue[m
[32m+[m[32m801022db:	ba 64 a5 10 80       	mov    $0x8010a564,%edx[m
[32m+[m[32m801022e0:	eb b2                	jmp    80102294 <iderw+0x74>[m
[32m+[m[32m    ;[m
[32m+[m[32m  *pp = b;[m
[32m+[m
[32m+[m[32m  // Start disk if necessary.[m
[32m+[m[32m  if(idequeue == b)[m
[32m+[m[32m    idestart(b);[m
[32m+[m[32m801022e2:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m801022e4:	e8 37 fd ff ff       	call   80102020 <idestart>[m
[32m+[m[32m801022e9:	eb b3                	jmp    8010229e <iderw+0x7e>[m
[32m+[m[32miderw(struct buf *b)[m
[32m+[m[32m{[m
[32m+[m[32m  struct buf **pp;[m
[32m+[m
[32m+[m[32m  if(!holdingsleep(&b->lock))[m
[32m+[m[32m    panic("iderw: buf not locked");[m
[32m+[m[32m801022eb:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801022ee:	68 16 74 10 80       	push   $0x80107416[m
[32m+[m[32m801022f3:	e8 78 e0 ff ff       	call   80100370 <panic>[m
[32m+[m[32m  if((b->flags & (B_VALID|B_DIRTY)) == B_VALID)[m
[32m+[m[32m    panic("iderw: nothing to do");[m
[32m+[m[32m  if(b->dev != 0 && !havedisk1)[m
[32m+[m[32m    panic("iderw: ide disk 1 not present");[m
[32m+[m[32m801022f8:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801022fb:	68 41 74 10 80       	push   $0x80107441[m
[32m+[m[32m80102300:	e8 6b e0 ff ff       	call   80100370 <panic>[m
[32m+[m[32m  struct buf **pp;[m
[32m+[m
[32m+[m[32m  if(!holdingsleep(&b->lock))[m
[32m+[m[32m    panic("iderw: buf not locked");[m
[32m+[m[32m  if((b->flags & (B_VALID|B_DIRTY)) == B_VALID)[m
[32m+[m[32m    panic("iderw: nothing to do");[m
[32m+[m[32m80102305:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80102308:	68 2c 74 10 80       	push   $0x8010742c[m
[32m+[m[32m8010230d:	e8 5e e0 ff ff       	call   80100370 <panic>[m
[32m+[m[32m80102312:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m80102314:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m80102316:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m80102318:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m8010231a:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m8010231c:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m8010231e:	66 90                	xchg   %ax,%ax[m
[32m+[m
[32m+[m[32m80102320 <ioapicinit>:[m
 void[m
[31m-sleep(void *chan, struct spinlock *lk)[m
[32m+[m[32mioapicinit(void)[m
 {[m
[31m-  if(proc == 0)[m
[31m-80103e40:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[32m+[m[32m  int i, id, maxintr;[m
[32m+[m
[32m+[m[32m  if(!ismp)[m
[32m+[m[32m80102320:	a1 84 27 11 80       	mov    0x80112784,%eax[m
[32m+[m[32m80102325:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80102327:	0f 84 a8 00 00 00    	je     801023d5 <ioapicinit+0xb5>[m
[32m+[m[32m  ioapic->data = data;[m
[32m+[m[32m}[m
 [m
[31m-// Atomically release lock and sleep on chan.[m
[31m-// Reacquires lock when awakened.[m
 void[m
[31m-sleep(void *chan, struct spinlock *lk)[m
[32m+[m[32mioapicinit(void)[m
 {[m
[31m-80103e46:	55                   	push   %ebp[m
[31m-80103e47:	89 e5                	mov    %esp,%ebp[m
[31m-80103e49:	56                   	push   %esi[m
[31m-80103e4a:	53                   	push   %ebx[m
[31m-  if(proc == 0)[m
[31m-80103e4b:	85 c0                	test   %eax,%eax[m
[32m+[m[32m8010232d:	55                   	push   %ebp[m
[32m+[m[32m  int i, id, maxintr;[m
[32m+[m
[32m+[m[32m  if(!ismp)[m
[32m+[m[32m    return;[m
[32m+[m
[32m+[m[32m  ioapic = (volatile struct ioapic*)IOAPIC;[m
[32m+[m[32m8010232e:	c7 05 54 26 11 80 00 	movl   $0xfec00000,0x80112654[m
[32m+[m[32m80102335:	00 c0 fe[m[41m [m
[32m+[m[32m  ioapic->data = data;[m
[32m+[m[32m}[m
 [m
[31m-// Atomically release lock and sleep on chan.[m
[31m-// Reacquires lock when awakened.[m
 void[m
[31m-sleep(void *chan, struct spinlock *lk)[m
[32m+[m[32mioapicinit(void)[m
 {[m
[31m-80103e4d:	8b 75 08             	mov    0x8(%ebp),%esi[m
[31m-80103e50:	8b 5d 0c             	mov    0xc(%ebp),%ebx[m
[31m-  if(proc == 0)[m
[31m-80103e53:	0f 84 97 00 00 00    	je     80103ef0 <sleep+0xb0>[m
[31m-    panic("sleep");[m
[32m+[m[32m80102338:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m8010233a:	56                   	push   %esi[m
[32m+[m[32m8010233b:	53                   	push   %ebx[m
[32m+[m[32m};[m
 [m
[31m-  if(lk == 0)[m
[31m-80103e59:	85 db                	test   %ebx,%ebx[m
[31m-80103e5b:	0f 84 82 00 00 00    	je     80103ee3 <sleep+0xa3>[m
[31m-  // change p->state and then call sched.[m
[31m-  // Once we hold ptable.lock, we can be[m
[31m-  // guaranteed that we won't miss any wakeup[m
[31m-  // (wakeup runs with ptable.lock locked),[m
[31m-  // so it's okay to release lk.[m
[31m-  if(lk != &ptable.lock){  //DOC: sleeplock0[m
[31m-80103e61:	81 fb a0 2d 11 80    	cmp    $0x80112da0,%ebx[m
[31m-80103e67:	74 57                	je     80103ec0 <sleep+0x80>[m
[31m-    acquire(&ptable.lock);  //DOC: sleeplock1[m
[31m-80103e69:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103e6c:	68 a0 2d 11 80       	push   $0x80112da0[m
[31m-80103e71:	e8 4a 04 00 00       	call   801042c0 <acquire>[m
[31m-    release(lk);[m
[31m-80103e76:	89 1c 24             	mov    %ebx,(%esp)[m
[31m-80103e79:	e8 22 06 00 00       	call   801044a0 <release>[m
[31m-  }[m
[32m+[m[32mstatic uint[m
[32m+[m[32mioapicread(int reg)[m
[32m+[m[32m{[m
[32m+[m[32m  ioapic->reg = reg;[m
[32m+[m[32m8010233c:	c7 05 00 00 c0 fe 01 	movl   $0x1,0xfec00000[m
[32m+[m[32m80102343:	00 00 00[m[41m [m
[32m+[m[32m  return ioapic->data;[m
[32m+[m[32m80102346:	8b 15 54 26 11 80    	mov    0x80112654,%edx[m
[32m+[m[32m8010234c:	8b 72 10             	mov    0x10(%edx),%esi[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mstatic uint[m
[32m+[m[32mioapicread(int reg)[m
[32m+[m[32m{[m
[32m+[m[32m  ioapic->reg = reg;[m
[32m+[m[32m8010234f:	c7 02 00 00 00 00    	movl   $0x0,(%edx)[m
[32m+[m[32m  return ioapic->data;[m
[32m+[m[32m80102355:	8b 0d 54 26 11 80    	mov    0x80112654,%ecx[m
[32m+[m[32m    return;[m
 [m
[31m-  // Go to sleep.[m
[31m-  proc->chan = chan;[m
[31m-80103e7e:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[31m-80103e84:	89 70 20             	mov    %esi,0x20(%eax)[m
[31m-  proc->state = SLEEPING;[m
[31m-80103e87:	c7 40 0c 02 00 00 00 	movl   $0x2,0xc(%eax)[m
[31m-  sched();[m
[31m-80103e8e:	e8 6d fd ff ff       	call   80103c00 <sched>[m
[32m+[m[32m  ioapic = (volatile struct ioapic*)IOAPIC;[m
[32m+[m[32m  maxintr = (ioapicread(REG_VER) >> 16) & 0xFF;[m
[32m+[m[32m  id = ioapicread(REG_ID) >> 24;[m
[32m+[m[32m  if(id != ioapicid)[m
[32m+[m[32m8010235b:	0f b6 15 80 27 11 80 	movzbl 0x80112780,%edx[m
 [m
[31m-  // Tidy up.[m
[31m-  proc->chan = 0;[m
[31m-80103e93:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[31m-80103e99:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%eax)[m
[32m+[m[32m  if(!ismp)[m
[32m+[m[32m    return;[m
 [m
[31m-  // Reacquire original lock.[m
[31m-  if(lk != &ptable.lock){  //DOC: sleeplock2[m
[31m-    release(&ptable.lock);[m
[31m-80103ea0:	c7 04 24 a0 2d 11 80 	movl   $0x80112da0,(%esp)[m
[31m-80103ea7:	e8 f4 05 00 00       	call   801044a0 <release>[m
[31m-    acquire(lk);[m
[31m-80103eac:	89 5d 08             	mov    %ebx,0x8(%ebp)[m
[31m-80103eaf:	83 c4 10             	add    $0x10,%esp[m
[31m-  }[m
[32m+[m[32m  ioapic = (volatile struct ioapic*)IOAPIC;[m
[32m+[m[32m  maxintr = (ioapicread(REG_VER) >> 16) & 0xFF;[m
[32m+[m[32m80102362:	89 f0                	mov    %esi,%eax[m
[32m+[m[32m80102364:	c1 e8 10             	shr    $0x10,%eax[m
[32m+[m[32m80102367:	0f b6 f0             	movzbl %al,%esi[m
[32m+[m
[32m+[m[32mstatic uint[m
[32m+[m[32mioapicread(int reg)[m
[32m+[m[32m{[m
[32m+[m[32m  ioapic->reg = reg;[m
[32m+[m[32m  return ioapic->data;[m
[32m+[m[32m8010236a:	8b 41 10             	mov    0x10(%ecx),%eax[m
[32m+[m[32m    return;[m
[32m+[m
[32m+[m[32m  ioapic = (volatile struct ioapic*)IOAPIC;[m
[32m+[m[32m  maxintr = (ioapicread(REG_VER) >> 16) & 0xFF;[m
[32m+[m[32m  id = ioapicread(REG_ID) >> 24;[m
[32m+[m[32m  if(id != ioapicid)[m
[32m+[m[32m8010236d:	c1 e8 18             	shr    $0x18,%eax[m
[32m+[m[32m80102370:	39 d0                	cmp    %edx,%eax[m
[32m+[m[32m80102372:	74 16                	je     8010238a <ioapicinit+0x6a>[m
[32m+[m[32m    cprintf("ioapicinit: id isn't equal to ioapicid; not a MP\n");[m
[32m+[m[32m80102374:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80102377:	68 60 74 10 80       	push   $0x80107460[m
[32m+[m[32m8010237c:	e8 df e2 ff ff       	call   80100660 <cprintf>[m
[32m+[m[32m80102381:	8b 0d 54 26 11 80    	mov    0x80112654,%ecx[m
[32m+[m[32m80102387:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m8010238a:	83 c6 21             	add    $0x21,%esi[m
[32m+[m[32m  ioapic->data = data;[m
 }[m
[31m-80103eb2:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m-80103eb5:	5b                   	pop    %ebx[m
[31m-80103eb6:	5e                   	pop    %esi[m
[31m-80103eb7:	5d                   	pop    %ebp[m
[31m-  proc->chan = 0;[m
 [m
[31m-  // Reacquire original lock.[m
[31m-  if(lk != &ptable.lock){  //DOC: sleeplock2[m
[31m-    release(&ptable.lock);[m
[31m-    acquire(lk);[m
[31m-80103eb8:	e9 03 04 00 00       	jmp    801042c0 <acquire>[m
[31m-80103ebd:	8d 76 00             	lea    0x0(%esi),%esi[m
[31m-    acquire(&ptable.lock);  //DOC: sleeplock1[m
[31m-    release(lk);[m
[32m+[m[32mvoid[m
[32m+[m[32mioapicinit(void)[m
[32m+[m[32m{[m
[32m+[m[32m8010238d:	ba 10 00 00 00       	mov    $0x10,%edx[m
[32m+[m[32m80102392:	b8 20 00 00 00       	mov    $0x20,%eax[m
[32m+[m[32m80102397:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m80102399:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mioapicwrite(int reg, uint data)[m
[32m+[m[32m{[m
[32m+[m[32m  ioapic->reg = reg;[m
[32m+[m[32m801023a0:	89 11                	mov    %edx,(%ecx)[m
[32m+[m[32m  ioapic->data = data;[m
[32m+[m[32m801023a2:	8b 0d 54 26 11 80    	mov    0x80112654,%ecx[m
[32m+[m[32m    cprintf("ioapicinit: id isn't equal to ioapicid; not a MP\n");[m
[32m+[m
[32m+[m[32m  // Mark all interrupts edge-triggered, active high, disabled,[m
[32m+[m[32m  // and not routed to any CPUs.[m
[32m+[m[32m  for(i = 0; i <= maxintr; i++){[m
[32m+[m[32m    ioapicwrite(REG_TABLE+2*i, INT_DISABLED | (T_IRQ0 + i));[m
[32m+[m[32m801023a8:	89 c3                	mov    %eax,%ebx[m
[32m+[m[32m801023aa:	81 cb 00 00 01 00    	or     $0x10000,%ebx[m
[32m+[m[32m801023b0:	83 c0 01             	add    $0x1,%eax[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mioapicwrite(int reg, uint data)[m
[32m+[m[32m{[m
[32m+[m[32m  ioapic->reg = reg;[m
[32m+[m[32m  ioapic->data = data;[m
[32m+[m[32m801023b3:	89 59 10             	mov    %ebx,0x10(%ecx)[m
[32m+[m[32m801023b6:	8d 5a 01             	lea    0x1(%edx),%ebx[m
[32m+[m[32m801023b9:	83 c2 02             	add    $0x2,%edx[m
[32m+[m[32m  if(id != ioapicid)[m
[32m+[m[32m    cprintf("ioapicinit: id isn't equal to ioapicid; not a MP\n");[m
[32m+[m
[32m+[m[32m  // Mark all interrupts edge-triggered, active high, disabled,[m
[32m+[m[32m  // and not routed to any CPUs.[m
[32m+[m[32m  for(i = 0; i <= maxintr; i++){[m
[32m+[m[32m801023bc:	39 f0                	cmp    %esi,%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mioapicwrite(int reg, uint data)[m
[32m+[m[32m{[m
[32m+[m[32m  ioapic->reg = reg;[m
[32m+[m[32m801023be:	89 19                	mov    %ebx,(%ecx)[m
[32m+[m[32m  ioapic->data = data;[m
[32m+[m[32m801023c0:	8b 0d 54 26 11 80    	mov    0x80112654,%ecx[m
[32m+[m[32m801023c6:	c7 41 10 00 00 00 00 	movl   $0x0,0x10(%ecx)[m
[32m+[m[32m  if(id != ioapicid)[m
[32m+[m[32m    cprintf("ioapicinit: id isn't equal to ioapicid; not a MP\n");[m
[32m+[m
[32m+[m[32m  // Mark all interrupts edge-triggered, active high, disabled,[m
[32m+[m[32m  // and not routed to any CPUs.[m
[32m+[m[32m  for(i = 0; i <= maxintr; i++){[m
[32m+[m[32m801023cd:	75 d1                	jne    801023a0 <ioapicinit+0x80>[m
[32m+[m[32m    ioapicwrite(REG_TABLE+2*i, INT_DISABLED | (T_IRQ0 + i));[m
[32m+[m[32m    ioapicwrite(REG_TABLE+2*i+1, 0);[m
   }[m
[32m+[m[32m}[m
[32m+[m[32m801023cf:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[32m+[m[32m801023d2:	5b                   	pop    %ebx[m
[32m+[m[32m801023d3:	5e                   	pop    %esi[m
[32m+[m[32m801023d4:	5d                   	pop    %ebp[m
[32m+[m[32m801023d5:	f3 c3                	repz ret[m[41m [m
[32m+[m[32m801023d7:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m801023d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
[31m-  // Go to sleep.[m
[31m-  proc->chan = chan;[m
[31m-80103ec0:	89 70 20             	mov    %esi,0x20(%eax)[m
[31m-  proc->state = SLEEPING;[m
[31m-80103ec3:	c7 40 0c 02 00 00 00 	movl   $0x2,0xc(%eax)[m
[31m-  sched();[m
[31m-80103eca:	e8 31 fd ff ff       	call   80103c00 <sched>[m
[32m+[m[32m801023e0 <ioapicenable>:[m
 [m
[31m-  // Tidy up.[m
[31m-  proc->chan = 0;[m
[31m-80103ecf:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[31m-80103ed5:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%eax)[m
[31m-  // Reacquire original lock.[m
[31m-  if(lk != &ptable.lock){  //DOC: sleeplock2[m
[31m-    release(&ptable.lock);[m
[31m-    acquire(lk);[m
[32m+[m[32mvoid[m
[32m+[m[32mioapicenable(int irq, int cpunum)[m
[32m+[m[32m{[m
[32m+[m[32m  if(!ismp)[m
[32m+[m[32m801023e0:	8b 15 84 27 11 80    	mov    0x80112784,%edx[m
   }[m
 }[m
[31m-80103edc:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m-80103edf:	5b                   	pop    %ebx[m
[31m-80103ee0:	5e                   	pop    %esi[m
[31m-80103ee1:	5d                   	pop    %ebp[m
[31m-80103ee2:	c3                   	ret    [m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mioapicenable(int irq, int cpunum)[m
 {[m
[31m-  if(proc == 0)[m
[31m-    panic("sleep");[m
[32m+[m[32m801023e6:	55                   	push   %ebp[m
[32m+[m[32m801023e7:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m  if(!ismp)[m
[32m+[m[32m801023e9:	85 d2                	test   %edx,%edx[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
 [m
[31m-  if(lk == 0)[m
[31m-    panic("sleep without lk");[m
[31m-80103ee3:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103ee6:	68 97 75 10 80       	push   $0x80107597[m
[31m-80103eeb:	e8 80 c4 ff ff       	call   80100370 <panic>[m
[31m-// Reacquires lock when awakened.[m
 void[m
[31m-sleep(void *chan, struct spinlock *lk)[m
[32m+[m[32mioapicenable(int irq, int cpunum)[m
 {[m
[31m-  if(proc == 0)[m
[31m-    panic("sleep");[m
[31m-80103ef0:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103ef3:	68 91 75 10 80       	push   $0x80107591[m
[31m-80103ef8:	e8 73 c4 ff ff       	call   80100370 <panic>[m
[31m-80103efd:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32m801023eb:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m  if(!ismp)[m
[32m+[m[32m801023ee:	74 2b                	je     8010241b <ioapicenable+0x3b>[m
[32m+[m[32m}[m
 [m
[31m-80103f00 <wait>:[m
[32m+[m[32mstatic void[m
[32m+[m[32mioapicwrite(int reg, uint data)[m
[32m+[m[32m{[m
[32m+[m[32m  ioapic->reg = reg;[m
[32m+[m[32m801023f0:	8b 0d 54 26 11 80    	mov    0x80112654,%ecx[m
[32m+[m[32m    return;[m
 [m
[31m-// Wait for a child process to exit and return its pid.[m
[31m-// Return -1 if this process has no children.[m
[31m-int[m
[31m-wait(int *status)[m
[32m+[m[32m  // Mark interrupt edge-triggered, active high,[m
[32m+[m[32m  // enabled, and routed to the given cpunum,[m
[32m+[m[32m  // which happens to be that cpu's APIC ID.[m
[32m+[m[32m  ioapicwrite(REG_TABLE+2*irq, T_IRQ0 + irq);[m
[32m+[m[32m801023f6:	8d 50 20             	lea    0x20(%eax),%edx[m
[32m+[m[32m801023f9:	8d 44 00 10          	lea    0x10(%eax,%eax,1),%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mioapicwrite(int reg, uint data)[m
 {[m
[31m-80103f00:	55                   	push   %ebp[m
[31m-80103f01:	89 e5                	mov    %esp,%ebp[m
[31m-80103f03:	56                   	push   %esi[m
[31m-80103f04:	53                   	push   %ebx[m
[31m-  struct proc *p;[m
[31m-  int havekids, pid;[m
[32m+[m[32m  ioapic->reg = reg;[m
[32m+[m[32m801023fd:	89 01                	mov    %eax,(%ecx)[m
[32m+[m[32m  ioapic->data = data;[m
[32m+[m[32m801023ff:	8b 0d 54 26 11 80    	mov    0x80112654,%ecx[m
[32m+[m[32m}[m
 [m
[31m-  acquire(&ptable.lock);[m
[31m-80103f05:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103f08:	68 a0 2d 11 80       	push   $0x80112da0[m
[31m-80103f0d:	e8 ae 03 00 00       	call   801042c0 <acquire>[m
[31m-80103f12:	83 c4 10             	add    $0x10,%esp[m
[31m-80103f15:	65 a1 04 00 00 00    	mov    %gs:0x4,%eax[m
[31m-  for(;;){[m
[31m-    // Scan through table looking for exited children.[m
[31m-    havekids = 0;[m
[31m-80103f1b:	31 d2                	xor    %edx,%edx[m
[31m-    for(p = ptable.proc; p < &ptable.proc[NPROC]; p++){[m
[31m-80103f1d:	bb d4 2d 11 80       	mov    $0x80112dd4,%ebx[m
[31m-80103f22:	eb 0f                	jmp    80103f33 <wait+0x33>[m
[31m-80103f24:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[31m-80103f28:	83 c3 7c             	add    $0x7c,%ebx[m
[31m-80103f2b:	81 fb d4 4c 11 80    	cmp    $0x80114cd4,%ebx[m
[31m-80103f31:	74 1d                	je     80103f50 <wait+0x50>[m
[31m-      if(p->parent != proc)[m
[31m-80103f33:	3b 43 14             	cmp    0x14(%ebx),%eax[m
[31m-80103f36:	75 f0                	jne    80103f28 <wait+0x28>[m
[31m-        continue;[m
[31m-      havekids = 1;[m
[31m-      if(p->state == ZOMBIE){[m
[31m-80103f38:	83 7b 0c 05          	cmpl   $0x5,0xc(%ebx)[m
[31m-80103f3c:	74 30                	je     80103f6e <wait+0x6e>[m
[32m+[m[32mstatic void[m
[32m+[m[32mioapicwrite(int reg, uint data)[m
[32m+[m[32m{[m
[32m+[m[32m  ioapic->reg = reg;[m
[32m+[m[32m80102405:	83 c0 01             	add    $0x1,%eax[m
[32m+[m[32m  ioapic->data = data;[m
[32m+[m[32m80102408:	89 51 10             	mov    %edx,0x10(%ecx)[m
[32m+[m
[32m+[m[32m  // Mark interrupt edge-triggered, active high,[m
[32m+[m[32m  // enabled, and routed to the given cpunum,[m
[32m+[m[32m  // which happens to be that cpu's APIC ID.[m
[32m+[m[32m  ioapicwrite(REG_TABLE+2*irq, T_IRQ0 + irq);[m
[32m+[m[32m  ioapicwrite(REG_TABLE+2*irq+1, cpunum << 24);[m
[32m+[m[32m8010240b:	8b 55 0c             	mov    0xc(%ebp),%edx[m
[32m+[m[32m}[m
 [m
[31m-  acquire(&ptable.lock);[m
[31m-  for(;;){[m
[31m-    // Scan through table looking for exited children.[m
[31m-    havekids = 0;[m
[31m-    for(p = ptable.proc; p < &ptable.proc[NPROC]; p++){[m
[31m-80103f3e:	83 c3 7c             	add    $0x7c,%ebx[m
[31m-      if(p->parent != proc)[m
[31m-        continue;[m
[31m-      havekids = 1;[m
[31m-80103f41:	ba 01 00 00 00       	mov    $0x1,%edx[m
[32m+[m[32mstatic void[m
[32m+[m[32mioapicwrite(int reg, uint data)[m
[32m+[m[32m{[m
[32m+[m[32m  ioapic->reg = reg;[m
[32m+[m[32m8010240e:	89 01                	mov    %eax,(%ecx)[m
[32m+[m[32m  ioapic->data = data;[m
[32m+[m[32m80102410:	a1 54 26 11 80       	mov    0x80112654,%eax[m
[32m+[m
[32m+[m[32m  // Mark interrupt edge-triggered, active high,[m
[32m+[m[32m  // enabled, and routed to the given cpunum,[m
[32m+[m[32m  // which happens to be that cpu's APIC ID.[m
[32m+[m[32m  ioapicwrite(REG_TABLE+2*irq, T_IRQ0 + irq);[m
[32m+[m[32m  ioapicwrite(REG_TABLE+2*irq+1, cpunum << 24);[m
[32m+[m[32m80102415:	c1 e2 18             	shl    $0x18,%edx[m
 [m
[31m-  acquire(&ptable.lock);[m
[31m-  for(;;){[m
[31m-    // Scan through table looking for exited children.[m
[31m-    havekids = 0;[m
[31m-    for(p = ptable.proc; p < &ptable.proc[NPROC]; p++){[m
[31m-80103f46:	81 fb d4 4c 11 80    	cmp    $0x80114cd4,%ebx[m
[31m-80103f4c:	75 e5                	jne    80103f33 <wait+0x33>[m
[31m-80103f4e:	66 90                	xchg   %ax,%ax[m
[31m-        return pid;[m
[31m-      }[m
[31m-    }[m
[32m+[m[32mstatic void[m
[32m+[m[32mioapicwrite(int reg, uint data)[m
[32m+[m[32m{[m
[32m+[m[32m  ioapic->reg = reg;[m
[32m+[m[32m  ioapic->data = data;[m
[32m+[m[32m80102418:	89 50 10             	mov    %edx,0x10(%eax)[m
[32m+[m[32m  // Mark interrupt edge-triggered, active high,[m
[32m+[m[32m  // enabled, and routed to the given cpunum,[m
[32m+[m[32m  // which happens to be that cpu's APIC ID.[m
[32m+[m[32m  ioapicwrite(REG_TABLE+2*irq, T_IRQ0 + irq);[m
[32m+[m[32m  ioapicwrite(REG_TABLE+2*irq+1, cpunum << 24);[m
[32m+[m[32m}[m
[32m+[m[32m8010241b:	5d                   	pop    %ebp[m
[32m+[m[32m8010241c:	c3                   	ret[m[41m    [m
[32m+[m[32m8010241d:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m8010241f:	90                   	nop[m
[32m+[m
[32m+[m[32m80102420 <kfree>:[m
[32m+[m[32m// which normally should have been returned by a[m
[32m+[m[32m// call to kalloc().  (The exception is when[m
[32m+[m[32m// initializing the allocator; see kinit above.)[m
[32m+[m[32mvoid[m
[32m+[m[32mkfree(char *v)[m
[32m+[m[32m{[m
[32m+[m[32m80102420:	55                   	push   %ebp[m
[32m+[m[32m80102421:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80102423:	53                   	push   %ebx[m
[32m+[m[32m80102424:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m80102427:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m  struct run *r;[m
[32m+[m
[32m+[m[32m  if((uint)v % PGSIZE || v < end || V2P(v) >= PHYSTOP)[m
[32m+[m[32m8010242a:	f7 c3 ff 0f 00 00    	test   $0xfff,%ebx[m
[32m+[m[32m80102430:	75 70                	jne    801024a2 <kfree+0x82>[m
[32m+[m[32m80102432:	81 fb 48 7c 11 80    	cmp    $0x80117c48,%ebx[m
[32m+[m[32m80102438:	72 68                	jb     801024a2 <kfree+0x82>[m
[32m+[m[32m8010243a:	8d 83 00 00 00 80    	lea    -0x80000000(%ebx),%eax[m
[32m+[m[32m80102440:	3d ff ff ff 0d       	cmp    $0xdffffff,%eax[m
[32m+[m[32m80102445:	77 5b                	ja     801024a2 <kfree+0x82>[m
[32m+[m[32m    panic("kfree");[m
[32m+[m
[32m+[m[32m  // Fill with junk to catch dangling refs.[m
[32m+[m[32m  memset(v, 1, PGSIZE);[m
[32m+[m[32m80102447:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m8010244a:	68 00 10 00 00       	push   $0x1000[m
[32m+[m[32m8010244f:	6a 01                	push   $0x1[m
[32m+[m[32m80102451:	53                   	push   %ebx[m
[32m+[m[32m80102452:	e8 a9 21 00 00       	call   80104600 <memset>[m
[32m+[m
[32m+[m[32m  if(kmem.use_lock)[m
[32m+[m[32m80102457:	8b 15 94 26 11 80    	mov    0x80112694,%edx[m
[32m+[m[32m8010245d:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80102460:	85 d2                	test   %edx,%edx[m
[32m+[m[32m80102462:	75 2c                	jne    80102490 <kfree+0x70>[m
[32m+[m[32m    acquire(&kmem.lock);[m
[32m+[m[32m  r = (struct run*)v;[m
[32m+[m[32m  r->next = kmem.freelist;[m
[32m+[m[32m80102464:	a1 98 26 11 80       	mov    0x80112698,%eax[m
[32m+[m[32m80102469:	89 03                	mov    %eax,(%ebx)[m
[32m+[m[32m  kmem.freelist = r;[m
[32m+[m[32m  if(kmem.use_lock)[m
[32m+[m[32m8010246b:	a1 94 26 11 80       	mov    0x80112694,%eax[m
[32m+[m
[32m+[m[32m  if(kmem.use_lock)[m
[32m+[m[32m    acquire(&kmem.lock);[m
[32m+[m[32m  r = (struct run*)v;[m
[32m+[m[32m  r->next = kmem.freelist;[m
[32m+[m[32m  kmem.freelist = r;[m
[32m+[m[32m80102470:	89 1d 98 26 11 80    	mov    %ebx,0x80112698[m
[32m+[m[32m  if(kmem.use_lock)[m
[32m+[m[32m80102476:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80102478:	75 06                	jne    80102480 <kfree+0x60>[m
[32m+[m[32m    release(&kmem.lock);[m
[32m+[m[32m}[m
[32m+[m[32m8010247a:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[32m+[m[32m8010247d:	c9                   	leave[m[41m  [m
[32m+[m[32m8010247e:	c3                   	ret[m[41m    [m
[32m+[m[32m8010247f:	90                   	nop[m
[32m+[m[32m    acquire(&kmem.lock);[m
[32m+[m[32m  r = (struct run*)v;[m
[32m+[m[32m  r->next = kmem.freelist;[m
[32m+[m[32m  kmem.freelist = r;[m
[32m+[m[32m  if(kmem.use_lock)[m
[32m+[m[32m    release(&kmem.lock);[m
[32m+[m[32m80102480:	c7 45 08 60 26 11 80 	movl   $0x80112660,0x8(%ebp)[m
[32m+[m[32m}[m
[32m+[m[32m80102487:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[32m+[m[32m8010248a:	c9                   	leave[m[41m  [m
[32m+[m[32m    acquire(&kmem.lock);[m
[32m+[m[32m  r = (struct run*)v;[m
[32m+[m[32m  r->next = kmem.freelist;[m
[32m+[m[32m  kmem.freelist = r;[m
[32m+[m[32m  if(kmem.use_lock)[m
[32m+[m[32m    release(&kmem.lock);[m
[32m+[m[32m8010248b:	e9 20 21 00 00       	jmp    801045b0 <release>[m
[32m+[m
[32m+[m[32m  // Fill with junk to catch dangling refs.[m
[32m+[m[32m  memset(v, 1, PGSIZE);[m
[32m+[m
[32m+[m[32m  if(kmem.use_lock)[m
[32m+[m[32m    acquire(&kmem.lock);[m
[32m+[m[32m80102490:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80102493:	68 60 26 11 80       	push   $0x80112660[m
[32m+[m[32m80102498:	e8 33 1f 00 00       	call   801043d0 <acquire>[m
[32m+[m[32m8010249d:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m801024a0:	eb c2                	jmp    80102464 <kfree+0x44>[m
[32m+[m[32mkfree(char *v)[m
[32m+[m[32m{[m
[32m+[m[32m  struct run *r;[m
 [m
[31m-    // No point waiting if we don't have any children.[m
[31m-    if(!havekids || proc->killed){[m
[31m-80103f50:	85 d2                	test   %edx,%edx[m
[31m-80103f52:	74 70                	je     80103fc4 <wait+0xc4>[m
[31m-80103f54:	8b 50 24             	mov    0x24(%eax),%edx[m
[31m-80103f57:	85 d2                	test   %edx,%edx[m
[31m-80103f59:	75 69                	jne    80103fc4 <wait+0xc4>[m
[31m-      release(&ptable.lock);[m
[31m-      return -1;[m
[31m-    }[m
[32m+[m[32m  if((uint)v % PGSIZE || v < end || V2P(v) >= PHYSTOP)[m
[32m+[m[32m    panic("kfree");[m
[32m+[m[32m801024a2:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801024a5:	68 92 74 10 80       	push   $0x80107492[m
[32m+[m[32m801024aa:	e8 c1 de ff ff       	call   80100370 <panic>[m
[32m+[m[32m801024af:	90                   	nop[m
 [m
[31m-    // Wait for children to exit.  (See wakeup1 call in proc_exit.)[m
[31m-    sleep(proc, &ptable.lock);  //DOC: wait-sleep[m
[31m-80103f5b:	83 ec 08             	sub    $0x8,%esp[m
[31m-80103f5e:	68 a0 2d 11 80       	push   $0x80112da0[m
[31m-80103f63:	50                   	push   %eax[m
[31m-80103f64:	e8 d7 fe ff ff       	call   80103e40 <sleep>[m
[31m-  }[m
[31m-80103f69:	83 c4 10             	add    $0x10,%esp[m
[31m-80103f6c:	eb a7                	jmp    80103f15 <wait+0x15>[m
[31m-        continue;[m
[31m-      havekids = 1;[m
[31m-      if(p->state == ZOMBIE){[m
[31m-        // Found one.[m
[31m-        pid = p->pid;[m
[31m-        kfree(p->kstack);[m
[31m-80103f6e:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103f71:	ff 73 08             	pushl  0x8(%ebx)[m
[31m-      if(p->parent != proc)[m
[31m-        continue;[m
[31m-      havekids = 1;[m
[31m-      if(p->state == ZOMBIE){[m
[31m-        // Found one.[m
[31m-        pid = p->pid;[m
[31m-80103f74:	8b 73 10             	mov    0x10(%ebx),%esi[m
[31m-        kfree(p->kstack);[m
[31m-80103f77:	e8 a4 e3 ff ff       	call   80102320 <kfree>[m
[31m-        p->kstack = 0;[m
[31m-        freevm(p->pgdir);[m
[31m-80103f7c:	59                   	pop    %ecx[m
[31m-80103f7d:	ff 73 04             	pushl  0x4(%ebx)[m
[31m-      havekids = 1;[m
[31m-      if(p->state == ZOMBIE){[m
[31m-        // Found one.[m
[31m-        pid = p->pid;[m
[31m-        kfree(p->kstack);[m
[31m-        p->kstack = 0;[m
[31m-80103f80:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)[m
[31m-        freevm(p->pgdir);[m
[31m-80103f87:	e8 b4 2d 00 00       	call   80106d40 <freevm>[m
[31m-        p->pid = 0;[m
[31m-80103f8c:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%ebx)[m
[31m-        p->parent = 0;[m
[31m-80103f93:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)[m
[31m-        p->name[0] = 0;[m
[31m-80103f9a:	c6 43 6c 00          	movb   $0x0,0x6c(%ebx)[m
[31m-        p->killed = 0;[m
[31m-80103f9e:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%ebx)[m
[31m-        p->state = UNUSED;[m
[31m-80103fa5:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)[m
[31m-        release(&ptable.lock);[m
[31m-80103fac:	c7 04 24 a0 2d 11 80 	movl   $0x80112da0,(%esp)[m
[31m-80103fb3:	e8 e8 04 00 00       	call   801044a0 <release>[m
[31m-        return pid;[m
[31m-80103fb8:	83 c4 10             	add    $0x10,%esp[m
[31m-    }[m
[32m+[m[32m801024b0 <freerange>:[m
[32m+[m[32m  kmem.use_lock = 1;[m
[32m+[m[32m}[m
 [m
[31m-    // Wait for children to exit.  (See wakeup1 call in proc_exit.)[m
[31m-    sleep(proc, &ptable.lock);  //DOC: wait-sleep[m
[31m-  }[m
[32m+[m[32mvoid[m
[32m+[m[32mfreerange(void *vstart, void *vend)[m
[32m+[m[32m{[m
[32m+[m[32m801024b0:	55                   	push   %ebp[m
[32m+[m[32m801024b1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m801024b3:	56                   	push   %esi[m
[32m+[m[32m801024b4:	53                   	push   %ebx[m
[32m+[m[32m  char *p;[m
[32m+[m[32m  p = (char*)PGROUNDUP((uint)vstart);[m
[32m+[m[32m801024b5:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m  kmem.use_lock = 1;[m
 }[m
[31m-80103fbb:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m-        p->parent = 0;[m
[31m-        p->name[0] = 0;[m
[31m-        p->killed = 0;[m
[31m-        p->state = UNUSED;[m
[31m-        release(&ptable.lock);[m
[31m-        return pid;[m
[31m-80103fbe:	89 f0                	mov    %esi,%eax[m
[31m-    }[m
 [m
[31m-    // Wait for children to exit.  (See wakeup1 call in proc_exit.)[m
[31m-    sleep(proc, &ptable.lock);  //DOC: wait-sleep[m
[31m-  }[m
[32m+[m[32mvoid[m
[32m+[m[32mfreerange(void *vstart, void *vend)[m
[32m+[m[32m{[m
[32m+[m[32m801024b8:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[32m+[m[32m  char *p;[m
[32m+[m[32m  p = (char*)PGROUNDUP((uint)vstart);[m
[32m+[m[32m801024bb:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx[m
[32m+[m[32m801024c1:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx[m
[32m+[m[32m  for(; p + PGSIZE <= (char*)vend; p += PGSIZE)[m
[32m+[m[32m801024c7:	81 c3 00 10 00 00    	add    $0x1000,%ebx[m
[32m+[m[32m801024cd:	39 de                	cmp    %ebx,%esi[m
[32m+[m[32m801024cf:	72 23                	jb     801024f4 <freerange+0x44>[m
[32m+[m[32m801024d1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    kfree(p);[m
[32m+[m[32m801024d8:	8d 83 00 f0 ff ff    	lea    -0x1000(%ebx),%eax[m
[32m+[m[32m801024de:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32mvoid[m
[32m+[m[32mfreerange(void *vstart, void *vend)[m
[32m+[m[32m{[m
[32m+[m[32m  char *p;[m
[32m+[m[32m  p = (char*)PGROUNDUP((uint)vstart);[m
[32m+[m[32m  for(; p + PGSIZE <= (char*)vend; p += PGSIZE)[m
[32m+[m[32m801024e1:	81 c3 00 10 00 00    	add    $0x1000,%ebx[m
[32m+[m[32m    kfree(p);[m
[32m+[m[32m801024e7:	50                   	push   %eax[m
[32m+[m[32m801024e8:	e8 33 ff ff ff       	call   80102420 <kfree>[m
[32m+[m[32mvoid[m
[32m+[m[32mfreerange(void *vstart, void *vend)[m
[32m+[m[32m{[m
[32m+[m[32m  char *p;[m
[32m+[m[32m  p = (char*)PGROUNDUP((uint)vstart);[m
[32m+[m[32m  for(; p + PGSIZE <= (char*)vend; p += PGSIZE)[m
[32m+[m[32m801024ed:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m801024f0:	39 f3                	cmp    %esi,%ebx[m
[32m+[m[32m801024f2:	76 e4                	jbe    801024d8 <freerange+0x28>[m
[32m+[m[32m    kfree(p);[m
 }[m
[31m-80103fc0:	5b                   	pop    %ebx[m
[31m-80103fc1:	5e                   	pop    %esi[m
[31m-80103fc2:	5d                   	pop    %ebp[m
[31m-80103fc3:	c3                   	ret    [m
[31m-      }[m
[31m-    }[m
[32m+[m[32m801024f4:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[32m+[m[32m801024f7:	5b                   	pop    %ebx[m
[32m+[m[32m801024f8:	5e                   	pop    %esi[m
[32m+[m[32m801024f9:	5d                   	pop    %ebp[m
[32m+[m[32m801024fa:	c3                   	ret[m[41m    [m
[32m+[m[32m801024fb:	90                   	nop[m
[32m+[m[32m801024fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m
[32m+[m[32m80102500 <kinit1>:[m
[32m+[m[32m// the pages mapped by entrypgdir on free list.[m
[32m+[m[32m// 2. main() calls kinit2() with the rest of the physical pages[m
[32m+[m[32m// after installing a full page table that maps them on all cores.[m
[32m+[m[32mvoid[m
[32m+[m[32mkinit1(void *vstart, void *vend)[m
[32m+[m[32m{[m
[32m+[m[32m80102500:	55                   	push   %ebp[m
[32m+[m[32m80102501:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80102503:	56                   	push   %esi[m
[32m+[m[32m80102504:	53                   	push   %ebx[m
[32m+[m[32m80102505:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[32m+[m[32m  initlock(&kmem.lock, "kmem");[m
[32m+[m[32m80102508:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m8010250b:	68 98 74 10 80       	push   $0x80107498[m
[32m+[m[32m80102510:	68 60 26 11 80       	push   $0x80112660[m
[32m+[m[32m80102515:	e8 96 1e 00 00       	call   801043b0 <initlock>[m
 [m
[31m-    // No point waiting if we don't have any children.[m
[31m-    if(!havekids || proc->killed){[m
[31m-      release(&ptable.lock);[m
[31m-80103fc4:	83 ec 0c             	sub    $0xc,%esp[m
[31m-80103fc7:	68 a0 2d 11 80       	push   $0x80112da0[m
[31m-80103fcc:	e8 cf 04 00 00       	call   801044a0 <release>[m
[31m-      return -1;[m
[31m-80103fd1:	83 c4 10             	add    $0x10,%esp[m
[31m-    }[m
[32m+[m[32mvoid[m
[32m+[m[32mfreerange(void *vstart, void *vend)[m
[32m+[m[32m{[m
[32m+[m[32m  char *p;[m
[32m+[m[32m  p = (char*)PGROUNDUP((uint)vstart);[m
[32m+[m[32m8010251a:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m  for(; p + PGSIZE <= (char*)vend; p += PGSIZE)[m
[32m+[m[32m8010251d:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m// after installing a full page table that maps them on all cores.[m
[32m+[m[32mvoid[m
[32m+[m[32mkinit1(void *vstart, void *vend)[m
[32m+[m[32m{[m
[32m+[m[32m  initlock(&kmem.lock, "kmem");[m
[32m+[m[32m  kmem.use_lock = 0;[m
[32m+[m[32m80102520:	c7 05 94 26 11 80 00 	movl   $0x0,0x80112694[m
[32m+[m[32m80102527:	00 00 00[m[41m [m
 [m
[31m-    // Wait for children to exit.  (See wakeup1 call in proc_exit.)[m
[31m-    sleep(proc, &ptable.lock);  //DOC: wait-sleep[m
[31m-  }[m
[32m+[m[32mvoid[m
[32m+[m[32mfreerange(void *vstart, void *vend)[m
[32m+[m[32m{[m
[32m+[m[32m  char *p;[m
[32m+[m[32m  p = (char*)PGROUNDUP((uint)vstart);[m
[32m+[m[32m8010252a:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx[m
[32m+[m[32m80102530:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx[m
[32m+[m[32m  for(; p + PGSIZE <= (char*)vend; p += PGSIZE)[m
[32m+[m[32m80102536:	81 c3 00 10 00 00    	add    $0x1000,%ebx[m
[32m+[m[32m8010253c:	39 de                	cmp    %ebx,%esi[m
[32m+[m[32m8010253e:	72 1c                	jb     8010255c <kinit1+0x5c>[m
[32m+[m[32m    kfree(p);[m
[32m+[m[32m80102540:	8d 83 00 f0 ff ff    	lea    -0x1000(%ebx),%eax[m
[32m+[m[32m80102546:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32mvoid[m
[32m+[m[32mfreerange(void *vstart, void *vend)[m
[32m+[m[32m{[m
[32m+[m[32m  char *p;[m
[32m+[m[32m  p = (char*)PGROUNDUP((uint)vstart);[m
[32m+[m[32m  for(; p + PGSIZE <= (char*)vend; p += PGSIZE)[m
[32m+[m[32m80102549:	81 c3 00 10 00 00    	add    $0x1000,%ebx[m
[32m+[m[32m    kfree(p);[m
[32m+[m[32m8010254f:	50                   	push   %eax[m
[32m+[m[32m80102550:	e8 cb fe ff ff       	call   80102420 <kfree>[m
[32m+[m[32mvoid[m
[32m+[m[32mfreerange(void *vstart, void *vend)[m
[32m+[m[32m{[m
[32m+[m[32m  char *p;[m
[32m+[m[32m  p = (char*)PGROUNDUP((uint)vstart);[m
[32m+[m[32m  for(; p + PGSIZE <= (char*)vend; p += PGSIZE)[m
[32m+[m[32m80102555:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80102558:	39 de                	cmp    %ebx,%esi[m
[32m+[m[32m8010255a:	73 e4                	jae    80102540 <kinit1+0x40>[m
[32m+[m[32mkinit1(void *vstart, void *vend)[m
[32m+[m[32m{[m
[32m+[m[32m  initlock(&kmem.lock, "kmem");[m
[32m+[m[32m  kmem.use_lock = 0;[m
[32m+[m[32m  freerange(vstart, vend);[m
 }[m
[31m-80103fd4:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[31m-    }[m
[32m+[m[32m8010255c:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[32m+[m[32m8010255f:	5b                   	pop    %ebx[m
[32m+[m[32m80102560:	5e                   	pop    %esi[m
[32m+[m[32m80102561:	5d                   	pop    %ebp[m
[32m+[m[32m80102562:	c3                   	ret[m[41m    [m
[32m+[m[32m80102563:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m80102569:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
 [m
[31m-    // No point waiting if we don't have any children.[m
[31m-    if(!havekids || proc->killed){[m
[31m-      release(&ptable.lock);[m
[31m-      return -1;[m
[31m-80103fd7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[31m-    }[m
[32m+[m[32m80102570 <kinit2>:[m
 [m
[31m-    // Wait for children to exit.  (See wakeup1 call in proc_exit.)[m
[31m-    sleep(proc, &ptable.lock);  //DOC: wait-sleep[m
[32m+[m[32mvoid[m
[32m+[m[32mkinit2(void *vstart, void *vend)[m
[32m+[m[32m{[m
[32m+[m[32m80102570:	55                   	push   %ebp[m
[32m+[m[32m80102571:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80102573:	56                   	push   %esi[m
[32m+[m[32m80102574:	53                   	push   %ebx[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mfreerange(void *vstart, void *vend)[m
[32m+[m[32m{[m
[32m+[m[32m  char *p;[m
[32m+[m[32m  p = (char*)PGROUNDUP((uint)vstart);[m
[32m+[m[32m80102575:	8b 45 08             	mov    0x8(%ebp),%eax[m
[32m+[m[32m  freerange(vstart, vend);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mkinit2(void *vstart, void *vend)[m
[32m+[m[32m{[m
[32m+[m[32m80102578:	8b 75 0c             	mov    0xc(%ebp),%esi[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mfreerange(void *vstart, void *vend)[m
[32m+[m[32m{[m
[32m+[m[32m  char *p;[m
[32m+[m[32m  p = (char*)PGROUNDUP((uint)vstart);[m
[32m+[m[32m8010257b:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx[m
[32m+[m[32m80102581:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx[m
[32m+[m[32m  for(; p + PGSIZE <= (char*)vend; p += PGSIZE)[m
[32m+[m[32m80102587:	81 c3 00 10 00 00    	add    $0x1000,%ebx[m
[32m+[m[32m8010258d:	39 de                	cmp    %ebx,%esi[m
[32m+[m[32m8010258f:	72 23                	jb     801025b4 <kinit2+0x44>[m
[32m+[m[32m80102591:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    kfree(p);[m
[32m+[m[32m80102598:	8d 83 00 f0 ff ff    	lea    -0x1000(%ebx),%eax[m
[32m+[m[32m8010259e:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32mvoid[m
[32m+[m[32mfreerange(void *vstart, void *vend)[m
[32m+[m[32m{[m
[32m+[m[32m  char *p;[m
[32m+[m[32m  p = (char*)PGROUNDUP((uint)vstart);[m
[32m+[m[32m  for(; p + PGSIZE <= (char*)vend; p += PGSIZE)[m
[32m+[m[32m801025a1:	81 c3 00 10 00 00    	add    $0x1000,%ebx[m
[32m+[m[32m    kfree(p);[m
[32m+[m[32m801025a7:	50                   	push   %eax[m
[32m+[m[32m801025a8:	e8 73 fe ff ff       	call   80102420 <kfree>[m
[32m+[m[32mvoid[m
[32m+[m[32mfreerange(void *vstart, void *vend)[m
[32m+[m[32m{[m
[32m+[m[32m  char *p;[m
[32m+[m[32m  p = (char*)PGROUNDUP((uint)vstart);[m
[32m+[m[32m  for(; p + PGSIZE <= (char*)vend; p += PGSIZE)[m
[32m+[m[32m801025ad:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m801025b0:	39 de                	cmp    %ebx,%esi[m
[32m+[m[32m801025b2:	73 e4                	jae    80102598 <kinit2+0x28>[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mkinit2(void *vstart, void *vend)[m
[32m+[m[32m{[m
[32m+[m[32m  freerange(vstart, vend);[m
[32m+[m[32m  kmem.use_lock = 1;[m
[32m+[m[32m801025b4:	c7 05 94 26 11 80 01 	movl   $0x1,0x80112694[m
[32m+[m[32m801025bb:	00 00 00[m[41m [m
[32m+[m[32m}[m
[32m+[m[32m801025be:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[32m+[m[32m801025c1:	5b                   	pop    %ebx[m
[32m+[m[32m801025c2:	5e                   	pop    %esi[m
[32m+[m[32m801025c3:	5d                   	pop    %ebp[m
[32m+[m[32m801025c4:	c3                   	ret[m[41m    [m
[32m+[m[32m801025c5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m801025c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m
[32m+[m[32m801025d0 <kalloc>:[m
[32m+[m[32m// Allocate one 4096-byte page of physical memory.[m
[32m+[m[32m// Returns a pointer that the kernel can use.[m
[32m+[m[32m// Returns 0 if the memory cannot be allocated.[m
[32m+[m[32mchar*[m
[32m+[m[32mkalloc(void)[m
[32m+[m[32m{[m
[32m+[m[32m801025d0:	55                   	push   %ebp[m
[32m+[m[32m801025d1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m801025d3:	53                   	push   %ebx[m
[32m+[m[32m801025d4:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m  struct run *r;[m
[32m+[m
[32m+[m[32m  if(kmem.use_lock)[m
[32m+[m[32m801025d7:	a1 94 26 11 80       	mov    0x80112694,%eax[m
[32m+[m[32m801025dc:	85 c0                	test   %eax,%eax[m
[32m+[m[32m801025de:	75 30                	jne    80102610 <kalloc+0x40>[m
[32m+[m[32m    acquire(&kmem.lock);[m
[32m+[m[32m  r = kmem.freelist;[m
[32m+[m[32m801025e0:	8b 1d 98 26 11 80    	mov    0x80112698,%ebx[m
[32m+[m[32m  if(r)[m
[32m+[m[32m801025e6:	85 db                	test   %ebx,%ebx[m
[32m+[m[32m801025e8:	74 1c                	je     80102606 <kalloc+0x36>[m
[32m+[m[32m    kmem.freelist = r->next;[m
[32m+[m[32m801025ea:	8b 13                	mov    (%ebx),%edx[m
[32m+[m[32m801025ec:	89 15 98 26 11 80    	mov    %edx,0x80112698[m
[32m+[m[32m  if(kmem.use_lock)[m
[32m+[m[32m801025f2:	85 c0                	test   %eax,%eax[m
[32m+[m[32m801025f4:	74 10                	je     80102606 <kalloc+0x36>[m
[32m+[m[32m    release(&kmem.lock);[m
[32m+[m[32m801025f6:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801025f9:	68 60 26 11 80       	push   $0x80112660[m
[32m+[m[32m801025fe:	e8 ad 1f 00 00       	call   801045b0 <release>[m
[32m+[m[32m80102603:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m  return (char*)r;[m
[32m+[m[32m}[m
[32m+[m[32m80102606:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m80102608:	8b 5d fc             	mov    -0x4(%ebp),%ebx[m
[32m+[m[32m8010260b:	c9                   	leave[m[41m  [m
[32m+[m[32m8010260c:	c3                   	ret[m[41m    [m
[32m+[m[32m8010260d:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m[32mkalloc(void)[m
[32m+[m[32m{[m
[32m+[m[32m  struct run *r;[m
[32m+[m
[32m+[m[32m  if(kmem.use_lock)[m
[32m+[m[32m    acquire(&kmem.lock);[m
[32m+[m[32m80102610:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80102613:	68 60 26 11 80       	push   $0x80112660[m
[32m+[m[32m80102618:	e8 b3 1d 00 00       	call   801043d0 <acquire>[m
[32m+[m[32m  r = kmem.freelist;[m
[32m+[m[32m8010261d:	8b 1d 98 26 11 80    	mov    0x80112698,%ebx[m
[32m+[m[32m  if(r)[m
[32m+[m[32m80102623:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80102626:	a1 94 26 11 80       	mov    0x80112694,%eax[m
[32m+[m[32m8010262b:	85 db                	test   %ebx,%ebx[m
[32m+[m[32m8010262d:	75 bb                	jne    801025ea <kalloc+0x1a>[m
[32m+[m[32m8010262f:	eb c1                	jmp    801025f2 <kalloc+0x22>[m
[32m+[m[32m80102631:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m80102633:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m80102635:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m80102637:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m80102639:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m8010263b:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m8010263d:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m8010263f:	90                   	nop[m
[32m+[m
[32m+[m[32m80102640 <kbdgetc>:[m
[32m+[m[32m#include "defs.h"[m
[32m+[m[32m#include "kbd.h"[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mkbdgetc(void)[m
[32m+[m[32m{[m
[32m+[m[32m80102640:	55                   	push   %ebp[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
[32m+[m[32m{[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
[32m+[m[32m80102641:	ba 64 00 00 00       	mov    $0x64,%edx[m
[32m+[m[32m80102646:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80102648:	ec                   	in     (%dx),%al[m
[32m+[m[32m    normalmap, shiftmap, ctlmap, ctlmap[m
[32m+[m[32m  };[m
[32m+[m[32m  uint st, data, c;[m
[32m+[m
[32m+[m[32m  st = inb(KBSTATP);[m
[32m+[m[32m  if((st & KBS_DIB) == 0)[m
[32m+[m[32m80102649:	a8 01                	test   $0x1,%al[m
[32m+[m[32m8010264b:	0f 84 af 00 00 00    	je     80102700 <kbdgetc+0xc0>[m
[32m+[m[32m80102651:	ba 60 00 00 00       	mov    $0x60,%edx[m
[32m+[m[32m80102656:	ec                   	in     (%dx),%al[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  data = inb(KBDATAP);[m
[32m+[m[32m80102657:	0f b6 d0             	movzbl %al,%edx[m
[32m+[m
[32m+[m[32m  if(data == 0xE0){[m
[32m+[m[32m8010265a:	81 fa e0 00 00 00    	cmp    $0xe0,%edx[m
[32m+[m[32m80102660:	74 7e                	je     801026e0 <kbdgetc+0xa0>[m
[32m+[m[32m    shift |= E0ESC;[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  } else if(data & 0x80){[m
[32m+[m[32m80102662:	84 c0                	test   %al,%al[m
[32m+[m[32m    // Key released[m
[32m+[m[32m    data = (shift & E0ESC ? data : data & 0x7F);[m
[32m+[m[32m80102664:	8b 0d b4 a5 10 80    	mov    0x8010a5b4,%ecx[m
[32m+[m[32m  data = inb(KBDATAP);[m
[32m+[m
[32m+[m[32m  if(data == 0xE0){[m
[32m+[m[32m    shift |= E0ESC;[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  } else if(data & 0x80){[m
[32m+[m[32m8010266a:	79 24                	jns    80102690 <kbdgetc+0x50>[m
[32m+[m[32m    // Key released[m
[32m+[m[32m    data = (shift & E0ESC ? data : data & 0x7F);[m
[32m+[m[32m8010266c:	f6 c1 40             	test   $0x40,%cl[m
[32m+[m[32m8010266f:	75 05                	jne    80102676 <kbdgetc+0x36>[m
[32m+[m[32m80102671:	89 c2                	mov    %eax,%edx[m
[32m+[m[32m80102673:	83 e2 7f             	and    $0x7f,%edx[m
[32m+[m[32m    shift &= ~(shiftcode[data] | E0ESC);[m
[32m+[m[32m80102676:	0f b6 82 c0 75 10 80 	movzbl -0x7fef8a40(%edx),%eax[m
[32m+[m[32m8010267d:	83 c8 40             	or     $0x40,%eax[m
[32m+[m[32m80102680:	0f b6 c0             	movzbl %al,%eax[m
[32m+[m[32m80102683:	f7 d0                	not    %eax[m
[32m+[m[32m80102685:	21 c8                	and    %ecx,%eax[m
[32m+[m[32m80102687:	a3 b4 a5 10 80       	mov    %eax,0x8010a5b4[m
[32m+[m[32m    return 0;[m
[32m+[m[32m8010268c:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m      c += 'A' - 'a';[m
[32m+[m[32m    else if('A' <= c && c <= 'Z')[m
[32m+[m[32m      c += 'a' - 'A';[m
[32m+[m[32m  }[m
[32m+[m[32m  return c;[m
[32m+[m[32m}[m
[32m+[m[32m8010268e:	5d                   	pop    %ebp[m
[32m+[m[32m8010268f:	c3                   	ret[m[41m    [m
[32m+[m[32m  } else if(data & 0x80){[m
[32m+[m[32m    // Key released[m
[32m+[m[32m    data = (shift & E0ESC ? data : data & 0x7F);[m
[32m+[m[32m    shift &= ~(shiftcode[data] | E0ESC);[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  } else if(shift & E0ESC){[m
[32m+[m[32m80102690:	f6 c1 40             	test   $0x40,%cl[m
[32m+[m[32m80102693:	74 09                	je     8010269e <kbdgetc+0x5e>[m
[32m+[m[32m    // Last character was an E0 escape; or with 0x80[m
[32m+[m[32m    data |= 0x80;[m
[32m+[m[32m80102695:	83 c8 80             	or     $0xffffff80,%eax[m
[32m+[m[32m    shift &= ~E0ESC;[m
[32m+[m[32m80102698:	83 e1 bf             	and    $0xffffffbf,%ecx[m
[32m+[m[32m    data = (shift & E0ESC ? data : data & 0x7F);[m
[32m+[m[32m    shift &= ~(shiftcode[data] | E0ESC);[m
[32m+[m[32m    return 0;[m
[32m+[m[32m  } else if(shift & E0ESC){[m
[32m+[m[32m    // Last character was an E0 escape; or with 0x80[m
[32m+[m[32m    data |= 0x80;[m
[32m+[m[32m8010269b:	0f b6 d0             	movzbl %al,%edx[m
[32m+[m[32m    shift &= ~E0ESC;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  shift |= shiftcode[data];[m
[32m+[m[32m  shift ^= togglecode[data];[m
[32m+[m[32m8010269e:	0f b6 82 c0 75 10 80 	movzbl -0x7fef8a40(%edx),%eax[m
[32m+[m[32m801026a5:	09 c1                	or     %eax,%ecx[m
[32m+[m[32m801026a7:	0f b6 82 c0 74 10 80 	movzbl -0x7fef8b40(%edx),%eax[m
[32m+[m[32m801026ae:	31 c1                	xor    %eax,%ecx[m
[32m+[m[32m  c = charcode[shift & (CTL | SHIFT)][data];[m
[32m+[m[32m801026b0:	89 c8                	mov    %ecx,%eax[m
[32m+[m[32m    data |= 0x80;[m
[32m+[m[32m    shift &= ~E0ESC;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  shift |= shiftcode[data];[m
[32m+[m[32m  shift ^= togglecode[data];[m
[32m+[m[32m801026b2:	89 0d b4 a5 10 80    	mov    %ecx,0x8010a5b4[m
[32m+[m[32m  c = charcode[shift & (CTL | SHIFT)][data];[m
[32m+[m[32m801026b8:	83 e0 03             	and    $0x3,%eax[m
[32m+[m[32m  if(shift & CAPSLOCK){[m
[32m+[m[32m801026bb:	83 e1 08             	and    $0x8,%ecx[m
[32m+[m[32m    shift &= ~E0ESC;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  shift |= shiftcode[data];[m
[32m+[m[32m  shift ^= togglecode[data];[m
[32m+[m[32m  c = charcode[shift & (CTL | SHIFT)][data];[m
[32m+[m[32m801026be:	8b 04 85 a0 74 10 80 	mov    -0x7fef8b60(,%eax,4),%eax[m
[32m+[m[32m801026c5:	0f b6 04 10          	movzbl (%eax,%edx,1),%eax[m
[32m+[m[32m  if(shift & CAPSLOCK){[m
[32m+[m[32m801026c9:	74 c3                	je     8010268e <kbdgetc+0x4e>[m
[32m+[m[32m    if('a' <= c && c <= 'z')[m
[32m+[m[32m801026cb:	8d 50 9f             	lea    -0x61(%eax),%edx[m
[32m+[m[32m801026ce:	83 fa 19             	cmp    $0x19,%edx[m
[32m+[m[32m801026d1:	77 1d                	ja     801026f0 <kbdgetc+0xb0>[m
[32m+[m[32m      c += 'A' - 'a';[m
[32m+[m[32m801026d3:	83 e8 20             	sub    $0x20,%eax[m
[32m+[m[32m    else if('A' <= c && c <= 'Z')[m
[32m+[m[32m      c += 'a' - 'A';[m
[32m+[m[32m  }[m
[32m+[m[32m  return c;[m
[32m+[m[32m}[m
[32m+[m[32m801026d6:	5d                   	pop    %ebp[m
[32m+[m[32m801026d7:	c3                   	ret[m[41m    [m
[32m+[m[32m801026d8:	90                   	nop[m
[32m+[m[32m801026d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  data = inb(KBDATAP);[m
[32m+[m
[32m+[m[32m  if(data == 0xE0){[m
[32m+[m[32m    shift |= E0ESC;[m
[32m+[m[32m    return 0;[m
[32m+[m[32m801026e0:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m  if((st & KBS_DIB) == 0)[m
[32m+[m[32m    return -1;[m
[32m+[m[32m  data = inb(KBDATAP);[m
[32m+[m
[32m+[m[32m  if(data == 0xE0){[m
[32m+[m[32m    shift |= E0ESC;[m
[32m+[m[32m801026e2:	83 0d b4 a5 10 80 40 	orl    $0x40,0x8010a5b4[m
[32m+[m[32m      c += 'A' - 'a';[m
[32m+[m[32m    else if('A' <= c && c <= 'Z')[m
[32m+[m[32m      c += 'a' - 'A';[m
[32m+[m[32m  }[m
[32m+[m[32m  return c;[m
[32m+[m[32m}[m
[32m+[m[32m801026e9:	5d                   	pop    %ebp[m
[32m+[m[32m801026ea:	c3                   	ret[m[41m    [m
[32m+[m[32m801026eb:	90                   	nop[m
[32m+[m[32m801026ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  shift ^= togglecode[data];[m
[32m+[m[32m  c = charcode[shift & (CTL | SHIFT)][data];[m
[32m+[m[32m  if(shift & CAPSLOCK){[m
[32m+[m[32m    if('a' <= c && c <= 'z')[m
[32m+[m[32m      c += 'A' - 'a';[m
[32m+[m[32m    else if('A' <= c && c <= 'Z')[m
[32m+[m[32m801026f0:	8d 48 bf             	lea    -0x41(%eax),%ecx[m
[32m+[m[32m      c += 'a' - 'A';[m
[32m+[m[32m801026f3:	8d 50 20             	lea    0x20(%eax),%edx[m
[32m+[m[32m  }[m
[32m+[m[32m  return c;[m
[32m+[m[32m}[m
[32m+[m[32m801026f6:	5d                   	pop    %ebp[m
[32m+[m[32m  c = charcode[shift & (CTL | SHIFT)][data];[m
[32m+[m[32m  if(shift & CAPSLOCK){[m
[32m+[m[32m    if('a' <= c && c <= 'z')[m
[32m+[m[32m      c += 'A' - 'a';[m
[32m+[m[32m    else if('A' <= c && c <= 'Z')[m
[32m+[m[32m      c += 'a' - 'A';[m
[32m+[m[32m801026f7:	83 f9 19             	cmp    $0x19,%ecx[m
[32m+[m[32m801026fa:	0f 46 c2             	cmovbe %edx,%eax[m
[32m+[m[32m  }[m
[32m+[m[32m  return c;[m
[32m+[m[32m}[m
[32m+[m[32m801026fd:	c3                   	ret[m[41m    [m
[32m+[m[32m801026fe:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m  };[m
[32m+[m[32m  uint st, data, c;[m
[32m+[m
[32m+[m[32m  st = inb(KBSTATP);[m
[32m+[m[32m  if((st & KBS_DIB) == 0)[m
[32m+[m[32m    return -1;[m
[32m+[m[32m80102700:	b8 ff ff ff ff       	mov    $0xffffffff,%eax[m
[32m+[m[32m      c += 'A' - 'a';[m
[32m+[m[32m    else if('A' <= c && c <= 'Z')[m
[32m+[m[32m      c += 'a' - 'A';[m
[32m+[m[32m  }[m
[32m+[m[32m  return c;[m
[32m+[m[32m}[m
[32m+[m[32m80102705:	5d                   	pop    %ebp[m
[32m+[m[32m80102706:	c3                   	ret[m[41m    [m
[32m+[m[32m80102707:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m80102709:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m
[32m+[m[32m80102710 <kbdintr>:[m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mkbdintr(void)[m
[32m+[m[32m{[m
[32m+[m[32m80102710:	55                   	push   %ebp[m
[32m+[m[32m80102711:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80102713:	83 ec 14             	sub    $0x14,%esp[m
[32m+[m[32m  consoleintr(kbdgetc);[m
[32m+[m[32m80102716:	68 40 26 10 80       	push   $0x80102640[m
[32m+[m[32m8010271b:	e8 d0 e0 ff ff       	call   801007f0 <consoleintr>[m
[32m+[m[32m}[m
[32m+[m[32m80102720:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80102723:	c9                   	leave[m[41m  [m
[32m+[m[32m80102724:	c3                   	ret[m[41m    [m
[32m+[m[32m80102725:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m80102727:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m80102729:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m8010272b:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m8010272d:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m8010272f:	90                   	nop[m
[32m+[m
[32m+[m[32m80102730 <lapicinit>:[m
[32m+[m[32m//PAGEBREAK![m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mlapicinit(void)[m
[32m+[m[32m{[m
[32m+[m[32m  if(!lapic)[m
[32m+[m[32m80102730:	a1 9c 26 11 80       	mov    0x8011269c,%eax[m
[32m+[m[32m}[m
[32m+[m[32m//PAGEBREAK![m
[32m+[m
[32m+[m[32mvoid[m
[32m+[m[32mlapicinit(void)[m
[32m+[m[32m{[m
[32m+[m[32m80102735:	55                   	push   %ebp[m
[32m+[m[32m80102736:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m  if(!lapic)[m
[32m+[m[32m80102738:	85 c0                	test   %eax,%eax[m
[32m+[m[32m8010273a:	0f 84 c8 00 00 00    	je     80102808 <lapicinit+0xd8>[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m80102740:	c7 80 f0 00 00 00 3f 	movl   $0x13f,0xf0(%eax)[m
[32m+[m[32m80102747:	01 00 00[m[41m [m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m8010274a:	8b 50 20             	mov    0x20(%eax),%edx[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m8010274d:	c7 80 e0 03 00 00 0b 	movl   $0xb,0x3e0(%eax)[m
[32m+[m[32m80102754:	00 00 00[m[41m [m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m80102757:	8b 50 20             	mov    0x20(%eax),%edx[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m8010275a:	c7 80 20 03 00 00 20 	movl   $0x20020,0x320(%eax)[m
[32m+[m[32m80102761:	00 02 00[m[41m [m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m80102764:	8b 50 20             	mov    0x20(%eax),%edx[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m80102767:	c7 80 80 03 00 00 80 	movl   $0x989680,0x380(%eax)[m
[32m+[m[32m8010276e:	96 98 00[m[41m [m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m80102771:	8b 50 20             	mov    0x20(%eax),%edx[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m80102774:	c7 80 50 03 00 00 00 	movl   $0x10000,0x350(%eax)[m
[32m+[m[32m8010277b:	00 01 00[m[41m [m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m8010277e:	8b 50 20             	mov    0x20(%eax),%edx[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m80102781:	c7 80 60 03 00 00 00 	movl   $0x10000,0x360(%eax)[m
[32m+[m[32m80102788:	00 01 00[m[41m [m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m8010278b:	8b 50 20             	mov    0x20(%eax),%edx[m
[32m+[m[32m  lapicw(LINT0, MASKED);[m
[32m+[m[32m  lapicw(LINT1, MASKED);[m
[32m+[m
[32m+[m[32m  // Disable performance counter overflow interrupts[m
[32m+[m[32m  // on machines that provide that interrupt entry.[m
[32m+[m[32m  if(((lapic[VER]>>16) & 0xFF) >= 4)[m
[32m+[m[32m8010278e:	8b 50 30             	mov    0x30(%eax),%edx[m
[32m+[m[32m80102791:	c1 ea 10             	shr    $0x10,%edx[m
[32m+[m[32m80102794:	80 fa 03             	cmp    $0x3,%dl[m
[32m+[m[32m80102797:	77 77                	ja     80102810 <lapicinit+0xe0>[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m80102799:	c7 80 70 03 00 00 33 	movl   $0x33,0x370(%eax)[m
[32m+[m[32m801027a0:	00 00 00[m[41m [m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m801027a3:	8b 50 20             	mov    0x20(%eax),%edx[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m801027a6:	c7 80 80 02 00 00 00 	movl   $0x0,0x280(%eax)[m
[32m+[m[32m801027ad:	00 00 00[m[41m [m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m801027b0:	8b 50 20             	mov    0x20(%eax),%edx[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m801027b3:	c7 80 80 02 00 00 00 	movl   $0x0,0x280(%eax)[m
[32m+[m[32m801027ba:	00 00 00[m[41m [m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m801027bd:	8b 50 20             	mov    0x20(%eax),%edx[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m801027c0:	c7 80 b0 00 00 00 00 	movl   $0x0,0xb0(%eax)[m
[32m+[m[32m801027c7:	00 00 00[m[41m [m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m801027ca:	8b 50 20             	mov    0x20(%eax),%edx[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m801027cd:	c7 80 10 03 00 00 00 	movl   $0x0,0x310(%eax)[m
[32m+[m[32m801027d4:	00 00 00[m[41m [m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m801027d7:	8b 50 20             	mov    0x20(%eax),%edx[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m801027da:	c7 80 00 03 00 00 00 	movl   $0x88500,0x300(%eax)[m
[32m+[m[32m801027e1:	85 08 00[m[41m [m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m801027e4:	8b 50 20             	mov    0x20(%eax),%edx[m
[32m+[m[32m801027e7:	89 f6                	mov    %esi,%esi[m
[32m+[m[32m801027e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m[32m  lapicw(EOI, 0);[m
[32m+[m
[32m+[m[32m  // Send an Init Level De-Assert to synchronise arbitration ID's.[m
[32m+[m[32m  lapicw(ICRHI, 0);[m
[32m+[m[32m  lapicw(ICRLO, BCAST | INIT | LEVEL);[m
[32m+[m[32m  while(lapic[ICRLO] & DELIVS)[m
[32m+[m[32m801027f0:	8b 90 00 03 00 00    	mov    0x300(%eax),%edx[m
[32m+[m[32m801027f6:	80 e6 10             	and    $0x10,%dh[m
[32m+[m[32m801027f9:	75 f5                	jne    801027f0 <lapicinit+0xc0>[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m801027fb:	c7 80 80 00 00 00 00 	movl   $0x0,0x80(%eax)[m
[32m+[m[32m80102802:	00 00 00[m[41m [m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m80102805:	8b 40 20             	mov    0x20(%eax),%eax[m
[32m+[m[32m  while(lapic[ICRLO] & DELIVS)[m
[32m+[m[32m    ;[m
[32m+[m
[32m+[m[32m  // Enable interrupts on the APIC (but not on the processor).[m
[32m+[m[32m  lapicw(TPR, 0);[m
[32m+[m[32m}[m
[32m+[m[32m80102808:	5d                   	pop    %ebp[m
[32m+[m[32m80102809:	c3                   	ret[m[41m    [m
[32m+[m[32m8010280a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m80102810:	c7 80 40 03 00 00 00 	movl   $0x10000,0x340(%eax)[m
[32m+[m[32m80102817:	00 01 00[m[41m [m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m8010281a:	8b 50 20             	mov    0x20(%eax),%edx[m
[32m+[m[32m8010281d:	e9 77 ff ff ff       	jmp    80102799 <lapicinit+0x69>[m
[32m+[m[32m80102822:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m80102829:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m
[32m+[m[32m80102830 <cpunum>:[m
[32m+[m[32m  lapicw(TPR, 0);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint[m
[32m+[m[32mcpunum(void)[m
[32m+[m[32m{[m
[32m+[m[32m80102830:	55                   	push   %ebp[m
[32m+[m[32m80102831:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80102833:	56                   	push   %esi[m
[32m+[m[32m80102834:	53                   	push   %ebx[m
[32m+[m
[32m+[m[32mstatic inline uint[m
[32m+[m[32mreadeflags(void)[m
[32m+[m[32m{[m
[32m+[m[32m  uint eflags;[m
[32m+[m[32m  asm volatile("pushfl; popl %0" : "=r" (eflags));[m
[32m+[m[32m80102835:	9c                   	pushf[m[41m  [m
[32m+[m[32m80102836:	58                   	pop    %eax[m
[32m+[m[32m  // Cannot call cpu when interrupts are enabled:[m
[32m+[m[32m  // result not guaranteed to last long enough to be used![m
[32m+[m[32m  // Would prefer to panic but even printing is chancy here:[m
[32m+[m[32m  // almost everything, including cprintf and panic, calls cpu,[m
[32m+[m[32m  // often indirectly through acquire and release.[m
[32m+[m[32m  if(readeflags()&FL_IF){[m
[32m+[m[32m80102837:	f6 c4 02             	test   $0x2,%ah[m
[32m+[m[32m8010283a:	74 12                	je     8010284e <cpunum+0x1e>[m
[32m+[m[32m    static int n;[m
[32m+[m[32m    if(n++ == 0)[m
[32m+[m[32m8010283c:	a1 b8 a5 10 80       	mov    0x8010a5b8,%eax[m
[32m+[m[32m80102841:	8d 50 01             	lea    0x1(%eax),%edx[m
[32m+[m[32m80102844:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80102846:	89 15 b8 a5 10 80    	mov    %edx,0x8010a5b8[m
[32m+[m[32m8010284c:	74 4d                	je     8010289b <cpunum+0x6b>[m
[32m+[m[32m      cprintf("cpu called from %x with interrupts enabled\n",[m
[32m+[m[32m        __builtin_return_address(0));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (!lapic)[m
[32m+[m[32m8010284e:	a1 9c 26 11 80       	mov    0x8011269c,%eax[m
[32m+[m[32m80102853:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80102855:	74 60                	je     801028b7 <cpunum+0x87>[m
[32m+[m[32m    return 0;[m
[32m+[m
[32m+[m[32m  apicid = lapic[ID] >> 24;[m
[32m+[m[32m80102857:	8b 58 20             	mov    0x20(%eax),%ebx[m
[32m+[m[32m  for (i = 0; i < ncpu; ++i) {[m
[32m+[m[32m8010285a:	8b 35 80 2d 11 80    	mov    0x80112d80,%esi[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (!lapic)[m
[32m+[m[32m    return 0;[m
[32m+[m
[32m+[m[32m  apicid = lapic[ID] >> 24;[m
[32m+[m[32m80102860:	c1 eb 18             	shr    $0x18,%ebx[m
[32m+[m[32m  for (i = 0; i < ncpu; ++i) {[m
[32m+[m[32m80102863:	85 f6                	test   %esi,%esi[m
[32m+[m[32m80102865:	7e 59                	jle    801028c0 <cpunum+0x90>[m
[32m+[m[32m    if (cpus[i].apicid == apicid)[m
[32m+[m[32m80102867:	0f b6 05 a0 27 11 80 	movzbl 0x801127a0,%eax[m
[32m+[m[32m8010286e:	39 c3                	cmp    %eax,%ebx[m
[32m+[m[32m80102870:	74 45                	je     801028b7 <cpunum+0x87>[m
[32m+[m[32m80102872:	ba 5c 28 11 80       	mov    $0x8011285c,%edx[m
[32m+[m[32m80102877:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m80102879:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m
[32m+[m[32m  if (!lapic)[m
[32m+[m[32m    return 0;[m
[32m+[m
[32m+[m[32m  apicid = lapic[ID] >> 24;[m
[32m+[m[32m  for (i = 0; i < ncpu; ++i) {[m
[32m+[m[32m80102880:	83 c0 01             	add    $0x1,%eax[m
[32m+[m[32m80102883:	39 f0                	cmp    %esi,%eax[m
[32m+[m[32m80102885:	74 39                	je     801028c0 <cpunum+0x90>[m
[32m+[m[32m    if (cpus[i].apicid == apicid)[m
[32m+[m[32m80102887:	0f b6 0a             	movzbl (%edx),%ecx[m
[32m+[m[32m8010288a:	81 c2 bc 00 00 00    	add    $0xbc,%edx[m
[32m+[m[32m80102890:	39 cb                	cmp    %ecx,%ebx[m
[32m+[m[32m80102892:	75 ec                	jne    80102880 <cpunum+0x50>[m
[32m+[m[32m      return i;[m
[32m+[m[32m  }[m
[32m+[m[32m  panic("unknown apicid\n");[m
[32m+[m[32m}[m
[32m+[m[32m80102894:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[32m+[m[32m80102897:	5b                   	pop    %ebx[m
[32m+[m[32m80102898:	5e                   	pop    %esi[m
[32m+[m[32m80102899:	5d                   	pop    %ebp[m
[32m+[m[32m8010289a:	c3                   	ret[m[41m    [m
[32m+[m[32m  // almost everything, including cprintf and panic, calls cpu,[m
[32m+[m[32m  // often indirectly through acquire and release.[m
[32m+[m[32m  if(readeflags()&FL_IF){[m
[32m+[m[32m    static int n;[m
[32m+[m[32m    if(n++ == 0)[m
[32m+[m[32m      cprintf("cpu called from %x with interrupts enabled\n",[m
[32m+[m[32m8010289b:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m8010289e:	ff 75 04             	pushl  0x4(%ebp)[m
[32m+[m[32m801028a1:	68 c0 76 10 80       	push   $0x801076c0[m
[32m+[m[32m801028a6:	e8 b5 dd ff ff       	call   80100660 <cprintf>[m
[32m+[m[32m        __builtin_return_address(0));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (!lapic)[m
[32m+[m[32m801028ab:	a1 9c 26 11 80       	mov    0x8011269c,%eax[m
[32m+[m[32m  // almost everything, including cprintf and panic, calls cpu,[m
[32m+[m[32m  // often indirectly through acquire and release.[m
[32m+[m[32m  if(readeflags()&FL_IF){[m
[32m+[m[32m    static int n;[m
[32m+[m[32m    if(n++ == 0)[m
[32m+[m[32m      cprintf("cpu called from %x with interrupts enabled\n",[m
[32m+[m[32m801028b0:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m        __builtin_return_address(0));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (!lapic)[m
[32m+[m[32m801028b3:	85 c0                	test   %eax,%eax[m
[32m+[m[32m801028b5:	75 a0                	jne    80102857 <cpunum+0x27>[m
[32m+[m[32m  for (i = 0; i < ncpu; ++i) {[m
[32m+[m[32m    if (cpus[i].apicid == apicid)[m
[32m+[m[32m      return i;[m
[32m+[m[32m  }[m
[32m+[m[32m  panic("unknown apicid\n");[m
[32m+[m[32m}[m
[32m+[m[32m801028b7:	8d 65 f8             	lea    -0x8(%ebp),%esp[m
[32m+[m[32m      cprintf("cpu called from %x with interrupts enabled\n",[m
[32m+[m[32m        __builtin_return_address(0));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (!lapic)[m
[32m+[m[32m    return 0;[m
[32m+[m[32m801028ba:	31 c0                	xor    %eax,%eax[m
[32m+[m[32m  for (i = 0; i < ncpu; ++i) {[m
[32m+[m[32m    if (cpus[i].apicid == apicid)[m
[32m+[m[32m      return i;[m
[32m+[m[32m  }[m
[32m+[m[32m  panic("unknown apicid\n");[m
[32m+[m[32m}[m
[32m+[m[32m801028bc:	5b                   	pop    %ebx[m
[32m+[m[32m801028bd:	5e                   	pop    %esi[m
[32m+[m[32m801028be:	5d                   	pop    %ebp[m
[32m+[m[32m801028bf:	c3                   	ret[m[41m    [m
[32m+[m[32m  apicid = lapic[ID] >> 24;[m
[32m+[m[32m  for (i = 0; i < ncpu; ++i) {[m
[32m+[m[32m    if (cpus[i].apicid == apicid)[m
[32m+[m[32m      return i;[m
[32m+[m[32m  }[m
[32m+[m[32m  panic("unknown apicid\n");[m
[32m+[m[32m801028c0:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m801028c3:	68 ec 76 10 80       	push   $0x801076ec[m
[32m+[m[32m801028c8:	e8 a3 da ff ff       	call   80100370 <panic>[m
[32m+[m[32m801028cd:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m
[32m+[m[32m801028d0 <lapiceoi>:[m
[32m+[m
[32m+[m[32m// Acknowledge interrupt.[m
[32m+[m[32mvoid[m
[32m+[m[32mlapiceoi(void)[m
[32m+[m[32m{[m
[32m+[m[32m  if(lapic)[m
[32m+[m[32m801028d0:	a1 9c 26 11 80       	mov    0x8011269c,%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Acknowledge interrupt.[m
[32m+[m[32mvoid[m
[32m+[m[32mlapiceoi(void)[m
[32m+[m[32m{[m
[32m+[m[32m801028d5:	55                   	push   %ebp[m
[32m+[m[32m801028d6:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m  if(lapic)[m
[32m+[m[32m801028d8:	85 c0                	test   %eax,%eax[m
[32m+[m[32m801028da:	74 0d                	je     801028e9 <lapiceoi+0x19>[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m801028dc:	c7 80 b0 00 00 00 00 	movl   $0x0,0xb0(%eax)[m
[32m+[m[32m801028e3:	00 00 00[m[41m [m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m801028e6:	8b 40 20             	mov    0x20(%eax),%eax[m
[32m+[m[32mvoid[m
[32m+[m[32mlapiceoi(void)[m
[32m+[m[32m{[m
[32m+[m[32m  if(lapic)[m
[32m+[m[32m    lapicw(EOI, 0);[m
[32m+[m[32m}[m
[32m+[m[32m801028e9:	5d                   	pop    %ebp[m
[32m+[m[32m801028ea:	c3                   	ret[m[41m    [m
[32m+[m[32m801028eb:	90                   	nop[m
[32m+[m[32m801028ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m
[32m+[m[32m801028f0 <microdelay>:[m
[32m+[m
[32m+[m[32m// Spin for a given number of microseconds.[m
[32m+[m[32m// On real hardware would want to tune this dynamically.[m
[32m+[m[32mvoid[m
[32m+[m[32mmicrodelay(int us)[m
[32m+[m[32m{[m
[32m+[m[32m801028f0:	55                   	push   %ebp[m
[32m+[m[32m801028f1:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m}[m
[32m+[m[32m801028f3:	5d                   	pop    %ebp[m
[32m+[m[32m801028f4:	c3                   	ret[m[41m    [m
[32m+[m[32m801028f5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m801028f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m
[32m+[m[32m80102900 <lapicstartap>:[m
[32m+[m
[32m+[m[32m// Start additional processor running entry code at addr.[m
[32m+[m[32m// See Appendix B of MultiProcessor Specification.[m
[32m+[m[32mvoid[m
[32m+[m[32mlapicstartap(uchar apicid, uint addr)[m
[32m+[m[32m{[m
[32m+[m[32m80102900:	55                   	push   %ebp[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutb(ushort port, uchar data)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("out %0,%1" : : "a" (data), "d" (port));[m
[32m+[m[32m80102901:	ba 70 00 00 00       	mov    $0x70,%edx[m
[32m+[m[32m80102906:	b8 0f 00 00 00       	mov    $0xf,%eax[m
[32m+[m[32m8010290b:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m8010290d:	53                   	push   %ebx[m
[32m+[m[32m8010290e:	8b 4d 0c             	mov    0xc(%ebp),%ecx[m
[32m+[m[32m80102911:	8b 5d 08             	mov    0x8(%ebp),%ebx[m
[32m+[m[32m80102914:	ee                   	out    %al,(%dx)[m
[32m+[m[32m80102915:	ba 71 00 00 00       	mov    $0x71,%edx[m
[32m+[m[32m8010291a:	b8 0a 00 00 00       	mov    $0xa,%eax[m
[32m+[m[32m8010291f:	ee                   	out    %al,(%dx)[m
[32m+[m[32m  // and the warm reset vector (DWORD based at 40:67) to point at[m
[32m+[m[32m  // the AP startup code prior to the [universal startup algorithm]."[m
[32m+[m[32m  outb(CMOS_PORT, 0xF);  // offset 0xF is shutdown code[m
[32m+[m[32m  outb(CMOS_PORT+1, 0x0A);[m
[32m+[m[32m  wrv = (ushort*)P2V((0x40<<4 | 0x67));  // Warm reset vector[m
[32m+[m[32m  wrv[0] = 0;[m
[32m+[m[32m80102920:	31 c0                	xor    %eax,%eax[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m80102922:	c1 e3 18             	shl    $0x18,%ebx[m
[32m+[m[32m  // and the warm reset vector (DWORD based at 40:67) to point at[m
[32m+[m[32m  // the AP startup code prior to the [universal startup algorithm]."[m
[32m+[m[32m  outb(CMOS_PORT, 0xF);  // offset 0xF is shutdown code[m
[32m+[m[32m  outb(CMOS_PORT+1, 0x0A);[m
[32m+[m[32m  wrv = (ushort*)P2V((0x40<<4 | 0x67));  // Warm reset vector[m
[32m+[m[32m  wrv[0] = 0;[m
[32m+[m[32m80102925:	66 a3 67 04 00 80    	mov    %ax,0x80000467[m
[32m+[m[32m  wrv[1] = addr >> 4;[m
[32m+[m[32m8010292b:	89 c8                	mov    %ecx,%eax[m
[32m+[m[32m  // when it is in the halted state due to an INIT.  So the second[m
[32m+[m[32m  // should be ignored, but it is part of the official Intel algorithm.[m
[32m+[m[32m  // Bochs complains about the second one.  Too bad for Bochs.[m
[32m+[m[32m  for(i = 0; i < 2; i++){[m
[32m+[m[32m    lapicw(ICRHI, apicid<<24);[m
[32m+[m[32m    lapicw(ICRLO, STARTUP | (addr>>12));[m
[32m+[m[32m8010292d:	c1 e9 0c             	shr    $0xc,%ecx[m
[32m+[m[32m  // the AP startup code prior to the [universal startup algorithm]."[m
[32m+[m[32m  outb(CMOS_PORT, 0xF);  // offset 0xF is shutdown code[m
[32m+[m[32m  outb(CMOS_PORT+1, 0x0A);[m
[32m+[m[32m  wrv = (ushort*)P2V((0x40<<4 | 0x67));  // Warm reset vector[m
[32m+[m[32m  wrv[0] = 0;[m
[32m+[m[32m  wrv[1] = addr >> 4;[m
[32m+[m[32m80102930:	c1 e8 04             	shr    $0x4,%eax[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m80102933:	89 da                	mov    %ebx,%edx[m
[32m+[m[32m  // when it is in the halted state due to an INIT.  So the second[m
[32m+[m[32m  // should be ignored, but it is part of the official Intel algorithm.[m
[32m+[m[32m  // Bochs complains about the second one.  Too bad for Bochs.[m
[32m+[m[32m  for(i = 0; i < 2; i++){[m
[32m+[m[32m    lapicw(ICRHI, apicid<<24);[m
[32m+[m[32m    lapicw(ICRLO, STARTUP | (addr>>12));[m
[32m+[m[32m80102935:	80 cd 06             	or     $0x6,%ch[m
[32m+[m[32m  // the AP startup code prior to the [universal startup algorithm]."[m
[32m+[m[32m  outb(CMOS_PORT, 0xF);  // offset 0xF is shutdown code[m
[32m+[m[32m  outb(CMOS_PORT+1, 0x0A);[m
[32m+[m[32m  wrv = (ushort*)P2V((0x40<<4 | 0x67));  // Warm reset vector[m
[32m+[m[32m  wrv[0] = 0;[m
[32m+[m[32m  wrv[1] = addr >> 4;[m
[32m+[m[32m80102938:	66 a3 69 04 00 80    	mov    %ax,0x80000469[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m8010293e:	a1 9c 26 11 80       	mov    0x8011269c,%eax[m
[32m+[m[32m80102943:	89 98 10 03 00 00    	mov    %ebx,0x310(%eax)[m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m80102949:	8b 58 20             	mov    0x20(%eax),%ebx[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m8010294c:	c7 80 00 03 00 00 00 	movl   $0xc500,0x300(%eax)[m
[32m+[m[32m80102953:	c5 00 00[m[41m [m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m80102956:	8b 58 20             	mov    0x20(%eax),%ebx[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m80102959:	c7 80 00 03 00 00 00 	movl   $0x8500,0x300(%eax)[m
[32m+[m[32m80102960:	85 00 00[m[41m [m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m80102963:	8b 58 20             	mov    0x20(%eax),%ebx[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m80102966:	89 90 10 03 00 00    	mov    %edx,0x310(%eax)[m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m8010296c:	8b 58 20             	mov    0x20(%eax),%ebx[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m8010296f:	89 88 00 03 00 00    	mov    %ecx,0x300(%eax)[m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m80102975:	8b 58 20             	mov    0x20(%eax),%ebx[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m80102978:	89 90 10 03 00 00    	mov    %edx,0x310(%eax)[m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m8010297e:	8b 50 20             	mov    0x20(%eax),%edx[m
[32m+[m[32mvolatile uint *lapic;  // Initialized in mp.c[m
[32m+[m
[32m+[m[32mstatic void[m
[32m+[m[32mlapicw(int index, int value)[m
[32m+[m[32m{[m
[32m+[m[32m  lapic[index] = value;[m
[32m+[m[32m80102981:	89 88 00 03 00 00    	mov    %ecx,0x300(%eax)[m
[32m+[m[32m  lapic[ID];  // wait for write to finish, by reading[m
[32m+[m[32m80102987:	8b 40 20             	mov    0x20(%eax),%eax[m
[32m+[m[32m  for(i = 0; i < 2; i++){[m
[32m+[m[32m    lapicw(ICRHI, apicid<<24);[m
[32m+[m[32m    lapicw(ICRLO, STARTUP | (addr>>12));[m
[32m+[m[32m    microdelay(200);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[32m8010298a:	5b                   	pop    %ebx[m
[32m+[m[32m8010298b:	5d                   	pop    %ebp[m
[32m+[m[32m8010298c:	c3                   	ret[m[41m    [m
[32m+[m[32m8010298d:	8d 76 00             	lea    0x0(%esi),%esi[m
[32m+[m
[32m+[m[32m80102990 <cmostime>:[m
[32m+[m[32m  r->year   = cmos_read(YEAR);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// qemu seems to use 24-hour GWT and the values are BCD encoded[m
[32m+[m[32mvoid cmostime(struct rtcdate *r)[m
[32m+[m[32m{[m
[32m+[m[32m80102990:	55                   	push   %ebp[m
[32m+[m[32m80102991:	ba 70 00 00 00       	mov    $0x70,%edx[m
[32m+[m[32m80102996:	b8 0b 00 00 00       	mov    $0xb,%eax[m
[32m+[m[32m8010299b:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m8010299d:	57                   	push   %edi[m
[32m+[m[32m8010299e:	56                   	push   %esi[m
[32m+[m[32m8010299f:	53                   	push   %ebx[m
[32m+[m[32m801029a0:	83 ec 4c             	sub    $0x4c,%esp[m
[32m+[m[32m801029a3:	ee                   	out    %al,(%dx)[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
[32m+[m[32m{[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
[32m+[m[32m801029a4:	ba 71 00 00 00       	mov    $0x71,%edx[m
[32m+[m[32m801029a9:	ec                   	in     (%dx),%al[m
[32m+[m[32m801029aa:	83 e0 04             	and    $0x4,%eax[m
[32m+[m[32m801029ad:	8d 75 d0             	lea    -0x30(%ebp),%esi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutb(ushort port, uchar data)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("out %0,%1" : : "a" (data), "d" (port));[m
[32m+[m[32m801029b0:	31 db                	xor    %ebx,%ebx[m
[32m+[m[32m801029b2:	88 45 b7             	mov    %al,-0x49(%ebp)[m
[32m+[m[32m801029b5:	bf 70 00 00 00       	mov    $0x70,%edi[m
[32m+[m[32m801029ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi[m
[32m+[m[32m801029c0:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m801029c2:	89 fa                	mov    %edi,%edx[m
[32m+[m[32m801029c4:	ee                   	out    %al,(%dx)[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
[32m+[m[32m{[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
[32m+[m[32m801029c5:	b9 71 00 00 00       	mov    $0x71,%ecx[m
[32m+[m[32m801029ca:	89 ca                	mov    %ecx,%edx[m
[32m+[m[32m801029cc:	ec                   	in     (%dx),%al[m
[32m+[m[32m  return inb(CMOS_RETURN);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic void fill_rtcdate(struct rtcdate *r)[m
[32m+[m[32m{[m
[32m+[m[32m  r->second = cmos_read(SECS);[m
[32m+[m[32m801029cd:	0f b6 c0             	movzbl %al,%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutb(ushort port, uchar data)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("out %0,%1" : : "a" (data), "d" (port));[m
[32m+[m[32m801029d0:	89 fa                	mov    %edi,%edx[m
[32m+[m[32m801029d2:	89 45 b8             	mov    %eax,-0x48(%ebp)[m
[32m+[m[32m801029d5:	b8 02 00 00 00       	mov    $0x2,%eax[m
[32m+[m[32m801029da:	ee                   	out    %al,(%dx)[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
[32m+[m[32m{[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
[32m+[m[32m801029db:	89 ca                	mov    %ecx,%edx[m
[32m+[m[32m801029dd:	ec                   	in     (%dx),%al[m
[32m+[m[32m  r->minute = cmos_read(MINS);[m
[32m+[m[32m801029de:	0f b6 c0             	movzbl %al,%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutb(ushort port, uchar data)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("out %0,%1" : : "a" (data), "d" (port));[m
[32m+[m[32m801029e1:	89 fa                	mov    %edi,%edx[m
[32m+[m[32m801029e3:	89 45 bc             	mov    %eax,-0x44(%ebp)[m
[32m+[m[32m801029e6:	b8 04 00 00 00       	mov    $0x4,%eax[m
[32m+[m[32m801029eb:	ee                   	out    %al,(%dx)[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
[32m+[m[32m{[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
[32m+[m[32m801029ec:	89 ca                	mov    %ecx,%edx[m
[32m+[m[32m801029ee:	ec                   	in     (%dx),%al[m
[32m+[m[32m  r->hour   = cmos_read(HOURS);[m
[32m+[m[32m801029ef:	0f b6 c0             	movzbl %al,%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutb(ushort port, uchar data)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("out %0,%1" : : "a" (data), "d" (port));[m
[32m+[m[32m801029f2:	89 fa                	mov    %edi,%edx[m
[32m+[m[32m801029f4:	89 45 c0             	mov    %eax,-0x40(%ebp)[m
[32m+[m[32m801029f7:	b8 07 00 00 00       	mov    $0x7,%eax[m
[32m+[m[32m801029fc:	ee                   	out    %al,(%dx)[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
[32m+[m[32m{[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
[32m+[m[32m801029fd:	89 ca                	mov    %ecx,%edx[m
[32m+[m[32m801029ff:	ec                   	in     (%dx),%al[m
[32m+[m[32m  r->day    = cmos_read(DAY);[m
[32m+[m[32m80102a00:	0f b6 c0             	movzbl %al,%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutb(ushort port, uchar data)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("out %0,%1" : : "a" (data), "d" (port));[m
[32m+[m[32m80102a03:	89 fa                	mov    %edi,%edx[m
[32m+[m[32m80102a05:	89 45 c4             	mov    %eax,-0x3c(%ebp)[m
[32m+[m[32m80102a08:	b8 08 00 00 00       	mov    $0x8,%eax[m
[32m+[m[32m80102a0d:	ee                   	out    %al,(%dx)[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
[32m+[m[32m{[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
[32m+[m[32m80102a0e:	89 ca                	mov    %ecx,%edx[m
[32m+[m[32m80102a10:	ec                   	in     (%dx),%al[m
[32m+[m[32m  r->month  = cmos_read(MONTH);[m
[32m+[m[32m80102a11:	0f b6 c0             	movzbl %al,%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutb(ushort port, uchar data)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("out %0,%1" : : "a" (data), "d" (port));[m
[32m+[m[32m80102a14:	89 fa                	mov    %edi,%edx[m
[32m+[m[32m80102a16:	89 45 c8             	mov    %eax,-0x38(%ebp)[m
[32m+[m[32m80102a19:	b8 09 00 00 00       	mov    $0x9,%eax[m
[32m+[m[32m80102a1e:	ee                   	out    %al,(%dx)[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
[32m+[m[32m{[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
[32m+[m[32m80102a1f:	89 ca                	mov    %ecx,%edx[m
[32m+[m[32m80102a21:	ec                   	in     (%dx),%al[m
[32m+[m[32m  r->year   = cmos_read(YEAR);[m
[32m+[m[32m80102a22:	0f b6 c0             	movzbl %al,%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutb(ushort port, uchar data)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("out %0,%1" : : "a" (data), "d" (port));[m
[32m+[m[32m80102a25:	89 fa                	mov    %edi,%edx[m
[32m+[m[32m80102a27:	89 45 cc             	mov    %eax,-0x34(%ebp)[m
[32m+[m[32m80102a2a:	b8 0a 00 00 00       	mov    $0xa,%eax[m
[32m+[m[32m80102a2f:	ee                   	out    %al,(%dx)[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
[32m+[m[32m{[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
[32m+[m[32m80102a30:	89 ca                	mov    %ecx,%edx[m
[32m+[m[32m80102a32:	ec                   	in     (%dx),%al[m
[32m+[m[32m  bcd = (sb & (1 << 2)) == 0;[m
[32m+[m
[32m+[m[32m  // make sure CMOS doesn't modify time while we read it[m
[32m+[m[32m  for(;;) {[m
[32m+[m[32m    fill_rtcdate(&t1);[m
[32m+[m[32m    if(cmos_read(CMOS_STATA) & CMOS_UIP)[m
[32m+[m[32m80102a33:	84 c0                	test   %al,%al[m
[32m+[m[32m80102a35:	78 89                	js     801029c0 <cmostime+0x30>[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutb(ushort port, uchar data)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("out %0,%1" : : "a" (data), "d" (port));[m
[32m+[m[32m80102a37:	89 d8                	mov    %ebx,%eax[m
[32m+[m[32m80102a39:	89 fa                	mov    %edi,%edx[m
[32m+[m[32m80102a3b:	ee                   	out    %al,(%dx)[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
[32m+[m[32m{[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
[32m+[m[32m80102a3c:	89 ca                	mov    %ecx,%edx[m
[32m+[m[32m80102a3e:	ec                   	in     (%dx),%al[m
[32m+[m[32m  return inb(CMOS_RETURN);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic void fill_rtcdate(struct rtcdate *r)[m
[32m+[m[32m{[m
[32m+[m[32m  r->second = cmos_read(SECS);[m
[32m+[m[32m80102a3f:	0f b6 c0             	movzbl %al,%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutb(ushort port, uchar data)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("out %0,%1" : : "a" (data), "d" (port));[m
[32m+[m[32m80102a42:	89 fa                	mov    %edi,%edx[m
[32m+[m[32m80102a44:	89 45 d0             	mov    %eax,-0x30(%ebp)[m
[32m+[m[32m80102a47:	b8 02 00 00 00       	mov    $0x2,%eax[m
[32m+[m[32m80102a4c:	ee                   	out    %al,(%dx)[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
[32m+[m[32m{[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
[32m+[m[32m80102a4d:	89 ca                	mov    %ecx,%edx[m
[32m+[m[32m80102a4f:	ec                   	in     (%dx),%al[m
[32m+[m[32m  r->minute = cmos_read(MINS);[m
[32m+[m[32m80102a50:	0f b6 c0             	movzbl %al,%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutb(ushort port, uchar data)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("out %0,%1" : : "a" (data), "d" (port));[m
[32m+[m[32m80102a53:	89 fa                	mov    %edi,%edx[m
[32m+[m[32m80102a55:	89 45 d4             	mov    %eax,-0x2c(%ebp)[m
[32m+[m[32m80102a58:	b8 04 00 00 00       	mov    $0x4,%eax[m
[32m+[m[32m80102a5d:	ee                   	out    %al,(%dx)[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
[32m+[m[32m{[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
[32m+[m[32m80102a5e:	89 ca                	mov    %ecx,%edx[m
[32m+[m[32m80102a60:	ec                   	in     (%dx),%al[m
[32m+[m[32m  r->hour   = cmos_read(HOURS);[m
[32m+[m[32m80102a61:	0f b6 c0             	movzbl %al,%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutb(ushort port, uchar data)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("out %0,%1" : : "a" (data), "d" (port));[m
[32m+[m[32m80102a64:	89 fa                	mov    %edi,%edx[m
[32m+[m[32m80102a66:	89 45 d8             	mov    %eax,-0x28(%ebp)[m
[32m+[m[32m80102a69:	b8 07 00 00 00       	mov    $0x7,%eax[m
[32m+[m[32m80102a6e:	ee                   	out    %al,(%dx)[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
[32m+[m[32m{[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
[32m+[m[32m80102a6f:	89 ca                	mov    %ecx,%edx[m
[32m+[m[32m80102a71:	ec                   	in     (%dx),%al[m
[32m+[m[32m  r->day    = cmos_read(DAY);[m
[32m+[m[32m80102a72:	0f b6 c0             	movzbl %al,%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutb(ushort port, uchar data)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("out %0,%1" : : "a" (data), "d" (port));[m
[32m+[m[32m80102a75:	89 fa                	mov    %edi,%edx[m
[32m+[m[32m80102a77:	89 45 dc             	mov    %eax,-0x24(%ebp)[m
[32m+[m[32m80102a7a:	b8 08 00 00 00       	mov    $0x8,%eax[m
[32m+[m[32m80102a7f:	ee                   	out    %al,(%dx)[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
[32m+[m[32m{[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
[32m+[m[32m80102a80:	89 ca                	mov    %ecx,%edx[m
[32m+[m[32m80102a82:	ec                   	in     (%dx),%al[m
[32m+[m[32m  r->month  = cmos_read(MONTH);[m
[32m+[m[32m80102a83:	0f b6 c0             	movzbl %al,%eax[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mstatic inline void[m
[32m+[m[32moutb(ushort port, uchar data)[m
[32m+[m[32m{[m
[32m+[m[32m  asm volatile("out %0,%1" : : "a" (data), "d" (port));[m
[32m+[m[32m80102a86:	89 fa                	mov    %edi,%edx[m
[32m+[m[32m80102a88:	89 45 e0             	mov    %eax,-0x20(%ebp)[m
[32m+[m[32m80102a8b:	b8 09 00 00 00       	mov    $0x9,%eax[m
[32m+[m[32m80102a90:	ee                   	out    %al,(%dx)[m
[32m+[m[32mstatic inline uchar[m
[32m+[m[32minb(ushort port)[m
[32m+[m[32m{[m
[32m+[m[32m  uchar data;[m
[32m+[m
[32m+[m[32m  asm volatile("in %1,%0" : "=a" (data) : "d" (port));[m
[32m+[m[32m80102a91:	89 ca                	mov    %ecx,%edx[m
[32m+[m[32m80102a93:	ec                   	in     (%dx),%al[m
[32m+[m[32m  r->year   = cmos_read(YEAR);[m
[32m+[m[32m80102a94:	0f b6 c0             	movzbl %al,%eax[m
[32m+[m[32m  for(;;) {[m
[32m+[m[32m    fill_rtcdate(&t1);[m
[32m+[m[32m    if(cmos_read(CMOS_STATA) & CMOS_UIP)[m
[32m+[m[32m        continue;[m
[32m+[m[32m    fill_rtcdate(&t2);[m
[32m+[m[32m    if(memcmp(&t1, &t2, sizeof(t1)) == 0)[m
[32m+[m[32m80102a97:	83 ec 04             	sub    $0x4,%esp[m
[32m+[m[32m  r->second = cmos_read(SECS);[m
[32m+[m[32m  r->minute = cmos_read(MINS);[m
[32m+[m[32m  r->hour   = cmos_read(HOURS);[m
[32m+[m[32m  r->day    = cmos_read(DAY);[m
[32m+[m[32m  r->month  = cmos_read(MONTH);[m
[32m+[m[32m  r->year   = cmos_read(YEAR);[m
[32m+[m[32m80102a9a:	89 45 e4             	mov    %eax,-0x1c(%ebp)[m
[32m+[m[32m  for(;;) {[m
[32m+[m[32m    fill_rtcdate(&t1);[m
[32m+[m[32m    if(cmos_read(CMOS_STATA) & CMOS_UIP)[m
[32m+[m[32m        continue;[m
[32m+[m[32m    fill_rtcdate(&t2);[m
[32m+[m[32m    if(memcmp(&t1, &t2, sizeof(t1)) == 0)[m
[32m+[m[32m80102a9d:	8d 45 b8             	lea    -0x48(%ebp),%eax[m
[32m+[m[32m80102aa0:	6a 18                	push   $0x18[m
[32m+[m[32m80102aa2:	56                   	push   %esi[m
[32m+[m[32m80102aa3:	50                   	push   %eax[m
[32m+[m[32m80102aa4:	e8 a7 1b 00 00       	call   80104650 <memcmp>[m
[32m+[m[32m80102aa9:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80102aac:	85 c0                	test   %eax,%eax[m
[32m+[m[32m80102aae:	0f 85 0c ff ff ff    	jne    801029c0 <cmostime+0x30>[m
[32m+[m[32m      break;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // convert[m
[32m+[m[32m  if(bcd) {[m
[32m+[m[32m80102ab4:	80 7d b7 00          	cmpb   $0x0,-0x49(%ebp)[m
[32m+[m[32m80102ab8:	75 78                	jne    80102b32 <cmostime+0x1a2>[m
[32m+[m[32m#define    CONV(x)     (t1.x = ((t1.x >> 4) * 10) + (t1.x & 0xf))[m
[32m+[m[32m    CONV(second);[m
[32m+[m[32m80102aba:	8b 45 b8             	mov    -0x48(%ebp),%eax[m
[32m+[m[32m80102abd:	89 c2                	mov    %eax,%edx[m
[32m+[m[32m80102abf:	83 e0 0f             	and    $0xf,%eax[m
[32m+[m[32m80102ac2:	c1 ea 04             	shr    $0x4,%edx[m
[32m+[m[32m80102ac5:	8d 14 92             	lea    (%edx,%edx,4),%edx[m
[32m+[m[32m80102ac8:	8d 04 50             	lea    (%eax,%edx,2),%eax[m
[32m+[m[32m80102acb:	89 45 b8             	mov    %eax,-0x48(%ebp)[m
[32m+[m[32m    CONV(minute);[m
[32m+[m[32m80102ace:	8b 45 bc             	mov    -0x44(%ebp),%eax[m
[32m+[m[32m80102ad1:	89 c2                	mov    %eax,%edx[m
[32m+[m[32m80102ad3:	83 e0 0f             	and    $0xf,%eax[m
[32m+[m[32m80102ad6:	c1 ea 04             	shr    $0x4,%edx[m
[32m+[m[32m80102ad9:	8d 14 92             	lea    (%edx,%edx,4),%edx[m
[32m+[m[32m80102adc:	8d 04 50             	lea    (%eax,%edx,2),%eax[m
[32m+[m[32m80102adf:	89 45 bc             	mov    %eax,-0x44(%ebp)[m
[32m+[m[32m    CONV(hour  );[m
[32m+[m[32m80102ae2:	8b 45 c0             	mov    -0x40(%ebp),%eax[m
[32m+[m[32m80102ae5:	89 c2                	mov    %eax,%edx[m
[32m+[m[32m80102ae7:	83 e0 0f             	and    $0xf,%eax[m
[32m+[m[32m80102aea:	c1 ea 04             	shr    $0x4,%edx[m
[32m+[m[32m80102aed:	8d 14 92             	lea    (%edx,%edx,4),%edx[m
[32m+[m[32m80102af0:	8d 04 50             	lea    (%eax,%edx,2),%eax[m
[32m+[m[32m80102af3:	89 45 c0             	mov    %eax,-0x40(%ebp)[m
[32m+[m[32m    CONV(day   );[m
[32m+[m[32m80102af6:	8b 45 c4             	mov    -0x3c(%ebp),%eax[m
[32m+[m[32m80102af9:	89 c2                	mov    %eax,%edx[m
[32m+[m[32m80102afb:	83 e0 0f             	and    $0xf,%eax[m
[32m+[m[32m80102afe:	c1 ea 04             	shr    $0x4,%edx[m
[32m+[m[32m80102b01:	8d 14 92             	lea    (%edx,%edx,4),%edx[m
[32m+[m[32m80102b04:	8d 04 50             	lea    (%eax,%edx,2),%eax[m
[32m+[m[32m80102b07:	89 45 c4             	mov    %eax,-0x3c(%ebp)[m
[32m+[m[32m    CONV(month );[m
[32m+[m[32m80102b0a:	8b 45 c8             	mov    -0x38(%ebp),%eax[m
[32m+[m[32m80102b0d:	89 c2                	mov    %eax,%edx[m
[32m+[m[32m80102b0f:	83 e0 0f             	and    $0xf,%eax[m
[32m+[m[32m80102b12:	c1 ea 04             	shr    $0x4,%edx[m
[32m+[m[32m80102b15:	8d 14 92             	lea    (%edx,%edx,4),%edx[m
[32m+[m[32m80102b18:	8d 04 50             	lea    (%eax,%edx,2),%eax[m
[32m+[m[32m80102b1b:	89 45 c8             	mov    %eax,-0x38(%ebp)[m
[32m+[m[32m    CONV(year  );[m
[32m+[m[32m80102b1e:	8b 45 cc             	mov    -0x34(%ebp),%eax[m
[32m+[m[32m80102b21:	89 c2                	mov    %eax,%edx[m
[32m+[m[32m80102b23:	83 e0 0f             	and    $0xf,%eax[m
[32m+[m[32m80102b26:	c1 ea 04             	shr    $0x4,%edx[m
[32m+[m[32m80102b29:	8d 14 92             	lea    (%edx,%edx,4),%edx[m
[32m+[m[32m80102b2c:	8d 04 50             	lea    (%eax,%edx,2),%eax[m
[32m+[m[32m80102b2f:	89 45 cc             	mov    %eax,-0x34(%ebp)[m
[32m+[m[32m#undef     CONV[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  *r = t1;[m
[32m+[m[32m80102b32:	8b 75 08             	mov    0x8(%ebp),%esi[m
[32m+[m[32m80102b35:	8b 45 b8             	mov    -0x48(%ebp),%eax[m
[32m+[m[32m80102b38:	89 06                	mov    %eax,(%esi)[m
[32m+[m[32m80102b3a:	8b 45 bc             	mov    -0x44(%ebp),%eax[m
[32m+[m[32m80102b3d:	89 46 04             	mov    %eax,0x4(%esi)[m
[32m+[m[32m80102b40:	8b 45 c0             	mov    -0x40(%ebp),%eax[m
[32m+[m[32m80102b43:	89 46 08             	mov    %eax,0x8(%esi)[m
[32m+[m[32m80102b46:	8b 45 c4             	mov    -0x3c(%ebp),%eax[m
[32m+[m[32m80102b49:	89 46 0c             	mov    %eax,0xc(%esi)[m
[32m+[m[32m80102b4c:	8b 45 c8             	mov    -0x38(%ebp),%eax[m
[32m+[m[32m80102b4f:	89 46 10             	mov    %eax,0x10(%esi)[m
[32m+[m[32m80102b52:	8b 45 cc             	mov    -0x34(%ebp),%eax[m
[32m+[m[32m80102b55:	89 46 14             	mov    %eax,0x14(%esi)[m
[32m+[m[32m  r->year += 2000;[m
[32m+[m[32m80102b58:	81 46 14 d0 07 00 00 	addl   $0x7d0,0x14(%esi)[m
[32m+[m[32m}[m
[32m+[m[32m80102b5f:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m80102b62:	5b                   	pop    %ebx[m
[32m+[m[32m80102b63:	5e                   	pop    %esi[m
[32m+[m[32m80102b64:	5f                   	pop    %edi[m
[32m+[m[32m80102b65:	5d                   	pop    %ebp[m
[32m+[m[32m80102b66:	c3                   	ret[m[41m    [m
[32m+[m[32m80102b67:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m80102b69:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m80102b6b:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m80102b6d:	66 90                	xchg   %ax,%ax[m
[32m+[m[32m80102b6f:	90                   	nop[m
[32m+[m
[32m+[m[32m80102b70 <install_trans>:[m
[32m+[m[32mstatic void[m
[32m+[m[32minstall_trans(void)[m
[32m+[m[32m{[m
[32m+[m[32m  int tail;[m
[32m+[m
[32m+[m[32m  for (tail = 0; tail < log.lh.n; tail++) {[m
[32m+[m[32m80102b70:	8b 0d e8 26 11 80    	mov    0x801126e8,%ecx[m
[32m+[m[32m80102b76:	85 c9                	test   %ecx,%ecx[m
[32m+[m[32m80102b78:	0f 8e 85 00 00 00    	jle    80102c03 <install_trans+0x93>[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// Copy committed blocks from log to their home location[m
[32m+[m[32mstatic void[m
[32m+[m[32minstall_trans(void)[m
[32m+[m[32m{[m
[32m+[m[32m80102b7e:	55                   	push   %ebp[m
[32m+[m[32m80102b7f:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80102b81:	57                   	push   %edi[m
[32m+[m[32m80102b82:	56                   	push   %esi[m
[32m+[m[32m80102b83:	53                   	push   %ebx[m
[32m+[m[32m80102b84:	31 db                	xor    %ebx,%ebx[m
[32m+[m[32m80102b86:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m80102b89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m  int tail;[m
[32m+[m
[32m+[m[32m  for (tail = 0; tail < log.lh.n; tail++) {[m
[32m+[m[32m    struct buf *lbuf = bread(log.dev, log.start+tail+1); // read log block[m
[32m+[m[32m80102b90:	a1 d4 26 11 80       	mov    0x801126d4,%eax[m
[32m+[m[32m80102b95:	83 ec 08             	sub    $0x8,%esp[m
[32m+[m[32m80102b98:	01 d8                	add    %ebx,%eax[m
[32m+[m[32m80102b9a:	83 c0 01             	add    $0x1,%eax[m
[32m+[m[32m80102b9d:	50                   	push   %eax[m
[32m+[m[32m80102b9e:	ff 35 e4 26 11 80    	pushl  0x801126e4[m
[32m+[m[32m80102ba4:	e8 27 d5 ff ff       	call   801000d0 <bread>[m
[32m+[m[32m80102ba9:	89 c7                	mov    %eax,%edi[m
[32m+[m[32m    struct buf *dbuf = bread(log.dev, log.lh.block[tail]); // read dst[m
[32m+[m[32m80102bab:	58                   	pop    %eax[m
[32m+[m[32m80102bac:	5a                   	pop    %edx[m
[32m+[m[32m80102bad:	ff 34 9d ec 26 11 80 	pushl  -0x7feed914(,%ebx,4)[m
[32m+[m[32m80102bb4:	ff 35 e4 26 11 80    	pushl  0x801126e4[m
[32m+[m[32mstatic void[m
[32m+[m[32minstall_trans(void)[m
[32m+[m[32m{[m
[32m+[m[32m  int tail;[m
[32m+[m
[32m+[m[32m  for (tail = 0; tail < log.lh.n; tail++) {[m
[32m+[m[32m80102bba:	83 c3 01             	add    $0x1,%ebx[m
[32m+[m[32m    struct buf *lbuf = bread(log.dev, log.start+tail+1); // read log block[m
[32m+[m[32m    struct buf *dbuf = bread(log.dev, log.lh.block[tail]); // read dst[m
[32m+[m[32m80102bbd:	e8 0e d5 ff ff       	call   801000d0 <bread>[m
[32m+[m[32m80102bc2:	89 c6                	mov    %eax,%esi[m
[32m+[m[32m    memmove(dbuf->data, lbuf->data, BSIZE);  // copy block to dst[m
[32m+[m[32m80102bc4:	8d 47 5c             	lea    0x5c(%edi),%eax[m
[32m+[m[32m80102bc7:	83 c4 0c             	add    $0xc,%esp[m
[32m+[m[32m80102bca:	68 00 02 00 00       	push   $0x200[m
[32m+[m[32m80102bcf:	50                   	push   %eax[m
[32m+[m[32m80102bd0:	8d 46 5c             	lea    0x5c(%esi),%eax[m
[32m+[m[32m80102bd3:	50                   	push   %eax[m
[32m+[m[32m80102bd4:	e8 d7 1a 00 00       	call   801046b0 <memmove>[m
[32m+[m[32m    bwrite(dbuf);  // write dst to disk[m
[32m+[m[32m80102bd9:	89 34 24             	mov    %esi,(%esp)[m
[32m+[m[32m80102bdc:	e8 bf d5 ff ff       	call   801001a0 <bwrite>[m
[32m+[m[32m    brelse(lbuf);[m
[32m+[m[32m80102be1:	89 3c 24             	mov    %edi,(%esp)[m
[32m+[m[32m80102be4:	e8 f7 d5 ff ff       	call   801001e0 <brelse>[m
[32m+[m[32m    brelse(dbuf);[m
[32m+[m[32m80102be9:	89 34 24             	mov    %esi,(%esp)[m
[32m+[m[32m80102bec:	e8 ef d5 ff ff       	call   801001e0 <brelse>[m
[32m+[m[32mstatic void[m
[32m+[m[32minstall_trans(void)[m
[32m+[m[32m{[m
[32m+[m[32m  int tail;[m
[32m+[m
[32m+[m[32m  for (tail = 0; tail < log.lh.n; tail++) {[m
[32m+[m[32m80102bf1:	83 c4 10             	add    $0x10,%esp[m
[32m+[m[32m80102bf4:	39 1d e8 26 11 80    	cmp    %ebx,0x801126e8[m
[32m+[m[32m80102bfa:	7f 94                	jg     80102b90 <install_trans+0x20>[m
[32m+[m[32m    memmove(dbuf->data, lbuf->data, BSIZE);  // copy block to dst[m
[32m+[m[32m    bwrite(dbuf);  // write dst to disk[m
[32m+[m[32m    brelse(lbuf);[m
[32m+[m[32m    brelse(dbuf);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[32m80102bfc:	8d 65 f4             	lea    -0xc(%ebp),%esp[m
[32m+[m[32m80102bff:	5b                   	pop    %ebx[m
[32m+[m[32m80102c00:	5e                   	pop    %esi[m
[32m+[m[32m80102c01:	5f                   	pop    %edi[m
[32m+[m[32m80102c02:	5d                   	pop    %ebp[m
[32m+[m[32m80102c03:	f3 c3                	repz ret[m[41m [m
[32m+[m[32m80102c05:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi[m
[32m+[m[32m80102c09:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi[m
[32m+[m
[32m+[m[32m80102c10 <write_head>:[m
[32m+[m[32m// Write in-memory log header to disk.[m
[32m+[m[32m// This is the true point at which the[m
[32m+[m[32m// current transaction commits.[m
[32m+[m[32mstatic void[m
[32m+[m[32mwrite_head(void)[m
[32m+[m[32m{[m
[32m+[m[32m80102c10:	55                   	push   %ebp[m
[32m+[m[32m80102c11:	89 e5                	mov    %esp,%ebp[m
[32m+[m[32m80102c13:	53                   	push   %ebx[m
[32m+[m[32m80102c14:	83 ec 0c             	sub    $0xc,%esp[m
[32m+[m[32m  struct buf *buf = bread(log.dev, log.start);[m
[32m+[m[32m80102c17:	ff 35 d4 26 11 80    	pushl  0x801126d4[m
[32m+[m[32m80102c1d:	ff 35 e4 26 11 80    	pushl  0x801126e4[m
[32m+[m[32m80102c23:	e8 a8 d4 ff ff       	call   801000d0 <bread>[m
[32m+[m[32m  struct logheader *hb = (struct logheader *) (buf->data);[m
[32m+[m[32m  int i;[m
[32m+[m[32m  hb->n = log.lh.n;[m
[32m+[m[32m80102c28:	8b 0d e8 26 11 80    	